<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeDao的博客</title>
  
  
  <link href="https://blog.zoutl.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zoutl.cn/"/>
  <updated>2022-03-26T02:37:35.040Z</updated>
  <id>https://blog.zoutl.cn/</id>
  
  <author>
    <name>LeDao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用AdBlock屏蔽掉GitHub上一些让人恶心的仓库</title>
    <link href="https://blog.zoutl.cn/481.html"/>
    <id>https://blog.zoutl.cn/481.html</id>
    <published>2022-03-25T16:11:10.000Z</published>
    <updated>2022-03-26T02:37:35.040Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>GitHub虽然好用，但是上面有不少境外黑恶势力恶意造谣抹黑中国的仓库，看到了就让人恶心</p><p>GitHub的屏蔽功能并没什么卵用，举报也没用，纯属浪费时间，但是我们可以通过<code>AdBlock</code>或<code>AdBlock Plus</code>插件进行屏蔽这些仓库的所有者</p><p>下面的方法只实现了屏蔽掉搜索结果中的仓库，但还是可以直接通过链接访问这些仓库，不过这已经可以实现这些仓库不会出现在我们眼前，污了我们的眼睛</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>下面有两个下载地址，根据自己的情况选择：</p><ol><li>谷歌插件商店地址：<a href="https://chrome.google.com/webstore/detail/adblock-%E2%80%94-best-ad-blocker/gighmmpiobklfepjocnamgkkbiglidom?hl=zh">AdBlock — 最佳广告拦截工具 - Chrome 网上应用店 (google.com)</a></li><li>扩展迷下载地址：<a href="https://www.extfans.com/productivity/gighmmpiobklfepjocnamgkkbiglidom/">https://www.extfans.com/productivity/gighmmpiobklfepjocnamgkkbiglidom/</a></li></ol><h4 id="添加拦截规则"><a href="#添加拦截规则" class="headerlink" title="添加拦截规则"></a>添加拦截规则</h4><p>点击工具栏的AdBlock的图标，打开选项</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220326002623430.png" alt="image-20220326002623430"></p><p>添加自定义规则（下面列举几个常见的，每一条规则的第二个括号内就是仓库所有者的用户名，根据实际情况填写，发现其它的继续添加即可），最后保存即可，这样就可以在搜索结果中屏蔽掉这些仓库的所有者了，舒服！！</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">github.com#?#li.repo-list-item.public.source</span>:<span class="string">-abp-has(a:-abp-contains(cirosantilli))</span></span><br><span class="line"><span class="meta">github.com#?#li.repo-list-item.public.source</span>:<span class="string">-abp-has(a:-abp-contains(cheezcharmer))</span></span><br><span class="line"><span class="meta">github.com#?#li.repo-list-item.public.source</span>:<span class="string">-abp-has(a:-abp-contains(zaohmeing))</span></span><br><span class="line"><span class="meta">github.com#?#li.repo-list-item.public.source</span>:<span class="string">-abp-has(a:-abp-contains(zhaohmng-outlook-com))</span></span><br><span class="line"><span class="meta">github.com#?#li.repo-list-item.public.source</span>:<span class="string">-abp-has(a:-abp-contains(coding-stuffs))</span></span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220326002854346.png" alt="image-20220326002854346"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="https://www.zhihu.com/question/388634161">如果举报github上的这种情况？ - 知乎 (zhihu.com)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/19.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/categories/GitHub/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
    <category term="AdBlock" scheme="https://blog.zoutl.cn/tags/AdBlock/"/>
    
  </entry>
  
  <entry>
    <title>使用批处理脚本实现一键部署hexo博客以及一键上传代码到GitHub</title>
    <link href="https://blog.zoutl.cn/480.html"/>
    <id>https://blog.zoutl.cn/480.html</id>
    <published>2022-03-25T06:19:53.000Z</published>
    <updated>2022-03-25T06:48:15.030Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>如果需要执行多条命令才可以达到目的，都可以使用批处理脚本来提高工作效率，本博客主要实现：一键部署hexo博客以及一键上传代码到GitHub</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="一键部署hexo博客"><a href="#一键部署hexo博客" class="headerlink" title="一键部署hexo博客"></a>一键部署hexo博客</h4><p>新建一个<code>.bat</code>文件，命名为：<code>一键部署.bat</code>，内容如下：（我的博客使用了algolia搜索，如果没有使用就删除下面的<code>hexo algolia</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">cd</span> E:\hexo-blog</span><br><span class="line">hexo clean&amp;&amp;hexo g&amp;&amp;hexo algolia&amp;&amp;hexo d</span><br></pre></td></tr></table></figure><h4 id="一键上传代码到GitHub"><a href="#一键上传代码到GitHub" class="headerlink" title="一键上传代码到GitHub"></a>一键上传代码到GitHub</h4><p>先配置GitHub的SSH Key，配置步骤查看博客：<a href="https://blog.zoutl.cn/236.html">GitHub 配置 SSH Key | LeDao 的博客 (zoutl.cn)</a></p><p>新建一个<code>.bat</code>文件，命名为<code>一键上传到GitHub.bat</code>：，内容如下：（<code>chcp 65001</code>是为了解决输出中文乱码）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">chcp 65001</span><br><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1.进入要上传的文件hexo-blog&quot;</span></span><br><span class="line"><span class="built_in">cd</span> E:\hexo-blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2.添加到本地仓库&quot;</span></span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3.设置提交信息&quot;</span></span><br><span class="line"><span class="built_in">set</span> now=%date% %time%</span><br><span class="line">git commit -m <span class="string">&quot;%now%&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;4.开始pull&quot;</span></span><br><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;5.开始push&quot;</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/9.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Windows系统" scheme="https://blog.zoutl.cn/categories/Windows%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Windows系统" scheme="https://blog.zoutl.cn/tags/Windows%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
    <category term="hexo" scheme="https://blog.zoutl.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo的butterfly主题使用Algolia搜索</title>
    <link href="https://blog.zoutl.cn/479.html"/>
    <id>https://blog.zoutl.cn/479.html</id>
    <published>2022-03-23T12:02:27.000Z</published>
    <updated>2022-03-25T15:18:56.631Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>在hexo博客的根目录打开<code>Git Bash</code>安装<code>hexo-algoliasearch</code>插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-algoliasearch --save</span><br></pre></td></tr></table></figure><p>然后查看根目录的<code>package.json</code>文件，查看是否安装成功，出现插件名称就说明安装插件成功</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323200738339.png" alt="image-20220323200738339"></p><h3 id="注册Algolia账号"><a href="#注册Algolia账号" class="headerlink" title="注册Algolia账号"></a>注册Algolia账号</h3><p>网址：<a href="https://www.algolia.com/">Site Search &amp; Discovery powered by AI | Algolia</a></p><h3 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h3><h4 id="打开创建页面"><a href="#打开创建页面" class="headerlink" title="打开创建页面"></a>打开创建页面</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323201316692.png" alt="image-20220323201316692"></p><h4 id="填写应用信息"><a href="#填写应用信息" class="headerlink" title="填写应用信息"></a>填写应用信息</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323201515572.png" alt="image-20220323201515572"></p><h4 id="选择相关节点"><a href="#选择相关节点" class="headerlink" title="选择相关节点"></a>选择相关节点</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323201811493.png" alt="image-20220323201811493"></p><h4 id="勾选同意"><a href="#勾选同意" class="headerlink" title="勾选同意"></a>勾选同意</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323201932407.png" alt="image-20220323201932407"></p><h3 id="获取API-Keys"><a href="#获取API-Keys" class="headerlink" title="获取API Keys"></a>获取API Keys</h3><p>在控制台主页，选择刚刚创建的应用，查看它的API Keys</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323202146576.png" alt="image-20220323202146576"></p><p>获取下图的三个</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323202335997.png" alt="image-20220323202335997"></p><h3 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h3><p>在hexo根目录下的<code>_config.yml</code>配置文件添加以下代码，appId、apiKey、adminApiKey、indexName根据自己的情况填写</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>:<span class="string"></span></span><br><span class="line">  <span class="meta">-</span> <span class="string">hexo-algoliasearch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">algolia</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">appId</span>: <span class="string">&quot;0Z2Q111FG111&quot;</span></span><br><span class="line">  <span class="attr">apiKey</span>: <span class="string">&quot;079e96e1d3e11111116bf59011&quot;</span></span><br><span class="line">  <span class="attr">adminApiKey</span>: <span class="string">&quot;9e2f194f9f28111111199ce53111&quot;</span></span><br><span class="line">  <span class="attr">chunkSize</span>: <span class="string">5000</span></span><br><span class="line">  <span class="attr">indexName</span>: <span class="string">&quot;hexo_blog&quot;</span></span><br><span class="line">  <span class="attr">fields</span>:<span class="string"></span></span><br><span class="line">    <span class="meta">-</span> <span class="string">content:strip:truncate,0,200</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">tags</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">permalink</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">excerpt:strip</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">title</span></span><br><span class="line">    <span class="meta">-</span> <span class="string">categories</span></span><br></pre></td></tr></table></figure><p>修改butterfly主题的<code>_config.yml</code>配置文件</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Algolia search</span></span><br><span class="line"><span class="attr">algolia_search</span>:<span class="string"></span></span><br><span class="line">  <span class="attr">enable</span>: <span class="string">true</span></span><br><span class="line">  <span class="attr">hits</span>:<span class="string"></span></span><br><span class="line">    <span class="attr">per_page</span>: <span class="string">6</span></span><br></pre></td></tr></table></figure><p>接下来需要将搜索方式设置为按回车键后才搜索，要不然每输入一个字符就实时搜索一次太浪费Algolia的搜索次数了，Algolia的免费次数每个月只有10000次，实时搜索很容易把次数用光，首先打开<code>algolia.js</code>文件，这个文件在<code>\themes\butterfly\source\js\search</code>目录下，在下图位置加入代码：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">searchOnEnterKeyPressOnly</span>: <span class="string">true,</span></span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220324215731530.png" alt="image-20220324215731530"></p><p>接下来修改搜索框的提示信息，上图横线下的<code>placeholder:</code>后接提示信息，建议直接注释掉该行（使用<code>//</code>注释），直接重写，不建议去修改语言配置文件（在<code>\themes\butterfly\languages</code>目录下）</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">placeholder</span>: <span class="string">&quot;输入关键词后，按下回车键即可搜索文章...&quot;</span></span><br></pre></td></tr></table></figure><h3 id="依次执行以下命令"><a href="#依次执行以下命令" class="headerlink" title="依次执行以下命令"></a>依次执行以下命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清除缓存文件 (db.json) 和已生成的静态文件 (public)</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment">#生成Algolia索引</span></span><br><span class="line">hexo algolia</span><br><span class="line"><span class="comment">#生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"><span class="comment">#部署网站，同时将网站的改动提交到GitHub仓库</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><p>执行启动服务器命令<code>hexo s</code>查看结果，访问网址为： <code>http://localhost:4000/</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220323203020481.png" alt="image-20220323203020481"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>执行命令的顺序如下：（不然可能会出现一些错误）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#清除缓存以及一些静态文件</span></span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成静态文件</span></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成algolia的搜索索引</span></span><br><span class="line">hexo algolia</span><br><span class="line"></span><br><span class="line"><span class="comment">#提交到GitHub</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/118.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://blog.zoutl.cn/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://blog.zoutl.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>PotPlayer播放视频选择音频</title>
    <link href="https://blog.zoutl.cn/478.html"/>
    <id>https://blog.zoutl.cn/478.html</id>
    <published>2022-03-22T07:18:52.000Z</published>
    <updated>2022-03-22T10:42:32.607Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>IDM下载B站的视频时，下载的视频是没有声音的，必须要下载对应的音频文件，例如：下图中，2是音频，3是视频，下面我将演示PotPlayer播放视频导入音频</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322152156978.png" alt="image-20220322152156978"></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><blockquote><p>将音频文件的后缀名改为m4a</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322152546093.png" alt="image-20220322152546093"></p><blockquote><p>使用PotPlayer播放视频，并选择刚刚修改后缀名的音频，然后就可以愉快地玩耍了</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322152929300.png" alt="image-20220322152929300"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/108.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>hexo的butterfly主题使用iconfont图标</title>
    <link href="https://blog.zoutl.cn/477.html"/>
    <id>https://blog.zoutl.cn/477.html</id>
    <published>2022-03-21T15:53:43.000Z</published>
    <updated>2022-03-21T16:41:41.655Z</updated>
    
    <content type="html"><![CDATA[<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>网址：<a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p><h3 id="搜索图标"><a href="#搜索图标" class="headerlink" title="搜索图标"></a>搜索图标</h3><p>在搜索框输入图标名称</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322002436582.png" alt="image-20220322002436582"></p><h3 id="添加入库"><a href="#添加入库" class="headerlink" title="添加入库"></a>添加入库</h3><p>将鼠标移到要使用的图标上</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322002618238.png" alt="image-20220322002618238"></p><h3 id="添加到项目"><a href="#添加到项目" class="headerlink" title="添加到项目"></a>添加到项目</h3><p>打开项目选项，准备添加到项目</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322002730835.png" alt="image-20220322002730835"></p><p>添加到指定项目</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322003043564.png" alt="image-20220322003043564"></p><h3 id="生成Font-class"><a href="#生成Font-class" class="headerlink" title="生成Font class"></a>生成Font class</h3><p>生成Font class用于引入图标</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322003442415.png" alt="image-20220322003442415"></p><h3 id="复制链接和图标"><a href="#复制链接和图标" class="headerlink" title="复制链接和图标"></a>复制链接和图标</h3><p>复制引入图标的链接以及图标名称</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322003649511.png" alt="image-20220322003649511"></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>修改butterfly主题的配置文件<code>_config.yml</code>，<font color="#dd0000">不是主配置文件</font>，主题配置文件在<code>\themes\butterfly</code>下</p><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><p>找到Inject配置，在head处引入</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322004010270.png" alt="image-20220322004010270"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>使用格式为：<code>iconfont 上面复制的图标名称</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220322004105492.png" alt="image-20220322004105492"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/98.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="hexo" scheme="https://blog.zoutl.cn/categories/hexo/"/>
    
    
    <category term="hexo" scheme="https://blog.zoutl.cn/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>实现加载Nacos多个配置文件</title>
    <link href="https://blog.zoutl.cn/476.html"/>
    <id>https://blog.zoutl.cn/476.html</id>
    <published>2022-03-20T12:43:51.000Z</published>
    <updated>2022-03-23T04:37:12.869Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>多个微服务的配置之间有可能存在重复，重复的部分称为公共配置，我们可以把这些公共配置存储在Nacos中，各个微服务根据自己的需求加载对应的配置</p><p>这样做的好处是：方便管理，只需要修改公共配置即可实现修改多个服务的配置</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><p>加载的配置文件必须在同一个命名空间内</p><h4 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h4><p>我在命名为dev的命名空间内创建了三个配置文件：<code>mysql_dev.properties</code>、 <code>server_dev.properties</code>和 <code>nacos_config.properties</code>，内容如下：</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220320205354950.png" alt="image-20220320205354950"></p><blockquote><p> #应用名称spring.application.name=nacos_config_test#Nacos的IP地址和端口号spring.cloud.nacos.config.server-addr=121.41.211.106:8848#Nacos配置文件所在命名空间idspring.cloud.nacos.config.namespace=cd6541df-8530-404f-8832-413a3c118efa6#Nacos配置文件所在组名spring.cloud.nacos.config.group=DEFAULT_GROUP#要读取的配置文件名称spring.cloud.nacos.config.name=nacos_config.propertiesproperties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.datasource.type</span>=<span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="meta">spring.datasource.driver-class-name</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="meta">spring.datasource.url</span>=<span class="string">jdbc:mysql://localhost:3306/db_secondhandtrade?serverTimezone=GMT%2B8&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line"><span class="meta">spring.datasource.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">spring.datasource.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><blockquote><p>server_dev.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">server.port</span>=<span class="string">8888</span></span><br><span class="line"><span class="meta">server.servlet.context-path</span>=<span class="string">/</span></span><br><span class="line"><span class="meta">server.tomcat.uri-encoding</span>=<span class="string">UTF-8</span></span><br></pre></td></tr></table></figure><blockquote><p>nacos_config.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">ledao.name</span>=<span class="string">mary</span></span><br><span class="line"><span class="meta">ledao.age</span>=<span class="string">22</span></span><br></pre></td></tr></table></figure><h4 id="bootstrap-properties加载"><a href="#bootstrap-properties加载" class="headerlink" title="bootstrap.properties加载"></a>bootstrap.properties加载</h4><p>bootstrap比application配置文件的优先级高，如果存在一样的配置，以bootstrap的为准，加载多配置使用数组的形式，项目的配置文件只需要配置<code>Nacos的IP地址和端口号</code>、<code>命名空间id</code>，其它的配置从Nacos中加载</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#应用名称,可省略</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">nacos_config_test</span></span><br><span class="line"><span class="comment">#Nacos的IP地址和端口号</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">121.41.211.106:8848</span></span><br><span class="line"><span class="comment">#Nacos配置文件所在命名空间id</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.namespace</span>=<span class="string">e4f40c45-6d6d-44dc-8bea-645f5d727824</span></span><br><span class="line"><span class="comment">#Nacos配置文件所在组名</span></span><br><span class="line"><span class="comment">#spring.cloud.nacos.config.group=DEFAULT_GROUP</span></span><br><span class="line"><span class="comment">#要读取的配置文件名称</span></span><br><span class="line"><span class="comment">#spring.cloud.nacos.config.name=nacos_config.properties</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#加载mysql_dev.properties的配置</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[0].dataId</span>=<span class="string">mysql_dev.properties</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[0].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[0].refresh</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#加载server_dev.properties的配置</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[1].dataId</span>=<span class="string">server_dev.properties</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[1].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[1].refresh</span>=<span class="string">true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#加载nacos_config.properties的配置</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[2].dataId</span>=<span class="string">nacos_config.properties</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[2].group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.extension-configs[2].refresh</span>=<span class="string">true</span></span><br></pre></td></tr></table></figure><h4 id="控制层"><a href="#控制层" class="headerlink" title="控制层"></a>控制层</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.context.config.annotation.RefreshScope;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-03-19 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/nacos&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfigController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;ledao.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;ledao.age&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getUserInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserInfo</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name + <span class="string">&quot; : &quot;</span> + age + <span class="string">&quot; , &quot;</span> + dataSource.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>浏览器地址栏输入：<a href="http://localhost:8888/nacos/getUserInfo">http://localhost:8888/nacos/getUserInfo</a> ，看到下图说明已经成功加载三个配置文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220320211748947.png" alt="image-20220320211748947"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/88.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/categories/Nacos/"/>
    
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>Nacos新建命名空间和读取命名空间内的配置文件</title>
    <link href="https://blog.zoutl.cn/475.html"/>
    <id>https://blog.zoutl.cn/475.html</id>
    <published>2022-03-19T03:49:46.000Z</published>
    <updated>2022-03-19T04:15:34.293Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新建命名空间"><a href="#新建命名空间" class="headerlink" title="新建命名空间"></a>新建命名空间</h3><p>创建成功后自动生成命名空间id，下面要用到</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220319115238136.png" alt="image-20220319115238136"></p><h3 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h3><p>在刚刚创建好的命名空间创建配置文件，创建步骤查看博客：<a href="https://blog.zoutl.cn/474.html">Spring Boot 读取 Nacos 的配置文件 </a>，配置文件位置为：命名空间&gt;&gt;分组&gt;&gt;配置文件，前面的包含后面的，不在同一个组的配置文件可以重名</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220319120244832.png" alt="image-20220319120244832"></p><h3 id="读取"><a href="#读取" class="headerlink" title="读取"></a>读取</h3><p>实现读取步骤查看博客：<a href="https://blog.zoutl.cn/474.html">Spring Boot 读取 Nacos 的配置文件 </a>，然后在<code>bootstrap.properties</code>中加上配置：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.cloud.nacos.config.namespace</span>=<span class="string">cd6541df-8530-404f-8832-413a3cefa6</span></span><br></pre></td></tr></table></figure><p>完整配置如下：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#应用名称</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">nacos_config_test</span></span><br><span class="line"><span class="comment">#Nacos的IP地址和端口号</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">121.41.211.106:8848</span></span><br><span class="line"><span class="comment">#Nacos配置文件所在命名空间id</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.namespace</span>=<span class="string">cd6541df-8530-404f-8832-413a3c118efa6</span></span><br><span class="line"><span class="comment">#Nacos配置文件所在组名</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="comment">#要读取的配置文件名称</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.name</span>=<span class="string">nacos_config.properties</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/78.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/categories/Nacos/"/>
    
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot读取Nacos的配置文件</title>
    <link href="https://blog.zoutl.cn/474.html"/>
    <id>https://blog.zoutl.cn/474.html</id>
    <published>2022-03-19T03:01:39.000Z</published>
    <updated>2022-03-19T03:48:57.962Z</updated>
    
    <content type="html"><![CDATA[<h2 id="毕业版本依赖关系"><a href="#毕业版本依赖关系" class="headerlink" title="毕业版本依赖关系"></a>毕业版本依赖关系</h2><p>链接：<a href="https://github.com/alibaba/spring-cloud-alibaba/wiki/%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E">版本说明 · alibaba/spring-cloud-alibaba Wiki (github.com)</a></p><p>下表为按时间顺序发布的 Spring Cloud Alibaba 以及对应的适配 Spring Cloud 和 Spring Boot 版本关系（由于 Spring Cloud 版本命名有调整，所以对应的 Spring Cloud Alibaba 版本号也做了对应变化）</p><table><thead><tr><th align="center">Spring Cloud Alibaba Version</th><th align="center">Spring Cloud Version</th><th align="center">Spring Boot Version</th></tr></thead><tbody><tr><td align="center">2021.0.1.0</td><td align="center">Spring Cloud 2021.0.1</td><td align="center">2.6.3</td></tr><tr><td align="center">2.2.7.RELEASE</td><td align="center">Spring Cloud Hoxton.SR12</td><td align="center">2.3.12.RELEASE</td></tr><tr><td align="center">2021.1</td><td align="center">Spring Cloud 2020.0.1</td><td align="center">2.4.2</td></tr><tr><td align="center">2.2.6.RELEASE</td><td align="center">Spring Cloud Hoxton.SR9</td><td align="center">2.3.2.RELEASE</td></tr><tr><td align="center">2.1.4.RELEASE</td><td align="center">Spring Cloud Greenwich.SR6</td><td align="center">2.1.13.RELEASE</td></tr><tr><td align="center">2.2.1.RELEASE</td><td align="center">Spring Cloud Hoxton.SR3</td><td align="center">2.2.5.RELEASE</td></tr><tr><td align="center">2.2.0.RELEASE</td><td align="center">Spring Cloud Hoxton.RELEASE</td><td align="center">2.2.X.RELEASE</td></tr><tr><td align="center">2.1.2.RELEASE</td><td align="center">Spring Cloud Greenwich</td><td align="center">2.1.X.RELEASE</td></tr><tr><td align="center">2.0.4.RELEASE(停止维护，建议升级)</td><td align="center">Spring Cloud Finchley</td><td align="center">2.0.X.RELEASE</td></tr><tr><td align="center">1.5.1.RELEASE(停止维护，建议升级)</td><td align="center">Spring Cloud Edgware</td><td align="center">1.5.X.RELEASE</td></tr></tbody></table><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><h3 id="创建父项目"><a href="#创建父项目" class="headerlink" title="创建父项目"></a>创建父项目</h3><p>创建一个Maven项目，用于管理依赖，pom.xml文件内容如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>NacosDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>nacos_config_test<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spring-cloud.version</span>&gt;</span>Hoxton.SR9<span class="tag">&lt;/<span class="name">spring-cloud.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springboot.version</span>&gt;</span>2.3.2.RELEASE<span class="tag">&lt;/<span class="name">springboot.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springcloudalibaba.version</span>&gt;</span>2.2.6.RELEASE<span class="tag">&lt;/<span class="name">springcloudalibaba.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springcloudalibaba.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="创建子项目"><a href="#创建子项目" class="headerlink" title="创建子项目"></a>创建子项目</h3><p>在父项目下创建子项目，用于测试读取Nacos的配置文件</p><h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>NacosDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>nacos_config_test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 配置中心 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h4><p>在resources下创建，bootstrap比application的优先级高</p><blockquote><p>application.yml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: 8080</span><br><span class="line">  servlet:</span><br><span class="line">    context-path: /</span><br></pre></td></tr></table></figure><blockquote><p>bootstrap.properties</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#应用名称</span></span><br><span class="line"><span class="meta">spring.application.name</span>=<span class="string">nacos_config_test</span></span><br><span class="line"><span class="comment">#Nacos的IP地址和端口号</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">121.41.111.106:8848</span></span><br><span class="line"><span class="comment">#Nacos配置文件所在组名</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.group</span>=<span class="string">DEFAULT_GROUP</span></span><br><span class="line"><span class="comment">#要读取的配置文件名称</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.name</span>=<span class="string">nacos_config.properties</span></span><br></pre></td></tr></table></figure><h4 id="新建Controller类"><a href="#新建Controller类" class="headerlink" title="新建Controller类"></a>新建Controller类</h4><p>新建一个controller包，并在里面新建一个Controller类，<code>@RefreshScope</code>注解的作用为：当Nacos的配置文件内容改变后，也能读取修改后的配置，如果不使用这个注解则只能读取修改前的配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.context.config.annotation.RefreshScope;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-03-19 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/nacos&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfigController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;ledao.name&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;ledao.age&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getUserInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserInfo</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name + <span class="string">&quot; : &quot;</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建启动类"><a href="#新建启动类" class="headerlink" title="新建启动类"></a>新建启动类</h4><p>在上面新建的controller包外新建一个启动类，内容如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-03-19 10:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NacosConfigApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(NacosConfigApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Nacos新建配置文件"><a href="#Nacos新建配置文件" class="headerlink" title="Nacos新建配置文件"></a>Nacos新建配置文件</h3><blockquote><p>先选择配置管理下的配置列表，再点击添加按钮</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220319111616905.png" alt="image-20220319111616905"></p><blockquote><p>填写配置文件的配置内容，最后点击发布即可</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220319112054775.png" alt="image-20220319112054775"></p><blockquote><p>我新建的配置文件如下图</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220319112212373.png" alt="image-20220319112212373"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>运行启动类，在浏览器地址栏输入：<a href="http://localhost:8080/nacos/getUserInfo">localhost:8080/nacos/getUserInfo</a>，结果截图如下：</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220319112325323.png" alt="image-20220319112325323"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/68.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/categories/Nacos/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.zoutl.cn/tags/Spring-Boot/"/>
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>谷歌搜索屏蔽某个网站</title>
    <link href="https://blog.zoutl.cn/473.html"/>
    <id>https://blog.zoutl.cn/473.html</id>
    <published>2022-03-18T08:31:27.000Z</published>
    <updated>2022-03-18T08:41:28.257Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>无法使用谷歌搜索的就不要查看本博客了</p><h3 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a>下载插件</h3><p>谷歌插件商店地址：<a href="https://chrome.google.com/webstore/detail/ublacklist/pncfbmialoiaghdehhbnbhkkgmjanfhe/related">uBlacklist - Chrome 网上应用店 (google.com)</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在谷歌搜索某个关键词后，对应的搜索结果上面会有<code>加入黑名单</code>这个选项，点击该选项即可屏蔽对应网站</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220318163936595.png" alt="image-20220318163936595"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/58.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>Windows系统和CentOS7安装Nacos</title>
    <link href="https://blog.zoutl.cn/472.html"/>
    <id>https://blog.zoutl.cn/472.html</id>
    <published>2022-03-17T13:00:17.000Z</published>
    <updated>2022-03-17T16:16:37.905Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载地址：<a href="https://github.com/alibaba/nacos/releases/tag/1.4.3">Release 1.4.3 (Jan 27, 2022) · alibaba/nacos (github.com)</a>，下载后解压即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220317231221977.png" alt="image-20220317231221977"></p><h2 id="Windows系统安装"><a href="#Windows系统安装" class="headerlink" title="Windows系统安装"></a>Windows系统安装</h2><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>cmd命令进入解压后的文件夹内的bin文件夹，输入以下命令运行Nacos，standalone代表单机模式运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">startup.cmd -m standalone</span><br></pre></td></tr></table></figure><p>在浏览器输入<a href="http://localhost:8848/nacos%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BF%9B%E8%A1%8C%E7%99%BB%E5%BD%95%EF%BC%8C%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E9%83%BD%E6%98%AF%60nacos%60%EF%BC%8C%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F%E8%BF%9B%E5%85%A5%E4%B8%8B%E9%9D%A2%E7%95%8C%E9%9D%A2">http://localhost:8848/nacos，然后进行登录，用户名和密码都是`nacos`，登录成功进入下面界面</a></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220317212844381.png" alt="image-20220317212844381"></p><h3 id="连接MySQL数据库"><a href="#连接MySQL数据库" class="headerlink" title="连接MySQL数据库"></a>连接MySQL数据库</h3><p>先关闭正在运行的Nacos程序，直接关闭cmd窗口即可</p><p>Nacos默认使用的数据是本地的，也可以配置成使用MySQL的数据</p><h4 id="导入数据库文件"><a href="#导入数据库文件" class="headerlink" title="导入数据库文件"></a>导入数据库文件</h4><p>Nacos的数据库文件在conf文件夹中，新建一个数据库然后导入Nacos的数据库文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220317213310581.png" alt="image-20220317213310581"></p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>配置文件是上图的<code>application.properties</code>，把下图的黑色的代码的注释删除，然后把一些参数改为自己的</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220317214017802.png" alt="image-20220317214017802"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>修改密码以测试是否成功连接数据库，如果直接在Nacos程序的界面修改密码会报错：<code>caused: user nacos,nacos not exist!;</code>，错误详情查看：<a href="https://github.com/alibaba/nacos/issues/7750">caused: user nacos,nacos not exist!; · Issue #7750 · alibaba/nacos (github.com)</a></p><p>最后登录时使用新密码验证，登录成功说明连接数据库成功</p><h2 id="在CentOS7中安装"><a href="#在CentOS7中安装" class="headerlink" title="在CentOS7中安装"></a>在CentOS7中安装</h2><p>将上面解压的文件夹上传到CentOS7系统中，步骤和上面基本相同，只是运行的命令不同，运行的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh startup.sh -m standalone</span><br></pre></td></tr></table></figure><p>停止运行的命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh shutdown.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/48.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/categories/Nacos/"/>
    
    
    <category term="Windows系统" scheme="https://blog.zoutl.cn/tags/Windows%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Nacos" scheme="https://blog.zoutl.cn/tags/Nacos/"/>
    
  </entry>
  
  <entry>
    <title>微信开发者工具创建小程序</title>
    <link href="https://blog.zoutl.cn/471.html"/>
    <id>https://blog.zoutl.cn/471.html</id>
    <published>2022-03-16T14:54:17.000Z</published>
    <updated>2022-03-17T01:35:02.334Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>注册地址为：<a href="https://mp.weixin.qq.com/wxopen/waregister?action=step1">https://mp.weixin.qq.com/wxopen/waregister?action=step1</a></p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>登录地址为：<a href="https://mp.weixin.qq.com/">(https://mp.weixin.qq.com/</a></p><h3 id="获取AppID"><a href="#获取AppID" class="headerlink" title="获取AppID"></a>获取AppID</h3><p>登录成功后会进入小程序后台，然后点击左侧菜单的开发管理，根据下图步骤即可获取到AppID</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220316230102902.png" alt="image-20220316230102902"></p><h3 id="下载和安装开发工具"><a href="#下载和安装开发工具" class="headerlink" title="下载和安装开发工具"></a>下载和安装开发工具</h3><p>下载地址为：<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220316230630691.png" alt="image-20220316230630691"></p><h3 id="创建小程序"><a href="#创建小程序" class="headerlink" title="创建小程序"></a>创建小程序</h3><p>打开微信开发者工具后，新建项目，小程序项目选择<code>小程序</code>，其他选项参照下图，最后点击确定即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220316234212685.png" alt="image-20220316234212685"></p><h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><p>创建好的项目结构如下图</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220317091014146.png" alt="image-20220317091014146"></p><h3 id="各文件夹以及文件的作用"><a href="#各文件夹以及文件的作用" class="headerlink" title="各文件夹以及文件的作用"></a>各文件夹以及文件的作用</h3><h4 id="pages"><a href="#pages" class="headerlink" title="pages"></a>pages</h4><p>存放小程序的页面文件，书写各个页面代码以及组件，pages下的每个文件夹都是一个页面，例如index文件夹就是一个名为index的页面，index文件夹下的文件都要命名为index，和页面文件夹一致，页面文件夹下的各文件的作用如下：</p><table><thead><tr><th align="center">文件名</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">index.js</td><td align="center">页面逻辑文件，相当于JavaScript</td></tr><tr><td align="center">index.json</td><td align="center">页面配置文件，优先级比app.json高</td></tr><tr><td align="center">index.wxml</td><td align="center">页面布局文件，相当于HTML</td></tr><tr><td align="center">index.wxss</td><td align="center">页面样式文件，相当于CSS</td></tr></tbody></table><h4 id="utils"><a href="#utils" class="headerlink" title="utils"></a>utils</h4><p>存放全局的一些.js文件，公共用到的一些事件处理代码文件可以放到该文件夹下，用于全局调用</p><h4 id="eslintrc-js"><a href="#eslintrc-js" class="headerlink" title=".eslintrc.js"></a>.eslintrc.js</h4><p>这是ESlint代码风格规范的配置文件，使得不同的开发者写出风格统一的代码</p><h4 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h4><p>小程序入口文件，用于定义全局数据和函数的使用，可以指定微信小程序的生命周期函数</p><h4 id="app-json"><a href="#app-json" class="headerlink" title="app.json"></a>app.json</h4><p>对小程序进行配置，小程序的全局配置，小程序的所有页面路径、界面表现、网络超时时间、底部 tab 等; 我们可以在这个文件中配置小程序是由哪些页面组成，配置小程序的窗口及背景色，配置导航条样式，配置默认标题</p><h4 id="app-wxss"><a href="#app-wxss" class="headerlink" title="app.wxss"></a>app.wxss</h4><p>全局的样式文件</p><h4 id="project-config-json"><a href="#project-config-json" class="headerlink" title="project.config.json"></a>project.config.json</h4><p>保存开发工具配置项</p><h4 id="sitemap-json"><a href="#sitemap-json" class="headerlink" title="sitemap.json"></a>sitemap.json</h4><p> 网站地图，可以对小程序进行seo优化，让搜索排名靠前</p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>参考文章：<a href="https://blog.csdn.net/cjy_lean/article/details/105822451">微信小程序项目和目录结构以及各个文件夹和文件的作用_cjy_lean的博客-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/38.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis插入数据时获取自增的id</title>
    <link href="https://blog.zoutl.cn/470.html"/>
    <id>https://blog.zoutl.cn/470.html</id>
    <published>2022-03-16T04:05:20.000Z</published>
    <updated>2022-03-16T07:44:19.264Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>当表的id被设计为自增时，插入数据后想获得新插入数据的id</p><p>我曾经试过直接获取最新一条数据的id，虽然可以获取到id，但是这种方式不但麻烦而且也<font color="#dd0000">不推荐</font>，因为插入数据成功到获取到id的这段时间内如果又新增了一条数据，那么获取到的就不是我们希望得到的id了</p><p>Mybatis支持在插入数据后，返回这条数据的id，这种方式简单又不存在上面出现的问题，<font color="#00dd00">推荐</font>使用</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="XML代码"><a href="#XML代码" class="headerlink" title="XML代码"></a>XML代码</h4><blockquote><p>添加数据的XML代码</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;User&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span> <span class="attr">keyColumn</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">    insert into t_user (isBorrow, password, state, type, userName, nickName)</span><br><span class="line">    values (1, #&#123;password&#125;, 1, 2, #&#123;userName&#125;, #&#123;userName&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>属性说明</p></blockquote><ol><li><p>parameterType</p><p>传入的参数类型</p></li><li><p>useGeneratedKeys</p><p>是否返回插入数据的id</p></li><li><p>keyProperty</p><p>实体类对应的字段</p></li><li><p>keyColumn</p><p>数据库中表对应的字段</p></li></ol><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    User user = <span class="keyword">new</span> User();</span><br><span class="line">    user.setUserName(<span class="string">&quot;tom&quot;</span>);</span><br><span class="line">    user.setNickName(<span class="string">&quot;LeDao&quot;</span>);</span><br><span class="line">    user.setPassword(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">    userService.add(user);</span><br><span class="line">    System.out.println(<span class="string">&quot;自增的id为: &quot;</span>+user.getId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220316135314586.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/28.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="MyBatis" scheme="https://blog.zoutl.cn/categories/MyBatis/"/>
    
    
    <category term="MyBatis" scheme="https://blog.zoutl.cn/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>项目启动时报错：ERROR org.springframework.boot.SpringApplication - Application run failed</title>
    <link href="https://blog.zoutl.cn/469.html"/>
    <id>https://blog.zoutl.cn/469.html</id>
    <published>2022-03-16T01:33:58.000Z</published>
    <updated>2022-03-16T01:52:35.628Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h3><p>我的报错截图如下，报错下方可以看到：<code>org.yaml.snakeyaml.error.YAMLException</code>，这说明是yml配置文件错误。出现该错误的原因是：yml配置文件使用了中文，且项目使用了GBK编码</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220316093858491.png" alt="image-20220316093858491"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>修改项目的编码为UTF-8</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220316095206141.png" alt="image-20220316095206141"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/18.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/categories/idea%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/tags/idea%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>IDM无法捕获以及下载APK文件</title>
    <link href="https://blog.zoutl.cn/468.html"/>
    <id>https://blog.zoutl.cn/468.html</id>
    <published>2022-03-14T05:02:47.000Z</published>
    <updated>2022-03-14T05:16:05.337Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>当我们点击网页上某个APK文件下载链接时，无法通过IDM下载，而是直接通过浏览器下载了，这是因为IDM默认不捕获APK下载链接</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="配置捕获APK文件"><a href="#配置捕获APK文件" class="headerlink" title="配置捕获APK文件"></a>配置捕获APK文件</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220314131001181.png" alt="image-20220314131001181"></p><h4 id="设置保存路径"><a href="#设置保存路径" class="headerlink" title="设置保存路径"></a>设置保存路径</h4><p>上面已经实现了通过IDM下载APK文件，接下来设置将下载好的APK文件保存到指定路径</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220314131422077.png" alt="image-20220314131422077"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/8.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="IDM" scheme="https://blog.zoutl.cn/tags/IDM/"/>
    
  </entry>
  
  <entry>
    <title>HashMap键排序和值排序</title>
    <link href="https://blog.zoutl.cn/467.html"/>
    <id>https://blog.zoutl.cn/467.html</id>
    <published>2022-03-12T02:07:29.000Z</published>
    <updated>2022-03-12T15:51:05.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>关于HashMap键排序，如果是升序排序可以直接使用TreeMap，降序排序则需要自己实现</p><p>关于HashMap值排序，无论是升序还是降序，都需要自己实现，和键降序排序实现方式大同小异</p><p>下面只实现键降序排序和值排序，不实现键升序排序，因为键的升序排序直接用TreeMap就可以了</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="键降序排序"><a href="#键降序排序" class="headerlink" title="键降序排序"></a>键降序排序</h4><blockquote><p>实现原理</p></blockquote><p>将HashMap中的EntrySet取出放入一个ArrayList中，来对ArrayList中的EntrySet进行排序，从而实现对HashMap的值进行排序的效果</p><blockquote><p>代码实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;e&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;d&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;v&#x27;</span>, <span class="number">6</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;b&#x27;</span>, <span class="number">3</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;a&#x27;</span>, <span class="number">3</span>);</span><br><span class="line">        List&lt;Map.Entry&lt;Character, Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(hashMap.entrySet());</span><br><span class="line">        Collections.sort(list, <span class="keyword">new</span> Comparator&lt;Map.Entry&lt;Character, Integer&gt;&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Map.Entry&lt;Character, Integer&gt; o1, Map.Entry&lt;Character, Integer&gt; o2)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//o1在后面降序,反之升序</span></span><br><span class="line">                <span class="keyword">return</span> o2.getKey() - o1.getKey();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Character, Integer&gt; entry : list) &#123;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;: &quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="值排序"><a href="#值排序" class="headerlink" title="值排序"></a>值排序</h4><blockquote><p>实现原理</p></blockquote><p>同上，区别如下图：</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220312110006362.png" alt="image-20220312110006362"></p><blockquote><p>代码实现</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Map&lt;Character, Integer&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;e&#x27;</span>, <span class="number">2</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;d&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;v&#x27;</span>, <span class="number">6</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;b&#x27;</span>, <span class="number">3</span>);</span><br><span class="line">        hashMap.put(<span class="string">&#x27;a&#x27;</span>, <span class="number">9</span>);</span><br><span class="line">        List&lt;Map.Entry&lt;Character, Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;(hashMap.entrySet());</span><br><span class="line">        Collections.sort(list, <span class="keyword">new</span> Comparator&lt;Map.Entry&lt;Character, Integer&gt;&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Map.Entry&lt;Character, Integer&gt; o1, Map.Entry&lt;Character, Integer&gt; o2)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//o1在后面降序,反之升序</span></span><br><span class="line">                <span class="keyword">return</span> o2.getValue() - o1.getValue();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;Character, Integer&gt; entry : list) &#123;</span><br><span class="line">            System.out.println(entry.getKey() + <span class="string">&quot;: &quot;</span> + entry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/117.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java根据字符获取ASCII码值</title>
    <link href="https://blog.zoutl.cn/466.html"/>
    <id>https://blog.zoutl.cn/466.html</id>
    <published>2022-03-10T01:16:41.000Z</published>
    <updated>2022-03-12T23:10:18.003Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>根据一个字符获取它在ASCII表中对应的值，办法有两种：</p><ol><li>将字符强转为int类型</li><li>使用Integer.valueOf()方法</li></ol><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="将字符强转为int类型"><a href="#将字符强转为int类型" class="headerlink" title="将字符强转为int类型"></a>将字符强转为int类型</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println((<span class="keyword">int</span>) c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用Integer-valueOf-方法"><a href="#使用Integer-valueOf-方法" class="headerlink" title="使用Integer.valueOf()方法"></a>使用Integer.valueOf()方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">char</span> c = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        System.out.println(Integer.valueOf(c));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/107.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot自定义启动Banner</title>
    <link href="https://blog.zoutl.cn/465.html"/>
    <id>https://blog.zoutl.cn/465.html</id>
    <published>2022-03-09T13:39:08.000Z</published>
    <updated>2022-03-09T14:18:34.962Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Spring Boot的启动Banner就是项目启动时控制台打印的图案，这个图案是支持自定义修改的</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220309214149509.png" alt="image-20220309214149509"></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="生成Banner"><a href="#生成Banner" class="headerlink" title="生成Banner"></a>生成Banner</h4><p>生成Banner的网站链接为：<a href="https://www.bootschool.net/ascii">https://www.bootschool.net/ascii</a>，该网站支持根据输入的文本生成Banner以及生成二维码Banner，还有一些别人设计好的Banner</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220309215932689.png" alt="image-20220309215932689"></p><h4 id="自定义Spring-Boot的Banner"><a href="#自定义Spring-Boot的Banner" class="headerlink" title="自定义Spring Boot的Banner"></a>自定义Spring Boot的Banner</h4><p>将banner.txt放在resources文件夹中</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220309220347359.png" alt="image-20220309220347359"></p><h4 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h4><p>如果不生效就使用Maven工具栏Lifecycle的clean命令清除一下缓存</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220309220524659.png" alt="image-20220309220524659"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>要禁用Banner，就在配置文件添加以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">banner-mode:</span> <span class="string">off</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/97.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Spring Boot" scheme="https://blog.zoutl.cn/categories/Spring-Boot/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.zoutl.cn/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Git修改commit注释</title>
    <link href="https://blog.zoutl.cn/464.html"/>
    <id>https://blog.zoutl.cn/464.html</id>
    <published>2022-03-07T15:23:25.000Z</published>
    <updated>2022-03-12T23:09:56.934Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>有时候git commit的注释填写错误，需要进行修改，修改的情况有两种：</p><ol><li>最近一次</li><li>最近某次</li></ol><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="最近一次"><a href="#最近一次" class="headerlink" title="最近一次"></a>最近一次</h4><ol><li><p>查看最近一次的注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220307233024132.png" alt="image-20220307233024132"></p></li><li><p> spring:  main:    banner-mode: offyaml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220307233645240.png" alt="image-20220307233645240"></p></li><li><p>pull和push到GitHub，pull代码时输入<code>:wq</code>退出即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#pull</span></span><br><span class="line">git pull origin master</span><br><span class="line"><span class="comment">#push</span></span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></li></ol><h4 id="最近某次"><a href="#最近某次" class="headerlink" title="最近某次"></a>最近某次</h4><p>查看博客：<a href="https://segmentfault.com/a/1190000022926064">Git修改已提交的commit注释 - SegmentFault 思否</a> 和 <a href="https://www.jianshu.com/p/098d85a58bf1">Git 修改已提交的commit注释 - 简书 (jianshu.com)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/87.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Git" scheme="https://blog.zoutl.cn/categories/Git/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
    <category term="Git" scheme="https://blog.zoutl.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Element UI实现表单验证</title>
    <link href="https://blog.zoutl.cn/463.html"/>
    <id>https://blog.zoutl.cn/463.html</id>
    <published>2022-03-07T03:02:16.000Z</published>
    <updated>2022-03-07T16:56:16.066Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>所谓表单验证，就是检验用户的输入是否正确：</p><ol><li>是否未输入</li><li>格式是否正确</li><li>还可以请求后端，和数据库的信息进行校验，例如：注册时，检验用户名是否已经存在于数据库中</li></ol><p>Element UI表单默认使用<code>async-validator</code>做验证，Element UI已经内置了async-validator，直接使用即可</p><p>表单验证分为两种情况：</p><ol><li>Element UI的规则，直接使用，进行一些配置即可</li><li>自定义规则，需要自己编写验证规则，更加灵活，可以通过Ajax请求后端</li></ol><h3 id="表单校验属性"><a href="#表单校验属性" class="headerlink" title="表单校验属性"></a>表单校验属性</h3><h4 id="type"><a href="#type" class="headerlink" title="type"></a>type</h4><p>验证用户输入的数据类型</p><table><thead><tr><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">string</td><td align="center">校验类型为Sting，type的默认值为string</td></tr><tr><td align="center">number</td><td align="center">校验类型为number</td></tr><tr><td align="center">boolean</td><td align="center">类型必须为boolean</td></tr><tr><td align="center">interger</td><td align="center">类型必须为number且为整数</td></tr><tr><td align="center">float</td><td align="center">类型必须为number且为浮点数</td></tr><tr><td align="center">array</td><td align="center">类型必须为数组</td></tr><tr><td align="center">enum</td><td align="center">值的类型必须存在于enum中</td></tr><tr><td align="center">url</td><td align="center">类型格式必须为url格式</td></tr><tr><td align="center">email</td><td align="center">格式类型必须为email格式</td></tr><tr><td align="center">method</td><td align="center">格式类型必须为function</td></tr><tr><td align="center">regexp</td><td align="center">必须是RegExp创建新时不会长生异常的实例或字符串RegExp</td></tr><tr><td align="center">object</td><td align="center">格式类型必须为object</td></tr><tr><td align="center">data</td><td align="center">格式类型必须为data</td></tr><tr><td align="center">hex</td><td align="center">格式类型必须为hex</td></tr><tr><td align="center">any</td><td align="center">格式类型可以为任何类型</td></tr></tbody></table><h4 id="required"><a href="#required" class="headerlink" title="required"></a>required</h4><p>值为true或false，该字段是否为必填</p><h4 id="pattern"><a href="#pattern" class="headerlink" title="pattern"></a>pattern</h4><p>该属性只是一个正则表达式的值必须匹配，才可以通过验证</p><h4 id="min"><a href="#min" class="headerlink" title="min"></a>min</h4><p>规定最小长度</p><h4 id="max"><a href="#max" class="headerlink" title="max"></a>max</h4><p>规定最大长度</p><h4 id="len"><a href="#len" class="headerlink" title="len"></a>len</h4><p>指定确切长度，如果该len属性与min和max范围属性结合使用，则len优先</p><h4 id="whitespace"><a href="#whitespace" class="headerlink" title="whitespace"></a>whitespace</h4><p>值为true或false，验证是否只有空格</p><h4 id="message"><a href="#message" class="headerlink" title="message"></a>message</h4><p>校验不通过提示</p><h4 id="asyncValidator"><a href="#asyncValidator" class="headerlink" title="asyncValidator"></a>asyncValidator</h4><p>可以为指定的字段自定义异步校验功能</p><h4 id="validator"><a href="#validator" class="headerlink" title="validator"></a>validator</h4><p>可以为只能字段自定义校验功能</p><h4 id="trigger"><a href="#trigger" class="headerlink" title="trigger"></a>trigger</h4><p>值为blur或change</p><table><thead><tr><th align="center">值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">blur</td><td align="center">失去焦点时触发，常用于输入框</td></tr><tr><td align="center">change</td><td align="center">手动改变时触发，常用于下拉框</td></tr></tbody></table><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="Element-UI的规则"><a href="#Element-UI的规则" class="headerlink" title="Element UI的规则"></a>Element UI的规则</h4><p>首先在<code>el-form</code>标签添加ref属性（和:model绑定的form的名称一样），添加<code>:rules=&quot;rules&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>el-form-item</code>标签添加prop属性（值为要验证的字段）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.userName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在JavaScript代码区的<code>return &#123;&#125;</code>内添加验证规则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rules: &#123;</span><br><span class="line">  <span class="attr">userName</span>: [</span><br><span class="line">    &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入用户名&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在form提交的JavaScript代码内使用表单验证，<code>$refs[&quot;form&quot;]</code>的form为<code>:model</code>对应的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$refs[<span class="string">&quot;form&quot;</span>].validate(<span class="function">(<span class="params">valid, msg</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;<span class="comment">//全部验证都通过时</span></span><br><span class="line">    ElementUI.Message.success(<span class="string">&quot;填写的信息全部正确！！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ElementUI.Message.error(<span class="string">&quot;你填写的信息不正确！！&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>完整代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 40%;margin-left: 30%;margin-top: 6%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../assets/images/logo.png&quot;</span> <span class="attr">height</span>=<span class="string">&quot;55&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span>学生注册<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.userName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onSubmit()&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&quot;register&quot;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">userName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">password2</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">rules</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">userName</span>: [</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入用户名&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>&#125;</span></span><br><span class="line"><span class="javascript">        ]</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;,</span></span><br><span class="line"><span class="javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">onSubmit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$refs[<span class="string">&quot;form&quot;</span>].validate(<span class="function">(<span class="params">valid, msg</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="javascript">          ElementUI.Message.success(<span class="string">&quot;填写的信息全部正确！！&quot;</span>);</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          ElementUI.Message.error(<span class="string">&quot;你填写的信息不正确！！&quot;</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="自定义规则"><a href="#自定义规则" class="headerlink" title="自定义规则"></a>自定义规则</h4><p>在JavaScript代码区内<code>data() &#123;&#125;</code>编写自己的验证规则</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//检验密码和确认密码是否一样</span></span><br><span class="line"><span class="keyword">let</span> checkPassword2 = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (value !== <span class="built_in">this</span>.form.password) &#123;</span><br><span class="line">    callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;密码和确认密码不一致!&#x27;</span>));</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    callback();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>在<code>rules: &#123;&#125;</code>内的要验证的字段中引用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">password2: [</span><br><span class="line">  &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入确认密码&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>&#125;,</span><br><span class="line">  &#123;<span class="attr">validator</span>: checkPassword2, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>完整代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width: 40%;margin-left: 30%;margin-top: 6%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;../assets/images/logo.png&quot;</span> <span class="attr">height</span>=<span class="string">&quot;55&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span>学生注册<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;form&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span> <span class="attr">label-width</span>=<span class="string">&quot;80px&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;用户名&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.userName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">&quot;确认密码&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;password2&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">&quot;form.password2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onSubmit()&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">to</span>=<span class="string">&quot;/login&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&quot;register&quot;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//检验用户名是否已经存在与数据库中</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> checkUserName = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">let</span> param = <span class="keyword">new</span> URLSearchParams();</span></span><br><span class="line"><span class="javascript">      param.append(<span class="string">&quot;userName&quot;</span>, value);</span></span><br><span class="line"><span class="javascript">      axios</span></span><br><span class="line"><span class="javascript">        .post(<span class="string">&#x27;http://l/user/findByUserName&#x27;</span>, param)</span></span><br><span class="line"><span class="javascript">        .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          <span class="keyword">if</span> (response.data.success) &#123;</span></span><br><span class="line"><span class="javascript">            callback();</span></span><br><span class="line"><span class="javascript">          &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;用户名已经存在,请重新输入!&#x27;</span>));</span></span><br><span class="line"><span class="javascript">          &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">        .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">          alert(error);</span></span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">        &#125;);</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//检验密码和确认密码是否一样</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> checkPassword2 = <span class="function">(<span class="params">rule, value, callback</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (value !== <span class="built_in">this</span>.form.password) &#123;</span></span><br><span class="line"><span class="javascript">        callback(<span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&#x27;密码和确认密码不一致!&#x27;</span>));</span></span><br><span class="line"><span class="javascript">      &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">        callback();</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">form</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">userName</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">password2</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;,</span></span><br><span class="line"><span class="javascript">      <span class="attr">rules</span>: &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">userName</span>: [</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入用户名&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">validator</span>: checkUserName, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="javascript">        ],</span></span><br><span class="line"><span class="javascript">        <span class="attr">password</span>: [</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入密码&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>&#125;</span></span><br><span class="line"><span class="javascript">        ],</span></span><br><span class="line"><span class="javascript">        <span class="attr">password2</span>: [</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">required</span>: <span class="literal">true</span>, <span class="attr">message</span>: <span class="string">&quot;请输入确认密码&quot;</span>, <span class="attr">trigger</span>: <span class="string">&quot;blur&quot;</span>&#125;,</span></span><br><span class="line"><span class="javascript">          &#123;<span class="attr">validator</span>: checkPassword2, <span class="attr">trigger</span>: <span class="string">&#x27;blur&#x27;</span>&#125;</span></span><br><span class="line"><span class="javascript">        ]</span></span><br><span class="line"><span class="javascript">      &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;,</span></span><br><span class="line"><span class="javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">onSubmit</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="built_in">this</span>.$refs[<span class="string">&quot;form&quot;</span>].validate(<span class="function">(<span class="params">valid, msg</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (valid) &#123;</span></span><br><span class="line"><span class="javascript">          ElementUI.Message.success(<span class="string">&quot;填写的信息全部正确！！&quot;</span>);</span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">          ElementUI.Message.error(<span class="string">&quot;你填写的信息不正确！！&quot;</span>);</span></span><br><span class="line"><span class="javascript">          <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      &#125;);</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>表单校验属性总结参考：<a href="https://juejin.cn/post/6960856814271332366#heading-16">element 表单校验属性总结 - 掘金 (juejin.cn)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/77.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/categories/Vue-js/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
    <category term="Element UI" scheme="https://blog.zoutl.cn/tags/Element-UI/"/>
    
  </entry>
  
  <entry>
    <title>解决：Spring MVC接收前端数据出现中文乱码</title>
    <link href="https://blog.zoutl.cn/462.html"/>
    <id>https://blog.zoutl.cn/462.html</id>
    <published>2022-03-04T03:53:01.000Z</published>
    <updated>2022-03-04T05:04:28.808Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>由前端传过来的数据（中文），Java接收后变成乱码</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在web.xml中添加以下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置Spring MVC的乱码过滤--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/67.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
</feed>
