<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeDao的博客</title>
  
  
  <link href="https://blog.zoutl.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zoutl.cn/"/>
  <updated>2022-01-10T03:42:36.579Z</updated>
  <id>https://blog.zoutl.cn/</id>
  
  <author>
    <name>LeDao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于Ajax无法给请求方法外面的变量赋值</title>
    <link href="https://blog.zoutl.cn/413.html"/>
    <id>https://blog.zoutl.cn/413.html</id>
    <published>2022-01-10T03:37:14.000Z</published>
    <updated>2022-01-10T03:42:36.579Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>$.ajax默认是异步的， 异步回调在js主线程执行结束后才会被执行</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p> 如果确实需要获取ajax的结果赋值给请求方法外面的变量，那么可以ajax多加一个参数：<code>async=false</code>，就会同步执行</p><h3 id="Ajax完整请求代码"><a href="#Ajax完整请求代码" class="headerlink" title="Ajax完整请求代码"></a>Ajax完整请求代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkRegisterValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> imageCode;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/user/getRegisterCode&quot;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&quot;get&quot;</span>,</span><br><span class="line">        <span class="attr">async</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (result.success) &#123;</span><br><span class="line">                imageCode = result.imageCode;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/53.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>idea执行Maven命令时报错：No valid Maven installation found. Either set the home directory in the configuration dialog or set the M2_HOME environment variable on your system.</title>
    <link href="https://blog.zoutl.cn/412.html"/>
    <id>https://blog.zoutl.cn/412.html</id>
    <published>2022-01-06T14:11:55.000Z</published>
    <updated>2022-01-08T07:51:58.402Z</updated>
    
    <content type="html"><![CDATA[<h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>idea配置的Maven安装路径和实际的不符</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>打开idea设置的Maven配置，修改<code>Maven home path</code>为本机的Maven安装路径即可（一定要是bin文件夹的上层目录）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-06%20221445.jpg" alt="2022-01-06 221445"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/43.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/categories/idea%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/tags/idea%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>解决：GitHub将Java项目判断为JavaScript项目</title>
    <link href="https://blog.zoutl.cn/411.html"/>
    <id>https://blog.zoutl.cn/411.html</id>
    <published>2022-01-03T15:15:03.000Z</published>
    <updated>2022-01-08T07:51:54.768Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>GitHub判断项目类型，主要是通过分析什么类型的文件占比最高，例如：如果JavaScript文件占比最高则GitHub就会认定项目为JavaScript项目</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><blockquote><p>在本地仓库新建一个名称为<code>.gitattributes</code>的文件，文件内容如下：</p></blockquote><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">*.js</span> <span class="string">linguist-language=java</span></span><br><span class="line"><span class="meta">*.css</span> <span class="string">linguist-language=java</span></span><br><span class="line"><span class="meta">*.html</span> <span class="string">linguist-language=java</span></span><br><span class="line"><span class="meta">*.jsp</span> <span class="string">linguist-language=java</span></span><br></pre></td></tr></table></figure><blockquote><p>然后push到GitHub即可</p></blockquote><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>不要直接在GitHub仓库新建这个文件，不然后期提交会造成：远程仓库和本地仓库的内容不一致（报错：Push to origin/master was rejected），这个报错的解决办法查看博客：<a href="https://blog.zoutl.cn/410.html">idea 提交代码到 GitHub 报错：Push to origin/master was rejected | LeDao 的博客 (zoutl.cn)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/33.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/categories/GitHub/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>idea提交代码到GitHub报错:Push to origin/master was rejected</title>
    <link href="https://blog.zoutl.cn/410.html"/>
    <id>https://blog.zoutl.cn/410.html</id>
    <published>2022-01-03T15:03:04.000Z</published>
    <updated>2022-01-03T15:34:59.797Z</updated>
    
    <content type="html"><![CDATA[<h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>远程仓库和本地仓库的内容不一致</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><blockquote><p>打开<code>Git Bash</code>命令，进入本地仓库对应的项目文件夹（即：<code>.git</code>文件夹所在目录，右击项目文件夹选择<code>Git Bash Here</code>）</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-03%20230839.jpg"></p><blockquote><p>输入以下命令：（可能会打开一个文件，输入<code>:q</code>并按回车键退出即可）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master --allow-unrelated-histories</span><br></pre></td></tr></table></figure><blockquote><p>然后重新push到GitHub即可</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/23.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/categories/idea%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/tags/idea%E4%BD%BF%E7%94%A8/"/>
    
    <category term="Git" scheme="https://blog.zoutl.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>idea配置远程调试</title>
    <link href="https://blog.zoutl.cn/409.html"/>
    <id>https://blog.zoutl.cn/409.html</id>
    <published>2022-01-02T06:56:23.000Z</published>
    <updated>2022-01-02T08:01:47.913Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>所谓远程调试，是指将Java项目打包成war或者jar包并且部署后，在idea中进行调试</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="idea配置远程JVM调试"><a href="#idea配置远程JVM调试" class="headerlink" title="idea配置远程JVM调试"></a>idea配置远程JVM调试</h4><blockquote><p>打开添加配置界面</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-02%20153831.jpg"></p><blockquote><p>选择Remote JVM Debug</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-02%20150353.jpg"></p><blockquote><p>填写相关配置</p></blockquote><p>Name随意填写，Host填运行Java项目的服务器IP，Post填项目所在端口号，Use moudule classpath选择调试的项目模块，其它的配置和下图一样即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-02%20150737.jpg"></p><h4 id="配置远程调试接口"><a href="#配置远程调试接口" class="headerlink" title="配置远程调试接口"></a>配置远程调试接口</h4><p>Java项目打包有两种方式：①war包 ②jar包，所以配置方式也不同</p><blockquote><p>当项目打包成war包</p></blockquote><p>修改Tomcat的bin文件夹的catalina.sh，在下图的位置添加以下代码：（调试端口为5005，<font color="#dd0000">记得开放防火墙的5005端口，如果是云服务器还需要配置安全组规则</font>）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&quot;</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-02%20155029.png"></p><blockquote><p>当项目打包成jar包，使用以下命令部署项目</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar -agentlib:jdwp=transport=dt_socket,server=y,<span class="built_in">suspend</span>=n,address=5005 web.jar</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>运行好项目后，选择刚刚配置好的Debug服务，然后点击Debug按钮即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-01-02%20155502.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/13.jpg&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/categories/idea%E4%BD%BF%E7%94%A8/"/>
    
    
    <category term="idea使用" scheme="https://blog.zoutl.cn/tags/idea%E4%BD%BF%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Java获取程序运行时间</title>
    <link href="https://blog.zoutl.cn/408.html"/>
    <id>https://blog.zoutl.cn/408.html</id>
    <published>2021-12-26T13:02:39.000Z</published>
    <updated>2022-01-02T07:10:24.055Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>有时候我们需要获取某段代码的运行时间，以便和修改后的代码对比，看看新代码的性能是否得到提升</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>具体解决方法为，在执行该段代码<font color="#dd0000">前</font>获取当前时间，执行完该段代码<font color="#dd0000">后</font>再次获取当前时间，后面的时间减去前面的时间即可得到程序运行的时间，时间单位越小越精确</p><p>获取当前时间一般有两种方式：</p><ol><li><p>以毫秒为单位</p><p>使用System.currentTimeMillis()</p></li><li><p>以纳秒为单位</p><p>使用System.nanoTime()</p></li></ol><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="以毫秒为单位"><a href="#以毫秒为单位" class="headerlink" title="以毫秒为单位"></a>以毫秒为单位</h4><blockquote><p>Java代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;程序运行时间为:&quot;</span> + (endTime - startTime)+<span class="string">&quot;毫秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-26%20211552.jpg"></p><h4 id="以纳秒为单位"><a href="#以纳秒为单位" class="headerlink" title="以纳秒为单位"></a>以纳秒为单位</h4><blockquote><p>Java代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10000</span>; i++) &#123;</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line">        System.out.println(<span class="string">&quot;程序运行时间为:&quot;</span> + (endTime - startTime) + <span class="string">&quot;纳秒&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>结果</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-26%20211735.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/3.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java数组排序</title>
    <link href="https://blog.zoutl.cn/407.html"/>
    <id>https://blog.zoutl.cn/407.html</id>
    <published>2021-12-25T05:55:15.000Z</published>
    <updated>2021-12-25T06:40:12.205Z</updated>
    
    <content type="html"><![CDATA[<h3 id="升序排序"><a href="#升序排序" class="headerlink" title="升序排序"></a>升序排序</h3><blockquote><p>使用Arrays工具类的sort方法，只有一个参数，参数为要排序的数组</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            System.out.print(num + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="降序排序"><a href="#降序排序" class="headerlink" title="降序排序"></a>降序排序</h3><blockquote><p>使用Arrays工具类的sort方法，有两个参数，参数一为要排序的数组，参数二为比较器（Collections.reverseOrder()方法返回的比较器），<font color="#dd0000">注意数组的类型为Integer而不是int</font></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer[] nums = <span class="keyword">new</span> Integer[]&#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Arrays.sort(nums, Collections.reverseOrder());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            System.out.print(num + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用Arrays工具类的sort方法，有两个参数，参数一为要排序的数组，参数二为比较器（搞一个Comparator的匿名内部类，且重写compare方法），<font color="#dd0000">注意数组的类型为Integer而不是int</font></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Integer[] nums = <span class="keyword">new</span> Integer[]&#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">6</span>, <span class="number">3</span>, <span class="number">9</span>&#125;;</span><br><span class="line">        Comparator&lt;Integer&gt; comparator = <span class="keyword">new</span> Comparator&lt;Integer&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//o2在前就是降序排序</span></span><br><span class="line">                <span class="keyword">return</span> o2 - o1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        Arrays.sort(nums, comparator);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">            System.out.print(num + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/112.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java上传图片到又拍云</title>
    <link href="https://blog.zoutl.cn/406.html"/>
    <id>https://blog.zoutl.cn/406.html</id>
    <published>2021-12-23T05:59:31.000Z</published>
    <updated>2021-12-23T06:42:35.544Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.upyun/java-sdk --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.upyun<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>java-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="获取又拍云的配置信息"><a href="#获取又拍云的配置信息" class="headerlink" title="获取又拍云的配置信息"></a>获取又拍云的配置信息</h4><p>要获取云存储的服务名称、操作员的用户名、操作员的密码，获取方法查看博客：<a href="https://blog.zoutl.cn/403.html">实现 Typora 自动上传图片到又拍云 | LeDao 的博客 (zoutl.cn)</a></p><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.upyun.RestManager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//本地图片</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;E://lucene/1.jpg&quot;</span>);</span><br><span class="line">        <span class="comment">//参数一为云存储的服务名称、参数二为操作员的用户名、参数三为操作员的密码</span></span><br><span class="line">        RestManager restManager = <span class="keyword">new</span> RestManager(<span class="string">&quot;ledao3&quot;</span>, <span class="string">&quot;java22&quot;</span>, <span class="string">&quot;hpX6eBSoBYUMs9KCxUim0h&quot;</span>);</span><br><span class="line">        <span class="comment">//第一个参数为上传的文件夹以及最终文件名（最终文件名的后缀名要和本地上传的一样），第二个参数为本地图片的路径，第三个参数为图片上传的参数</span></span><br><span class="line">        restManager.writeFile(<span class="string">&quot;/test/2.jpg&quot;</span>, file, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>去又拍云指定文件夹中查看，可以看到图片已经上传成功</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20143520.png"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>关于图片上传的参数查看官方文档：<a href="https://help.upyun.com/knowledge-base/rest_api/#e4b88ae4bca0e69687e4bbb6">REST API – 又拍云-文档帮助中心 (upyun.com)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/102.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="又拍云" scheme="https://blog.zoutl.cn/tags/%E5%8F%88%E6%8B%8D%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Java压缩图片</title>
    <link href="https://blog.zoutl.cn/405.html"/>
    <id>https://blog.zoutl.cn/405.html</id>
    <published>2021-12-22T18:26:12.000Z</published>
    <updated>2021-12-23T12:06:07.166Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/net.coobird/thumbnailator --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.coobird<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thumbnailator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.4.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.coobird.thumbnailator.Thumbnails;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;E://lucene/1.jpg&quot;</span>);</span><br><span class="line">        Thumbnails.of(file).scale(<span class="number">1f</span>).outputQuality(<span class="number">0.5f</span>).toFile(<span class="string">&quot;E://lucene/2.jpg&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><p>of的参数是原图的路径</p><p>scale的参数是图片的大小，值在0到1之间，1f就是原图大小，0.5就是原图的一半大小，这里的大小是指图片的长宽</p><p>outputQuality的参数是图片的质量，值也是在0到1，越接近于1质量越好，越接近于0质量越差</p><p>toFile的参数是压缩后的图片路径</p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>从下图可以看出，2.jpg的大小被压缩了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20023358.png" alt="2021-12-23 023358"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/92.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>实现Typora自动上传图片到又拍云</title>
    <link href="https://blog.zoutl.cn/403.html"/>
    <id>https://blog.zoutl.cn/403.html</id>
    <published>2021-12-22T16:01:57.000Z</published>
    <updated>2022-01-08T07:52:13.705Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>我使用Typora写博客，使用的图床是又拍云云存储。博客用到的图片就需要先把图片上传至又拍云（打开又拍云上传的过程很繁琐），然后在博客中使用。如果可以在使用Typora写博客引用本地图片时，直接上传至又拍云就很方便了</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="安装和配置PicGo"><a href="#安装和配置PicGo" class="headerlink" title="安装和配置PicGo"></a>安装和配置PicGo</h4><blockquote><p>下载与安装</p></blockquote><p>下载地址为：<a href="https://molunerfinn.com/PicGo/">PicGo (molunerfinn.com)</a>，下载完成后，直接安装到指定位置即可</p><blockquote><p>PicGo配置又拍云存储路径</p></blockquote><ol><li><p>需要配置的PicGo参数如下图所示，前4个必须设置，最后一个为存储图片的路径（如果不设置就上传根目录），<font color="#dd0000">这些参数的获取步骤继续看下面的步骤</font></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20002255.png"></p></li><li><p>创建自己的云存储服务，下图的服务名称就是设定存储空间名，本步骤可以获取<code>设定存储空间名</code>和<code>设定加速域名</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20001717.png"></p></li><li><p>打开云存储服务的配置后，选择存储管理标签页，在页面的最下面添加云存储的操作员，操作员的权限只选择<code>可写入</code>即可，本步骤可以获取<code>操作员</code>以及<code>操作员密码</code></p><p>步骤一：</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20002907.png"></p><p>步骤二：</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20003718.png"></p></li><li><p>指定存储路径不填就上传到云存储服务的根目录，如果是根目录下的文件夹就填<code>文件夹名称/</code>，如果是根目录文件夹内的文件夹就填<code>文件夹名称/文件夹名称/</code>，以此类推，此步骤可以获取<code>指定存储路径</code></p></li><li><p>这个时候就可以在PicGo的上传区上传图片到又拍云了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20005327.png"></p></li></ol><h4 id="Typora配置本地PicGo程序"><a href="#Typora配置本地PicGo程序" class="headerlink" title="Typora配置本地PicGo程序"></a>Typora配置本地PicGo程序</h4><p>打开Typora的偏好设置的图像设置，然后依次配置下图划红线的五处即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-23%20005629.png" alt="2021-12-23 005629"></p><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>Typora引用本地图片后，就会上传到又拍云，并且引用的路径也改为又拍云的</p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>Typora上传图片时，一定要先运行PicGo程序；如果没有运行PicGo程序，Typora会自动启动PicGo程序，总之，图片上传失败一般都是因为PicGo程序（PicGo程序未启动、PicGo程序的图床配置不正确）</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/12.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="Typora" scheme="https://blog.zoutl.cn/tags/Typora/"/>
    
    <category term="又拍云" scheme="https://blog.zoutl.cn/tags/%E5%8F%88%E6%8B%8D%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Java将Markdown转化为HTML</title>
    <link href="https://blog.zoutl.cn/402.html"/>
    <id>https://blog.zoutl.cn/402.html</id>
    <published>2021-12-18T14:18:07.000Z</published>
    <updated>2021-12-18T15:12:06.670Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.atlassian.commonmark/commonmark --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.atlassian.commonmark<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commonmark<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.12.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.commonmark.node.Node;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.parser.Parser;</span><br><span class="line"><span class="keyword">import</span> org.commonmark.renderer.html.HtmlRenderer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-18 21:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MarkdownToHtmlUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">convert</span><span class="params">(String md)</span></span>&#123;</span><br><span class="line">        Parser parser=Parser.builder().build();</span><br><span class="line">        Node document = parser.parse(md);</span><br><span class="line">        HtmlRenderer htmlRenderer=HtmlRenderer.builder().build();</span><br><span class="line">        <span class="keyword">return</span> htmlRenderer.render(document);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(convert(<span class="string">&quot;### 111&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-18%20222611.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/82.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/categories/Java/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Markdown" scheme="https://blog.zoutl.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch的head插件基本操作</title>
    <link href="https://blog.zoutl.cn/401.html"/>
    <id>https://blog.zoutl.cn/401.html</id>
    <published>2021-12-17T07:19:20.000Z</published>
    <updated>2021-12-18T16:10:19.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="增加索引"><a href="#增加索引" class="headerlink" title="增加索引"></a>增加索引</h3><h4 id="在复合查询页添加"><a href="#在复合查询页添加" class="headerlink" title="在复合查询页添加"></a>在复合查询页添加</h4><p>查询链接填：<code>http://192.168.0.116:9200/student/</code>，192.168.0.116是虚拟机的IP地址，9200是Elasticsearch对外开放的端口，student是索引的名称</p><p>提交方式选择：<code>PUT</code></p><p>最后点击<code>提交请求</code>按钮即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-17%20152531.png"></p><h4 id="在索引页添加"><a href="#在索引页添加" class="headerlink" title="在索引页添加"></a>在索引页添加</h4><p>在索引页点击新建索引按钮，在弹出框输入索引名称、分片数、副本数，然后点击OK键即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-17%20154357.png"></p><h3 id="删除索引"><a href="#删除索引" class="headerlink" title="删除索引"></a>删除索引</h3><p>在概览页的指定索引的动作中选中删除，然后在弹出框输入<code>删除</code>，然后确定即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-17%20163251.png"></p><h3 id="关闭索引"><a href="#关闭索引" class="headerlink" title="关闭索引"></a>关闭索引</h3><p>在概览页的指定索引的动作中选中关闭</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-18%20230838.png"></p><h3 id="给索引添加和修改文档"><a href="#给索引添加和修改文档" class="headerlink" title="给索引添加和修改文档"></a>给索引添加和修改文档</h3><p>在复合查询页的查询选项输入链接：<code>http://192.168.0.116:9200/book/java/3/</code>，提交方式选择POST，链接详解如下表：</p><table><thead><tr><th align="center">字段</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">192.168.0.116</td><td align="center">虚拟机IP</td></tr><tr><td align="center">9200</td><td align="center">Elasticsearch对外开放的端口号</td></tr><tr><td align="center">book</td><td align="center">索引名称</td></tr><tr><td align="center">java</td><td align="center">索引类型</td></tr><tr><td align="center">3</td><td align="center">文档的id</td></tr></tbody></table><p>如果文档id在Elasticsearch中不存在就添加文档，存在就是修改文档</p><p>添加或修改的文档内容应当使用JSON格式，如下：（输入JSON串后可以点击<code>验证JSON</code>按钮可以验证输入的JSON串是否正确）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;JVM实战&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;publishDate&quot;</span>: <span class="string">&quot;2021-12-12&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;price&quot;</span>: <span class="number">88</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="查询索引文档"><a href="#查询索引文档" class="headerlink" title="查询索引文档"></a>查询索引文档</h3><p>在复合查询页的查询选项输入链接：<code>http://192.168.0.116:9200/book/java/3/</code>，提交方式选择GET，查询条件不用填直接提交请求即可</p><h3 id="删除索引文档"><a href="#删除索引文档" class="headerlink" title="删除索引文档"></a>删除索引文档</h3><p>在复合查询页的查询选项输入链接：<code>http://192.168.0.116:9200/book/java/3/</code>，提交方式选择DELETE，查询条件不用填直接提交请求即可</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/72.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/categories/Elasticsearch/"/>
    
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7使用安装包安装Node.js</title>
    <link href="https://blog.zoutl.cn/399.html"/>
    <id>https://blog.zoutl.cn/399.html</id>
    <published>2021-12-14T21:16:26.000Z</published>
    <updated>2021-12-17T14:57:19.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>有两种方式：</p><ul><li>下载到本地后再上传到虚拟机</li><li>复制下载链接后，虚拟机使用wget命令直接下载到虚拟机</li></ul><h4 id="下载后上传"><a href="#下载后上传" class="headerlink" title="下载后上传"></a>下载后上传</h4><p>下载地址：<a href="https://nodejs.org/en/download/">Download | Node.js (nodejs.org)</a>，直接点击下图的画红圈链接即可下载，然后上传到虚拟机</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20051957.png"></p><h4 id="直接下载"><a href="#直接下载" class="headerlink" title="直接下载"></a>直接下载</h4><ol><li><p>复制安装包的链接</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20051147.jpg"></p></li><li><p>使用Linux命令下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v16.13.1/node-v16.13.1-linux-x64.tar.xz</span><br></pre></td></tr></table></figure></li></ol><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xJf node-v16.13.1-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>打开/etc/profile，然后在最后加上以下代码：（路径要自己的，不要直接用我的）</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Node.js环境</span></span><br><span class="line"><span class="attr">export</span> <span class="string">NODE_HOME=/home/data/node-v16.13.1-linux-x64</span></span><br><span class="line"><span class="attr">export</span> <span class="string">PATH=$NODE_HOME/bin:$PATH</span></span><br></pre></td></tr></table></figure><p>执行下面一条命令让环境变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h4 id="安装淘宝镜像cnpm"><a href="#安装淘宝镜像cnpm" class="headerlink" title="安装淘宝镜像cnpm"></a>安装淘宝镜像cnpm</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><p>输入以下两条命令分别验证Node.js、npm和cnpm，有版本号说明安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#验证Node.js</span></span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证npm</span></span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证cnpm</span></span><br><span class="line">cnpm -v</span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>在线安装Node.js更方便，查看博客：<a href="https://blog.zoutl.cn/380.html">CentOS7 在线安装 Node.js | LeDao 的博客 (zoutl.cn)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/62.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/categories/CentOS7/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Node.js" scheme="https://blog.zoutl.cn/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装Elasticsearch的head插件</title>
    <link href="https://blog.zoutl.cn/398.html"/>
    <id>https://blog.zoutl.cn/398.html</id>
    <published>2021-12-14T20:50:22.000Z</published>
    <updated>2021-12-14T22:13:36.236Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>安装Node.js，查看博客：<a href="https://blog.zoutl.cn/380.html">CentOS7 在线安装 Node.js | LeDao 的博客 (zoutl.cn)</a></li><li>安装Git，查看博客：<a href="https://blog.zoutl.cn/397.html">CentOS7 安装 Git 的最新版本 | LeDao 的博客 (zoutl.cn)</a></li></ol><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>输入以下命令即可完成克隆、安装、启动（<font color="#dd0000">安装使用cnpm命令而不是使用npm命令，不然可能会报错</font>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#克隆</span></span><br><span class="line">git <span class="built_in">clone</span> git://github.com/mobz/elasticsearch-head.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入插件目录</span></span><br><span class="line"><span class="built_in">cd</span> elasticsearch-head</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">cnpm install</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动，用cnpm命令也可以</span></span><br><span class="line">npm run start</span><br></pre></td></tr></table></figure><h3 id="配置Elasticsearch"><a href="#配置Elasticsearch" class="headerlink" title="配置Elasticsearch"></a>配置Elasticsearch</h3><p>需要配置一下，才允许head插件访问Elasticsearch，打开Elasticsearch的conf目录的elasticsearch.yml，然后在最下面加上以下代码：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">http.cors.enabled</span>: <span class="string">true</span></span><br><span class="line"><span class="meta">http.cors.allow-origin</span>: <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>重启Elasticsearch，再启动head插件，在浏览器地址栏输入：<code>http://虚拟机IP:9100</code>，而插件连接的地址为：<code>http://虚拟机IP:9200</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20060901.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/52.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/categories/Elasticsearch/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装Git的最新版本</title>
    <link href="https://blog.zoutl.cn/397.html"/>
    <id>https://blog.zoutl.cn/397.html</id>
    <published>2021-12-14T20:39:11.000Z</published>
    <updated>2021-12-14T20:52:36.536Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>输入下面命令即可完成安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><h3 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove git</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/42.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/categories/CentOS7/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Git" scheme="https://blog.zoutl.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Java操作Elasticsearch</title>
    <link href="https://blog.zoutl.cn/396.html"/>
    <id>https://blog.zoutl.cn/396.html</id>
    <published>2021-12-14T19:16:18.000Z</published>
    <updated>2021-12-18T14:39:37.297Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>引入的依赖版本必须和正在运行的Elasticsearch版本一致</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>transport<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><blockquote><p>连接Elasticsearch</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.index.IndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.transport.TransportClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.transport.InetSocketTransportAddress;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.xcontent.XContentType;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.transport.client.PreBuiltTransportClient;</span><br><span class="line"><span class="keyword">import</span> org.junit.After;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String host = <span class="string">&quot;192.168.0.116&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> port = <span class="number">9300</span>;</span><br><span class="line">    <span class="keyword">private</span> TransportClient client = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作q获取连接</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getClient</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        client = <span class="keyword">new</span> PreBuiltTransportClient(Settings.EMPTY)</span><br><span class="line">                .addTransportAddress(<span class="keyword">new</span> InetSocketTransportAddress(InetAddress.getByName(host), port));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 操作索引关闭连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">closeClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (client != <span class="keyword">null</span>) &#123;</span><br><span class="line">            client.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>增加索引并且在这个索引下添加文档</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    JsonObject jsonObject = <span class="keyword">new</span> JsonObject();</span><br><span class="line">    jsonObject.addProperty(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Java编程思想&quot;</span>);</span><br><span class="line">    jsonObject.addProperty(<span class="string">&quot;publishDate&quot;</span>, <span class="string">&quot;2012-11-23&quot;</span>);</span><br><span class="line">    jsonObject.addProperty(<span class="string">&quot;price&quot;</span>, <span class="number">88</span>);</span><br><span class="line">    IndexResponse indexResponse = client</span><br><span class="line">            .prepareIndex(<span class="string">&quot;book&quot;</span>, <span class="string">&quot;java&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            .setSource(jsonObject.toString(), XContentType.JSON)</span><br><span class="line">            .get();</span><br><span class="line">    System.out.println(<span class="string">&quot;索引名称:&quot;</span> + indexResponse.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;索引类型:&quot;</span> + indexResponse.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;文档id:&quot;</span> + indexResponse.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;当前状态:&quot;</span> + indexResponse.status());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>删除索引</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    DeleteResponse deleteResponse = client</span><br><span class="line">            .prepareDelete(<span class="string">&quot;book&quot;</span>, <span class="string">&quot;java&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            .get();</span><br><span class="line">    System.out.println(<span class="string">&quot;索引名称:&quot;</span> + deleteResponse.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;索引类型:&quot;</span> + deleteResponse.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;文档id:&quot;</span> + deleteResponse.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;当前状态:&quot;</span> + deleteResponse.status());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>修改索引的文档</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    JsonObject jsonObject = <span class="keyword">new</span> JsonObject();</span><br><span class="line">    jsonObject.addProperty(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Java编程思想2&quot;</span>);</span><br><span class="line">    jsonObject.addProperty(<span class="string">&quot;publishDate&quot;</span>, <span class="string">&quot;2012-11-22&quot;</span>);</span><br><span class="line">    jsonObject.addProperty(<span class="string">&quot;price&quot;</span>, <span class="number">77</span>);</span><br><span class="line"></span><br><span class="line">    UpdateResponse updateResponse = client</span><br><span class="line">            .prepareUpdate(<span class="string">&quot;book&quot;</span>, <span class="string">&quot;java&quot;</span>, <span class="string">&quot;1&quot;</span>)</span><br><span class="line">            .setDoc(jsonObject.toString(), XContentType.JSON).get();</span><br><span class="line">    System.out.println(<span class="string">&quot;索引名称:&quot;</span> + updateResponse.getIndex());</span><br><span class="line">    System.out.println(<span class="string">&quot;索引类型:&quot;</span> + updateResponse.getType());</span><br><span class="line">    System.out.println(<span class="string">&quot;文档id:&quot;</span> + updateResponse.getId());</span><br><span class="line">    System.out.println(<span class="string">&quot;当前状态:&quot;</span> + updateResponse.status());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>查询索引文档</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询索引</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    GetResponse getResponse = client.prepareGet(<span class="string">&quot;book&quot;</span>, <span class="string">&quot;java&quot;</span>, <span class="string">&quot;1&quot;</span>).get();</span><br><span class="line">    System.out.println(getResponse.getSourceAsString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/32.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/categories/Elasticsearch/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Java实现与Elasticsearch的连接</title>
    <link href="https://blog.zoutl.cn/395.html"/>
    <id>https://blog.zoutl.cn/395.html</id>
    <published>2021-12-14T19:07:31.000Z</published>
    <updated>2021-12-14T20:33:34.210Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>引入的依赖版本必须和正在运行的Elasticsearch版本一致</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.elasticsearch.client<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>transport<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.transport.TransportClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.transport.InetSocketTransportAddress;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.transport.client.PreBuiltTransportClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-15 2:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        String host = <span class="string">&quot;192.168.0.116&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> port = <span class="number">9300</span>;</span><br><span class="line">        TransportClient client = <span class="keyword">new</span> PreBuiltTransportClient(Settings.EMPTY).addTransportAddress(<span class="keyword">new</span> InetSocketTransportAddress(InetAddress.getByName(host), port));</span><br><span class="line">        System.out.println(client);</span><br><span class="line">        client.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p>出现划红线的信息说明与Elasticsearch连接成功</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20031243.jpg"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/32.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/categories/Elasticsearch/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>CentOS7安装Elasticsearch5.5.2</title>
    <link href="https://blog.zoutl.cn/394.html"/>
    <id>https://blog.zoutl.cn/394.html</id>
    <published>2021-12-14T13:54:12.000Z</published>
    <updated>2021-12-14T22:18:29.207Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>下载地址为：<a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-5-2">Elasticsearch 5.5.2 | Elastic</a>，下载tar版本的安装包</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-14%20215949.png"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装jre1-8"><a href="#安装jre1-8" class="headerlink" title="安装jre1.8"></a>安装jre1.8</h4><p>运行Elasticsearch5.5.2需要jre1.8及以上，安装jre过程查看博客：<a href="https://blog.zoutl.cn/154.html">CentOS7 安装和配置 jre1.8 | LeDao 的博客 (zoutl.cn)</a></p><h4 id="上传到Linux服务器"><a href="#上传到Linux服务器" class="headerlink" title="上传到Linux服务器"></a>上传到Linux服务器</h4><p>在/home目录下创建一个名称为es的目录，然后将下载好的文件上传到这个目录</p><h4 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h4><p>通过以下命令解压完成后，就已经安装完成了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf elasticsearch-5.5.2.tar.gz</span><br></pre></td></tr></table></figure><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="新建用户并赋予权限"><a href="#新建用户并赋予权限" class="headerlink" title="新建用户并赋予权限"></a>新建用户并赋予权限</h4><p>新建一个用户<code>elastic</code>专门运行Elasticsearch，因为root用户一般不用来运行Elasticsearch的，输入以下三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建一个名为elastic的用户</span></span><br><span class="line">useradd elastic</span><br><span class="line"></span><br><span class="line"><span class="comment">#把目录权限赋予给elastic</span></span><br><span class="line">chown -R elastic:elastic /home/es/elasticsearch-5.5.2/</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换当前身份为elastic</span></span><br><span class="line">su elastic</span><br></pre></td></tr></table></figure><h4 id="第一次运行"><a href="#第一次运行" class="headerlink" title="第一次运行"></a>第一次运行</h4><p>输入以下命令运行Elasticsearch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /home/es/elasticsearch-5.5.2/bin/elasticsearch</span><br></pre></td></tr></table></figure><h4 id="可能出现的报错"><a href="#可能出现的报错" class="headerlink" title="可能出现的报错"></a>可能出现的报错</h4><blockquote><p>报错1</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-14%20222917.png"></p><p>之所以会报错，是因为Elasticsearch需要的运行内存过大（Elasticsearch默认需要的运行内存为2G，而我的虚拟机的运行内存也是2G，所以这个虚拟机是运行不了Elasticsearch的），解决办法：修改Elasticsearch默认需要的运行内存，该配置文件在<code>/home/es/elasticsearch-5.5.2/config</code>目录下，文件名称为<code>jvm.options</code>,我修改为128M（内存过小Elasticsearch会自动挂掉，所以还是将虚拟机内存修改为4G比较好）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-14%20221944.png"></p><blockquote><p>报错2</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-14%20235306.png"></p><p>关于<code>[1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536]</code>的解决办法如下：（每个进程最大同时打开文件数太小）</p><p>切换到root用户</p><p>修改/etc/security/limits.conf文件，添加或修改如下行：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">*</span>               <span class="string">hard    nofile            65536</span></span><br><span class="line"><span class="meta">*</span>               <span class="string">soft    nofile            65536</span></span><br></pre></td></tr></table></figure><p>然后再切换到elastic用户，一定要切换，不然上面的配置不会立即生效，查看当前每个进程最大同时打开文件数的两个命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ulimit</span> -Hn</span><br><span class="line"><span class="built_in">ulimit</span> -Sn</span><br></pre></td></tr></table></figure><p>关于<code>[2]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</code>的解决办法如下：</p><p>切换root用户</p><ol><li><p>方法一：输入命令，<font color="#dd0000">不推荐使用此方法</font>，此方法只是临时有效，系统重启后就会失效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -w vm.max_map_count=2621441</span><br></pre></td></tr></table></figure></li><li><p>方法二：修改/etc/sysctl.conf文件，增加配置<code>vm.max_map_count=262144</code>，保存后要执行下面一条命令让配置生效，<font color="#dd0000">推荐使用此方法</font>，系统重启后也有效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -p /etc/sysctl.conf</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20024158.png"></p></li></ol><h4 id="再次运行"><a href="#再次运行" class="headerlink" title="再次运行"></a>再次运行</h4><p>切换到elastic用户，再次输入以下命令运行Elasticsearch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /home/es/elasticsearch-5.5.2/bin/elasticsearch</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-14%20222158.png"></p><p>上面的命令是在前台运行Elasticsearch，一般都是在后台运行以方便进行其它操作，停止Elasticsearch使用快捷键<code>CTRL+C</code>，后台运行的命令如下：（也就是在之前的命令后面加上<code>-d</code>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /home/es/elasticsearch-5.5.2/bin/elasticsearch -d</span><br></pre></td></tr></table></figure><p>使用以下命令查看Elasticsearch是否启动成功，出现下图的信息说明启动成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep elasticsearch</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-14%20223100.png"></p><h4 id="验证服务是否正常"><a href="#验证服务是否正常" class="headerlink" title="验证服务是否正常"></a>验证服务是否正常</h4><p>验证服务是否正常运行，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://localhost:9200</span><br></pre></td></tr></table></figure><p>如果正常就会出现下图的信息</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20001252.png"></p><h4 id="允许外网连接"><a href="#允许外网连接" class="headerlink" title="允许外网连接"></a>允许外网连接</h4><blockquote><p>修改配置</p></blockquote><p>在/home/es/elasticsearch-5.5.2/config/elasticsearch.yml中找到并修改下图的配置</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20001818.png"></p><blockquote><p>重启Elasticsearch服务</p></blockquote><ol><li><p>查看Elasticsearch服务的进程号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep elasticsearch</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20002636.png"></p></li><li><p>关闭进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 2328</span><br></pre></td></tr></table></figure></li><li><p>再次启动Elasticsearch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh /home/es/elasticsearch-5.5.2/bin/elasticsearch -d</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>关闭防火墙</p></blockquote><p>通过以下两条命令关闭防火墙并且设置开机不要启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#关闭</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment">#禁止开机启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><blockquote><p>在电脑上的浏览器输入<code>虚拟机IP:9200</code>，出现下图的结果说明外网连接成功</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-15%20002258.png"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>如果修改了配置不生效，那就切换一下当前身份：在root身份修改了配置后，再将当前身份切换到elastic身份</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/22.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/categories/CentOS7/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Elasticsearch" scheme="https://blog.zoutl.cn/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Nginx获取真实用户IP</title>
    <link href="https://blog.zoutl.cn/393.html"/>
    <id>https://blog.zoutl.cn/393.html</id>
    <published>2021-12-14T07:45:31.000Z</published>
    <updated>2021-12-14T08:13:32.979Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题概述"><a href="#问题概述" class="headerlink" title="问题概述"></a>问题概述</h3><p>通过Nginx反向代理后，HttpServletRequest.getRemoteAddr()方法无法获取到用户的真实IP，只能获取到本机IP<code>127.0.0.1</code>，这是因为传入Java后端的是Nginx本机的IP</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>将用户的IP存储到Nginx的消息头，Java后端直接通过消息头获取用户真实的IP</p><h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><h4 id="Nginx将真实IP存储到消息头"><a href="#Nginx将真实IP存储到消息头" class="headerlink" title="Nginx将真实IP存储到消息头"></a>Nginx将真实IP存储到消息头</h4><p>在Nginx配置文件的http{}中加入以下代码：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面三行为重点，添加后就可以获取到客户端真实IP</span></span><br><span class="line"><span class="string">set_real_ip_from</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/0;</span></span><br><span class="line"><span class="string">real_ip_header</span>  <span class="string">X-Forwarded-For;</span></span><br><span class="line"><span class="string">real_ip_recursive</span> <span class="string">on;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 下面三行为常见反向代理传递真实客户端IP的配置，配置在http&#123;&#125;中，则全局应用在下面的所有server中</span></span><br><span class="line"><span class="string">proxy_set_header</span> <span class="string">Host</span>      <span class="string">$host;</span></span><br><span class="line"><span class="string">proxy_set_header</span> <span class="string">X-Real-IP</span> <span class="string">$remote_addr;</span></span><br><span class="line"><span class="string">proxy_set_header</span> <span class="string">X-Forwarded-For</span> <span class="string">$proxy_add_x_forwarded_for;</span></span><br></pre></td></tr></table></figure><h4 id="Java获取真实IP"><a href="#Java获取真实IP" class="headerlink" title="Java获取真实IP"></a>Java获取真实IP</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-12-14 12:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IpUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getIpAddr</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        String fromSource = <span class="string">&quot;X-Real-IP&quot;</span>;</span><br><span class="line">        String ip = request.getHeader(fromSource);</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;X-Forwarded-For&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ip == <span class="keyword">null</span> || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">            ip = request.getRemoteAddr();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/12.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nginx" scheme="https://blog.zoutl.cn/categories/Nginx/"/>
    
    
    <category term="Nginx" scheme="https://blog.zoutl.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Nginx配置SSL证书</title>
    <link href="https://blog.zoutl.cn/392.html"/>
    <id>https://blog.zoutl.cn/392.html</id>
    <published>2021-12-13T15:08:18.000Z</published>
    <updated>2021-12-14T07:44:37.548Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加访问规则"><a href="#添加访问规则" class="headerlink" title="添加访问规则"></a>添加访问规则</h3><p>在云服务器的安全组中的入方向添加访问规则，端口范围为：443/443，Nginx配置SSL证书需要监听这个端口</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-13%20233112.jpg"></p><h3 id="下载证书"><a href="#下载证书" class="headerlink" title="下载证书"></a>下载证书</h3><p>下载Nginx类型的SSL证书</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-13%20231016.jpg"></p><h3 id="解压证书"><a href="#解压证书" class="headerlink" title="解压证书"></a>解压证书</h3><p>解压后有两个文件，文件后缀名分别为：<code>.pem</code>和<code>.key</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-13%20231431.png"></p><h3 id="上传证书"><a href="#上传证书" class="headerlink" title="上传证书"></a>上传证书</h3><p>在Linux服务器的/etc/nginx/conf.d下创建cert目录，上传证书到刚刚创建的cert目录，记住文件路径</p><h3 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h3><p>在/etc/nginx/conf.d的default.conf配置文件添加以下代码：（upstream为反向代理的端口号，第一个server为反向代理配置，第二个server为SSl证书配置）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">upstream</span> <span class="string">blog</span> &#123;</span><br><span class="line">  <span class="string">server</span> <span class="string">localhost:8080;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">server</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">www.zoutl.cn;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">      <span class="string">proxy_pass</span> <span class="string">http://blog;</span></span><br><span class="line">      <span class="string">proxy_connect_timeout</span> <span class="number">30</span><span class="string">;</span> <span class="comment">#连接超时 默认为60秒</span></span><br><span class="line">      <span class="string">proxy_read_timeout</span> <span class="number">30</span><span class="string">;</span> <span class="comment">#读取超时 默认为60秒</span></span><br><span class="line">      <span class="string">proxy_send_timeout</span> <span class="number">30</span><span class="string">;</span> <span class="comment">#发送超时 默认为60秒</span></span><br><span class="line">      <span class="string">access_log</span> <span class="string">off;</span></span><br><span class="line">      <span class="string">break;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> &#123;</span><br><span class="line">        <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">server</span> &#123;</span><br><span class="line">    <span class="string">listen</span> <span class="number">443</span> <span class="string">ssl;</span></span><br><span class="line">    <span class="string">server_name</span>  <span class="string">www.zoutl.cn;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">ssl_certificate</span> <span class="string">/etc/nginx/conf.d/cert/5564023_www.zoutl.cn.pem;</span>  <span class="comment">#需要将cert-file-name.pem替换成已上传的证书文件的名称。</span></span><br><span class="line">    <span class="string">ssl_certificate_key</span> <span class="string">/etc/nginx/conf.d/cert/5564023_www.zoutl.cn.key;</span> <span class="comment">#需要将cert-file-name.key替换成已上传的证书私钥文件的名称。</span></span><br><span class="line">    <span class="string">ssl_session_timeout</span> <span class="string">5m;</span></span><br><span class="line">    <span class="string">ssl_ciphers</span> <span class="string">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span></span><br><span class="line">    <span class="comment">#表示使用的加密套件的类型。</span></span><br><span class="line">    <span class="string">ssl_protocols</span> <span class="string">TLSv1.1</span> <span class="string">TLSv1.2</span> <span class="string">TLSv1.3;</span> <span class="comment">#表示使用的TLS协议的类型。</span></span><br><span class="line">    <span class="string">ssl_prefer_server_ciphers</span> <span class="string">on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line">    </span><br><span class="line">    <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">      <span class="string">proxy_pass</span> <span class="string">http://www.zoutl.cn;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="string">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  <span class="string">/50x.html;</span></span><br><span class="line">    <span class="string">location</span> <span class="string">=</span> <span class="string">/50x.html</span> &#123;</span><br><span class="line">        <span class="string">root</span>   <span class="string">html;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="验证证书"><a href="#验证证书" class="headerlink" title="验证证书"></a>验证证书</h3><p>在域名前加上<code>https://</code>，然后在浏览器地址栏输入即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-12-13%20232225.png"></p><h3 id="强制跳转https"><a href="#强制跳转https" class="headerlink" title="强制跳转https"></a>强制跳转https</h3><p>在反向代理配置中加上以下代码：（在server_name下添加即可）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">rewrite</span> <span class="string">^(.*)$</span> <span class="string">https://$host$1;</span> <span class="comment">#将所有HTTP请求通过rewrite指令重定向到HTTPS。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/images/homeBlogImage/2.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Nginx" scheme="https://blog.zoutl.cn/categories/Nginx/"/>
    
    
    <category term="Nginx" scheme="https://blog.zoutl.cn/tags/Nginx/"/>
    
  </entry>
  
</feed>
