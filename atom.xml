<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeDao&#39;s Blog</title>
  
  
  <link href="https://blog.zoutl.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zoutl.cn/"/>
  <updated>2024-03-09T13:51:30.104Z</updated>
  <id>https://blog.zoutl.cn/</id>
  
  <author>
    <name>LeDao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VS Code在开发Vue.js时F12转到定义快捷键失效的解决办法</title>
    <link href="https://blog.zoutl.cn/589.html"/>
    <id>https://blog.zoutl.cn/589.html</id>
    <published>2024-03-09T13:43:26.000Z</published>
    <updated>2024-03-09T13:51:30.104Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在使用VS Code开发时，如果想从HTML代码中快速跳转到对应的JavaScript方法，可以使用F12转到定义快捷键快速跳转，但是</p><h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>在 Vue 项目中，使用 VS Code 进行代码开发时，有时按下快捷键 F12 无法跳转到函数的定义位置。这可能是因为你的引用路径中包含了 @ 符号，而 VS Code 默认的跳转定义功能在这种情况下失效了，并且在导入时也不会出现路径提示。</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在项目根目录下新建一个名为<code>jsconfig.json</code>的新文件，文件的内容如下所示，直接全部复制进去即可</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;module&quot;</span>: <span class="string">&quot;commonjs&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;target&quot;</span>: <span class="string">&quot;es6&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;baseUrl&quot;</span>: <span class="string">&quot;.&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;paths&quot;</span>: &#123; <span class="comment">// 支持Vue组件导入后，可以f12定位</span></span><br><span class="line">            <span class="attr">&quot;@&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;./src/&quot;</span></span><br><span class="line">            ],</span><br><span class="line">            <span class="attr">&quot;@/*&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;./src/*&quot;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;exclude&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;node_modules&quot;</span>,</span><br><span class="line">        <span class="string">&quot;**/node_modules/*&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;include&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;./src/**/*&quot;</span></span><br><span class="line">    ] <span class="comment">// 用于智能导入</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240309214943750.png" alt="image-20240309214943750"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;在使用VS Code开发时，如果想从HTML代码中快速跳转到对应的JavaScript方法，可以使用F12转到定义快捷键快速</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>解决Java代码中的魔法值</title>
    <link href="https://blog.zoutl.cn/588.html"/>
    <id>https://blog.zoutl.cn/588.html</id>
    <published>2024-03-08T04:29:35.000Z</published>
    <updated>2024-03-08T05:07:13.752Z</updated>
    
    <content type="html"><![CDATA[<h3 id="魔法值的定义"><a href="#魔法值的定义" class="headerlink" title="魔法值的定义"></a>魔法值的定义</h3><p>未经定义的常量叫做魔法值，通常是指在代码编写时莫名出现的数字，无法直接判断数值代表的含义，必须通过联系代码上下文分析才可以明白，严重降低了代码的可读性，例如在下图中的<code>3</code>和<code>2</code>都是魔法值</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240308123316494.png" alt="image-20240308123316494"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>下面代码的用户身份有三种：1代表管理员、2代表房东、3代表租户，即在数据库中只存储1、2、3，不存储实际的含义，如果想知道从数据库查询到的用户身份就会出现魔法值了，例如想知道用户身份是不是管理员就需要判断<code>user.getType()==1</code>，1就是魔法值</p><p>要消除魔法值可以定义静态常量，也可以使用枚举类，建议使用枚举类更加方便管理</p><h4 id="定义静态常量"><a href="#定义静态常量" class="headerlink" title="定义静态常量"></a>定义静态常量</h4><ol><li><p>定义，如果想定义一次可以在多个类中使用，那么请将下面代码中的<code>private</code>关键词修改为<code>public</code>，其它类想使用下面的静态常量需要先<code>import</code>导入（根据IntelliJ IDEA的提示导入即可）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 管理员</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> USER_TYPE_ADMINISTRATOR = <span class="number">1</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 房东</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> USER_TYPE_LANDLORD = <span class="number">2</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 租户</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="keyword">int</span> USER_TYPE_TENANT = <span class="number">3</span>;</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(USER_TYPE_ADMINISTRATOR);</span><br><span class="line">    System.out.println(USER_TYPE_LANDLORD);</span><br><span class="line">    System.out.println(USER_TYPE_TENANT);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行结果</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240308125254226.png" alt="image-20240308125254226"></p></li></ol><h4 id="使用枚举类"><a href="#使用枚举类" class="headerlink" title="使用枚举类"></a>使用枚举类</h4><p>如果要在IntelliJ IDEA中创建一个文件夹存放枚举类，那么该文件夹名称不能是<code>enum</code>，否则无法在该文件夹内创建枚举类（普通类也不行），建议把文件夹的名称命名为<code>enums</code></p><ol><li><p>创建枚举类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ltx.enums;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户类型</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createDate</span> 2024-03-08 12:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">enum</span> <span class="title">UserType</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 管理员</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Administrator(<span class="number">1</span>, <span class="string">&quot;管理员&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 房东</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Landlord(<span class="number">2</span>, <span class="string">&quot;房东&quot;</span>),</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 租户</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    Tenant(<span class="number">3</span>, <span class="string">&quot;租户&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 状态码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 描述</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String description;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> description</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    UserType(<span class="keyword">int</span> code, String description) &#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.description = description;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取状态码</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取描述</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDescription</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> description;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    UserType userType1 = UserType.Administrator;</span><br><span class="line">    System.out.println(userType1.getCode());</span><br><span class="line">    System.out.println(userType1.getDescription());</span><br><span class="line">    UserType userType2 = UserType.Landlord;</span><br><span class="line">    System.out.println(userType2.getCode());</span><br><span class="line">    System.out.println(userType2.getDescription());</span><br><span class="line">    UserType userType3 = UserType.Tenant;</span><br><span class="line">    System.out.println(userType3.getCode());</span><br><span class="line">    System.out.println(userType3.getDescription());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行结果</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240308125310395.png" alt="image-20240308125310395"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;魔法值的定义&quot;&gt;&lt;a href=&quot;#魔法值的定义&quot; class=&quot;headerlink&quot; title=&quot;魔法值的定义&quot;&gt;&lt;/a&gt;魔法值的定义&lt;/h3&gt;&lt;p&gt;未经定义的常量叫做魔法值，通常是指在代码编写时莫名出现的数字，无法直接判断数值代表的含义，必须通过联系代码上</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>报错Caused by: java.nio.charset.MalformedInputException: Input length = 1的解决办法</title>
    <link href="https://blog.zoutl.cn/587.html"/>
    <id>https://blog.zoutl.cn/587.html</id>
    <published>2024-03-06T04:12:05.000Z</published>
    <updated>2024-03-06T04:33:32.222Z</updated>
    
    <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>这个报错发生在从GitHub仓库clone代码在本地部署的时候，和配置文件<code>application.yml</code>有关</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><ol><li><p>修改IntelliJ IDEA的编码为UTF-8，下图的三个地方都改掉</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240306121612530.png" alt="image-20240306121612530"></p></li><li><p>先复制配置文件application.yml的内容，再把它删除，最后新建配置文件application.yml，把之前复制的配置内容复制进去即可</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h3&gt;&lt;p&gt;这个报错发生在从GitHub仓库clone代码在本地部署的时候，和配置文件&lt;code&gt;application.yml&lt;/code&gt;有关&lt;/p</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="报错信息" scheme="https://blog.zoutl.cn/tags/%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF/"/>
    
  </entry>
  
  <entry>
    <title>前端的Date类型和Java的LocalDateTime类型互相转换</title>
    <link href="https://blog.zoutl.cn/586.html"/>
    <id>https://blog.zoutl.cn/586.html</id>
    <published>2024-03-02T08:07:13.000Z</published>
    <updated>2024-03-02T08:48:48.696Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>前端操作的时间类型一般为Date类型，而Java则为LocalDateTime类型</p><p>前端的时间传到后端保存到数据库需要先转换成LocalDateTime类型，后端的时间显示到前端则需要转换成前端的Date类型</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="前端的Date类型转换成后端的LocalDateTime类型"><a href="#前端的Date类型转换成后端的LocalDateTime类型" class="headerlink" title="前端的Date类型转换成后端的LocalDateTime类型"></a>前端的Date类型转换成后端的LocalDateTime类型</h4><p>首先根据前端的Date类型获得对应的时间戳（单位为秒），后端将时间戳转换成LocalDateTime类型</p><h4 id="后端的LocalDateTime类型转换成前端的Date类型"><a href="#后端的LocalDateTime类型转换成前端的Date类型" class="headerlink" title="后端的LocalDateTime类型转换成前端的Date类型"></a>后端的LocalDateTime类型转换成前端的Date类型</h4><p>首先根据后端的LocalDateTime类型获得对应的时间戳（单位为秒），前端再将前面的秒时间戳转换成毫秒时间戳（秒时间戳×1000），最后将毫秒时间戳转换成前端的Date类型</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="Date类型转换成LocalDateTime类型"><a href="#Date类型转换成LocalDateTime类型" class="headerlink" title="Date类型转换成LocalDateTime类型"></a>Date类型转换成LocalDateTime类型</h4><p>前端获得当前时间的秒时间戳，下面的getTime()获得的时间戳单位为毫秒，所以要除以1000，小数部分则通过<code>Math.floor()</code>舍去</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> timestampSeconds = <span class="built_in">Math</span>.floor(<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()/<span class="number">1000</span>)</span><br></pre></td></tr></table></figure><p>后端将秒时间戳转换成LocalDateTime类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 前端的new Date()转换的时间戳(秒) 转换成 LocalDateTime</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timestampSeconds</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">timestampSecondsChangeToLocalDateTime</span><span class="params">(<span class="keyword">long</span> timestampSeconds)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Instant instant = Instant.ofEpochSecond(timestampSeconds);</span><br><span class="line">    ZonedDateTime zonedDateTime = ZonedDateTime.ofInstant(instant, ZoneId.of(<span class="string">&quot;UTC+8&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> zonedDateTime.toLocalDateTime();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="LocalDateTime类型转换成Date类型"><a href="#LocalDateTime类型转换成Date类型" class="headerlink" title="LocalDateTime类型转换成Date类型"></a>LocalDateTime类型转换成Date类型</h4><p>后端获得当前时间的秒时间戳</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将LocalDateTime转换成时间戳(秒)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> localDateTime</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">localDateTimeChangeToTimestampSeconds</span><span class="params">(LocalDateTime localDateTime)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> localDateTime.atZone(ZoneId.systemDefault()).toInstant().getEpochSecond();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前端将秒时间戳转换成毫秒时间戳，再转换成Date类型，<code>timestampSeconds</code>为秒时间戳</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestampSeconds*<span class="number">1000</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;前端操作的时间类型一般为Date类型，而Java则为LocalDateTime类型&lt;/p&gt;
&lt;p&gt;前端的时间传到后端保存到数</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="JavaScript" scheme="https://blog.zoutl.cn/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>Vue3使用ECharts图表库</title>
    <link href="https://blog.zoutl.cn/585.html"/>
    <id>https://blog.zoutl.cn/585.html</id>
    <published>2024-02-03T12:43:27.000Z</published>
    <updated>2024-02-03T14:57:45.024Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装ECharts"><a href="#安装ECharts" class="headerlink" title="安装ECharts"></a>安装ECharts</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install echarts --save</span><br></pre></td></tr></table></figure><h3 id="在页面中使用"><a href="#在页面中使用" class="headerlink" title="在页面中使用"></a>在页面中使用</h3><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;echarts-box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myEcharts1&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; height: &#x27;300px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;echarts-box&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;myEcharts2&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; height: &#x27;300px&#x27; &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h4><p>通过onMounted实现一打开页面就执行initChart()函数加载ECharts图表</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref, onMounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> echarts <span class="keyword">from</span> <span class="string">&quot;echarts&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明定义一下echart</span></span><br><span class="line"><span class="keyword">let</span> echart = echarts;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> initChart = <span class="function">() =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> chart1 = echart.init(<span class="built_in">document</span>.getElementById(<span class="string">&quot;myEcharts1&quot;</span>), <span class="string">&quot;light&quot;</span>)</span><br><span class="line">    chart1.setOption(&#123;</span><br><span class="line">        <span class="attr">title</span>: &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;各个类型的人数&#x27;</span>,</span><br><span class="line">            <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">legend</span>: &#123;</span><br><span class="line">            <span class="attr">orient</span>: <span class="string">&#x27;vertical&#x27;</span>,</span><br><span class="line">            <span class="attr">bottom</span>: <span class="string">&#x27;bottom&#x27;</span>,</span><br><span class="line">            <span class="attr">show</span>: <span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">series</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">name</span>: <span class="string">&#x27;被复制的总次数&#x27;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;pie&#x27;</span>,</span><br><span class="line">                <span class="attr">radius</span>: <span class="string">&#x27;70%&#x27;</span>,</span><br><span class="line">                <span class="attr">data</span>: [</span><br><span class="line">                    &#123; <span class="attr">value</span>: <span class="number">1048</span>, <span class="attr">name</span>: <span class="string">&#x27;学生&#x27;</span> &#125;,</span><br><span class="line">                    &#123; <span class="attr">value</span>: <span class="number">735</span>, <span class="attr">name</span>: <span class="string">&#x27;教师&#x27;</span> &#125;,</span><br><span class="line">                    &#123; <span class="attr">value</span>: <span class="number">580</span>, <span class="attr">name</span>: <span class="string">&#x27;家长&#x27;</span> &#125;,</span><br><span class="line">                    &#123; <span class="attr">value</span>: <span class="number">484</span>, <span class="attr">name</span>: <span class="string">&#x27;其他&#x27;</span> &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">emphasis</span>: &#123;</span><br><span class="line">                    <span class="attr">itemStyle</span>: &#123;</span><br><span class="line">                        <span class="attr">shadowBlur</span>: <span class="number">10</span>,</span><br><span class="line">                        <span class="attr">shadowOffsetX</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">shadowColor</span>: <span class="string">&#x27;rgba(0, 0, 0, 0.5)&#x27;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> chart2 = echart.init(<span class="built_in">document</span>.getElementById(<span class="string">&quot;myEcharts2&quot;</span>), <span class="string">&quot;light&quot;</span>)</span><br><span class="line">    chart2.setOption(&#123;</span><br><span class="line">        <span class="attr">xAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: [<span class="string">&#x27;周一&#x27;</span>, <span class="string">&#x27;周二&#x27;</span>, <span class="string">&#x27;周三&#x27;</span>, <span class="string">&#x27;周四&#x27;</span>, <span class="string">&#x27;周五&#x27;</span>, <span class="string">&#x27;周六&#x27;</span>, <span class="string">&#x27;周日&#x27;</span>]</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">yAxis</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">series</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">data</span>: [<span class="number">120</span>, <span class="number">132</span>, <span class="number">101</span>, <span class="number">134</span>, <span class="number">90</span>, <span class="number">230</span>, <span class="number">210</span>],</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&#x27;line&#x27;</span>,</span><br><span class="line">                <span class="attr">label</span>: &#123;</span><br><span class="line">                    <span class="attr">show</span>: <span class="literal">true</span>,</span><br><span class="line">                    <span class="attr">position</span>: <span class="string">&#x27;bottom&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">tooltip</span>: &#123;</span><br><span class="line">            <span class="attr">trigger</span>: <span class="string">&#x27;item&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">title</span>: &#123;</span><br><span class="line">            <span class="attr">text</span>: <span class="string">&#x27;每天注册用户数&#x27;</span>,</span><br><span class="line">            <span class="attr">left</span>: <span class="string">&#x27;center&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">onMounted(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    initChart()</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240203225118605.png" alt="image-20240203225118605"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>ECharts图表库官网地址：<a href="https://echarts.apache.org/zh/index.html">Apache ECharts</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装ECharts&quot;&gt;&lt;a href=&quot;#安装ECharts&quot; class=&quot;headerlink&quot; title=&quot;安装ECharts&quot;&gt;&lt;/a&gt;安装ECharts&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
    <category term="ECharts" scheme="https://blog.zoutl.cn/tags/ECharts/"/>
    
  </entry>
  
  <entry>
    <title>在前端格式化Element Plus表格数据</title>
    <link href="https://blog.zoutl.cn/584.html"/>
    <id>https://blog.zoutl.cn/584.html</id>
    <published>2024-02-01T07:55:54.000Z</published>
    <updated>2024-02-01T08:37:33.773Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>有时候后端返回的数据不易于阅读，需要格式化一下，虽然后端也可以格式化数据，但是在前端格式化会更加方便，且前端的代码部署起来比后端方便多了</p><h3 id="简单数据格式化"><a href="#简单数据格式化" class="headerlink" title="简单数据格式化"></a>简单数据格式化</h3><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><p><code>2024-02-01T15:10:43</code>格式化成<code>2024-02-01 15:10:43</code></p><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><p>下面代码的<code>scope.row</code>可以拿到整行的数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;addDate&quot;</span> <span class="attr">label</span>=<span class="string">&quot;添加时间&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123; scope.row.addDate.replace(&#x27;T&#x27;, &#x27; &#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="复杂数据格式化"><a href="#复杂数据格式化" class="headerlink" title="复杂数据格式化"></a>复杂数据格式化</h3><h4 id="目标-1"><a href="#目标-1" class="headerlink" title="目标"></a>目标</h4><p><code>Wed Feb 07 2024 00:00:00 GMT+0800 (中国标准时间)</code>格式化成<code>2024-02-07 00:00:00</code></p><h4 id="HTML代码-1"><a href="#HTML代码-1" class="headerlink" title="HTML代码"></a>HTML代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;reserveDate&quot;</span> <span class="attr">label</span>=<span class="string">&quot;预约时间&quot;</span> <span class="attr">:formatter</span>=<span class="string">&quot;formatDate&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 格式化日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>row 行数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>column 列数据 </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>cellValue 单元格值，这个是要格式化的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>index 索引值 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> formatDate = <span class="function">(<span class="params">row, column, cellValue, index</span>) =&gt;</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建 Date 对象并解析原始日期字符串</span></span><br><span class="line">    <span class="keyword">var</span> originalDate = <span class="keyword">new</span> <span class="built_in">Date</span>(cellValue);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提取年、月、日、时、分、秒</span></span><br><span class="line">    <span class="keyword">var</span> year = originalDate.getFullYear();</span><br><span class="line">    <span class="keyword">var</span> month = (originalDate.getMonth() + <span class="number">1</span>).toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> day = originalDate.getDate().toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> hours = originalDate.getHours().toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> minutes = originalDate.getMinutes().toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> seconds = originalDate.getSeconds().toString().padStart(<span class="number">2</span>, <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构建新的格式化日期字符串</span></span><br><span class="line">    <span class="keyword">var</span> formattedDateString = <span class="string">`<span class="subst">$&#123;year&#125;</span>-<span class="subst">$&#123;month&#125;</span>-<span class="subst">$&#123;day&#125;</span> <span class="subst">$&#123;hours&#125;</span>:<span class="subst">$&#123;minutes&#125;</span>:<span class="subst">$&#123;seconds&#125;</span>`</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> formattedDateString</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;有时候后端返回的数据不易于阅读，需要格式化一下，虽然后端也可以格式化数据，但是在前端格式化会更加方便，且前端的代码部署起来比</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Element Plus" scheme="https://blog.zoutl.cn/tags/Element-Plus/"/>
    
  </entry>
  
  <entry>
    <title>Vue3使用v-viewer实现查看大图功能</title>
    <link href="https://blog.zoutl.cn/583.html"/>
    <id>https://blog.zoutl.cn/583.html</id>
    <published>2024-01-31T09:07:09.000Z</published>
    <updated>2024-01-31T09:27:01.246Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install v-viewer@next</span><br></pre></td></tr></table></figure><h3 id="全局引入"><a href="#全局引入" class="headerlink" title="全局引入"></a>全局引入</h3><p>在<code>main.js</code>文件中引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Viewer <span class="keyword">from</span> <span class="string">&#x27;v-viewer&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;viewerjs/dist/viewer.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line">app.use(Viewer).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="在页面中使用"><a href="#在页面中使用" class="headerlink" title="在页面中使用"></a>在页面中使用</h3><h4 id="定义options的url"><a href="#定义options的url" class="headerlink" title="定义options的url"></a>定义options的url</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> options = ref(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;data-src&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><p><code>src</code>填图片在页面中的展示图片链接（一般是略缩图），<code>data-src</code>则填大图的图片链接（一般是更清晰的原图）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">fixed</span>=<span class="string">&quot;left&quot;</span> <span class="attr">prop</span>=<span class="string">&quot;imageName&quot;</span> <span class="attr">label</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">width</span>=<span class="string">&quot;180&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> #<span class="attr">default</span>=<span class="string">&quot;scope&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-viewer</span>=<span class="string">&quot;options&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">el-image</span> <span class="attr">:src</span>=<span class="string">&quot;&#x27;http://localhost:8080/images/adoption/&#x27; + scope.row.imageName&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">:data-src</span>=<span class="string">&quot;&#x27;http://localhost:8080/images/adoption/&#x27; + scope.row.imageName&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">style</span>=<span class="string">&quot;width: 150px&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20240131172548477.png" alt="image-20240131172548477"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>v-viewer的GitHub地址：<a href="https://github.com/mirari/v-viewer">mirari/v-viewer</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
    <category term="v-viewer" scheme="https://blog.zoutl.cn/tags/v-viewer/"/>
    
  </entry>
  
  <entry>
    <title>Vite项目的热更新失效解决办法</title>
    <link href="https://blog.zoutl.cn/582.html"/>
    <id>https://blog.zoutl.cn/582.html</id>
    <published>2024-01-27T12:28:54.000Z</published>
    <updated>2024-01-27T12:42:41.312Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>使用Vite搭建的项目热更新突然失效，修改代码后需要重启项目才可以生效</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>Vite项目的文件路径大小写是很严谨的，如果大小写不一样，页面还是可以访问，但是修改代码后热更新就失效了，所以文件路径的大小写一定要一致</p><p>Vite项目的热更新失效，而之前没有问题，一般就是这种情况</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;使用Vite搭建的项目热更新突然失效，修改代码后需要重启项目才可以生效&lt;/p&gt;
&lt;h3 id=&quot;解决&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vite" scheme="https://blog.zoutl.cn/tags/Vite/"/>
    
  </entry>
  
  <entry>
    <title>负载均衡项目的Quartz定时任务重复执行的解决办法</title>
    <link href="https://blog.zoutl.cn/581.html"/>
    <id>https://blog.zoutl.cn/581.html</id>
    <published>2024-01-02T16:11:48.000Z</published>
    <updated>2024-01-02T16:40:06.342Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>负载均衡的项目如果用了Quartz定时任务，到了指定执行时间，定时任务就会被执行多次，而我希望只执行一次</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在定时任务代码的开头，使用Redis的SETNX命令设置一个键，设置成功才继续执行下面的代码，从而实现只执行一次定时任务</p><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p>定义一个方法使用SETNX命令，这个方法给定时任务的代码使用，有注释的代码为关键代码，其上面和下面的代码为<code>打开和关闭Redis连接</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用SETNX命令设置key-value键值对</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key     键名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value   值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> seconds 秒数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 设置成功返回true，否则返回false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">setKeyNxSuccess</span><span class="params">(String key, String value, <span class="keyword">int</span> seconds)</span> </span>&#123;</span><br><span class="line">    JedisPool jedisPool = getRedisLink();</span><br><span class="line">    Jedis jedis = getJedis(jedisPool);</span><br><span class="line">    <span class="comment">//setnx设置成功返回1，否则返回0</span></span><br><span class="line">    <span class="keyword">boolean</span> result = (jedis.setnx(key, value) == <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//设置过期时间</span></span><br><span class="line">    setKeyTime(key, seconds);</span><br><span class="line">    closeRedis(jedisPool, jedis);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用上面的代码实现只执行一次定时任务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.quartz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.util.RedisUtil;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@createDate</span> 2023-12-27 18:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddTodayVisitorCountToDatabase</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;50 59 23 * * ?&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置一个标记,设置该标记成功后才执行下面的代码,防止重复执行</span></span><br><span class="line">        <span class="keyword">boolean</span> flag = RedisUtil.setKeyNxSuccess(<span class="string">&quot;setKeyNxSuccess&quot;</span>, <span class="string">&quot;1&quot;</span>, <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">            <span class="comment">// 这里写业务代码</span></span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(LocalDateTime.now() + <span class="string">&quot;定时任务已经执行过了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;负载均衡的项目如果用了Quartz定时任务，到了指定执行时间，定时任务就会被执行多次，而我希望只执行一次&lt;/p&gt;
&lt;h3 i</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Redis" scheme="https://blog.zoutl.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Windows系统安装Redis</title>
    <link href="https://blog.zoutl.cn/580.html"/>
    <id>https://blog.zoutl.cn/580.html</id>
    <published>2023-11-26T08:46:16.000Z</published>
    <updated>2023-11-26T10:56:01.094Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载压缩包"><a href="#下载压缩包" class="headerlink" title="下载压缩包"></a>下载压缩包</h3><p>下载地址为：<a href="https://github.com/tporadowski/redis/releases">Releases · tporadowski/redis (github.com)</a>，下载压缩包那个就行了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20231126164913767.png" alt="image-20231126164913767"></p><h3 id="启动Redis"><a href="#启动Redis" class="headerlink" title="启动Redis"></a>启动Redis</h3><p>解压上面下载好的压缩包，然后cmd进入解压后的安装包，输入下面命令即可启动Redis，启动成功的结果如下图所示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20231126165221453.png" alt="image-20231126165221453"></p><h3 id="进入Redis客户端"><a href="#进入Redis客户端" class="headerlink" title="进入Redis客户端"></a>进入Redis客户端</h3><p>上面的cmd窗口不要关闭，再次打开cmd进入上面解压后的文件夹，输入下面命令，然后就可以输入Redis命令来测试了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure><h3 id="关闭Redis"><a href="#关闭Redis" class="headerlink" title="关闭Redis"></a>关闭Redis</h3><p>直接把上面两个cmd窗口关掉就行了</p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>Java通过Jedis操作Redis前，Redis先需要设置一个访问密码，设置访问密码命令如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONFIG SET requirepass 123456</span><br></pre></td></tr></table></figure><p>验证密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth 123456</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20231126165804627.png" alt="image-20231126165804627"></p><p>本博客参考于：<a href="https://blog.csdn.net/m0_63230155/article/details/131951639">2023最新Windows安装配置Redis教程，嘎嘎详细_redis windows最新版本-CSDN博客</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载压缩包&quot;&gt;&lt;a href=&quot;#下载压缩包&quot; class=&quot;headerlink&quot; title=&quot;下载压缩包&quot;&gt;&lt;/a&gt;下载压缩包&lt;/h3&gt;&lt;p&gt;下载地址为：&lt;a href=&quot;https://github.com/tporadowski/redis/releas</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Windows系统" scheme="https://blog.zoutl.cn/tags/Windows%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="Redis" scheme="https://blog.zoutl.cn/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序使用data-传参的注意事项</title>
    <link href="https://blog.zoutl.cn/579.html"/>
    <id>https://blog.zoutl.cn/579.html</id>
    <published>2023-11-13T22:12:23.000Z</published>
    <updated>2023-11-13T22:31:26.600Z</updated>
    
    <content type="html"><![CDATA[<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>如果<code>data-</code>后面接的参数名的命名格式是驼峰格式，那么我们拿数据时要把参数名的大写字母转换成小写字符</p><h3 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h3><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">bind:click</span>=<span class="string">&quot;goToModifyFriendPage&quot;</span> <span class="attr">data-playerName</span>=<span class="string">&quot;&#123;&#123;item.playerName&#125;&#125;&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h4><p>上面的HTML代码是<code>data-playerName</code>，但是通过<code>playerName</code>是拿不到数据的</p><p>必须把驼峰格式全部变成小写：<code>playername</code>，如下所示</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">goToModifyFriendPage</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(e.target.dataset.playername);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;注意事项&quot;&gt;&lt;a href=&quot;#注意事项&quot; class=&quot;headerlink&quot; title=&quot;注意事项&quot;&gt;&lt;/a&gt;注意事项&lt;/h3&gt;&lt;p&gt;如果&lt;code&gt;data-&lt;/code&gt;后面接的参数名的命名格式是驼峰格式，那么我们拿数据时要把参数名的大写字母转换成小写字</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序实现跳转到其他页面</title>
    <link href="https://blog.zoutl.cn/578.html"/>
    <id>https://blog.zoutl.cn/578.html</id>
    <published>2023-11-13T19:20:07.000Z</published>
    <updated>2023-11-13T19:30:27.793Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>微信小程序实现跳转到其他页面可以使用<code>wx.navigateTo</code>方法，该方法保留当前页面的导航方式，用户可以通过左上角的返回按钮返回到原页面，跳转时还可以传递参数给目标页面</p><p>如果想要关闭当前页面并跳转到目标页面，可以使用<code>wx.redirectTo</code>方法</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="不传递参数"><a href="#不传递参数" class="headerlink" title="不传递参数"></a>不传递参数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateTo(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/somePage/somePage&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><p>直接在url中拼接要传递的参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateTo(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/somePage/somePage?id=1&amp;name=example&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在目标页面中，通过<code>onLoad</code>生命周期函数接收这些参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(options.id) <span class="comment">// 输出: 1</span></span><br><span class="line">  <span class="built_in">console</span>.log(options.name) <span class="comment">// 输出: example</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信小程序实现跳转到其他页面可以使用&lt;code&gt;wx.navigateTo&lt;/code&gt;方法，该方法保留当前页面的导航方式，用户可以通过左上</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Element Plus表格实现多选数据（JS实现）</title>
    <link href="https://blog.zoutl.cn/577.html"/>
    <id>https://blog.zoutl.cn/577.html</id>
    <published>2023-09-12T06:17:58.000Z</published>
    <updated>2023-09-12T17:23:46.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加el-table-column标签"><a href="#添加el-table-column标签" class="headerlink" title="添加el-table-column标签"></a>添加el-table-column标签</h3><p>添加后会出现一列单选框可以多选数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">type</span>=<span class="string">&quot;selection&quot;</span> <span class="attr">width</span>=<span class="string">&quot;44&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="el-table标签加入-selection-change属性"><a href="#el-table标签加入-selection-change属性" class="headerlink" title="el-table标签加入@selection-change属性"></a>el-table标签加入@selection-change属性</h3><p>勾选单选框时会触发@selection-change属性的selectSome方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">stripe</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span> <span class="attr">:border</span>=<span class="string">&quot;true&quot;</span> <span class="attr">max-height</span>=<span class="string">&quot;530&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">selection-change</span>=<span class="string">&quot;selectSome&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">type</span>=<span class="string">&quot;selection&quot;</span> <span class="attr">width</span>=<span class="string">&quot;44&quot;</span> /&gt;</span></span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h3><p>selectSome方法的参数value的值就是选中数据的对象集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> deleteIdArray = ref([])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> selectSome = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    deleteIdArray.value = []</span><br><span class="line">    <span class="keyword">if</span> (value.length !== <span class="number">0</span>) &#123;</span><br><span class="line">        ElMessage.success(<span class="string">&#x27;当前选中 &#x27;</span> + value.length + <span class="string">&#x27; 条数据&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; value.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> id = value[i].id;</span><br><span class="line">        deleteIdArray.value.push(id)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> deleteSome = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (deleteIdArray.value.length === <span class="number">0</span>) &#123;</span><br><span class="line">        ElMessage.error(<span class="string">&#x27;请至少选择 1 条要删除的数据&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> deleteIdStr = deleteIdArray.value.join(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    <span class="keyword">let</span> params = <span class="keyword">new</span> URLSearchParams()</span><br><span class="line">    params.append(<span class="string">&quot;deleteIdStr&quot;</span>, deleteIdStr)</span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">&#x27;/admin/errorSubmit/deleteSome&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axiosUtil.post(url, params)</span><br><span class="line">    <span class="keyword">if</span> (res.data.code === <span class="number">0</span>) &#123;</span><br><span class="line">        ElMessage.success(res.data.msg)</span><br><span class="line">        <span class="keyword">await</span> loadData()</span><br><span class="line">        deleteIdArray.value = []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;添加el-table-column标签&quot;&gt;&lt;a href=&quot;#添加el-table-column标签&quot; class=&quot;headerlink&quot; title=&quot;添加el-table-column标签&quot;&gt;&lt;/a&gt;添加el-table-column标签&lt;/h3&gt;&lt;p&gt;添加</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="https://blog.zoutl.cn/tags/JavaScript/"/>
    
    <category term="Element Plus" scheme="https://blog.zoutl.cn/tags/Element-Plus/"/>
    
  </entry>
  
  <entry>
    <title>MySQL修改数据库和数据表的字符集以及校对规则</title>
    <link href="https://blog.zoutl.cn/576.html"/>
    <id>https://blog.zoutl.cn/576.html</id>
    <published>2023-07-21T14:56:20.000Z</published>
    <updated>2023-07-24T17:10:28.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>我一般新建数据库时，字符集选用<code>utf-8</code>，校对规则选用<code>utf8_general_ci</code></p><p>然而最近我发现如果存放的数据里面有<code>Emoji表情符号</code>时，会报错无法把数据添加到数据库中</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>我查了一下utf-8字符集不支持存入Emoji表情符号，要存入Emoji表情符号则要使用<code>utf8mb4</code>字符集，然后校对规则使用<code>utf8mb4_unicode_ci</code>，所以一开始创建数据库时推荐使用<code>utf8mb4</code>字符集</p><h4 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h4><p>MySQL数据库的字符集以及校对规则和数据表的关系：</p><p>表默认使用数据库的字符集和校对规则，也可以选择其它的（可以和数据库的不一样），不过建议弄成一样的</p><h3 id="修改过程"><a href="#修改过程" class="headerlink" title="修改过程"></a>修改过程</h3><h4 id="先备份数据库"><a href="#先备份数据库" class="headerlink" title="先备份数据库"></a>先备份数据库</h4><p><font color="#dd0000">在进行任何修改之前，请确保对数据库进行备份，以防止意外数据丢失</font></p><h4 id="选中要操作的数据库"><a href="#选中要操作的数据库" class="headerlink" title="选中要操作的数据库"></a>选中要操作的数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE 你的数据库名称;</span><br></pre></td></tr></table></figure><h4 id="查看字符集和校对规则"><a href="#查看字符集和校对规则" class="headerlink" title="查看字符集和校对规则"></a>查看字符集和校对规则</h4><p>修改之前先看一下当前数据库是什么字符集和校对规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查看字符集</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;character_set_database&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#查看校对规则</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;collation_database&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="开始修改数据库"><a href="#开始修改数据库" class="headerlink" title="开始修改数据库"></a>开始修改数据库</h4><p>要将数据库字符集修改为 utf8mb4，并使用 utf8mb4_unicode_ci 校对规则，可以执行以下命令，然后再使用上面命令看修改后的字符集和校对规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE 你的数据库名称 <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><h4 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h4><p>修改数据库的字符集和校对规则后，数据表的字符集和校对规则不会随之变化，我们可以使用下面命令修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 你的数据表名称 <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><h4 id="重启MySQL服务"><a href="#重启MySQL服务" class="headerlink" title="重启MySQL服务"></a>重启MySQL服务</h4><p>一般不需要修改，我修改数据库的字符集和校对规则后不重启也生效了，如果不生效的话可以尝试重启MySQL服务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h3&gt;&lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;我一般</summary>
      
    
    
    
    <category term="数据库" scheme="https://blog.zoutl.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://blog.zoutl.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序wx.previewImage退出预览图片后自动触发onShow()的解决办法</title>
    <link href="https://blog.zoutl.cn/575.html"/>
    <id>https://blog.zoutl.cn/575.html</id>
    <published>2023-04-11T16:41:45.000Z</published>
    <updated>2023-04-11T16:58:30.313Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>微信小程序使用wx.previewImage预览图片时，退出后会自动触发onShow()方法，但是我不需要触发onShow()方法</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>首先在页面初始数据中添加一个<code>refresh</code>字段，用于控制是否执行onShow()方法</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">refresh: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>在预览图片JavaScript代码中将<code>refresh</code>设置为true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">seeImage</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">wx.previewImage(&#123;</span><br><span class="line"><span class="attr">current</span>: e.target.dataset.imageurl, <span class="comment">// 当前显示图片的http链接</span></span><br><span class="line"><span class="attr">urls</span>: [e.target.dataset.imageurl] <span class="comment">// 需要预览的图片http链接列表</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">this</span>.data.refresh = <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在onShow方法加入下面代码，当<code>refresh</code>为true时onShow()方法不往下执行，同时设置为false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>.data.refresh) &#123;</span><br><span class="line"><span class="built_in">this</span>.data.refresh = <span class="literal">false</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;微信小程序使用wx.previewImage预览图片时，退出后会自动触发onShow()方法，但是我不需要触发onShow(</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>MySQL命令行常用命令</title>
    <link href="https://blog.zoutl.cn/574.html"/>
    <id>https://blog.zoutl.cn/574.html</id>
    <published>2023-02-23T08:31:03.000Z</published>
    <updated>2023-02-25T13:52:53.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本博客的默认数据库名称是<code>db_student</code>，默认表是<code>t_student</code>    </p><p>MySQL命令行必须以<code>;</code>或<code>\g</code>结束，不然按回车键是换行</p><h3 id="进入MySQL命令行"><a href="#进入MySQL命令行" class="headerlink" title="进入MySQL命令行"></a>进入MySQL命令行</h3><p>执行下面命令前需要先打开cmd进入MySQL安装目录的bin文件夹，再执行下面命令即可进入MySQL命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h localhost -P 3306 -u root -p</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>-h</code></td><td align="center">后面接IP地址（有空格），如果是本地可省略</td></tr><tr><td align="center"><code>-P</code></td><td align="center">后面接端口后（有空格），如果是3306可省略</td></tr><tr><td align="center"><code>-u</code></td><td align="center">后面接用户名（有空格）</td></tr><tr><td align="center"><code>-p</code></td><td align="center">后面可以接密码（无空格），但是这是不安全的，不建议在命令上输入密码</td></tr></tbody></table><p>如果不想进入bin文件夹，打开cmd直接可以使用mysql等命令，我们需要去配置系统变量Path，把bin文件夹的路径添加进去，我的路径是<code>D:\Java\mysql_5.6.24_winx64\mysql-5.6.24-winx64\bin</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230224201715126.png" alt="image-20230224201715126"></p><h3 id="命令行命令"><a href="#命令行命令" class="headerlink" title="命令行命令"></a>命令行命令</h3><h4 id="退出命令行"><a href="#退出命令行" class="headerlink" title="退出命令行"></a>退出命令行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><h4 id="显示所有数据库"><a href="#显示所有数据库" class="headerlink" title="显示所有数据库"></a>显示所有数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h4 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h4><p>在操作数据库之前必须先使用（切换）对应的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use db_student;</span><br></pre></td></tr></table></figure><h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><h5 id="简单创建"><a href="#简单创建" class="headerlink" title="简单创建"></a>简单创建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database db_student;</span><br></pre></td></tr></table></figure><h5 id="判断数据库是否已经存在"><a href="#判断数据库是否已经存在" class="headerlink" title="判断数据库是否已经存在"></a>判断数据库是否已经存在</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> db_student;</span><br></pre></td></tr></table></figure><h5 id="指定字符集和校对规则"><a href="#指定字符集和校对规则" class="headerlink" title="指定字符集和校对规则"></a>指定字符集和校对规则</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database db_student <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">default</span> <span class="keyword">collate</span> utf8_general_ci;</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database db_student;</span><br></pre></td></tr></table></figure><h4 id="显示创建数据库的语句"><a href="#显示创建数据库的语句" class="headerlink" title="显示创建数据库的语句"></a>显示创建数据库的语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database db_student;</span><br></pre></td></tr></table></figure><h4 id="显示所有表"><a href="#显示所有表" class="headerlink" title="显示所有表"></a>显示所有表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><p>如果不指定字符集和校对规则的话，会默认使用数据库的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_student(</span><br><span class="line">id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年龄&#x27;</span></span><br><span class="line">)<span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t_student;</span><br></pre></td></tr></table></figure><h4 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> t_student;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> columns <span class="keyword">from</span> t_student;</span><br></pre></td></tr></table></figure><h4 id="显示创建表语句"><a href="#显示创建表语句" class="headerlink" title="显示创建表语句"></a>显示创建表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_student;</span><br></pre></td></tr></table></figure><h4 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student rename student;</span><br></pre></td></tr></table></figure><h4 id="添加表字段"><a href="#添加表字段" class="headerlink" title="添加表字段"></a>添加表字段</h4><h5 id="在最后一个字段后添加"><a href="#在最后一个字段后添加" class="headerlink" title="在最后一个字段后添加"></a>在最后一个字段后添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> nickName <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h5 id="在第一个字段前添加"><a href="#在第一个字段前添加" class="headerlink" title="在第一个字段前添加"></a>在第一个字段前添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> nickName <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">first</span>;</span><br></pre></td></tr></table></figure><h5 id="在某个字段后添加"><a href="#在某个字段后添加" class="headerlink" title="在某个字段后添加"></a>在某个字段后添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> nickName <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> after name;</span><br></pre></td></tr></table></figure><h4 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a>修改字段</h4><p>name是原字段名，name2是要修改的字段名（即使不修改也要写出来），数据类型、长度以及是否可以为空也要写出来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student change name name2 <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h4 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">drop</span> nickName;</span><br></pre></td></tr></table></figure><h4 id="给字段添加外键"><a href="#给字段添加外键" class="headerlink" title="给字段添加外键"></a>给字段添加外键</h4><p>下面语句创建的外键名是<code>fk_student_class</code>，外键字段是t_student表的classId，对应的主键字段是t_class表的id，如果要查看一张表有什么外键可以通过显示创建表语句来查看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id);</span><br></pre></td></tr></table></figure><p>设置级联删除，添加外键时在最后面加上<code>on delete cascade</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id) <span class="keyword">on</span> <span class="keyword">delete</span> cascade;</span><br></pre></td></tr></table></figure><p>设置级联更新，添加外键时在最后面加上<code>on update cascade</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id) <span class="keyword">on</span> update cascade;</span><br></pre></td></tr></table></figure><p>同时设置级联删除和级联更新，添加外键时在最后面加上<code>on delete cascade on update cascade</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id) <span class="keyword">on</span> <span class="keyword">delete</span> cascade <span class="keyword">on</span> update cascade;</span><br></pre></td></tr></table></figure><h4 id="删除外键"><a href="#删除外键" class="headerlink" title="删除外键"></a>删除外键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_student_class;</span><br></pre></td></tr></table></figure><p>虽然执行上面语句删除了外键关联，但是这个键fk_student_class还是存在的，可以执行下面语句来删除（需要先执行上面语句才可以执行下面语句），<font color="#dd0000">如果只是要修改外键的话可以不删除这个键</font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">drop</span> key fk_student_class;</span><br></pre></td></tr></table></figure><h4 id="修改外键"><a href="#修改外键" class="headerlink" title="修改外键"></a>修改外键</h4><p>要修改一个外键，可以先删除，再重新添加</p><h4 id="对数据进行增删改查"><a href="#对数据进行增删改查" class="headerlink" title="对数据进行增删改查"></a>对数据进行增删改查</h4><h5 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student(name,age)<span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">18</span>);</span><br></pre></td></tr></table></figure><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_student <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update t_student <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;张三2&#x27;</span>,age<span class="operator">=</span><span class="number">22</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h5 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h5><p>查询全部</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br></pre></td></tr></table></figure><p>分页查询，查出第1条数据之后的2条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student limit <span class="number">1</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="查看SQL语句执行时间"><a href="#查看SQL语句执行时间" class="headerlink" title="查看SQL语句执行时间"></a>查看SQL语句执行时间</h4><p>首先查看profile是否开启，一关闭MySQL的命令行就会关闭profile</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;profiling&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果上面的结果是<code>OFF</code>，那么我们要将其设置为<code>ON</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> profiling<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>然后我们可以执行一条命令，然后通过下面命令查看执行时间，Duration的单位是秒</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> profiles;</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230224230749690.png" alt="image-20230224230749690"></p><p>我们还可以通过下面命令根据上面的Query_ID查看详细信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> profile <span class="keyword">for</span> query <span class="number">6</span>;</span><br></pre></td></tr></table></figure><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230224231149146.png" alt="image-20230224231149146" style="zoom: 80%;" /><h3 id="备份和还原数据库"><a href="#备份和还原数据库" class="headerlink" title="备份和还原数据库"></a>备份和还原数据库</h3><p>备份指定数据库命令如下，是cmd命令而不是MySQL命令行命令，<code>db_student</code>是要备份的数据库名称，<code>db_student.sql</code>是生成的备份文件，下面命令是在bin文件夹里面生成备份文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p db_student &gt; db_student.sql</span><br></pre></td></tr></table></figure><p>还原指定数据库的命令如下，是cmd命令而不是MySQL命令行命令，需要先创建一个名为<code>db_student</code>的数据库，不然会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p db_student &lt; db_student.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;本博客的默认数据库名称是&lt;code&gt;db_student&lt;/code&gt;，默认表是&lt;code&gt;t_student&lt;/code&gt;    &lt;/p&gt;</summary>
      
    
    
    
    <category term="数据库" scheme="https://blog.zoutl.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://blog.zoutl.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>使用Apifox Helper插件自动生成接口文档</title>
    <link href="https://blog.zoutl.cn/573.html"/>
    <id>https://blog.zoutl.cn/573.html</id>
    <published>2023-02-19T01:43:41.000Z</published>
    <updated>2023-02-19T04:07:07.324Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Apifox Helper是Apifox官方开发的一个IntelliJ IDEA插件，可以根据Controller层的接口方法快速在Apifox中自动生成接口文档，以进行接口测试</p><p>Apifox的官网地址：<a href="https://www.apifox.cn/">Apifox - API 文档、调试、Mock、测试一体化协作平台</a></p><p>使用文档：<a href="https://www.apifox.cn/help/">帮助中心 | Apifox 使用文档</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="生成API访问令牌"><a href="#生成API访问令牌" class="headerlink" title="生成API访问令牌"></a>生成API访问令牌</h4><p>根据下图生成一个访问令牌，该令牌只有在创建时才能看到，所以要保管好，不然忘记了就只能再重新新建一个</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219110842615.png" alt="image-20230219110842615"></p><h4 id="获取项目ID"><a href="#获取项目ID" class="headerlink" title="获取项目ID"></a>获取项目ID</h4><p>打开新建的项目，根据下图获取项目的ID</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219111344880.png" alt="image-20230219111344880"></p><h4 id="配置Apifox-Helper"><a href="#配置Apifox-Helper" class="headerlink" title="配置Apifox Helper"></a>配置Apifox Helper</h4><p>打开IntelliJ IDEA的设置后，根据下图配置Apifox Helper，模块项目ID配置可以有多个</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219111904041.png" alt="image-20230219111904041"></p><h4 id="生成接口文档"><a href="#生成接口文档" class="headerlink" title="生成接口文档"></a>生成接口文档</h4><ol><li><p>生成一个类的某个方法的文档</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219115851243.png" alt="image-20230219115851243"></p></li><li><p>生成一个类的全部方法的文档</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219115931777.png" alt="image-20230219115931777"></p></li><li><p>生成多个类的全部方法的文档</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219115955359.png" alt="image-20230219115955359"></p></li></ol><h4 id="配置Apifox请求的前置URL"><a href="#配置Apifox请求的前置URL" class="headerlink" title="配置Apifox请求的前置URL"></a>配置Apifox请求的前置URL</h4><p>打开项目后，根据下图配置请求的前置URL，这样每次请求都会自动加上了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219120607584.png" alt="image-20230219120607584"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Apifox Helper是Apifox官方开发的一个IntelliJ IDEA插件，可以根据Controller层的接口方法快速在Apif</summary>
      
    
    
    
    <category term="开发工具" scheme="https://blog.zoutl.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
    <category term="Apifox" scheme="https://blog.zoutl.cn/tags/Apifox/"/>
    
  </entry>
  
  <entry>
    <title>使用npkill查找和清理node_modules包</title>
    <link href="https://blog.zoutl.cn/572.html"/>
    <id>https://blog.zoutl.cn/572.html</id>
    <published>2023-02-16T04:26:56.000Z</published>
    <updated>2023-02-16T05:53:49.993Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>进行前端开发时，电脑上会有很多node_modules包，会占用很多磁盘空间，我们可以把一些暂时不会打开的项目的node_modules包删除掉，等到要运行项目的时候再安装回来，如果我们一个个手动删除的话，会很麻烦</p><p><code>npkill</code>可以很好的解决上述问题，不仅可以快速找到某个文件夹下的全部node_modules包，还可以根据路径、大小和上次修改时间进行排序，管理起来更加方便</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>打开cmd然后执行下面命令即可完成安装，不安装也可以使用<code>npkill</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g npkill</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>cmd进入一个文件夹后，执行下面命令即可搜索该文件夹下的全部node_modules包，方向键的上下可以选择node_modules包，用空格键删除，<font color="#dd0000">直接删除不会有确认提示</font></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230216132204625.png" alt="image-20230216132204625"></p><h4 id="不安装使用"><a href="#不安装使用" class="headerlink" title="不安装使用"></a>不安装使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx npkill</span><br></pre></td></tr></table></figure><h4 id="安装后使用"><a href="#安装后使用" class="headerlink" title="安装后使用"></a>安装后使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npkill</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>一般只用到<code>-s</code>参数根据<code>size</code>进行排序</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th><th align="center">默认</th></tr></thead><tbody><tr><td align="center">-c, --bg-color</td><td align="center">更改行突出显示颜色，可用颜色有: blue,cyan,magenta,white,red ,yellow</td><td align="center">blue</td></tr><tr><td align="center">-d, --directory</td><td align="center">设置要开始搜索的目录</td><td align="center">.</td></tr><tr><td align="center">-D, --delete-all</td><td align="center">目前禁用，自动删除所有node _ module文件夹</td><td align="center">--</td></tr><tr><td align="center">-e, --show-errors</td><td align="center">显示错误消息(如果有的话)</td><td align="center">false</td></tr><tr><td align="center">-E, --exclude</td><td align="center">从搜索中排除目录(目录名列表必须在双引号“”中，每个目录之间用’,’分隔)示例: “ ignore1，ignore2”</td><td align="center">--</td></tr><tr><td align="center">-f, --full</td><td align="center">从用户的主页开始搜索(例如: Linux 中的“/home/user”)</td><td align="center">false</td></tr><tr><td align="center">-gb</td><td align="center">以千兆字节而不是兆字节显示文件夹大小</td><td align="center">false</td></tr><tr><td align="center">-h, --help, ?</td><td align="center">显示帮助</td><td align="center">false</td></tr><tr><td align="center">-nu, --no-check-update</td><td align="center">启动时不要检查更新</td><td align="center">false</td></tr><tr><td align="center">-s, --sort</td><td align="center">根据 <code>size</code>、 <code>path</code> 或 <code>last-mod</code>排序，一般使用<code>size</code></td><td align="center">none</td></tr><tr><td align="center">-t, --target</td><td align="center">指定要搜索的目录的名称</td><td align="center">node_modules</td></tr><tr><td align="center">-x, --exclude-hidden-directories</td><td align="center">从搜索中排除隐藏目录(“点”目录)</td><td align="center">false</td></tr><tr><td align="center">-v, --version</td><td align="center">显示npkill版本</td><td align="center">false</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;进行前端开发时，电脑上会有很多node_modules包，会占用很多磁盘空间，我们可以把一些暂时不会打开的项目的node_modules包删</summary>
      
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="npkill" scheme="https://blog.zoutl.cn/tags/npkill/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA使用MyBatisX插件生成基础代码</title>
    <link href="https://blog.zoutl.cn/571.html"/>
    <id>https://blog.zoutl.cn/571.html</id>
    <published>2023-02-10T11:31:03.000Z</published>
    <updated>2023-02-10T15:03:06.326Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>使用MyBatis-Plus开发时，一般开发的顺序都是：新建数据库表、实体类、Mapper接口、Mapper.xml文件、Service接口、Service接口实现类，然后才进行相应业务的开发工作</p><p>上面的操作都是重复性的，如果已经熟悉了MyBatis-Plus的基本使用，经常做这些重复性的工作对我们没有什么好处，如果这些操作可以自动完成，就可以提高工作效率了</p><p>MyBatis-Plus官方出了一个名叫<code>MyBatisX</code>的插件，可以有效解决上述问题，我们只需要自己手动在数据库中新建一张表，然后就可以使用插件自动生成实体类、Mapper接口、Mapper.xml文件、Service接口、Service接口实现类的基础模板了</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>直接到IntelliJ IDEA的插件市场安装即可</p><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><p>需要在IntelliJ IDEA中配置数据源，具体操作步骤查看博客：<a href="https://blog.zoutl.cn/29.html">IntelliJ IDEA 连接 MySQL 数据库 | LeDao’s Blog (zoutl.cn)</a></p><h4 id="开始生成"><a href="#开始生成" class="headerlink" title="开始生成"></a>开始生成</h4><p>右键点击对应的数据库表，然后选择<code>MybatisX-Generator</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210195600505.png" alt="image-20230210195600505"></p><p>然后配置生成代码的存放位置，图片下的表格是参数的说明，一般像下图一样配置就行了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210195831572.png" alt="image-20230210195831572"></p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">module path</td><td align="center">模块路径，此处填写项目所在路径，生成的代码会在相应位置</td></tr><tr><td align="center">base package</td><td align="center">填写项目的包</td></tr><tr><td align="center">base path</td><td align="center">代码所在路径</td></tr><tr><td align="center">relative package</td><td align="center">决定实体类会被生成在哪里，默认生成在domain包中，可以修改为其他包但不要为空</td></tr><tr><td align="center">extra class suffix</td><td align="center">生成的实体类后面会加上里面的内容。举例：图中如果这里写入Test，最后生成实体类会叫FilesTest</td></tr><tr><td align="center">encoding</td><td align="center">编码，使用UTF-8即可</td></tr><tr><td align="center">ignore field prefix</td><td align="center">忽略字段前缀</td></tr><tr><td align="center">ignore field suffix</td><td align="center">忽略字段后缀</td></tr><tr><td align="center">class name strategy</td><td align="center">实体类名策略，camel是驼峰命名，same as tablename是实体类名称和表名一样</td></tr><tr><td align="center">superClass</td><td align="center">生成实体类继承的父类</td></tr><tr><td align="center">ignore table prefix</td><td align="center">忽略表名前缀</td></tr><tr><td align="center">ignore table suffix</td><td align="center">忽略表名后缀</td></tr></tbody></table><p>最后配置生成代码的格式，图片下的表格是参数的说明，一般像下图一样配置就行了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210200137977.png" alt="image-20230210200137977"></p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">annotation</td><td align="center">给实体类添加的注解类型</td></tr><tr><td align="center">options.Comment</td><td align="center">给实体类属性名加上注释，和表字段的注释一样</td></tr><tr><td align="center">options.toString/hashCode/equals</td><td align="center">生成相应的方法，使用了Lombok的话可以不勾选</td></tr><tr><td align="center">options.Lombok</td><td align="center">会给实体类加上<code>@Data</code>注解</td></tr><tr><td align="center">options.Actual Column</td><td align="center">生成的实体类属性名和数据库表字段名一样</td></tr><tr><td align="center">options.Actual Column Annotation</td><td align="center">对所有属性名都加上注解标明对应字段</td></tr><tr><td align="center">options.JSR310:Data API</td><td align="center">使用新标准的时间日期API，新标准时间的类型是LocalDateTime，否则是Date</td></tr><tr><td align="center">options.Model</td><td align="center">生成实体类</td></tr><tr><td align="center">template</td><td align="center">模板类型</td></tr></tbody></table><h4 id="修改生成的模板代码"><a href="#修改生成的模板代码" class="headerlink" title="修改生成的模板代码"></a>修改生成的模板代码</h4><p>在<code>Project</code>栏找到对应的模板然后修改即可</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210223906706.png" alt="image-20230210223906706" style="zoom: 67%;" /><p>如果想恢复成默认的模板，就右键点击<code>MyBatisX</code>文件夹，然后选择<code>Restore Default Extensions</code>，前面的操作是重置全部模板，如果只重置某一个模板就右键点击对应的模板文件夹即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210224123733.png" alt="image-20230210224123733"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>该插件的其它操作可以查看博客：<a href="https://www.lilinchao.com/archives/2718.html">09.MyBatisX插件介绍 - 李林超博客 ~ 个人博客 (lilinchao.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;使用MyBatis-Plus开发时，一般开发的顺序都是：新建数据库表、实体类、Mapper接口、Mapper.xml文件、Service接口</summary>
      
    
    
    
    <category term="开发工具" scheme="https://blog.zoutl.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
    <category term="MyBatisX" scheme="https://blog.zoutl.cn/tags/MyBatisX/"/>
    
  </entry>
  
  <entry>
    <title>Vim常用命令或快捷键</title>
    <link href="https://blog.zoutl.cn/570.html"/>
    <id>https://blog.zoutl.cn/570.html</id>
    <published>2023-02-05T01:24:45.000Z</published>
    <updated>2023-02-15T05:43:32.891Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Vim是Vi的升级版本，可以当作Vi来使用，完全替代Vi，也就是说：不要使用Vi了，而是使用它的升级版本Vim</p><p>下面只列举了一些我常用的命令或快捷键，并不是列举全部，其它没有列出的命令或快捷键如果用到了就在下方放出</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>我把Vim命令的类型分为<code>命令模式</code>、<code>输入模式</code>和<code>底线命令模式</code>，<code>vim 文件名</code>打开文件后就是命令模式，在命令模式下按下<code>i</code>键就切换到了输入模式，在命令模式下输入<code>:</code>就切换到了底线命令模式</p><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><p><code>vim 文件名</code>打开文件后就是命令模式</p><table><thead><tr><th align="center">命令或快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>:</code></td><td align="center">切换到底线命令模式</td></tr><tr><td align="center"><code>i</code></td><td align="center">切换到输入模式</td></tr><tr><td align="center"><code>x</code></td><td align="center">删除当前光标所在处的字符</td></tr><tr><td align="center"><code>dd</code></td><td align="center">删除光标所在行</td></tr><tr><td align="center"><code>/关键词</code></td><td align="center">向下搜索关键词，按<code>n</code>查找下一个搜索结果，按<code>N</code>则查找上一个</td></tr><tr><td align="center"><code>?关键词</code></td><td align="center">向上搜索关键词，按<code>n</code>查找上一个搜索结果，按<code>N</code>则查找下一个，和上面相反</td></tr><tr><td align="center"><code>v</code></td><td align="center">切换到<code>可视化模式</code>，一般用于删除一段文本</td></tr><tr><td align="center"><code>r</code></td><td align="center">切换到<code>单字符替换模式</code>，用于替换一个字符</td></tr><tr><td align="center"><code>R</code></td><td align="center">切换到<code>多字符替换模式</code>，用于替换多个字符</td></tr></tbody></table><h4 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h4><p>在命令模式下，按下<code>i</code>键就切换到了输入模式，输入模式没有什么好说的，就和平时在Windows系统中编辑文本一样</p><table><thead><tr><th align="center">命令或快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>ESC</code></td><td align="center">切换到命令模式</td></tr><tr><td align="center"><code>CTRL+INSERT</code></td><td align="center">复制文本</td></tr><tr><td align="center"><code>SHIFT+INSERT</code></td><td align="center">粘贴文本，可以选择文本后直接粘贴不用复制</td></tr></tbody></table><h4 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h4><p>在命令模式下输入<code>:</code>就切换到了底线命令模式</p><table><thead><tr><th align="center">命令或快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>ESC</code></td><td align="center">切换到命令模式</td></tr><tr><td align="center"><code>q</code></td><td align="center">没有修改文件内容退出Vim回到系统中</td></tr><tr><td align="center"><code>w</code></td><td align="center">保存，修改了内容必须保存不然无法退出</td></tr><tr><td align="center"><code>wq</code></td><td align="center">保存后退出</td></tr><tr><td align="center"><code>q!</code></td><td align="center">不保存修改的内容直接退出</td></tr><tr><td align="center"><code>noh</code></td><td align="center">去除命令模式搜索关键词时高亮的效果</td></tr><tr><td align="center"><code>set nu</code></td><td align="center">显示行号，只在本次编辑有效，下次再打开就没了</td></tr><tr><td align="center"><code>set nonu</code></td><td align="center">不显示行号</td></tr><tr><td align="center"><code>数字</code></td><td align="center">跳转到指定行</td></tr></tbody></table><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>如果编辑的文件内容改动了（添加一个字符再删除也是改动了），没有使用<code>:q</code>退出Vim而是关闭SSH连接或其它强制退出Vim的操作，那么再次打开这个文件就会提示：<font color="#dd0000">Found a swap file by the name</font>，无法正常编辑这个文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230205115000670.png" alt="image-20230205115000670"></p><p>我们先按下<code>q</code>键退出，然后找到提示的文件并删除（和要编辑的文件在同一个目录下），不过<font color="#dd0000">上次的改动无效</font>了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230205115248806.png" alt="image-20230205115248806"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Vim是Vi的升级版本，可以当作Vi来使用，完全替代Vi，也就是说：不要使用Vi了，而是使用它的升级版本Vim&lt;/p&gt;
&lt;p&gt;下面只列举了一</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.zoutl.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Vim" scheme="https://blog.zoutl.cn/tags/Vim/"/>
    
  </entry>
  
</feed>
