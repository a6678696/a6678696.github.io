<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeDao&#39;s Blog</title>
  
  
  <link href="https://blog.zoutl.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zoutl.cn/"/>
  <updated>2023-11-13T19:30:27.793Z</updated>
  <id>https://blog.zoutl.cn/</id>
  
  <author>
    <name>LeDao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序实现跳转到其他页面</title>
    <link href="https://blog.zoutl.cn/578.html"/>
    <id>https://blog.zoutl.cn/578.html</id>
    <published>2023-11-13T19:20:07.000Z</published>
    <updated>2023-11-13T19:30:27.793Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>微信小程序实现跳转到其他页面可以使用<code>wx.navigateTo</code>方法，该方法保留当前页面的导航方式，用户可以通过左上角的返回按钮返回到原页面，跳转时还可以传递参数给目标页面</p><p>如果想要关闭当前页面并跳转到目标页面，可以使用<code>wx.redirectTo</code>方法</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="不传递参数"><a href="#不传递参数" class="headerlink" title="不传递参数"></a>不传递参数</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateTo(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/somePage/somePage&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h4><p>直接在url中拼接要传递的参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wx.navigateTo(&#123;</span><br><span class="line">  <span class="attr">url</span>: <span class="string">&#x27;/pages/somePage/somePage?id=1&amp;name=example&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>在目标页面中，通过<code>onLoad</code>生命周期函数接收这些参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(options.id) <span class="comment">// 输出: 1</span></span><br><span class="line">  <span class="built_in">console</span>.log(options.name) <span class="comment">// 输出: example</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信小程序实现跳转到其他页面可以使用&lt;code&gt;wx.navigateTo&lt;/code&gt;方法，该方法保留当前页面的导航方式，用户可以通过左上</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Element Plus表格实现多选数据（JS实现）</title>
    <link href="https://blog.zoutl.cn/577.html"/>
    <id>https://blog.zoutl.cn/577.html</id>
    <published>2023-09-12T06:17:58.000Z</published>
    <updated>2023-09-12T17:23:46.792Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加el-table-column标签"><a href="#添加el-table-column标签" class="headerlink" title="添加el-table-column标签"></a>添加el-table-column标签</h3><p>添加后会出现一列单选框可以多选数据</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">type</span>=<span class="string">&quot;selection&quot;</span> <span class="attr">width</span>=<span class="string">&quot;44&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="el-table标签加入-selection-change属性"><a href="#el-table标签加入-selection-change属性" class="headerlink" title="el-table标签加入@selection-change属性"></a>el-table标签加入@selection-change属性</h3><p>勾选单选框时会触发@selection-change属性的selectSome方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">stripe</span> <span class="attr">style</span>=<span class="string">&quot;width: 100%&quot;</span> <span class="attr">:border</span>=<span class="string">&quot;true&quot;</span> <span class="attr">max-height</span>=<span class="string">&quot;530&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">selection-change</span>=<span class="string">&quot;selectSome&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">type</span>=<span class="string">&quot;selection&quot;</span> <span class="attr">width</span>=<span class="string">&quot;44&quot;</span> /&gt;</span></span><br><span class="line">    ......</span><br><span class="line"><span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h3><p>selectSome方法的参数value的值就是选中数据的对象集合</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> deleteIdArray = ref([])</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> selectSome = <span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    deleteIdArray.value = []</span><br><span class="line">    <span class="keyword">if</span> (value.length !== <span class="number">0</span>) &#123;</span><br><span class="line">        ElMessage.success(<span class="string">&#x27;当前选中 &#x27;</span> + value.length + <span class="string">&#x27; 条数据&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; value.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> id = value[i].id;</span><br><span class="line">        deleteIdArray.value.push(id)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> deleteSome = <span class="keyword">async</span> () =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (deleteIdArray.value.length === <span class="number">0</span>) &#123;</span><br><span class="line">        ElMessage.error(<span class="string">&#x27;请至少选择 1 条要删除的数据&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">const</span> deleteIdStr = deleteIdArray.value.join(<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    <span class="keyword">let</span> params = <span class="keyword">new</span> URLSearchParams()</span><br><span class="line">    params.append(<span class="string">&quot;deleteIdStr&quot;</span>, deleteIdStr)</span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">&#x27;/admin/errorSubmit/deleteSome&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> res = <span class="keyword">await</span> axiosUtil.post(url, params)</span><br><span class="line">    <span class="keyword">if</span> (res.data.code === <span class="number">0</span>) &#123;</span><br><span class="line">        ElMessage.success(res.data.msg)</span><br><span class="line">        <span class="keyword">await</span> loadData()</span><br><span class="line">        deleteIdArray.value = []</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;添加el-table-column标签&quot;&gt;&lt;a href=&quot;#添加el-table-column标签&quot; class=&quot;headerlink&quot; title=&quot;添加el-table-column标签&quot;&gt;&lt;/a&gt;添加el-table-column标签&lt;/h3&gt;&lt;p&gt;添加</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="JavaScript" scheme="https://blog.zoutl.cn/tags/JavaScript/"/>
    
    <category term="Element Plus" scheme="https://blog.zoutl.cn/tags/Element-Plus/"/>
    
  </entry>
  
  <entry>
    <title>MySQL修改数据库和数据表的字符集以及校对规则</title>
    <link href="https://blog.zoutl.cn/576.html"/>
    <id>https://blog.zoutl.cn/576.html</id>
    <published>2023-07-21T14:56:20.000Z</published>
    <updated>2023-07-24T17:10:28.099Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概况"><a href="#概况" class="headerlink" title="概况"></a>概况</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>我一般新建数据库时，字符集选用<code>utf-8</code>，校对规则选用<code>utf8_general_ci</code></p><p>然而最近我发现如果存放的数据里面有<code>Emoji表情符号</code>时，会报错无法把数据添加到数据库中</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>我查了一下utf-8字符集不支持存入Emoji表情符号，要存入Emoji表情符号则要使用<code>utf8mb4</code>字符集，然后校对规则使用<code>utf8mb4_unicode_ci</code>，所以一开始创建数据库时推荐使用<code>utf8mb4</code>字符集</p><h4 id="其它说明"><a href="#其它说明" class="headerlink" title="其它说明"></a>其它说明</h4><p>MySQL数据库的字符集以及校对规则和数据表的关系：</p><p>表默认使用数据库的字符集和校对规则，也可以选择其它的（可以和数据库的不一样），不过建议弄成一样的</p><h3 id="修改过程"><a href="#修改过程" class="headerlink" title="修改过程"></a>修改过程</h3><h4 id="先备份数据库"><a href="#先备份数据库" class="headerlink" title="先备份数据库"></a>先备份数据库</h4><p><font color="#dd0000">在进行任何修改之前，请确保对数据库进行备份，以防止意外数据丢失</font></p><h4 id="选中要操作的数据库"><a href="#选中要操作的数据库" class="headerlink" title="选中要操作的数据库"></a>选中要操作的数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USE 你的数据库名称;</span><br></pre></td></tr></table></figure><h4 id="查看字符集和校对规则"><a href="#查看字符集和校对规则" class="headerlink" title="查看字符集和校对规则"></a>查看字符集和校对规则</h4><p>修改之前先看一下当前数据库是什么字符集和校对规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查看字符集</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;character_set_database&#x27;</span>;</span><br><span class="line"></span><br><span class="line">#查看校对规则</span><br><span class="line"><span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;collation_database&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="开始修改数据库"><a href="#开始修改数据库" class="headerlink" title="开始修改数据库"></a>开始修改数据库</h4><p>要将数据库字符集修改为 utf8mb4，并使用 utf8mb4_unicode_ci 校对规则，可以执行以下命令，然后再使用上面命令看修改后的字符集和校对规则</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> DATABASE 你的数据库名称 <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8mb4 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><h4 id="修改数据表"><a href="#修改数据表" class="headerlink" title="修改数据表"></a>修改数据表</h4><p>修改数据库的字符集和校对规则后，数据表的字符集和校对规则不会随之变化，我们可以使用下面命令修改</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 你的数据表名称 <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_unicode_ci;</span><br></pre></td></tr></table></figure><h4 id="重启MySQL服务"><a href="#重启MySQL服务" class="headerlink" title="重启MySQL服务"></a>重启MySQL服务</h4><p>一般不需要修改，我修改数据库的字符集和校对规则后不重启也生效了，如果不生效的话可以尝试重启MySQL服务</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概况&quot;&gt;&lt;a href=&quot;#概况&quot; class=&quot;headerlink&quot; title=&quot;概况&quot;&gt;&lt;/a&gt;概况&lt;/h3&gt;&lt;h4 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h4&gt;&lt;p&gt;我一般</summary>
      
    
    
    
    <category term="数据库" scheme="https://blog.zoutl.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://blog.zoutl.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序wx.previewImage退出预览图片后自动触发onShow()的解决办法</title>
    <link href="https://blog.zoutl.cn/575.html"/>
    <id>https://blog.zoutl.cn/575.html</id>
    <published>2023-04-11T16:41:45.000Z</published>
    <updated>2023-04-11T16:58:30.313Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>微信小程序使用wx.previewImage预览图片时，退出后会自动触发onShow()方法，但是我不需要触发onShow()方法</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>首先在页面初始数据中添加一个<code>refresh</code>字段，用于控制是否执行onShow()方法</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">refresh: <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>在预览图片JavaScript代码中将<code>refresh</code>设置为true</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">seeImage</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">wx.previewImage(&#123;</span><br><span class="line"><span class="attr">current</span>: e.target.dataset.imageurl, <span class="comment">// 当前显示图片的http链接</span></span><br><span class="line"><span class="attr">urls</span>: [e.target.dataset.imageurl] <span class="comment">// 需要预览的图片http链接列表</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">this</span>.data.refresh = <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>在onShow方法加入下面代码，当<code>refresh</code>为true时onShow()方法不往下执行，同时设置为false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>.data.refresh) &#123;</span><br><span class="line"><span class="built_in">this</span>.data.refresh = <span class="literal">false</span></span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;微信小程序使用wx.previewImage预览图片时，退出后会自动触发onShow()方法，但是我不需要触发onShow(</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>MySQL命令行常用命令</title>
    <link href="https://blog.zoutl.cn/574.html"/>
    <id>https://blog.zoutl.cn/574.html</id>
    <published>2023-02-23T08:31:03.000Z</published>
    <updated>2023-02-25T13:52:53.502Z</updated>
    
    <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本博客的默认数据库名称是<code>db_student</code>，默认表是<code>t_student</code>    </p><p>MySQL命令行必须以<code>;</code>或<code>\g</code>结束，不然按回车键是换行</p><h3 id="进入MySQL命令行"><a href="#进入MySQL命令行" class="headerlink" title="进入MySQL命令行"></a>进入MySQL命令行</h3><p>执行下面命令前需要先打开cmd进入MySQL安装目录的bin文件夹，再执行下面命令即可进入MySQL命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h localhost -P 3306 -u root -p</span><br></pre></td></tr></table></figure><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>-h</code></td><td align="center">后面接IP地址（有空格），如果是本地可省略</td></tr><tr><td align="center"><code>-P</code></td><td align="center">后面接端口后（有空格），如果是3306可省略</td></tr><tr><td align="center"><code>-u</code></td><td align="center">后面接用户名（有空格）</td></tr><tr><td align="center"><code>-p</code></td><td align="center">后面可以接密码（无空格），但是这是不安全的，不建议在命令上输入密码</td></tr></tbody></table><p>如果不想进入bin文件夹，打开cmd直接可以使用mysql等命令，我们需要去配置系统变量Path，把bin文件夹的路径添加进去，我的路径是<code>D:\Java\mysql_5.6.24_winx64\mysql-5.6.24-winx64\bin</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230224201715126.png" alt="image-20230224201715126"></p><h3 id="命令行命令"><a href="#命令行命令" class="headerlink" title="命令行命令"></a>命令行命令</h3><h4 id="退出命令行"><a href="#退出命令行" class="headerlink" title="退出命令行"></a>退出命令行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">quit</span><br></pre></td></tr></table></figure><h4 id="显示所有数据库"><a href="#显示所有数据库" class="headerlink" title="显示所有数据库"></a>显示所有数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> databases;</span><br></pre></td></tr></table></figure><h4 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h4><p>在操作数据库之前必须先使用（切换）对应的数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use db_student;</span><br></pre></td></tr></table></figure><h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><h5 id="简单创建"><a href="#简单创建" class="headerlink" title="简单创建"></a>简单创建</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database db_student;</span><br></pre></td></tr></table></figure><h5 id="判断数据库是否已经存在"><a href="#判断数据库是否已经存在" class="headerlink" title="判断数据库是否已经存在"></a>判断数据库是否已经存在</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database if <span class="keyword">not</span> <span class="keyword">exists</span> db_student;</span><br></pre></td></tr></table></figure><h5 id="指定字符集和校对规则"><a href="#指定字符集和校对规则" class="headerlink" title="指定字符集和校对规则"></a>指定字符集和校对规则</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database db_student <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">default</span> <span class="keyword">collate</span> utf8_general_ci;</span><br></pre></td></tr></table></figure><h4 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> database db_student;</span><br></pre></td></tr></table></figure><h4 id="显示创建数据库的语句"><a href="#显示创建数据库的语句" class="headerlink" title="显示创建数据库的语句"></a>显示创建数据库的语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> database db_student;</span><br></pre></td></tr></table></figure><h4 id="显示所有表"><a href="#显示所有表" class="headerlink" title="显示所有表"></a>显示所有表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> tables;</span><br></pre></td></tr></table></figure><h4 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h4><p>如果不指定字符集和校对规则的话，会默认使用数据库的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_student(</span><br><span class="line">id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key auto_increment comment <span class="string">&#x27;编号&#x27;</span>,</span><br><span class="line">    name <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">    age <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;年龄&#x27;</span></span><br><span class="line">)<span class="type">character</span> <span class="keyword">set</span> utf8 <span class="keyword">collate</span> utf8_general_ci;</span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> t_student;</span><br></pre></td></tr></table></figure><h4 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> t_student;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> columns <span class="keyword">from</span> t_student;</span><br></pre></td></tr></table></figure><h4 id="显示创建表语句"><a href="#显示创建表语句" class="headerlink" title="显示创建表语句"></a>显示创建表语句</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> t_student;</span><br></pre></td></tr></table></figure><h4 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student rename student;</span><br></pre></td></tr></table></figure><h4 id="添加表字段"><a href="#添加表字段" class="headerlink" title="添加表字段"></a>添加表字段</h4><h5 id="在最后一个字段后添加"><a href="#在最后一个字段后添加" class="headerlink" title="在最后一个字段后添加"></a>在最后一个字段后添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> nickName <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h5 id="在第一个字段前添加"><a href="#在第一个字段前添加" class="headerlink" title="在第一个字段前添加"></a>在第一个字段前添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> nickName <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">first</span>;</span><br></pre></td></tr></table></figure><h5 id="在某个字段后添加"><a href="#在某个字段后添加" class="headerlink" title="在某个字段后添加"></a>在某个字段后添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> nickName <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> after name;</span><br></pre></td></tr></table></figure><h4 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a>修改字段</h4><p>name是原字段名，name2是要修改的字段名（即使不修改也要写出来），数据类型、长度以及是否可以为空也要写出来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student change name name2 <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h4 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a>删除字段</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">drop</span> nickName;</span><br></pre></td></tr></table></figure><h4 id="给字段添加外键"><a href="#给字段添加外键" class="headerlink" title="给字段添加外键"></a>给字段添加外键</h4><p>下面语句创建的外键名是<code>fk_student_class</code>，外键字段是t_student表的classId，对应的主键字段是t_class表的id，如果要查看一张表有什么外键可以通过显示创建表语句来查看</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id);</span><br></pre></td></tr></table></figure><p>设置级联删除，添加外键时在最后面加上<code>on delete cascade</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id) <span class="keyword">on</span> <span class="keyword">delete</span> cascade;</span><br></pre></td></tr></table></figure><p>设置级联更新，添加外键时在最后面加上<code>on update cascade</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id) <span class="keyword">on</span> update cascade;</span><br></pre></td></tr></table></figure><p>同时设置级联删除和级联更新，添加外键时在最后面加上<code>on delete cascade on update cascade</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">add</span> <span class="keyword">constraint</span> fk_student_class <span class="keyword">foreign</span> key(classId) <span class="keyword">references</span> t_class(id) <span class="keyword">on</span> <span class="keyword">delete</span> cascade <span class="keyword">on</span> update cascade;</span><br></pre></td></tr></table></figure><h4 id="删除外键"><a href="#删除外键" class="headerlink" title="删除外键"></a>删除外键</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">drop</span> <span class="keyword">foreign</span> key fk_student_class;</span><br></pre></td></tr></table></figure><p>虽然执行上面语句删除了外键关联，但是这个键fk_student_class还是存在的，可以执行下面语句来删除（需要先执行上面语句才可以执行下面语句），<font color="#dd0000">如果只是要修改外键的话可以不删除这个键</font></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_student <span class="keyword">drop</span> key fk_student_class;</span><br></pre></td></tr></table></figure><h4 id="修改外键"><a href="#修改外键" class="headerlink" title="修改外键"></a>修改外键</h4><p>要修改一个外键，可以先删除，再重新添加</p><h4 id="对数据进行增删改查"><a href="#对数据进行增删改查" class="headerlink" title="对数据进行增删改查"></a>对数据进行增删改查</h4><h5 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_student(name,age)<span class="keyword">values</span>(<span class="string">&#x27;张三&#x27;</span>,<span class="number">18</span>);</span><br></pre></td></tr></table></figure><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_student <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update t_student <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;张三2&#x27;</span>,age<span class="operator">=</span><span class="number">22</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure><h5 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h5><p>查询全部</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student;</span><br></pre></td></tr></table></figure><p>分页查询，查出第1条数据之后的2条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_student limit <span class="number">1</span>,<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h4 id="查看SQL语句执行时间"><a href="#查看SQL语句执行时间" class="headerlink" title="查看SQL语句执行时间"></a>查看SQL语句执行时间</h4><p>首先查看profile是否开启，一关闭MySQL的命令行就会关闭profile</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;profiling&#x27;</span>;</span><br></pre></td></tr></table></figure><p>如果上面的结果是<code>OFF</code>，那么我们要将其设置为<code>ON</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> profiling<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>然后我们可以执行一条命令，然后通过下面命令查看执行时间，Duration的单位是秒</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> profiles;</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230224230749690.png" alt="image-20230224230749690"></p><p>我们还可以通过下面命令根据上面的Query_ID查看详细信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> profile <span class="keyword">for</span> query <span class="number">6</span>;</span><br></pre></td></tr></table></figure><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230224231149146.png" alt="image-20230224231149146" style="zoom: 80%;" /><h3 id="备份和还原数据库"><a href="#备份和还原数据库" class="headerlink" title="备份和还原数据库"></a>备份和还原数据库</h3><p>备份指定数据库命令如下，是cmd命令而不是MySQL命令行命令，<code>db_student</code>是要备份的数据库名称，<code>db_student.sql</code>是生成的备份文件，下面命令是在bin文件夹里面生成备份文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -u root -p db_student &gt; db_student.sql</span><br></pre></td></tr></table></figure><p>还原指定数据库的命令如下，是cmd命令而不是MySQL命令行命令，需要先创建一个名为<code>db_student</code>的数据库，不然会报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p db_student &lt; db_student.sql</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;说明&quot;&gt;&lt;a href=&quot;#说明&quot; class=&quot;headerlink&quot; title=&quot;说明&quot;&gt;&lt;/a&gt;说明&lt;/h3&gt;&lt;p&gt;本博客的默认数据库名称是&lt;code&gt;db_student&lt;/code&gt;，默认表是&lt;code&gt;t_student&lt;/code&gt;    &lt;/p&gt;</summary>
      
    
    
    
    <category term="数据库" scheme="https://blog.zoutl.cn/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MySQL" scheme="https://blog.zoutl.cn/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>使用Apifox Helper插件自动生成接口文档</title>
    <link href="https://blog.zoutl.cn/573.html"/>
    <id>https://blog.zoutl.cn/573.html</id>
    <published>2023-02-19T01:43:41.000Z</published>
    <updated>2023-02-19T04:07:07.324Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Apifox Helper是Apifox官方开发的一个IntelliJ IDEA插件，可以根据Controller层的接口方法快速在Apifox中自动生成接口文档，以进行接口测试</p><p>Apifox的官网地址：<a href="https://www.apifox.cn/">Apifox - API 文档、调试、Mock、测试一体化协作平台</a></p><p>使用文档：<a href="https://www.apifox.cn/help/">帮助中心 | Apifox 使用文档</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="生成API访问令牌"><a href="#生成API访问令牌" class="headerlink" title="生成API访问令牌"></a>生成API访问令牌</h4><p>根据下图生成一个访问令牌，该令牌只有在创建时才能看到，所以要保管好，不然忘记了就只能再重新新建一个</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219110842615.png" alt="image-20230219110842615"></p><h4 id="获取项目ID"><a href="#获取项目ID" class="headerlink" title="获取项目ID"></a>获取项目ID</h4><p>打开新建的项目，根据下图获取项目的ID</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219111344880.png" alt="image-20230219111344880"></p><h4 id="配置Apifox-Helper"><a href="#配置Apifox-Helper" class="headerlink" title="配置Apifox Helper"></a>配置Apifox Helper</h4><p>打开IntelliJ IDEA的设置后，根据下图配置Apifox Helper，模块项目ID配置可以有多个</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219111904041.png" alt="image-20230219111904041"></p><h4 id="生成接口文档"><a href="#生成接口文档" class="headerlink" title="生成接口文档"></a>生成接口文档</h4><ol><li><p>生成一个类的某个方法的文档</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219115851243.png" alt="image-20230219115851243"></p></li><li><p>生成一个类的全部方法的文档</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219115931777.png" alt="image-20230219115931777"></p></li><li><p>生成多个类的全部方法的文档</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219115955359.png" alt="image-20230219115955359"></p></li></ol><h4 id="配置Apifox请求的前置URL"><a href="#配置Apifox请求的前置URL" class="headerlink" title="配置Apifox请求的前置URL"></a>配置Apifox请求的前置URL</h4><p>打开项目后，根据下图配置请求的前置URL，这样每次请求都会自动加上了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230219120607584.png" alt="image-20230219120607584"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Apifox Helper是Apifox官方开发的一个IntelliJ IDEA插件，可以根据Controller层的接口方法快速在Apif</summary>
      
    
    
    
    <category term="开发工具" scheme="https://blog.zoutl.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
    <category term="Apifox" scheme="https://blog.zoutl.cn/tags/Apifox/"/>
    
  </entry>
  
  <entry>
    <title>使用npkill查找和清理node_modules包</title>
    <link href="https://blog.zoutl.cn/572.html"/>
    <id>https://blog.zoutl.cn/572.html</id>
    <published>2023-02-16T04:26:56.000Z</published>
    <updated>2023-02-16T05:53:49.993Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>进行前端开发时，电脑上会有很多node_modules包，会占用很多磁盘空间，我们可以把一些暂时不会打开的项目的node_modules包删除掉，等到要运行项目的时候再安装回来，如果我们一个个手动删除的话，会很麻烦</p><p><code>npkill</code>可以很好的解决上述问题，不仅可以快速找到某个文件夹下的全部node_modules包，还可以根据路径、大小和上次修改时间进行排序，管理起来更加方便</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>打开cmd然后执行下面命令即可完成安装，不安装也可以使用<code>npkill</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g npkill</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>cmd进入一个文件夹后，执行下面命令即可搜索该文件夹下的全部node_modules包，方向键的上下可以选择node_modules包，用空格键删除，<font color="#dd0000">直接删除不会有确认提示</font></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230216132204625.png" alt="image-20230216132204625"></p><h4 id="不安装使用"><a href="#不安装使用" class="headerlink" title="不安装使用"></a>不安装使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx npkill</span><br></pre></td></tr></table></figure><h4 id="安装后使用"><a href="#安装后使用" class="headerlink" title="安装后使用"></a>安装后使用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npkill</span><br></pre></td></tr></table></figure><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><p>一般只用到<code>-s</code>参数根据<code>size</code>进行排序</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th><th align="center">默认</th></tr></thead><tbody><tr><td align="center">-c, --bg-color</td><td align="center">更改行突出显示颜色，可用颜色有: blue,cyan,magenta,white,red ,yellow</td><td align="center">blue</td></tr><tr><td align="center">-d, --directory</td><td align="center">设置要开始搜索的目录</td><td align="center">.</td></tr><tr><td align="center">-D, --delete-all</td><td align="center">目前禁用，自动删除所有node _ module文件夹</td><td align="center">--</td></tr><tr><td align="center">-e, --show-errors</td><td align="center">显示错误消息(如果有的话)</td><td align="center">false</td></tr><tr><td align="center">-E, --exclude</td><td align="center">从搜索中排除目录(目录名列表必须在双引号“”中，每个目录之间用’,’分隔)示例: “ ignore1，ignore2”</td><td align="center">--</td></tr><tr><td align="center">-f, --full</td><td align="center">从用户的主页开始搜索(例如: Linux 中的“/home/user”)</td><td align="center">false</td></tr><tr><td align="center">-gb</td><td align="center">以千兆字节而不是兆字节显示文件夹大小</td><td align="center">false</td></tr><tr><td align="center">-h, --help, ?</td><td align="center">显示帮助</td><td align="center">false</td></tr><tr><td align="center">-nu, --no-check-update</td><td align="center">启动时不要检查更新</td><td align="center">false</td></tr><tr><td align="center">-s, --sort</td><td align="center">根据 <code>size</code>、 <code>path</code> 或 <code>last-mod</code>排序，一般使用<code>size</code></td><td align="center">none</td></tr><tr><td align="center">-t, --target</td><td align="center">指定要搜索的目录的名称</td><td align="center">node_modules</td></tr><tr><td align="center">-x, --exclude-hidden-directories</td><td align="center">从搜索中排除隐藏目录(“点”目录)</td><td align="center">false</td></tr><tr><td align="center">-v, --version</td><td align="center">显示npkill版本</td><td align="center">false</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;进行前端开发时，电脑上会有很多node_modules包，会占用很多磁盘空间，我们可以把一些暂时不会打开的项目的node_modules包删</summary>
      
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="npkill" scheme="https://blog.zoutl.cn/tags/npkill/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA使用MyBatisX插件生成基础代码</title>
    <link href="https://blog.zoutl.cn/571.html"/>
    <id>https://blog.zoutl.cn/571.html</id>
    <published>2023-02-10T11:31:03.000Z</published>
    <updated>2023-02-10T15:03:06.326Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>使用MyBatis-Plus开发时，一般开发的顺序都是：新建数据库表、实体类、Mapper接口、Mapper.xml文件、Service接口、Service接口实现类，然后才进行相应业务的开发工作</p><p>上面的操作都是重复性的，如果已经熟悉了MyBatis-Plus的基本使用，经常做这些重复性的工作对我们没有什么好处，如果这些操作可以自动完成，就可以提高工作效率了</p><p>MyBatis-Plus官方出了一个名叫<code>MyBatisX</code>的插件，可以有效解决上述问题，我们只需要自己手动在数据库中新建一张表，然后就可以使用插件自动生成实体类、Mapper接口、Mapper.xml文件、Service接口、Service接口实现类的基础模板了</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>直接到IntelliJ IDEA的插件市场安装即可</p><h4 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h4><p>需要在IntelliJ IDEA中配置数据源，具体操作步骤查看博客：<a href="https://blog.zoutl.cn/29.html">IntelliJ IDEA 连接 MySQL 数据库 | LeDao’s Blog (zoutl.cn)</a></p><h4 id="开始生成"><a href="#开始生成" class="headerlink" title="开始生成"></a>开始生成</h4><p>右键点击对应的数据库表，然后选择<code>MybatisX-Generator</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210195600505.png" alt="image-20230210195600505"></p><p>然后配置生成代码的存放位置，图片下的表格是参数的说明，一般像下图一样配置就行了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210195831572.png" alt="image-20230210195831572"></p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">module path</td><td align="center">模块路径，此处填写项目所在路径，生成的代码会在相应位置</td></tr><tr><td align="center">base package</td><td align="center">填写项目的包</td></tr><tr><td align="center">base path</td><td align="center">代码所在路径</td></tr><tr><td align="center">relative package</td><td align="center">决定实体类会被生成在哪里，默认生成在domain包中，可以修改为其他包但不要为空</td></tr><tr><td align="center">extra class suffix</td><td align="center">生成的实体类后面会加上里面的内容。举例：图中如果这里写入Test，最后生成实体类会叫FilesTest</td></tr><tr><td align="center">encoding</td><td align="center">编码，使用UTF-8即可</td></tr><tr><td align="center">ignore field prefix</td><td align="center">忽略字段前缀</td></tr><tr><td align="center">ignore field suffix</td><td align="center">忽略字段后缀</td></tr><tr><td align="center">class name strategy</td><td align="center">实体类名策略，camel是驼峰命名，same as tablename是实体类名称和表名一样</td></tr><tr><td align="center">superClass</td><td align="center">生成实体类继承的父类</td></tr><tr><td align="center">ignore table prefix</td><td align="center">忽略表名前缀</td></tr><tr><td align="center">ignore table suffix</td><td align="center">忽略表名后缀</td></tr></tbody></table><p>最后配置生成代码的格式，图片下的表格是参数的说明，一般像下图一样配置就行了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210200137977.png" alt="image-20230210200137977"></p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">annotation</td><td align="center">给实体类添加的注解类型</td></tr><tr><td align="center">options.Comment</td><td align="center">给实体类属性名加上注释，和表字段的注释一样</td></tr><tr><td align="center">options.toString/hashCode/equals</td><td align="center">生成相应的方法，使用了Lombok的话可以不勾选</td></tr><tr><td align="center">options.Lombok</td><td align="center">会给实体类加上<code>@Data</code>注解</td></tr><tr><td align="center">options.Actual Column</td><td align="center">生成的实体类属性名和数据库表字段名一样</td></tr><tr><td align="center">options.Actual Column Annotation</td><td align="center">对所有属性名都加上注解标明对应字段</td></tr><tr><td align="center">options.JSR310:Data API</td><td align="center">使用新标准的时间日期API，新标准时间的类型是LocalDateTime，否则是Date</td></tr><tr><td align="center">options.Model</td><td align="center">生成实体类</td></tr><tr><td align="center">template</td><td align="center">模板类型</td></tr></tbody></table><h4 id="修改生成的模板代码"><a href="#修改生成的模板代码" class="headerlink" title="修改生成的模板代码"></a>修改生成的模板代码</h4><p>在<code>Project</code>栏找到对应的模板然后修改即可</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210223906706.png" alt="image-20230210223906706" style="zoom: 67%;" /><p>如果想恢复成默认的模板，就右键点击<code>MyBatisX</code>文件夹，然后选择<code>Restore Default Extensions</code>，前面的操作是重置全部模板，如果只重置某一个模板就右键点击对应的模板文件夹即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230210224123733.png" alt="image-20230210224123733"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>该插件的其它操作可以查看博客：<a href="https://www.lilinchao.com/archives/2718.html">09.MyBatisX插件介绍 - 李林超博客 ~ 个人博客 (lilinchao.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;使用MyBatis-Plus开发时，一般开发的顺序都是：新建数据库表、实体类、Mapper接口、Mapper.xml文件、Service接口</summary>
      
    
    
    
    <category term="开发工具" scheme="https://blog.zoutl.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
    <category term="MyBatisX" scheme="https://blog.zoutl.cn/tags/MyBatisX/"/>
    
  </entry>
  
  <entry>
    <title>Vim常用命令或快捷键</title>
    <link href="https://blog.zoutl.cn/570.html"/>
    <id>https://blog.zoutl.cn/570.html</id>
    <published>2023-02-05T01:24:45.000Z</published>
    <updated>2023-02-15T05:43:32.891Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Vim是Vi的升级版本，可以当作Vi来使用，完全替代Vi，也就是说：不要使用Vi了，而是使用它的升级版本Vim</p><p>下面只列举了一些我常用的命令或快捷键，并不是列举全部，其它没有列出的命令或快捷键如果用到了就在下方放出</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>我把Vim命令的类型分为<code>命令模式</code>、<code>输入模式</code>和<code>底线命令模式</code>，<code>vim 文件名</code>打开文件后就是命令模式，在命令模式下按下<code>i</code>键就切换到了输入模式，在命令模式下输入<code>:</code>就切换到了底线命令模式</p><h4 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h4><p><code>vim 文件名</code>打开文件后就是命令模式</p><table><thead><tr><th align="center">命令或快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>:</code></td><td align="center">切换到底线命令模式</td></tr><tr><td align="center"><code>i</code></td><td align="center">切换到输入模式</td></tr><tr><td align="center"><code>x</code></td><td align="center">删除当前光标所在处的字符</td></tr><tr><td align="center"><code>dd</code></td><td align="center">删除光标所在行</td></tr><tr><td align="center"><code>/关键词</code></td><td align="center">向下搜索关键词，按<code>n</code>查找下一个搜索结果，按<code>N</code>则查找上一个</td></tr><tr><td align="center"><code>?关键词</code></td><td align="center">向上搜索关键词，按<code>n</code>查找上一个搜索结果，按<code>N</code>则查找下一个，和上面相反</td></tr><tr><td align="center"><code>v</code></td><td align="center">切换到<code>可视化模式</code>，一般用于删除一段文本</td></tr><tr><td align="center"><code>r</code></td><td align="center">切换到<code>单字符替换模式</code>，用于替换一个字符</td></tr><tr><td align="center"><code>R</code></td><td align="center">切换到<code>多字符替换模式</code>，用于替换多个字符</td></tr></tbody></table><h4 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h4><p>在命令模式下，按下<code>i</code>键就切换到了输入模式，输入模式没有什么好说的，就和平时在Windows系统中编辑文本一样</p><table><thead><tr><th align="center">命令或快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>ESC</code></td><td align="center">切换到命令模式</td></tr><tr><td align="center"><code>CTRL+INSERT</code></td><td align="center">复制文本</td></tr><tr><td align="center"><code>SHIFT+INSERT</code></td><td align="center">粘贴文本，可以选择文本后直接粘贴不用复制</td></tr></tbody></table><h4 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h4><p>在命令模式下输入<code>:</code>就切换到了底线命令模式</p><table><thead><tr><th align="center">命令或快捷键</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>ESC</code></td><td align="center">切换到命令模式</td></tr><tr><td align="center"><code>q</code></td><td align="center">没有修改文件内容退出Vim回到系统中</td></tr><tr><td align="center"><code>w</code></td><td align="center">保存，修改了内容必须保存不然无法退出</td></tr><tr><td align="center"><code>wq</code></td><td align="center">保存后退出</td></tr><tr><td align="center"><code>q!</code></td><td align="center">不保存修改的内容直接退出</td></tr><tr><td align="center"><code>noh</code></td><td align="center">去除命令模式搜索关键词时高亮的效果</td></tr><tr><td align="center"><code>set nu</code></td><td align="center">显示行号，只在本次编辑有效，下次再打开就没了</td></tr><tr><td align="center"><code>set nonu</code></td><td align="center">不显示行号</td></tr><tr><td align="center"><code>数字</code></td><td align="center">跳转到指定行</td></tr></tbody></table><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>如果编辑的文件内容改动了（添加一个字符再删除也是改动了），没有使用<code>:q</code>退出Vim而是关闭SSH连接或其它强制退出Vim的操作，那么再次打开这个文件就会提示：<font color="#dd0000">Found a swap file by the name</font>，无法正常编辑这个文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230205115000670.png" alt="image-20230205115000670"></p><p>我们先按下<code>q</code>键退出，然后找到提示的文件并删除（和要编辑的文件在同一个目录下），不过<font color="#dd0000">上次的改动无效</font>了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230205115248806.png" alt="image-20230205115248806"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Vim是Vi的升级版本，可以当作Vi来使用，完全替代Vi，也就是说：不要使用Vi了，而是使用它的升级版本Vim&lt;/p&gt;
&lt;p&gt;下面只列举了一</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.zoutl.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Vim" scheme="https://blog.zoutl.cn/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>在CentOS7系统中使用Nginx部署Vue项目</title>
    <link href="https://blog.zoutl.cn/569.html"/>
    <id>https://blog.zoutl.cn/569.html</id>
    <published>2023-02-03T19:49:01.000Z</published>
    <updated>2023-02-05T04:24:09.824Z</updated>
    
    <content type="html"><![CDATA[<h3 id="打包项目"><a href="#打包项目" class="headerlink" title="打包项目"></a>打包项目</h3><p>使用下面命令将Vue项目打包，会生成一个名为<code>dist</code>的文件夹，然后将它上传到CentOS7系统中，也可以重命名这个文件夹以作区分</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><h3 id="修改Nginx配置"><a href="#修改Nginx配置" class="headerlink" title="修改Nginx配置"></a>修改Nginx配置</h3><p>在配置文件中加入下面代码，我的配置文件路径为<code>/etc/nginx/conf.d/default.conf</code>，如果是部署到云服务器需要在安全组或防火墙中开放端口，不然无法访问</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> &#123;</span><br><span class="line">   <span class="string">listen</span>       <span class="number">8081</span><span class="string">;</span> <span class="comment">#访问的端口</span></span><br><span class="line"></span><br><span class="line">   <span class="string">location</span> <span class="string">/</span> &#123;</span><br><span class="line">      <span class="string">root</span> <span class="string">/home/project/vue/project-template;</span> <span class="comment">#要部署的Vue项目存放的位置</span></span><br><span class="line">      <span class="string">index</span>  <span class="string">index.html</span> <span class="string">index.htm;</span> <span class="comment">#首页文件</span></span><br><span class="line">      <span class="string">try_files</span> <span class="string">$uri</span> <span class="string">$uri/</span> <span class="string">/index.html;</span> <span class="comment">#防止刷新后自动跳到自带404页面</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h3><p>修改完配置文件后，需要重启一下Nginx，不然修改的配置是不生效的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>除了使用Nginx部署Vue项目，还可以使用Tomcat，直接把打包的文件夹丢到webapps目录下然后<a href="https://blog.zoutl.cn/9.html">配置一下访问不用加项目名称</a>就行了，不过还是推荐使用Nginx</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;打包项目&quot;&gt;&lt;a href=&quot;#打包项目&quot; class=&quot;headerlink&quot; title=&quot;打包项目&quot;&gt;&lt;/a&gt;打包项目&lt;/h3&gt;&lt;p&gt;使用下面命令将Vue项目打包，会生成一个名为&lt;code&gt;dist&lt;/code&gt;的文件夹，然后将它上传到CentOS7系统中，</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.zoutl.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
    <category term="Nginx" scheme="https://blog.zoutl.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Vue3项目使用i18n实现国际化</title>
    <link href="https://blog.zoutl.cn/568.html"/>
    <id>https://blog.zoutl.cn/568.html</id>
    <published>2023-02-02T21:25:27.000Z</published>
    <updated>2023-02-02T23:52:29.884Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>和使用浏览器的全文翻译（机器翻译）相比，使用i18n实现国际化（人工翻译）应该会更准确，但是挺麻烦的，因为每一个组件的文字都需要翻译和配置</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-i18n@next</span><br></pre></td></tr></table></figure><h4 id="新建语言配置文件"><a href="#新建语言配置文件" class="headerlink" title="新建语言配置文件"></a>新建语言配置文件</h4><p>在src目录下新建一个名为<code>locales</code>的目录，在这个目录下新建一个名为<code>lang</code>的目录、<code>i18n.js</code>和<code>index.js</code>文件，最后在<code>lang</code>目录下新建<code>en.js</code>和<code>zh.js</code>文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230203074504773.png" alt="image-20230203074504773"></p><p><code>en.js</code>的内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">menu</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Background&#x27;</span>,</span><br><span class="line">        <span class="attr">home</span>: <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">        <span class="attr">userManage</span>: <span class="string">&#x27;Manage User&#x27;</span>,</span><br><span class="line">        <span class="attr">announcementManage</span>: <span class="string">&#x27;Manage Notice&#x27;</span>,</span><br><span class="line">        <span class="attr">typeManage</span>: <span class="string">&#x27;Manage Type&#x27;</span>,</span><br><span class="line">        <span class="attr">bigTypeManage</span>: <span class="string">&#x27;Manage BigType&#x27;</span>,</span><br><span class="line">        <span class="attr">smallTypeManage</span>: <span class="string">&#x27;Manage SmallType&#x27;</span>,</span><br><span class="line">        <span class="attr">goodsManage</span>: <span class="string">&#x27;Manage Goods&#x27;</span>,</span><br><span class="line">        <span class="attr">orderManage</span>: <span class="string">&#x27;Manage Order&#x27;</span>,</span><br><span class="line">        <span class="attr">valuationManage</span>: <span class="string">&#x27;Manage Valuation&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">main</span>: &#123;</span><br><span class="line">        <span class="attr">home</span>: <span class="string">&#x27;Home&#x27;</span>,</span><br><span class="line">        <span class="attr">full</span>: <span class="string">&#x27;Full Screen&#x27;</span>,</span><br><span class="line">        <span class="attr">noFull</span>: <span class="string">&#x27;Exit Full Screen&#x27;</span>,</span><br><span class="line">        <span class="attr">openMenu</span>: <span class="string">&#x27;Open The Menu&#x27;</span>,</span><br><span class="line">        <span class="attr">closeMenu</span>: <span class="string">&#x27;Close The Menu&#x27;</span>,</span><br><span class="line">        <span class="attr">modifyPassword</span>: <span class="string">&#x27;Modify Password&#x27;</span>,</span><br><span class="line">        <span class="attr">logout</span>: <span class="string">&#x27;Logout&#x27;</span>,</span><br><span class="line">        <span class="attr">closeAll</span>: <span class="string">&#x27;Close All&#x27;</span>,</span><br><span class="line">        <span class="attr">closeLeft</span>: <span class="string">&#x27;Close The Left&#x27;</span>,</span><br><span class="line">        <span class="attr">closeRight</span>: <span class="string">&#x27;Close The Right&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>zh.js</code>的内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="attr">menu</span>:&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;后台管理系统模板&#x27;</span>,</span><br><span class="line">        <span class="attr">home</span>:<span class="string">&#x27;首页&#x27;</span>,</span><br><span class="line">        <span class="attr">userManage</span>:<span class="string">&#x27;用户管理&#x27;</span>,</span><br><span class="line">        <span class="attr">announcementManage</span>: <span class="string">&#x27;公告管理&#x27;</span>,</span><br><span class="line">        <span class="attr">typeManage</span>: <span class="string">&#x27;商品分类管理&#x27;</span>,</span><br><span class="line">        <span class="attr">bigTypeManage</span>: <span class="string">&#x27;商品大类&#x27;</span>,</span><br><span class="line">        <span class="attr">smallTypeManage</span>: <span class="string">&#x27;商品小类&#x27;</span>,</span><br><span class="line">        <span class="attr">goodsManage</span>: <span class="string">&#x27;商品管理&#x27;</span>,</span><br><span class="line">        <span class="attr">orderManage</span>: <span class="string">&#x27;订单管理&#x27;</span>,</span><br><span class="line">        <span class="attr">valuationManage</span>: <span class="string">&#x27;评价管理&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">main</span>:&#123;</span><br><span class="line">        <span class="attr">home</span>:<span class="string">&#x27;首页&#x27;</span>,</span><br><span class="line">        <span class="attr">full</span>: <span class="string">&#x27;全屏&#x27;</span>,</span><br><span class="line">        <span class="attr">noFull</span>: <span class="string">&#x27;退出全屏&#x27;</span>,</span><br><span class="line">        <span class="attr">openMenu</span>:<span class="string">&#x27;打开菜单&#x27;</span>,</span><br><span class="line">        <span class="attr">closeMenu</span>:<span class="string">&#x27;关闭菜单&#x27;</span>,</span><br><span class="line">        <span class="attr">modifyPassword</span>: <span class="string">&#x27;修改密码&#x27;</span>,</span><br><span class="line">        <span class="attr">logout</span>: <span class="string">&#x27;注销&#x27;</span>,</span><br><span class="line">        <span class="attr">closeAll</span>: <span class="string">&#x27;关闭全部&#x27;</span>,</span><br><span class="line">        <span class="attr">closeLeft</span>: <span class="string">&#x27;关闭左侧&#x27;</span>,</span><br><span class="line">        <span class="attr">closeRight</span>: <span class="string">&#x27;关闭右侧&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>index.js</code>的内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> en <span class="keyword">from</span> <span class="string">&#x27;./lang/en&#x27;</span></span><br><span class="line"><span class="keyword">import</span> zh <span class="keyword">from</span> <span class="string">&#x27;./lang/zh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    en,</span><br><span class="line">    zh,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>i18n.js</code>的内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createI18n &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-i18n&#x27;</span> <span class="comment">//引入vue-i18n组件</span></span><br><span class="line"><span class="keyword">import</span> messages <span class="keyword">from</span> <span class="string">&#x27;./index&#x27;</span></span><br><span class="line"><span class="keyword">const</span> language = (</span><br><span class="line">    (navigator.language ? navigator.language : navigator.userLanguage) || <span class="string">&quot;zh&quot;</span></span><br><span class="line">).toLowerCase();</span><br><span class="line"><span class="keyword">const</span> i18n = createI18n(&#123;</span><br><span class="line">    <span class="attr">fallbackLocale</span>: <span class="string">&#x27;zh&#x27;</span>,</span><br><span class="line">    <span class="attr">globalInjection</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">legacy</span>: <span class="literal">false</span>, <span class="comment">// you must specify &#x27;legacy: false&#x27; option</span></span><br><span class="line">    <span class="attr">locale</span>: language.split(<span class="string">&quot;-&quot;</span>)[<span class="number">0</span>] || <span class="string">&quot;zh&quot;</span>,</span><br><span class="line">    messages,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> i18n</span><br></pre></td></tr></table></figure><h4 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h4><p>在<code>main.js</code>中引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"><span class="keyword">import</span> piniaPluginPersistedstate <span class="keyword">from</span> <span class="string">&quot;pinia-plugin-persistedstate&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="comment">//引入router</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> i18n <span class="keyword">from</span> <span class="string">&#x27;./locales/i18n&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = createPinia()</span><br><span class="line">pinia.use(piniaPluginPersistedstate)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = createApp(App)</span><br><span class="line">app.use(pinia).use(router).use(i18n).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>在要实现国际化的页面使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; t(&#x27;main.home&#x27;) &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; ref, getCurrentInstance &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useI18n &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-i18n&#x27;</span><span class="comment">//要在js中使用国际化</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> &#123; proxy &#125; = getCurrentInstance();</span></span><br><span class="line"><span class="javascript"><span class="comment">// 改变语言</span></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">change</span>(<span class="params">type</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">// 设置语言</span></span></span><br><span class="line"><span class="javascript">    proxy.$i18n.locale = type;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> &#123; t &#125; = useI18n()</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;和使用浏览器的全文翻译（机器翻译）相比，使用i18n实现国际化（人工翻译）应该会更准确，但是挺麻烦的，因为每一个组件的文字都需要翻译和配置&lt;</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Vue3项目实现页面全屏</title>
    <link href="https://blog.zoutl.cn/567.html"/>
    <id>https://blog.zoutl.cn/567.html</id>
    <published>2023-02-02T21:11:53.000Z</published>
    <updated>2023-02-02T23:52:29.883Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>这里说的页面全屏和Microsoft Edge浏览器的F11快捷键的效果是一样的，Vue项目可以通过<code>screenfull</code>插件来实现</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install screenfull --save</span><br></pre></td></tr></table></figure><h4 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h4><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230203052359371.png" alt="image-20230203052359371" style="zoom:67%;" /><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>在要实现页面全屏效果的页面引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> screenfull <span class="keyword">from</span> <span class="string">&quot;screenfull&quot;</span></span><br></pre></td></tr></table></figure><p>实现页面全屏或退出全屏都直接调用下面函数即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fullScreenOrNot = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    screenfull.toggle();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;这里说的页面全屏和Microsoft Edge浏览器的F11快捷键的效果是一样的，Vue项目可以通过&lt;code&gt;screenfull&lt;/co</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>创建uni-app项目</title>
    <link href="https://blog.zoutl.cn/566.html"/>
    <id>https://blog.zoutl.cn/566.html</id>
    <published>2023-02-01T08:59:53.000Z</published>
    <updated>2023-02-01T17:55:39.960Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><code>uni-app</code> 是一个使用<a href="https://vuejs.org/">Vue.js</a>开发所有前端应用的框架，开发者编写一套代码，可发布到iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/飞书/QQ/快手/钉钉/淘宝）、快应用等多个平台</p><h3 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h3><h4 id="安装开发工具"><a href="#安装开发工具" class="headerlink" title="安装开发工具"></a>安装开发工具</h4><p>开发<code>uni-app</code>项目指定的开发工具是<code>HBuilderX</code>，下载地址为：<a href="https://www.dcloud.io/hbuilderx.html">HBuilderX-高效极客技巧 (dcloud.io)</a></p><h4 id="开始创建"><a href="#开始创建" class="headerlink" title="开始创建"></a>开始创建</h4><p>文件&gt;&gt;路径&gt;&gt;项目</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230201170544122.png" alt="image-20230201170544122"></p><p>一般直接选择默认模板进行开发</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230201170943483.png" alt="image-20230201170943483"></p><h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><h4 id="运行到浏览器"><a href="#运行到浏览器" class="headerlink" title="运行到浏览器"></a>运行到浏览器</h4><p>可以运行到电脑上安装的浏览器，也可以运行到HBuilderX内置的浏览器（推荐使用），第一次运行会自动安装一些插件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230201171333480.png" alt="image-20230201171333480"></p><h4 id="运行到小程序"><a href="#运行到小程序" class="headerlink" title="运行到小程序"></a>运行到小程序</h4><p>我这里说的小程序是微信小程序，需要先安装微信开发者工具，安装地址为：<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html">微信开发者工具下载地址与更新日志 | 微信开放文档 (qq.com)</a>，安装好后打开服务端口（设置&gt;&gt;安全设置）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230201172103045.png" alt="image-20230201172103045"></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230201172127419.png" alt="image-20230201172127419"></p><p>在HBuilderX中运行到微信开发者工具，会让我们配置微信开发者工具的安装路径，然后会自动打开微信开发者工具即可查看效果</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230201171908853.png" alt="image-20230201171908853"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;&lt;code&gt;uni-app&lt;/code&gt; 是一个使用&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue.js&lt;/a&gt;开发所有前</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="uni-app" scheme="https://blog.zoutl.cn/tags/uni-app/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目使用右滑拼图验证</title>
    <link href="https://blog.zoutl.cn/565.html"/>
    <id>https://blog.zoutl.cn/565.html</id>
    <published>2023-01-30T14:24:13.000Z</published>
    <updated>2023-01-30T15:03:03.364Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>和输入验证码相比，使用右滑拼图验证对用户更友好</p><p>右滑拼图验证插件的GitHub仓库地址为：<a href="https://github.com/javaLuo/vue-puzzle-vcode">javaLuo/vue-puzzle-vcode: vue 拼图人机验证 右滑拼图验证 (github.com)</a></p><p>Vue2和Vue3的使用文档都有，根据自己的需求选择，我使用的是Vue3</p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue3-puzzle-vcode --save</span><br></pre></td></tr></table></figure><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>下面是一个最简单的例子，使用的图片是内置的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;onShow&quot;</span>&gt;</span>开始验证<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Vcode</span> <span class="attr">:show</span>=<span class="string">&quot;isShow&quot;</span> @<span class="attr">success</span>=<span class="string">&quot;onSuccess&quot;</span> @<span class="attr">close</span>=<span class="string">&quot;onClose&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">import</span> Vcode <span class="keyword">from</span> <span class="string">&quot;vue3-puzzle-vcode&quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> isShow = ref(<span class="literal">false</span>);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> onShow = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    isShow.value = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> onClose = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    isShow.value = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> onSuccess = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    onClose(); <span class="comment">// 验证成功，需要手动关闭模态框</span></span></span><br><span class="line"><span class="javascript">  &#125;;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一般直接用内置的图片就行了，如果要自定义图片，示例代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">Vcode</span> <span class="attr">:imgs</span>=<span class="string">&quot;imgs&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Vcode <span class="keyword">from</span> <span class="string">&quot;vue3-puzzle-vcode&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Img1 <span class="keyword">from</span> <span class="string">&quot;~/assets/img1.png&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Img2 <span class="keyword">from</span> <span class="string">&quot;~/assets/img2.png&quot;</span>;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> imgs = [Img1, Img2];</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上面自定义的图片是本地的图片，还可以使用网络图片</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> imgs = [<span class="string">&#x27;https://image.zoutl.cn/1.jpeg&#x27;</span>, <span class="string">&#x27;https://image.zoutl.cn/2.jpeg&#x27;</span>];</span><br></pre></td></tr></table></figure><p>效果截图</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230130230243751.png" alt="image-20230130230243751" style="zoom: 50%;" /><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th align="center">字段</th><th align="center">类型</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">show</td><td align="center">Boolean</td><td align="center">false</td><td align="center">是否显示验证码弹框</td></tr><tr><td align="center">canvasWidth</td><td align="center">Number</td><td align="center">310</td><td align="center">主图区域的宽度，单位 px</td></tr><tr><td align="center">canvasHeight</td><td align="center">Number</td><td align="center">160</td><td align="center">主图区域的高度，单位 px</td></tr><tr><td align="center">puzzleScale</td><td align="center">Number</td><td align="center">1</td><td align="center">拼图块(小的拼图)的大小比例，0.2 ～ 2 ，数字越大，拼图越大</td></tr><tr><td align="center">sliderSize</td><td align="center">Number</td><td align="center">50</td><td align="center">左下角用户拖动的那个滑块的尺寸，单位 px</td></tr><tr><td align="center">range</td><td align="center">Number</td><td align="center">10</td><td align="center">判断成功的误差范围，单位 px, 滑动的距离和拼图的距离小于等于此值时，会判定重合</td></tr><tr><td align="center">imgs</td><td align="center">Array</td><td align="center">null</td><td align="center">自定义图片，见下方例子</td></tr><tr><td align="center">successText</td><td align="center">String</td><td align="center">“验证通过！”</td><td align="center">验证成功时的提示文字</td></tr><tr><td align="center">failText</td><td align="center">String</td><td align="center">“验证失败，请重试”</td><td align="center">验证失败时的提示文字</td></tr><tr><td align="center">sliderText</td><td align="center">String</td><td align="center">“拖动滑块完成拼图”</td><td align="center">下方滑动条里的文字</td></tr></tbody></table><h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><table><thead><tr><th align="center">事件名</th><th align="center">返回值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">success</td><td align="center">偏差值</td><td align="center">验证通过时会触发，返回值是用户移动的距离跟目标距离的偏差值 px</td></tr><tr><td align="center">fail</td><td align="center">偏差值</td><td align="center">验证失败时会触发，返回值同上</td></tr><tr><td align="center">close</td><td align="center">null</td><td align="center">用户点击遮罩层的回调</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;和输入验证码相比，使用右滑拼图验证对用户更友好&lt;/p&gt;
&lt;p&gt;右滑拼图验证插件的GitHub仓库地址为：&lt;a href=&quot;https://g</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Pinia的基本使用</title>
    <link href="https://blog.zoutl.cn/564.html"/>
    <id>https://blog.zoutl.cn/564.html</id>
    <published>2023-01-23T13:30:04.000Z</published>
    <updated>2023-01-30T14:59:39.187Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Pinia是Vue的专属状态管理库，它允许我们跨组件或页面共享状态，官方文档链接：<a href="https://pinia.vuejs.org/zh/">Home | Pinia (vuejs.org)</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>我使用的Vue.js版本是3.2.45（也就是Vue3），并且项目使用Vite4创建的，Vue3安装Pinia只需要执行下面的命令即可，Vue2则还需要安装一个插件，这里不讨论，可以去查看官方文档：<a href="https://pinia.vuejs.org/zh/getting-started.html#installation">安装 | Pinia (vuejs.org)</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install pinia</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="创建实例传递给应用"><a href="#创建实例传递给应用" class="headerlink" title="创建实例传递给应用"></a>创建实例传递给应用</h3><p>创建一个pinia实例（根store）并将其传递给应用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = createPinia()</span><br><span class="line"></span><br><span class="line">createApp(App).use(pinia).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="定义store"><a href="#定义store" class="headerlink" title="定义store"></a>定义store</h3><p>在<code>/src/stores</code>目录下创建一个<code>index.ts</code>文件</p><p><code>useStore</code>是返回值的名称，<code>main</code>是名字id，都可以随意命名，但是返回值的名称最好使用store的名字，同时以 <code>use</code> 开头且以 <code>Store</code> 结尾(比如 <code>useUserStore</code>，<code>useCartStore</code>，<code>useProductStore</code>)</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">   </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="State"><a href="#State" class="headerlink" title="State"></a>State</h3><h4 id="定义state"><a href="#定义state" class="headerlink" title="定义state"></a>定义state</h4><p>state是store的核心，用于跨组件或页面共享状态</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="访问state"><a href="#访问state" class="headerlink" title="访问state"></a>访问state</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="comment">// 引入useStore</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&quot;./stores/index&quot;</span>;</span></span><br><span class="line"><span class="javascript"><span class="comment">// 获得useStore的返回值</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> store = useStore();</span></span><br><span class="line"><span class="javascript"><span class="comment">// store.count自加1</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">const</span> addCount = <span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">  store.count++;</span></span><br><span class="line"><span class="javascript">&#125;;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123; store.count &#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addCount&quot;</span>&gt;</span>+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="重置state"><a href="#重置state" class="headerlink" title="重置state"></a>重置state</h4><p>通过<code>store.$reset()</code>可以重置state的值</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重置</span></span><br><span class="line"><span class="keyword">const</span> reset = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  store.$reset();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="变更state"><a href="#变更state" class="headerlink" title="变更state"></a>变更state</h4><p>通过<code>store.$patch</code>修改state（一般用于修改多个数据），只修改一个可以直接修改</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// store.$patch修改成123</span></span><br><span class="line"><span class="keyword">const</span> modify = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  store.$patch(<span class="function"><span class="params">state</span> =&gt;</span> &#123;</span><br><span class="line">    state.count = <span class="number">123</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// 直接修改成123</span></span><br><span class="line"><span class="keyword">const</span> modify2 = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  store.count = <span class="number">123</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="替换state"><a href="#替换state" class="headerlink" title="替换state"></a>替换state</h4><p>替换和变更的区别就是，替换用于<font color="#dd0000">修改全部数据</font>，而变更是修改一个或多个数据</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 替换</span></span><br><span class="line"><span class="keyword">const</span> replace = (): <span class="function"><span class="params">void</span> =&gt;</span> &#123;</span><br><span class="line">  store.$state = &#123;</span><br><span class="line">    <span class="attr">count</span>: <span class="number">666</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;jack&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="订阅state"><a href="#订阅state" class="headerlink" title="订阅state"></a>订阅state</h4><p>通过<code>store.$subscribe</code>方法订阅state后，一旦state的数据发生变更，我们可以对变更后的数据进行一些操作，例如可以对数据进行持久化，不然一刷新页面数据就重置了</p><p>mutation返回值包含了操作的状态、state改变前的值、state改变后的值……</p><p>state返回值则是修改后的state的数据</p><p>上面两个返回值的名称可以随便写</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 订阅</span></span><br><span class="line">store.$subscribe(<span class="function">(<span class="params">mutation, state</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(mutation);</span><br><span class="line">  <span class="built_in">console</span>.log(state);</span><br><span class="line">  <span class="built_in">window</span>.localStorage.setItem(<span class="string">&quot;useStoreState&quot;</span>, <span class="built_in">JSON</span>.stringify(state));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Getter"><a href="#Getter" class="headerlink" title="Getter"></a>Getter</h3><p>Getter完全等同于store的state的<a href="https://cn.vuejs.org/guide/essentials/computed.html">计算值</a>，接收 <code>state</code> 作为第一个参数，对state的数据进行统一处理，下面的<code>doubleCount</code>是<code>对state.count乘以2</code>，直接通过<code>store.doubleCount()</code>调用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="comment">// 计算state.count * 2</span></span><br><span class="line">        <span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.count * <span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>调用同一个store的getter可以使用<code>this</code>关键词</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="comment">// 计算state.count * 2</span></span><br><span class="line">        <span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.count * <span class="number">2</span>,</span><br><span class="line">        <span class="comment">// 调用同一个store的getter</span></span><br><span class="line">        doublePlusOne(): <span class="built_in">number</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.doubleCount + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Action"><a href="#Action" class="headerlink" title="Action"></a>Action</h3><p>Action相当于组件中的method，在组件中直接通过<code>store.increment()</code>进行调用</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;tom&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="comment">// 计算state.count * 2</span></span><br><span class="line">        <span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.count * <span class="number">2</span>,</span><br><span class="line">        <span class="comment">// 调用同一个store的getter</span></span><br><span class="line">        doublePlusOne(): <span class="built_in">number</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.doubleCount + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.count++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><p>state改变后，一旦刷新页面后就恢复默认值了，如果我们需要保留修改后的state，那么就需要将state持久化了，持久化的方法有两个：</p><ol><li>使用<code>pinia-plugin-persist</code>插件，<font color="#dd0000">建议使用</font></li><li>通过订阅state将每次改变后的数据通过<code>localStorage</code>或者<code>sessionStorage</code>持久化到本地</li></ol><h4 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h4><h5 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h5><p>使用下面命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i pinia-plugin-persistedstate</span><br></pre></td></tr></table></figure><h5 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h5><p>在<code>main.ts</code>中全局引入</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; createPinia &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"><span class="keyword">import</span> piniaPluginPersistedstate <span class="keyword">from</span> <span class="string">&quot;pinia-plugin-persistedstate&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./style.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pinia = createPinia()</span><br><span class="line">pinia.use(piniaPluginPersistedstate)</span><br><span class="line"></span><br><span class="line">createApp(App).use(pinia).mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h5 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h5><p>在要持久化的store中加上persist</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;mary&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">persist</span>: &#123;</span><br><span class="line">        <span class="attr">key</span>: <span class="string">&#x27;useStore&#x27;</span>,</span><br><span class="line">        <span class="attr">storage</span>: sessionStorage,</span><br><span class="line">        <span class="attr">paths</span>: [<span class="string">&#x27;count&#x27;</span>, <span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>参数说明如下：</p><table><thead><tr><th align="center">参数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">key</td><td align="center">自定义存储的key，默认是<code>store.$id</code></td></tr><tr><td align="center">storage</td><td align="center">存储的类型：<code>sessionStorage</code>或<code>localStorage</code>，默认是<code>sessionStorage</code></td></tr><tr><td align="center">paths</td><td align="center">要持久化的数据，state中的字段名，默认是全部</td></tr></tbody></table><h4 id="通过订阅state"><a href="#通过订阅state" class="headerlink" title="通过订阅state"></a>通过订阅state</h4><p>首先订阅state，然后将数据放到<code>localStorage</code>或<code>sessionStorage</code>中</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 订阅</span></span><br><span class="line">store.$subscribe(<span class="function">(<span class="params">mutation, state</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(mutation);</span><br><span class="line">  <span class="built_in">console</span>.log(state);</span><br><span class="line">  <span class="built_in">window</span>.localStorage.setItem(<span class="string">&quot;useStoreState&quot;</span>, <span class="built_in">JSON</span>.stringify(state));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>需要持久化哪个数据就从本地存储的state中获取它，不然就是默认值</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineStore &#125; <span class="keyword">from</span> <span class="string">&quot;pinia&quot;</span></span><br><span class="line"><span class="comment">// 获取本地存储的useStoreState,如果没有就设置默认值</span></span><br><span class="line"><span class="keyword">const</span> json: <span class="built_in">string</span> = <span class="built_in">window</span>.localStorage.getItem(<span class="string">&quot;useStoreState&quot;</span>) || <span class="string">&#x27;&#123;&quot;count&quot;:1,&quot;name&quot;:&quot;tom&quot;&#125;&#x27;</span></span><br><span class="line"><span class="comment">// 解析</span></span><br><span class="line"><span class="keyword">const</span> obj: <span class="built_in">any</span> = <span class="built_in">JSON</span>.parse(json)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> useStore = defineStore(<span class="string">&#x27;main&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">state</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">count</span>: obj.count,</span><br><span class="line">            <span class="attr">name</span>: obj.name</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="comment">// 计算state.count * 2</span></span><br><span class="line">        <span class="attr">doubleCount</span>: <span class="function">(<span class="params">state</span>) =&gt;</span> state.count * <span class="number">2</span>,</span><br><span class="line">        <span class="comment">// 调用同一个store的getter</span></span><br><span class="line">        doublePlusOne(): <span class="built_in">number</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">this</span>.doubleCount + <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="function"><span class="title">increment</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.count++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;Pinia是Vue的专属状态管理库，它允许我们跨组件或页面共享状态，官方文档链接：&lt;a href=&quot;https://pinia.vuejs.</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
    <category term="Pinia" scheme="https://blog.zoutl.cn/tags/Pinia/"/>
    
  </entry>
  
  <entry>
    <title>制作Windows 10的U盘启动盘重装系统</title>
    <link href="https://blog.zoutl.cn/563.html"/>
    <id>https://blog.zoutl.cn/563.html</id>
    <published>2023-01-22T05:50:39.000Z</published>
    <updated>2023-01-27T11:26:28.166Z</updated>
    
    <content type="html"><![CDATA[<h3 id="制作U盘启动盘"><a href="#制作U盘启动盘" class="headerlink" title="制作U盘启动盘"></a>制作U盘启动盘</h3><h4 id="下载Rufus"><a href="#下载Rufus" class="headerlink" title="下载Rufus"></a>下载Rufus</h4><p>下载地址：<a href="https://rufus.ie/zh/">Rufus - 轻松创建USB启动盘</a></p><p>Rufus用来将下载好的ISO镜像文件制作成U盘启动盘，下载好后直接打开即可运行</p><h4 id="下载ISO镜像文件"><a href="#下载ISO镜像文件" class="headerlink" title="下载ISO镜像文件"></a>下载ISO镜像文件</h4><p>下载地址：<a href="https://msdn.itellyou.cn/">MSDN, 我告诉你 - 做一个安静的工具站 (itellyou.cn)</a></p><p>在这里可以找到各种版本的Windows系统，<code>x64</code>是64位系统，<code>x86</code>是32位，我们个人安装的是<code>消费者版本（consumer editions）</code>的系统，点击右边的详细信息复制ed2k链接后使用迅雷下载ISO镜像文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230122151542100.png" alt="image-20230122151542100"></p><h4 id="开始制作"><a href="#开始制作" class="headerlink" title="开始制作"></a>开始制作</h4><p>打开Rufus后会自动检测插入的U盘，U盘的容量最好在8G及以上，<font color="#dd0000">开始制作前U盘会被格式化，如果有重要文件请先备份</font></p><p>设备选项的配置说明查看下表，格式化选项不用修改，状态是准备就绪就可以开始制作了</p><table><thead><tr><th align="center">配置</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">设备</td><td align="center">选择要制作成启动盘的U盘，会自动选择</td></tr><tr><td align="center">引导类型选择</td><td align="center">选择<code>镜像文件</code>，然后点击右边的<code>选择</code>按钮后选中下载好的镜像文件</td></tr><tr><td align="center">镜像选项</td><td align="center">默认选择<code>标准Windows安装</code>就行</td></tr><tr><td align="center">分区类型</td><td align="center">磁盘的分区类型，这里默认选<code>GPT</code>就行</td></tr><tr><td align="center">目标系统类型</td><td align="center">只有一个选项<code>UEFI（非CSM）</code></td></tr></tbody></table><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230122150928547.png" alt="image-20230122150928547" style="zoom:50%;" /><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><h4 id="进入安装界面"><a href="#进入安装界面" class="headerlink" title="进入安装界面"></a>进入安装界面</h4><p>开机前将U盘插入USB3.0的插口中（安装会比USB2.0快），我安装时会自动进入安装界面，如果不是自动的，那么就需要使用快捷键从U盘启动然后安装系统即可，具体用什么快捷键查看博客：<a href="https://zhuanlan.zhihu.com/p/510003495">各种品牌的电脑从U盘启动的快捷键大全 - 知乎 (zhihu.com)</a></p><h4 id="转换磁盘格式为GPT"><a href="#转换磁盘格式为GPT" class="headerlink" title="转换磁盘格式为GPT"></a>转换磁盘格式为GPT</h4><p>在选择系统盘时，如果提示：Windows无法安装到这个磁盘，选中的磁盘具有MBR分区表，那么就需要转换磁盘格式为GPT，但是会清除所有磁盘</p><p>不要关闭安装的界面，直接按下<code>Shift+F10</code>组合键打开cmd命令行窗口，依次输入下图的命令即可将磁盘格式转换为GPT，关闭cmd后刷新一下就可以继续安装系统了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230122154434656.png" alt="image-20230122154434656"></p><h3 id="激活系统"><a href="#激活系统" class="headerlink" title="激活系统"></a>激活系统</h3><p>右键点击左下角的开始菜单，选择<code>以管理员身份运行的Windows PowerShell</code>，依次输入下面命令（按回车键执行）即可激活系统，可能会过一会儿才会提示激活成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class="line">slmgr /skms kms.03k.org</span><br><span class="line">slmgr /ato</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;制作U盘启动盘&quot;&gt;&lt;a href=&quot;#制作U盘启动盘&quot; class=&quot;headerlink&quot; title=&quot;制作U盘启动盘&quot;&gt;&lt;/a&gt;制作U盘启动盘&lt;/h3&gt;&lt;h4 id=&quot;下载Rufus&quot;&gt;&lt;a href=&quot;#下载Rufus&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="Windows系统" scheme="https://blog.zoutl.cn/tags/Windows%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>安装多个版本的JDK并切换</title>
    <link href="https://blog.zoutl.cn/562.html"/>
    <id>https://blog.zoutl.cn/562.html</id>
    <published>2023-01-21T12:03:38.000Z</published>
    <updated>2023-01-21T14:42:14.295Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>有时候需要学习一下其它版本的JDK，那么就需要安装多个JDK了，然后通过修改环境变量来实现切换JDK的版本，我这里安装的是<code>JDK1.8</code>和<code>JDK11</code>两个版本，继续安装其它的版本也是一样的步骤</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><table><thead><tr><th align="center">版本</th><th align="center">阿里云盘链接</th></tr></thead><tbody><tr><td align="center"><code>JDK1.8.0_202</code></td><td align="center"><a href="https://www.aliyundrive.com/s/Tx9puSr4LJ9">阿里云盘分享 (aliyundrive.com)</a></td></tr><tr><td align="center"><code>JDK11.0.18</code></td><td align="center"><a href="https://www.aliyundrive.com/s/ZoV6gGPeKjZ">阿里云盘分享 (aliyundrive.com)</a></td></tr></tbody></table><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><p><code>JAVA_HOME</code>直接引用要切换的JDK的安装路径，<code>JAVA_HOME_8</code>和<code>JAVA_HOME_11</code>是JDK的安装路径</p><p><code>Path</code>变量的设置和博客<a href="https://blog.zoutl.cn/2.html">Java 环境配置 | LeDao’s Blog (zoutl.cn)</a>的一样就行，<code>Path</code>变量的设置要放在第一行</p><table><thead><tr><th align="center">变量名</th><th align="center">变量值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>JAVA_HOME</code></td><td align="center"><code>%JAVA_HOME_8%</code></td><td align="center">用于切换JDK版本</td></tr><tr><td align="center"><code>JAVA_HOME_8</code></td><td align="center"><code>D:\Java\jdk1.8.0_202</code></td><td align="center">jdk1.8.0_202的安装路径</td></tr><tr><td align="center"><code>JAVA_HOME_11</code></td><td align="center"><code>D:\Java\jdk11.0.18</code></td><td align="center">dk11.0.18的安装路径</td></tr></tbody></table><h3 id="切换JDK"><a href="#切换JDK" class="headerlink" title="切换JDK"></a>切换JDK</h3><p>直接修改<code>JAVA_HOME</code>这个变量，修改成<code>%JAVA_HOME_8%</code>或<code>%JAVA_HOME_11%</code>就可以切换了，切换后要重新打开cmd命令窗口，不然用的还是之前的环境变量</p><h3 id="修改IntelliJ-IDEA配置"><a href="#修改IntelliJ-IDEA配置" class="headerlink" title="修改IntelliJ IDEA配置"></a>修改IntelliJ IDEA配置</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>IntelliJ IDEA中使用的Java版本和本地环境变量配置的Java版本没有关系，以IntelliJ IDEA的Java版本为准</p><h4 id="pom-xml配置文件"><a href="#pom-xml配置文件" class="headerlink" title="pom.xml配置文件"></a>pom.xml配置文件</h4><p>首先修改<code>pom.xml</code>文件的Java版本，这里关系到写代码时是否提示出错，例如：在Java1.8中写Java11的var类型会提示有错误</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230121220504410.png" alt="image-20230121220504410"></p><h4 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h4><p>然后修改运行项目的Java版本（使用<code>CTRL+ALT+SHIFT+S</code>组合快捷键打开项目的配置），版本不同的话运行时会出错，例如：Java11的var类型在Java1.8中运行会报错</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230121220559531.png" alt="image-20230121220559531"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;有时候需要学习一下其它版本的JDK，那么就需要安装多个JDK了，然后通过修改环境变量来实现切换JDK的版本，我这里安装的是&lt;code&gt;JDK</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>TypeScript的安装和使用</title>
    <link href="https://blog.zoutl.cn/561.html"/>
    <id>https://blog.zoutl.cn/561.html</id>
    <published>2023-01-15T01:37:52.000Z</published>
    <updated>2023-01-16T11:19:00.465Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>TypeScript 是JavaScript的一个超集，支持ES6标准，由微软开发的自由和开源的编程语言，TypeScript的设计目标是开发大型应用，它可以编译成纯JavaScript，编译出来的JavaScript可以运行在任何浏览器上</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>我是使用npm命令安装，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g typescript</span><br></pre></td></tr></table></figure><p>查看是否安装成功，输入下面命令查看版本号，出现版本号说明安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc -v</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>首先新建一个名为<code>test.ts</code>的文件，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> message: string = <span class="string">&quot;Hello World!!&quot;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(message);</span><br></pre></td></tr></table></figure><p>在上面ts文件所在文件夹打开cmd命令窗口，输入下面命令编译这个ts文件，会在该文件所在文件夹生成一个<code>test.js</code>的文件（用来运行，而不是运行ts文件，ts文件只是用来编译生成js文件的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc test.ts</span><br></pre></td></tr></table></figure><p>使用Node.js的命令运行js文件，会输出<code>Hello World!!</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node test.js</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230115112252147.png" alt="image-20230115112252147"></p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>TypeScript是有一个名为<code>tsconfig.json</code>的配置文件的<font color="#dd0000">（这个配置文件只对自动编译有用）</font>，这个配置文件放在项目根目录下，可以自己手动新建，也可以使用下面命令自动生成，建议使用命令自动生成</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc --init</span><br></pre></td></tr></table></figure><p>自动生成的配置文件内容如下（中文是我使用<code>谷歌翻译</code>翻译的），<code>rootDir</code>（ts文件所在目录的路径）和<code>outDir</code>（编译生成的js文件存放的目录路径）两个配置默认是注释掉的，我们把它们的注释删掉并改成自己的路径，（<code>.</code>表示当前目录，<code>..</code>表示上一级目录）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">/* Visit https://aka.ms/tsconfig to read more about this file */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Projects */</span></span><br><span class="line">    <span class="comment">// &quot;incremental&quot;: true,                              /* 保存 .tsbuildinfo 文件以允许对项目进行增量编译。 */</span></span><br><span class="line">    <span class="comment">// &quot;composite&quot;: true,                                /* 启用允许 TypeScript 项目与项目引用一起使用的约束。 */</span></span><br><span class="line">    <span class="comment">// &quot;tsBuildInfoFile&quot;: &quot;./.tsbuildinfo&quot;,              /* 指定 .tsbuildinfo 增量编译文件的路径。 */</span></span><br><span class="line">    <span class="comment">// &quot;disableSourceOfProjectReferenceRedirect&quot;: true,  /* 在引用复合项目时禁用首选源文件而不是声明文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;disableSolutionSearching&quot;: true,                 /* 编辑时从多项目参考检查中选择一个项目。 */</span></span><br><span class="line">    <span class="comment">// &quot;disableReferencedProjectLoad&quot;: true,             /* 减少 TypeScript 自动加载的项目数量。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Language and Environment */</span></span><br><span class="line">    <span class="attr">&quot;target&quot;</span>: <span class="string">&quot;es2016&quot;</span>,                                  <span class="comment">/* 为发出的 JavaScript 设置 JavaScript 语言版本并包含兼容的库声明。 */</span></span><br><span class="line">    <span class="comment">// &quot;lib&quot;: [],                                        /* 指定一组描述目标运行时环境的捆绑库声明文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;jsx&quot;: &quot;preserve&quot;,                                /* 指定生成的 JSX 代码。 */</span></span><br><span class="line">    <span class="comment">// &quot;experimentalDecorators&quot;: true,                   /* 启用对 TC39 阶段 2 草案装饰器的实验性支持。 */</span></span><br><span class="line">    <span class="comment">// &quot;emitDecoratorMetadata&quot;: true,                    /* 为源文件中的修饰声明发出设计类型元数据。 */</span></span><br><span class="line">    <span class="comment">// &quot;jsxFactory&quot;: &quot;&quot;,                                 /* 指定在以 React JSX emit 为目标时使用的 JSX 工厂函数，例如&#x27;React.createElement&#x27; 或 &#x27;h&#x27;。 */</span></span><br><span class="line">    <span class="comment">// &quot;jsxFragmentFactory&quot;: &quot;&quot;,                         /* 在定位 React JSX emit 时指定用于片段的 JSX 片段引用，例如&#x27;React.Fragment&#x27; 或 &#x27;Fragment&#x27;。 */</span></span><br><span class="line">    <span class="comment">// &quot;jsxImportSource&quot;: &quot;&quot;,                            /* 指定模块说明符，用于在使用“jsx: react-jsx*”时导入 JSX 工厂函数。 */</span></span><br><span class="line">    <span class="comment">// &quot;reactNamespace&quot;: &quot;&quot;,                             /* 指定为“createElement”调用的对象。这仅适用于针对“反应”JSX 发出的情况。 */</span></span><br><span class="line">    <span class="comment">// &quot;noLib&quot;: true,                                    /* 禁用包括任何库文件，包括默认的 lib.d.ts。 */</span></span><br><span class="line">    <span class="comment">// &quot;useDefineForClassFields&quot;: true,                  /* 发出符合 ECMAScript 标准的类字段。 */</span></span><br><span class="line">    <span class="comment">// &quot;moduleDetection&quot;: &quot;auto&quot;,                        /* 控制使用什么方法来检测模块格式的 JS 文件。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Modules */</span></span><br><span class="line">    <span class="attr">&quot;module&quot;</span>: <span class="string">&quot;commonjs&quot;</span>,                                <span class="comment">/* 指定生成的模块代码。 */</span></span><br><span class="line">    <span class="attr">&quot;rootDir&quot;</span>: <span class="string">&quot;./ts&quot;</span>,                                   <span class="comment">/* 在源文件中指定根文件夹。 */</span></span><br><span class="line">    <span class="comment">// &quot;moduleResolution&quot;: &quot;node&quot;,                       /* 指定 TypeScript 如何从给定的模块说明符查找文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;baseUrl&quot;: &quot;./&quot;,                                  /* 指定基本目录以解析非相对模块名称。 */</span></span><br><span class="line">    <span class="comment">// &quot;paths&quot;: &#123;&#125;,                                      /* 指定一组将导入重新映射到其他查找位置的条目。 */</span></span><br><span class="line">    <span class="comment">// &quot;rootDirs&quot;: [],                                   /* 解析模块时允许将多个文件夹视为一个文件夹。 */</span></span><br><span class="line">    <span class="comment">// &quot;typeRoots&quot;: [],                                  /* 指定多个文件夹，其行为类似于“./node_modules/@types”。 */</span></span><br><span class="line">    <span class="comment">// &quot;types&quot;: [],                                      /* 指定要包含的类型包名称而不在源文件中引用。 */</span></span><br><span class="line">    <span class="comment">// &quot;allowUmdGlobalAccess&quot;: true,                     /* 允许从模块访问 UMD 全局变量。 */</span></span><br><span class="line">    <span class="comment">// &quot;moduleSuffixes&quot;: [],                             /* 解析模块时要搜索的文件名后缀列表。 */</span></span><br><span class="line">    <span class="comment">// &quot;resolveJsonModule&quot;: true,                        /* 启用导入 .json 文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;noResolve&quot;: true,                                /* 禁止“import”、“require”或“&lt;reference&gt;”扩展 TypeScript 应添加到项目中的文件数量。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* JavaScript Support */</span></span><br><span class="line">    <span class="comment">// &quot;allowJs&quot;: true,                                  /* 允许 JavaScript 文件成为您程序的一部分。使用“checkJS”选项从这些文件中获取错误。 */</span></span><br><span class="line">    <span class="comment">// &quot;checkJs&quot;: true,                                  /* 在类型检查的 JavaScript 文件中启用错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;maxNodeModuleJsDepth&quot;: 1,                        /* 指定用于检查“node_modules”中的 JavaScript 文件的最大文件夹深度。仅适用于“allowJs”。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Emit */</span></span><br><span class="line">    <span class="comment">// &quot;declaration&quot;: true,                              /* 从项目中的 TypeScript 和 JavaScript 文件生成 .d.ts 文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;declarationMap&quot;: true,                           /* 为 d.ts 文件创建源映射。 */</span></span><br><span class="line">    <span class="comment">// &quot;emitDeclarationOnly&quot;: true,                      /* 只输出 d.ts 文件，不输出 JavaScript 文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;sourceMap&quot;: true,                                /* 为发出的 JavaScript 文件创建源映射文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;outFile&quot;: &quot;./&quot;,                                  /* 指定一个将所有输出捆绑到一个 JavaScript 文件中的文件。如果 &#x27;declaration&#x27; 为真，则还指定一个捆绑所有 .d.ts 输出的文件。 */</span></span><br><span class="line">    <span class="attr">&quot;outDir&quot;</span>: <span class="string">&quot;./js&quot;</span>,                                    <span class="comment">/* 为所有发出的文件指定一个输出文件夹。 */</span></span><br><span class="line">    <span class="comment">// &quot;removeComments&quot;: true,                           /* 禁止发表评论。 */</span></span><br><span class="line">    <span class="comment">// &quot;noEmit&quot;: true,                                   /* 禁止从编译中发出文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;importHelpers&quot;: true,                            /* 允许每个项目从 tslib 导入一次辅助函数，而不是每个文件都包含它们。 */</span></span><br><span class="line">    <span class="comment">// &quot;importsNotUsedAsValues&quot;: &quot;remove&quot;,               /* 为仅用于类型的导入指定发出/检查行为。 */</span></span><br><span class="line">    <span class="comment">// &quot;downlevelIteration&quot;: true,                       /* 为迭代发出更合规但冗长且性能较低的 JavaScript。 */</span></span><br><span class="line">    <span class="comment">// &quot;sourceRoot&quot;: &quot;&quot;,                                 /* 指定调试器查找参考源代码的根路径。 */</span></span><br><span class="line">    <span class="comment">// &quot;mapRoot&quot;: &quot;&quot;,                                    /* 指定调试器应该定位映射文件而不是生成位置的位置。 */</span></span><br><span class="line">    <span class="comment">// &quot;inlineSourceMap&quot;: true,                          /* 在发出的 JavaScript 中包含 sourcemap 文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;inlineSources&quot;: true,                            /* 在发出的 JavaScript 中的 sourcemaps 中包含源代码。 */</span></span><br><span class="line">    <span class="comment">// &quot;emitBOM&quot;: true,                                  /* 在输出文件的开头发出 UTF-8 字节顺序标记 (BOM)。 */</span></span><br><span class="line">    <span class="comment">// &quot;newLine&quot;: &quot;crlf&quot;,                                /* 设置发出文件的换行符。 */</span></span><br><span class="line">    <span class="comment">// &quot;stripInternal&quot;: true,                            /* 禁用发出在其 JSDoc 注释中具有“@internal”的声明。 */</span></span><br><span class="line">    <span class="comment">// &quot;noEmitHelpers&quot;: true,                            /* 禁止在编译输出中生成自定义辅助函数，如“__extends”。 */</span></span><br><span class="line">    <span class="comment">// &quot;noEmitOnError&quot;: true,                            /* 如果报告任何类型检查错误，则禁用发出文件。 */</span></span><br><span class="line">    <span class="comment">// &quot;preserveConstEnums&quot;: true,                       /* 禁止擦除生成代码中的“const enum”声明。 */</span></span><br><span class="line">    <span class="comment">// &quot;declarationDir&quot;: &quot;./&quot;,                           /* 指定生成的声明文件的输出目录。 */</span></span><br><span class="line">    <span class="comment">// &quot;preserveValueImports&quot;: true,                     /* 在 JavaScript 输出中保留未使用的导入值，否则这些值将被删除。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Interop Constraints */</span></span><br><span class="line">    <span class="comment">// &quot;isolatedModules&quot;: true,                          /* 确保每个文件都可以安全地转译而不依赖于其他导入。 */</span></span><br><span class="line">    <span class="comment">// &quot;allowSyntheticDefaultImports&quot;: true,             /* 当模块没有默认导出时，允许“从 y 导入 x”。 */</span></span><br><span class="line">    <span class="attr">&quot;esModuleInterop&quot;</span>: <span class="literal">true</span>,                             <span class="comment">/* 发出额外的 JavaScript 以简化对导入 CommonJS 模块的支持。这会启用“allowSyntheticDefaultImports”以实现类型兼容性。 */</span></span><br><span class="line">    <span class="comment">// &quot;preserveSymlinks&quot;: true,                         /* 禁用将符号链接解析为其真实路径。这与节点中的相同标志相关。 */</span></span><br><span class="line">    <span class="attr">&quot;forceConsistentCasingInFileNames&quot;</span>: <span class="literal">true</span>,            <span class="comment">/* 确保外壳在进口中是正确的。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Type Checking */</span></span><br><span class="line">    <span class="attr">&quot;strict&quot;</span>: <span class="literal">true</span>,                                      <span class="comment">/* 启用所有严格的类型检查选项。 */</span></span><br><span class="line">    <span class="comment">// &quot;noImplicitAny&quot;: true,                            /* 为具有隐含“任何”类型的表达式和声明启用错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;strictNullChecks&quot;: true,                         /* 进行类型检查时，请考虑“null”和“undefined”。 */</span></span><br><span class="line">    <span class="comment">// &quot;strictFunctionTypes&quot;: true,                      /* 分配函数时，检查以确保参数和返回值是子类型兼容的。 */</span></span><br><span class="line">    <span class="comment">// &quot;strictBindCallApply&quot;: true,                      /* 检查“绑定”、“调用”和“应用”方法的参数是否与原始函数匹配。 */</span></span><br><span class="line">    <span class="comment">// &quot;strictPropertyInitialization&quot;: true,             /* 检查已声明但未在构造函数中设置的类属性。 */</span></span><br><span class="line">    <span class="comment">// &quot;noImplicitThis&quot;: true,                           /* 当“this”的类型为“any”时启用错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;useUnknownInCatchVariables&quot;: true,               /* 默认 catch 子句变量为“未知”而不是“任何”。 */</span></span><br><span class="line">    <span class="comment">// &quot;alwaysStrict&quot;: true,                             /* 确保始终发出“使用严格”。 */</span></span><br><span class="line">    <span class="comment">// &quot;noUnusedLocals&quot;: true,                           /* 未读取局部变量时启用错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;noUnusedParameters&quot;: true,                       /* 未读取函数参数时引发错误。 */</span></span><br><span class="line">    <span class="comment">// &quot;exactOptionalPropertyTypes&quot;: true,               /* 按照书面解释可选属性类型，而不是添加“未定义”。 */</span></span><br><span class="line">    <span class="comment">// &quot;noImplicitReturns&quot;: true,                        /* 为未在函数中显式返回的代码路径启用错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;noFallthroughCasesInSwitch&quot;: true,               /* 在 switch 语句中为 fallthrough cases 启用错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;noUncheckedIndexedAccess&quot;: true,                 /* 使用索引访问时，将“未定义”添加到类型。 */</span></span><br><span class="line">    <span class="comment">// &quot;noImplicitOverride&quot;: true,                       /* 确保派生类中的覆盖成员标有覆盖修饰符。 */</span></span><br><span class="line">    <span class="comment">// &quot;noPropertyAccessFromIndexSignature&quot;: true,       /* 强制对使用索引类型声明的键使用索引访问器。 */</span></span><br><span class="line">    <span class="comment">// &quot;allowUnusedLabels&quot;: true,                        /* 禁用未使用标签的错误报告。 */</span></span><br><span class="line">    <span class="comment">// &quot;allowUnreachableCode&quot;: true,                     /* 禁用无法访问代码的错误报告。 */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Completeness */</span></span><br><span class="line">    <span class="comment">// &quot;skipDefaultLibCheck&quot;: true,                      /* 跳过类型检查 TypeScript 附带的 .d.ts 文件。 */</span></span><br><span class="line">    <span class="attr">&quot;skipLibCheck&quot;</span>: <span class="literal">true</span>                                 <span class="comment">/* 跳过类型检查所有 .d.ts 文件。 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们就可以使用下面命令让ts文件自动编译了，而不是像上面那样手动编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tsc --w</span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>如果要使用ts文件中的函数，则引入它编译后生成的js文件，然后就可以使用了</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用export关键字"><a href="#使用export关键字" class="headerlink" title="使用export关键字"></a>使用export关键字</h3><p>如果使用了<code>export</code>关键字以供其它ts文件引用，需要在引用js文件的代码上面加上<code>&lt;script&gt;exports = &#123;&#125;&lt;/script&gt;</code>，不然会报错，报错信息为<code>Uncaught ReferenceError: exports is not defined</code>，示例代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 加上的代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">exports</span> = &#123;&#125;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入js --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;TypeScript 是JavaScript的一个超集，支持ES6标准，由微软开发的自由和开源的编程语言，TypeScript的设计目标是开</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="TypeScript" scheme="https://blog.zoutl.cn/tags/TypeScript/"/>
    
  </entry>
  
  <entry>
    <title>CSS中margin和padding的区别</title>
    <link href="https://blog.zoutl.cn/560.html"/>
    <id>https://blog.zoutl.cn/560.html</id>
    <published>2023-01-14T17:28:48.000Z</published>
    <updated>2023-01-15T15:43:56.664Z</updated>
    
    <content type="html"><![CDATA[<h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><p>margin对<code>整个标签</code>起作用，是外边距；而padding对<code>标签的内容</code>起作用，是内边距</p><p>下图中<code>div2</code>使用了margin和padding，margin是<code>div2</code>和<code>div1</code>的边距，padding是<code>div2</code>和<code>div3</code>的边距</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230115233758713.png" alt="image-20230115233758713" style="zoom: 50%;" /><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="margin"><a href="#margin" class="headerlink" title="margin"></a>margin</h4><table><thead><tr><th align="center">语法结构</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>margin-left:10px</code></td><td align="center">左外边距</td></tr><tr><td align="center"><code>margin-right:10px</code></td><td align="center">右外边距</td></tr><tr><td align="center"><code>margin-top:10px</code></td><td align="center">上外边距</td></tr><tr><td align="center"><code>margin-bottom:10px</code></td><td align="center">下外边距</td></tr><tr><td align="center"><code>margin:10px</code></td><td align="center">四边统一外边距</td></tr><tr><td align="center"><code>margin:10px 20px</code></td><td align="center">上下、左右外边距</td></tr><tr><td align="center"><code>margin:10px 20px 30px</code></td><td align="center">上、左右、下外边距</td></tr><tr><td align="center"><code>margin:10px 20px 30px 40px</code></td><td align="center">上、右、下、左外边距</td></tr></tbody></table><h4 id="padding"><a href="#padding" class="headerlink" title="padding"></a>padding</h4><table><thead><tr><th align="center">语法结构</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>padding-left:10px</code></td><td align="center">左内边距</td></tr><tr><td align="center"><code>padding-right:10px</code></td><td align="center">右内边距</td></tr><tr><td align="center"><code>padding-top:10px</code></td><td align="center">上内边距</td></tr><tr><td align="center"><code>padding-bottom:10px</code></td><td align="center">下内边距</td></tr><tr><td align="center"><code>padding:10px</code></td><td align="center">四边统一内边距</td></tr><tr><td align="center"><code>padding:10px 20px</code></td><td align="center">上下、左右内边距</td></tr><tr><td align="center"><code>padding:10px 20px 30px</code></td><td align="center">上、左右、下内边距</td></tr><tr><td align="center"><code>padding:10px 20px 30px 40px</code></td><td align="center">上、右、下、左内边距</td></tr></tbody></table><h4 id="属性可能取的值"><a href="#属性可能取的值" class="headerlink" title="属性可能取的值"></a>属性可能取的值</h4><table><thead><tr><th align="center">单位</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>length</code></td><td align="center">规定具体单位记的内边距长度</td></tr><tr><td align="center"><code>%</code></td><td align="center">基于父元素的宽度的内边距的长度</td></tr><tr><td align="center"><code>auto</code></td><td align="center">浏览器计算内边距</td></tr><tr><td align="center"><code>inherit</code></td><td align="center">规定应该从父元素继承内边距</td></tr></tbody></table><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS中margin和padding的区别<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.boderOuter</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> solid red;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-left</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-right</span>: <span class="number">20%</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.boderInter1</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> dotted blue;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.boderInter2</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>: <span class="number">2px</span> dotted blue;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0px</span> <span class="number">5px</span> <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">0px</span> <span class="number">6px</span> <span class="number">6px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boderOuter&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boderInter1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>111<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boderOuter&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20px;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boderInter2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>222<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h4><p>通过两个<code>div</code>区块对比可以看出：margin对整个标签有效，padding则对起内容有效</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230115022424158.png" alt="image-20230115022424158"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;区别&quot;&gt;&lt;a href=&quot;#区别&quot; class=&quot;headerlink&quot; title=&quot;区别&quot;&gt;&lt;/a&gt;区别&lt;/h3&gt;&lt;p&gt;margin对&lt;code&gt;整个标签&lt;/code&gt;起作用，是外边距；而padding对&lt;code&gt;标签的内容&lt;/code&gt;起作用，是内边距&lt;/</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="HTML" scheme="https://blog.zoutl.cn/tags/HTML/"/>
    
    <category term="CSS" scheme="https://blog.zoutl.cn/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>使用JSON Server快速搭建服务端接口</title>
    <link href="https://blog.zoutl.cn/559.html"/>
    <id>https://blog.zoutl.cn/559.html</id>
    <published>2023-01-13T04:50:15.000Z</published>
    <updated>2023-01-14T23:02:31.950Z</updated>
    
    <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>JSON Server的作用是用来模拟服务端接口数据，一般用在前后端分离后，前端人员可以不依赖API开发，而在本地搭建一个JSON服务，自己产生测试数据</p><h3 id="安装和启动"><a href="#安装和启动" class="headerlink" title="安装和启动"></a>安装和启动</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>使用npm安装，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g json-server</span><br></pre></td></tr></table></figure><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>要在JSON数据文件所在的文件夹打开cmd命令窗口并使用以下命令，启动命令如下所示，默认端口是<code>3000</code>，使用的数据文件是<code>db.json</code>（没有这个文件会自动新建，名称可以自己改掉）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json-server --watch db.json</span><br></pre></td></tr></table></figure><p>如果要修改端口加上<code>--port</code>参数，后面接端口号，下面命令的端口号是<code>1314</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json-server --watch --port 1314 db.json</span><br></pre></td></tr></table></figure><p>相关启动参数如下表所示</p><table><thead><tr><th align="center">参数</th><th align="center">简写</th><th align="center">默认值</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>--config</code></td><td align="center"><code>-c</code></td><td align="center">指定配置文件</td><td align="center">[默认值: “json-server.json”]</td></tr><tr><td align="center"><code>--port</code></td><td align="center"><code>-p</code></td><td align="center">设置端口 [默认值: 3000]</td><td align="center">Number</td></tr><tr><td align="center"><code>--host</code></td><td align="center"><code>-H</code></td><td align="center">设置域 [默认值: “0.0.0.0”]</td><td align="center">String</td></tr><tr><td align="center"><code>--watch</code></td><td align="center"><code>-w</code></td><td align="center">Watch file(s)</td><td align="center">是否监听</td></tr><tr><td align="center"><code>--routes</code></td><td align="center"><code>-r</code></td><td align="center">指定自定义路由</td><td align="center"></td></tr><tr><td align="center"><code>--middlewares</code></td><td align="center"><code>-m</code></td><td align="center">指定中间件 files</td><td align="center">[数组]</td></tr><tr><td align="center"><code>--static</code></td><td align="center"><code>-s</code></td><td align="center">Set static files directory</td><td align="center">静态目录,类比：express的静态目录</td></tr><tr><td align="center"><code>--readonly</code></td><td align="center"><code>--ro</code></td><td align="center">Allow only GET requests [布尔]</td><td align="center"></td></tr><tr><td align="center"><code>--nocors</code></td><td align="center"><code>--nc</code></td><td align="center">Disable Cross-Origin Resource Sharing [布尔]</td><td align="center"></td></tr><tr><td align="center"><code>--no</code></td><td align="center"><code>gzip</code></td><td align="center">--ng Disable GZIP Content-Encoding [布尔]</td><td align="center"></td></tr><tr><td align="center"><code>--snapshots</code></td><td align="center"><code>-S</code></td><td align="center">Set snapshots directory [默认值: “.”]</td><td align="center"></td></tr><tr><td align="center"><code>--delay</code></td><td align="center"><code>-d</code></td><td align="center">Add delay to responses (ms)</td><td align="center"></td></tr><tr><td align="center"><code>--id</code></td><td align="center"><code>-i</code></td><td align="center">Set database id property (e.g. _id) [默认值: “id”]</td><td align="center"></td></tr><tr><td align="center"><code>--foreignKeySuffix</code></td><td align="center"><code>--</code></td><td align="center">fks Set foreign key suffix (e.g. _id as in post_id)</td><td align="center">[默认值: “Id”]</td></tr><tr><td align="center"><code>--help</code></td><td align="center"><code>-h</code></td><td align="center">显示帮助信息</td><td align="center">[布尔]</td></tr><tr><td align="center"><code>--version</code></td><td align="center"><code>-v</code></td><td align="center">显示版本号</td><td align="center">[布尔]</td></tr></tbody></table><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="数据文件"><a href="#数据文件" class="headerlink" title="数据文件"></a>数据文件</h4><p>要测试的数据文件<code>db.json</code>内容如下，<code>students</code>和<code>classes</code>是复数形式，学生的班级id用<code>classId</code>表示，班级的学生们的id用<code>studentIds</code>表示，不然关联查询可能会有问题</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;students&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小花&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;21&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小白&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;classes&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程1班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;4&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程2班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [<span class="string">&quot;2&quot;</span>]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程3班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [<span class="string">&quot;3&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><p>查询使用的是<code>GET</code>请求</p><blockquote><p>查询全部学生</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小花&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;21&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小白&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>根据id查询学生，RestFul风格，默认是根据id查询</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students/1</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>根据id查询学生，参数直接拼接在url中</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students?id=2</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>分页查询，<code>_page</code>是当前页，<code>_limit</code>是每页数据的数量（默认是10）</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students?_page=1&amp;_limit=2</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>查询学生（排序），<code>_sort</code>是要排序的字段，<code>_order</code>是排序的方式（默认是升序，也就是ASC）</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students?_sort=id&amp;_order=desc</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小白&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小花&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;21&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>关联查询（检索上级数据），根据学生数据里的班级id检索班级信息，<code>class</code>是<code>classId</code>去掉<code>Id</code>后的结果</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students?_expand=class</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;class&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程1班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;4&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;class&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程2班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;2&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小花&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;21&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;class&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程3班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;3&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小白&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;class&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程1班&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="string">&quot;4&quot;</span></span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><blockquote><p>关联查询（检索下级数据），根据班级数据里的学生id检索学生信息</p></blockquote><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/classes?_embed=students</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程1班&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;1&quot;</span>,</span><br><span class="line">      <span class="string">&quot;4&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;students&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小明&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小白&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;18&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程2班&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;2&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;students&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小林&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;22&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;2&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;软件工程3班&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;studentIds&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;3&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;students&quot;</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">&quot;id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;小花&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;age&quot;</span>: <span class="string">&quot;21&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;classId&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h4><p>添加使用的是<code>POST</code>请求，要使用HTTP请求工具发送请求（我使用的是<code>Apifox</code>）</p><p>参数不能直接拼接在url中要放在body中（全部参数都加上，包括id，id不要和前面重复），我这里JSON的数据类型都是String而不是Number（包括id），主要是为了关联查询不出问题</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230113164645049.png" alt="image-20230113164645049"></p><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>修改使用的是<code>PATCH</code>请求，参数不能直接拼接在url中要放在body中，但是id要放在url中（RestFul风格）</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students/5</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230113164723366.png" alt="image-20230113164723366"></p><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>修改使用的是<code>DELETE</code>请求，id直接放在url中（RestFul风格）</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:3000/students/5</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20230113164813597.png" alt="image-20230113164813597"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;JSON Server的作用是用来模拟服务端接口数据，一般用在前后端分离后，前端人员可以不依赖API开发，而在本地搭建一个JSON服务，自己</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="json-server" scheme="https://blog.zoutl.cn/tags/json-server/"/>
    
  </entry>
  
</feed>
