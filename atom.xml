<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeDao&#39;s Blog</title>
  
  
  <link href="https://blog.zoutl.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zoutl.cn/"/>
  <updated>2022-12-11T15:29:34.615Z</updated>
  <id>https://blog.zoutl.cn/</id>
  
  <author>
    <name>LeDao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决Git的代码合并冲突</title>
    <link href="https://blog.zoutl.cn/541.html"/>
    <id>https://blog.zoutl.cn/541.html</id>
    <published>2022-12-11T14:41:28.000Z</published>
    <updated>2022-12-11T15:29:34.615Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>两个人都修改了同一个文件，第一个人进行push操作后，如果第二个人也进行push操作，那么第二个人就会出现代码合并冲突同时push失败</p><h3 id="情景复现"><a href="#情景复现" class="headerlink" title="情景复现"></a>情景复现</h3><p>本地仓库和远程GitHub仓库都有一个名为<code>bbb.txt</code>的文件，先在GitHub仓库中修改这个文件，然后在本地修改这个文件</p><p>本地的bbb.txt文件内容如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bbb</span><br><span class="line">bbb本地库修改</span><br><span class="line">bbb</span><br></pre></td></tr></table></figure><p>GitHub仓库的bbb.txt文件内容如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bbb</span><br><span class="line">bbb</span><br><span class="line">bbb远程库修改</span><br></pre></td></tr></table></figure><p>进行add操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><p>进行commit操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;修改bbb.txt&quot;</span></span><br></pre></td></tr></table></figure><p>进行push操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>会出现下图的错误，提示我们在再次push前先进行pull操作</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221211230156646.png" alt="image-20221211230156646"></p><h3 id="解决过程"><a href="#解决过程" class="headerlink" title="解决过程"></a>解决过程</h3><p>根据上面的提示进行pull操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>然后查看本地的bbb.txt文件的内容，多了一些东西，<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>和<code>=======</code>之间的内容是本地仓库和远程GitHub仓库冲突的内容（属于本地仓库），<code>=======</code>和<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code>之间的内容是远程GitHub仓库和本地仓库冲突的内容（属于远程GitHub仓库）</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bbb</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">bbb本地库修改</span><br><span class="line">bbb</span><br><span class="line">=======</span><br><span class="line">bbb</span><br><span class="line">bbb远程库修改</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4e4fb01336355e4e36f217905c8f2d0a883fcdc6</span><br></pre></td></tr></table></figure><p>解决冲突的方案有三个：（是修改本地仓库的bbb.txt文件）</p><ol><li><p>以本地仓库的代码为准，修改后的bbb.txt内容如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bbb</span><br><span class="line">bbb本地库修改</span><br><span class="line">bbb</span><br></pre></td></tr></table></figure></li><li><p>以远程GitHub仓库的代码为准，修改后的bbb.txt内容如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bbb</span><br><span class="line">bbb</span><br><span class="line">bbb远程库修改</span><br></pre></td></tr></table></figure></li><li><p>都保留，修改后的bbb.txt内容如下：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bbb</span><br><span class="line">bbb本地库修改</span><br><span class="line">bbb远程库修改</span><br></pre></td></tr></table></figure></li></ol><p>修改了本地仓库的bbb.txt文件后再次进行add操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add bbb.txt</span><br></pre></td></tr></table></figure><p>进行commit操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;以本地仓库的代码为准&quot;</span></span><br></pre></td></tr></table></figure><p>进行push操作，这次可以push成功了，去GitHub查看结果，bbb.txt的内容已经变成本地仓库的了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;两个人都修改了同一个文件，第一个人进行push操作后，如果第二个人也进行push操作，那么第二个人就会出现代码合并冲突同时push失败&lt;/p</summary>
      
    
    
    
    <category term="版本控制" scheme="https://blog.zoutl.cn/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
    <category term="Git" scheme="https://blog.zoutl.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Git将代码添加到暂存区时忽略一些文件</title>
    <link href="https://blog.zoutl.cn/540.html"/>
    <id>https://blog.zoutl.cn/540.html</id>
    <published>2022-12-10T03:07:11.000Z</published>
    <updated>2022-12-10T07:40:57.087Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>对于一些文件，如果我们不希望它们被Git提交的话，可以通过<code>.gitignore</code>文件配置规则，让这些文件不能添加到暂存区进而不能被提交到本地仓库</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-04-20_112748.png"></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h4><p>首先在仓库的根目录新建一个名为<code>.gitignore</code>的文件，我们可以在里面配置一些规则，让某些文件不能被提交</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221210123518045.png" alt="image-20221210123518045"></p><h4 id="规则说明"><a href="#规则说明" class="headerlink" title="规则说明"></a>规则说明</h4><h5 id="如何测试"><a href="#如何测试" class="headerlink" title="如何测试"></a>如何测试</h5><p>看规则有没有效果，可以通过<code>git status</code>命令来查看</p><h5 id="单个文件"><a href="#单个文件" class="headerlink" title="单个文件"></a>单个文件</h5><p>直接在<code>.gitignore</code>内加上这个文件的名称，例如我们要忽略根目录的<code>test.txt</code>文件，规则如下：（一行写一个规则，注释用<code>#</code>号）</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span> 忽略根目录下的test.txt</span><br><span class="line">test.txt</span><br><span class="line"></span><br><span class="line"><span class="params">#</span> 忽略根目录下的test文件夹内的1.txt</span><br><span class="line">test/1.txt</span><br></pre></td></tr></table></figure><h5 id="整个文件夹"><a href="#整个文件夹" class="headerlink" title="整个文件夹"></a>整个文件夹</h5><p>忽略根目录下的test文件夹</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test/</span><br></pre></td></tr></table></figure><h5 id="取反"><a href="#取反" class="headerlink" title="取反"></a>取反</h5><p>对于一些文件或文件夹，Git默认是不添加的，我们在忽略规则前面加上<code>!</code>即可</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">#</span> 我们假定test文件夹是默认不添加的，但是我们需要添加test文件夹的test.txt</span><br><span class="line">!test/test.txt</span><br></pre></td></tr></table></figure><p>另外，如果规则配置了<code>忽略test文件夹</code>，那么上面的规则是不会生效的，文件夹的优先级比较大</p><h5 id="过滤"><a href="#过滤" class="headerlink" title="过滤"></a>过滤</h5><p>过滤某种类型文件，例如过滤掉所有的txt格式的文件</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;对于一些文件，如果我们不希望它们被Git提交的话，可以通过&lt;code&gt;.gitignore&lt;/code&gt;文件配置规则，让这些文件不能添加到暂</summary>
      
    
    
    
    <category term="版本控制" scheme="https://blog.zoutl.cn/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="Git" scheme="https://blog.zoutl.cn/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Vant Weapp实现Area省市区选择组件的使用</title>
    <link href="https://blog.zoutl.cn/539.html"/>
    <id>https://blog.zoutl.cn/539.html</id>
    <published>2022-12-08T16:28:27.000Z</published>
    <updated>2022-12-10T14:28:51.344Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>官网建议省市区选择组件和弹出层组件配合使用，但是官网没有详细的例子，对于新手不是很友好，网上的博客也没有详细的教程，所以我把实现过程记录下来，方便以后使用</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h4><p>点击输入框会打开弹出层，在弹出层选择省市区并确认后，会把地址显示到输入框中</p><h4 id="引入省市区数据"><a href="#引入省市区数据" class="headerlink" title="引入省市区数据"></a>引入省市区数据</h4><p>通过npm命令安装官方默认的省市区数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @vant/area-data</span><br></pre></td></tr></table></figure><p>在页面js文件中引用，在代码的最上面加入下面代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;areaList&#125; <span class="keyword">from</span> <span class="string">&#x27;@vant/area-data&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="引入组件"><a href="#引入组件" class="headerlink" title="引入组件"></a>引入组件</h4><p>需要引入的三个组件分别是：<code>输入框</code>、<code>弹出层</code>、<code>省市区选择</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;van-field&quot;</span>: <span class="string">&quot;@vant/weapp/field/index&quot;</span>,</span><br><span class="line"><span class="string">&quot;van-popup&quot;</span>: <span class="string">&quot;@vant/weapp/popup/index&quot;</span>,</span><br><span class="line"><span class="string">&quot;van-area&quot;</span>: <span class="string">&quot;@vant/weapp/area/index&quot;</span></span><br></pre></td></tr></table></figure><h4 id="页面wxml代码"><a href="#页面wxml代码" class="headerlink" title="页面wxml代码"></a>页面wxml代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-cell-group</span> <span class="attr">bindtap</span>=<span class="string">&quot;showPopup&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-field</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123; area &#125;&#125;&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请选择省市区&quot;</span> <span class="attr">label</span>=<span class="string">&quot;省市区&quot;</span> <span class="attr">title-width</span>=<span class="string">&quot;4em&quot;</span> <span class="attr">is-link</span>=<span class="string">&quot;true&quot;</span> <span class="attr">readonly</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-cell-group</span>&gt;</span>江西省景德镇市珠山区新村街道</span><br><span class="line"><span class="tag">&lt;<span class="name">van-popup</span> <span class="attr">show</span>=<span class="string">&quot;&#123;&#123; show &#125;&#125;&quot;</span> <span class="attr">bind:close</span>=<span class="string">&quot;onClose&quot;</span> <span class="attr">position</span>=<span class="string">&quot;bottom&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-area</span> <span class="attr">area-list</span>=<span class="string">&quot;&#123;&#123; areaList &#125;&#125;&quot;</span> <span class="attr">columns-num</span>=<span class="string">&quot;&#123;&#123; 3 &#125;&#125;&quot;</span> <span class="attr">title</span>=<span class="string">&quot;选择省市区&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;value&#125;&#125;&quot;</span> <span class="attr">bind:cancel</span>=<span class="string">&quot;onCancel&quot;</span> <span class="attr">bind:confirm</span>=<span class="string">&quot;onConfirm&quot;</span> <span class="attr">bind:change</span>=<span class="string">&quot;onChange&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">van-popup</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="页面js代码"><a href="#页面js代码" class="headerlink" title="页面js代码"></a>页面js代码</h4><p>页面初始数据如下，value的默认值是为了让省市区选择组件一开始就选择一个地址，<code>110101</code>是官方默认的省市区数据中北京市东城区的代码（省市区选择组件可以通过区地址确定省和市）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页面的初始数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">data: &#123;</span><br><span class="line">address: &#x27;&#x27;,</span><br><span class="line">areaList,</span><br><span class="line">value: <span class="number">110101</span>,</span><br><span class="line">show: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面的一些事件如下，每个事件的作用看注释</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 打开弹出层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="title">showPopup</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.setData(&#123;</span><br><span class="line"><span class="attr">show</span>: <span class="literal">true</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭弹出层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="title">onClose</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.setData(&#123;</span><br><span class="line"><span class="attr">show</span>: <span class="literal">false</span></span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确认选择省市区触发的事件: 关闭弹出层后设置value和address的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;*&#125;</span> </span>e </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="title">onConfirm</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.onClose();</span><br><span class="line"><span class="keyword">let</span> address = e.detail.values[<span class="number">0</span>].name + e.detail.values[<span class="number">1</span>].name + e.detail.values[<span class="number">2</span>].name;</span><br><span class="line"><span class="keyword">let</span> code = e.detail.values[<span class="number">2</span>].code;</span><br><span class="line"><span class="built_in">this</span>.setData(&#123;</span><br><span class="line"><span class="attr">value</span>: code,</span><br><span class="line"><span class="attr">address</span>: address</span><br><span class="line">&#125;);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 点击取消后触发的事件: 关闭弹出层</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="title">onCancel</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.onClose();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果动图"><a href="#效果动图" class="headerlink" title="效果动图"></a>效果动图</h4><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-09015808.gif" style="zoom: 50%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;官网建议省市区选择组件和弹出层组件配合使用，但是官网没有详细的例子，对于新手不是很友好，网上的博客也没有详细的教程，所以我把实现过程记录下来</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Vant Weapp" scheme="https://blog.zoutl.cn/tags/Vant-Weapp/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot配置本地文件映射路径</title>
    <link href="https://blog.zoutl.cn/538.html"/>
    <id>https://blog.zoutl.cn/538.html</id>
    <published>2022-12-07T19:03:20.000Z</published>
    <updated>2022-12-08T13:33:07.661Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Spring Boot项目只能访问项目static文件夹内的文件，如果想访问磁盘上的其它文件，就需要配置一下本地文件映射路径了</p><h3 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h3><p>新建一个配置类，实现WebMvcConfigurerAdapter接口，然后在重写的方法中添加映射的路径和真实的文件路径，本地路径的格式有两种：（即下面代码的第二个字符串的内容）</p><ol><li>格式一：<code>file:E:\\data\\mall\\images\\swiper\\</code></li><li>格式二：<code>file:E:/data/mall/images/swiper/</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 本地文件映射路径配置类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-12-08 3:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FilePathConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/swiper/image/**&quot;</span>).addResourceLocations(<span class="string">&quot;file:E:\\data\\mall\\images\\swiper\\&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>我的项目端口为<code>8080</code>，在本地路径<code>E:\data\mall\images\swiper</code>中有一张图片<code>1.jpeg</code>，所以我可以通过<code>http://localhost:8080/swiper/image/1.jpeg</code>访问这张图片，如果可以看到图片则说明配置成功了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;Spring Boot项目只能访问项目static文件夹内的文件，如果想访问磁盘上的其它文件，就需要配置一下本地文件映射路径了&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Spring Boot" scheme="https://blog.zoutl.cn/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>让微信开发者工具支持Less</title>
    <link href="https://blog.zoutl.cn/537.html"/>
    <id>https://blog.zoutl.cn/537.html</id>
    <published>2022-12-07T16:21:39.000Z</published>
    <updated>2022-12-07T17:03:25.889Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Less可以让我们的代码更加简洁，尤其是可以使用嵌套代替层叠或与层叠结合使用</p><p>微信开发者工具要支持Less，需要安装一个名为<code>Easy LESS</code>的扩展</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="VS-Code安装扩展"><a href="#VS-Code安装扩展" class="headerlink" title="VS Code安装扩展"></a>VS Code安装扩展</h4><p>虽然微信开发者工具没有<code>Easy LESS</code>这个扩展，但是它支持我们从VS Code的已安装扩展中导入扩展，所以我们需要先在VS Code中安装这个扩展</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221208003553940.png" alt="image-20221208003553940"></p><h4 id="导入扩展"><a href="#导入扩展" class="headerlink" title="导入扩展"></a>导入扩展</h4><p>打开微信开发者工具，去扩展页操作，如下图所示</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221208004140355.png" alt="image-20221208004140355"></p><p>选择<code>mrcrowl.easy-less-1.7.4</code>这个文件夹，然后就开始安装了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221208004244518.png" alt="image-20221208004244518"></p><h4 id="修改扩展配置"><a href="#修改扩展配置" class="headerlink" title="修改扩展配置"></a>修改扩展配置</h4><p>首先打开<code>更多编辑器设置</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221208004737180.png" alt="image-20221208004737180"></p><p>搜索<code>Easy LESS</code>，打开该扩展的配置文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221208004923478.png" alt="image-20221208004923478"></p><p>在下图的位置加上代码<code>&quot;outExt&quot;: &quot;.wxss&quot;</code>，然后保存，这段代码是为了告诉微信开发者工具：目标文件的后缀名是wxss，默认是css</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221208005053798.png" alt="image-20221208005053798"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>我创建了一个名为<code>search-bar.less</code>的文件，那么它的目标文件就是<code>search-bar.wxss</code>，在<code>search-bar.less</code>中输入代码并保存后<code>search-bar.wxss</code>会自动生成代码</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-08%20005823.gif"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>Less的中文文档地址为：<a href="https://less.bootcss.com/">Less 快速入门 | Less.js 中文文档 - Less 中文网 (bootcss.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;Less可以让我们的代码更加简洁，尤其是可以使用嵌套代替层叠或与层叠结合使用&lt;/p&gt;
&lt;p&gt;微信开发者工具要支持Less，需要安装一个名为&lt;</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序引入iconfont矢量图标样式</title>
    <link href="https://blog.zoutl.cn/536.html"/>
    <id>https://blog.zoutl.cn/536.html</id>
    <published>2022-12-07T14:33:03.000Z</published>
    <updated>2022-12-07T15:04:04.649Z</updated>
    
    <content type="html"><![CDATA[<h3 id="生成Font-class"><a href="#生成Font-class" class="headerlink" title="生成Font class"></a>生成Font class</h3><p>具体步骤查看博客：<a href="https://blog.zoutl.cn/477.html">Hexo 的 Butterfly 主题使用 iconfont 图标 | LeDao’s Blog (zoutl.cn)</a>，<font color="#dd0000">看到生成 Font class就行，然后接着看本博客</font></p><h3 id="在小程序中使用"><a href="#在小程序中使用" class="headerlink" title="在小程序中使用"></a>在小程序中使用</h3><h4 id="复制样式代码"><a href="#复制样式代码" class="headerlink" title="复制样式代码"></a>复制样式代码</h4><p>点击链接，会打开一个页面，页面内容就是我们需要的样式代码，然后把它复制下来</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207225241081.png" alt="image-20221207225241081"></p><h4 id="复制到小程序"><a href="#复制到小程序" class="headerlink" title="复制到小程序"></a>复制到小程序</h4><p>首先新建一个名为<code>styles</code>的文件夹（和<code>pages</code>的位置是同一级），在这个文件夹里面新建一个名为<code>iconfont.wxss</code>的文件，把上一步复制到的样式代码复制进去</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207225510817.png" alt="image-20221207225510817"></p><h4 id="全局使用样式"><a href="#全局使用样式" class="headerlink" title="全局使用样式"></a>全局使用样式</h4><p>在<code>app.wxss</code>里面加入以下代码，然后就可以全局使用引入的iconfont图标了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 全局引入iconfont样式 */</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./styles/iconfont.wxss&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="使用图标"><a href="#使用图标" class="headerlink" title="使用图标"></a>使用图标</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-cart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>每次加入一个新图标或修改后，都需要重新获取样式代码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;生成Font-class&quot;&gt;&lt;a href=&quot;#生成Font-class&quot; class=&quot;headerlink&quot; title=&quot;生成Font class&quot;&gt;&lt;/a&gt;生成Font class&lt;/h3&gt;&lt;p&gt;具体步骤查看博客：&lt;a href=&quot;https://blog</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客报错: &quot;ENOENT: no such file or directory, open E:\hexo-blog\db.json&quot;</title>
    <link href="https://blog.zoutl.cn/535.html"/>
    <id>https://blog.zoutl.cn/535.html</id>
    <published>2022-12-07T12:07:49.000Z</published>
    <updated>2022-12-07T12:36:34.295Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>我把<code>14.17.1稳定版本</code>的Node.js卸载并安装最新版的Node.js后，使用<code>hexo algolia</code>命令上传Algolia索引时就报这个错误，报错原因是：<code>E:\hexo-blog\db.json</code>这个文件不存在</p><h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>执行<code>hexo g</code>命令后会自动生成一个<code>db.json</code>文件，但是执行完<code>hexo algolia</code>命令后，这个文件就被删除了，从而导致文件不存在而报错</p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>把Node.js卸载重新安装回原来的<code>14.17.1稳定版本</code>，如果有其它办法欢迎到最下面的评论区给我留言！！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;我把&lt;code&gt;14.17.1稳定版本&lt;/code&gt;的Node.js卸载并安装最新版的Node.js后，使用&lt;code&gt;he</summary>
      
    
    
    
    <category term="Hexo博客" scheme="https://blog.zoutl.cn/categories/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Hexo博客" scheme="https://blog.zoutl.cn/tags/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用Vite创建Vue3项目</title>
    <link href="https://blog.zoutl.cn/534.html"/>
    <id>https://blog.zoutl.cn/534.html</id>
    <published>2022-12-07T10:45:31.000Z</published>
    <updated>2022-12-07T12:53:27.561Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>和Vue CLI相比，Vite创建和启动项目都非常快，Vue.js的官方也推荐使用Vite</p><h3 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h3><ol><li><p>打开CMD，进入存放项目的文件夹</p></li><li><p>输入下面命令，然后填项目名称、选择Vue、选择JavaScript，项目几乎瞬间创建好了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vite@latest</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207185134249.png" alt="image-20221207185134249"></p></li><li><p>执行一下提示的3条命令以安装依赖和启动项目，启动后通过<code>http://localhost:5173</code>访问</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207185537687.png" alt="image-20221207185537687"></p></li><li><p>成功运行的界面如下图，如果要停止项目的运行，在CMD窗口按下复制的快捷键（<code>CTRL+C</code>），然后确认即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207185836447.png" alt="image-20221207185836447"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;和Vue CLI相比，Vite创建和启动项目都非常快，Vue.js的官方也推荐使用Vite&lt;/p&gt;
&lt;h3 id=&quot;创建过程&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
    <category term="Vite" scheme="https://blog.zoutl.cn/tags/Vite/"/>
    
  </entry>
  
  <entry>
    <title>Vue CLI3.x及以上版本创建Vue项目</title>
    <link href="https://blog.zoutl.cn/533.html"/>
    <id>https://blog.zoutl.cn/533.html</id>
    <published>2022-12-07T08:58:31.000Z</published>
    <updated>2022-12-07T12:53:21.570Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>3.x及以上版本的Vue CLI创建Vue项目有两种方法：</p><ol><li>使用命令创建，更方便</li><li>使用图形化界面，更人性化</li></ol><h3 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h3><p>主要看vue-cli的版本，如果版本是2.x，那么创建项目的命令为<code>vue init webpack 项目名称</code>；如果版本是3.x及以上，那么创建项目的命令为<code>vue create 项目名称</code></p><table><thead><tr><th align="center">名称</th><th align="center">版本</th></tr></thead><tbody><tr><td align="center">Node.js</td><td align="center">14.17.1</td></tr><tr><td align="center">npm</td><td align="center">6.14.13</td></tr><tr><td align="center">vue-cli</td><td align="center">5.0.8</td></tr></tbody></table><h3 id="创建过程"><a href="#创建过程" class="headerlink" title="创建过程"></a>创建过程</h3><h4 id="使用命令创建"><a href="#使用命令创建" class="headerlink" title="使用命令创建"></a>使用命令创建</h4><ol><li><p>打开CMD，进入存放项目的文件夹</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207173805890.png" alt="image-20221207173805890"></p></li><li><p>使用vue create命令创建项目，下面命令是创建一个名为<code>hello-world</code>的项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create hello-world</span><br></pre></td></tr></table></figure></li><li><p>然后选第三个，手动搭建环境</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207171705084.png" alt="image-20221207171705084"></p></li><li><p>接下来安装一些插件，按<code>空格键</code>选择或取消选择，选好后按<code>回车键</code>进行下一步</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207172050407.png" alt="image-20221207172050407"></p></li><li><p>选择Vue.js的版本，可以选择<code>3.x</code>或<code>2.x</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207172434463.png" alt="image-20221207172434463"></p></li><li><p>选择router的模式，后期可以更改，这里填<code>y</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207172632880.png" alt="image-20221207172632880"></p></li><li><p>然后把一些配置放在<code>package.json</code>（个人习惯，选哪个都没问题）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207173041954.png" alt="image-20221207173041954"></p></li><li><p>是否将当前选择的配置作为预设，下次新建项目时可以直接自动选择这些配置，我填<code>n</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207173333038.png" alt="image-20221207173333038"></p></li><li><p>项目创建好后，依次输入<code>cd hello-world</code>和<code>npm run serve</code>命令来启动项目，启动好后在浏览器地址栏输入<code>http://localhost:8080</code>即可访问，页面截图如下</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207174346837.png" alt="image-20221207174346837"></p></li><li><p>如果要停止项目的运行，在CMD窗口按下复制的快捷键（<code>CTRL+C</code>），然后确认即可</p></li></ol><h4 id="使用图形化界面"><a href="#使用图形化界面" class="headerlink" title="使用图形化界面"></a>使用图形化界面</h4><ol><li><p>打开CMD，进入存放项目的文件夹，然后执行<code>vue ui</code>命令</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207204642886.png" alt="image-20221207204642886"></p></li><li><p>在自动打开的页面开始新建项目</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207175845800.png" alt="image-20221207175845800"></p></li><li><p>项目详情如下图</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207180050304.png" alt="image-20221207180050304"></p></li><li><p>选择一套预设，也就是项目的模板，我们选手动自己配置</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207180254563.png" alt="image-20221207180254563"></p></li><li><p>安装插件，一般安装下图3个即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207180416711.png" alt="image-20221207180416711"></p></li><li><p>选择Vue.js的版本和router的模式，然后点击下面的创建按钮</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207180553946.png" alt="image-20221207180553946"></p></li><li><p>是否保存为预设，一般不保存，创建一个项目很方便的，然后等着创建成功就行了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207180752175.png" alt="image-20221207180752175"></p></li><li><p>安装<code>axios</code>和<code>element-plus</code>依赖</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207181042374.png" alt="image-20221207181042374"></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;3.x及以上版本的Vue CLI创建Vue项目有两种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用命令创建，更方便&lt;/li&gt;
&lt;li&gt;使用图形化界面</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>Windows系统升级Node.js和Vue CLI</title>
    <link href="https://blog.zoutl.cn/532.html"/>
    <id>https://blog.zoutl.cn/532.html</id>
    <published>2022-12-07T08:09:31.000Z</published>
    <updated>2022-12-07T10:59:33.547Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>最近想升级一下电脑上的Node.js和Vue CLI，看了许多技术博客，基本上都是使用命令行安装，我试了一下老是出问题，最后还是卸载重装更加简单暴力。卸载Node.js后，Vue CLI也会被卸载</p><p>不过以前使用npm命令安装过的一些东西都要重新安装，卸载前先去看看安装过什么，以方便安装回来，安装路径看下图</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207164058394.png" alt="image-20221207164058394"></p><h3 id="升级过程"><a href="#升级过程" class="headerlink" title="升级过程"></a>升级过程</h3><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><p>建议使用<code>Geek Uninstaller</code>来卸载Node.js，和使用控制面板卸载相比，<code>Geek Uninstaller</code>卸载得更干净，官网下载地址为：<a href="https://geekuninstaller.com/download">Geek Uninstaller - Download</a></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207164556852.png" alt="image-20221207164556852"></p><h4 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h4><p>安装Node.js步骤查看博客：<a href="https://blog.zoutl.cn/200.html">安装 vue-cli 脚手架 | LeDao’s Blog (zoutl.cn)</a>，安装好Node.js就行，先不安装Vue CLI（这是因为安装命令不一样）</p><h4 id="安装Vue-CLI"><a href="#安装Vue-CLI" class="headerlink" title="安装Vue CLI"></a>安装Vue CLI</h4><p>首先以管理员身份打开CMD，然后执行下面命令安装Vue CLI</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p>使用<code>vue -V</code>或<code>vue --version</code>查看Vue CLI的版本号，出现版本号说明安装成功了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221207165745889.png" alt="image-20221207165745889"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;最近想升级一下电脑上的Node.js和Vue CLI，看了许多技术博客，基本上都是使用命令行安装，我试了一下老是出问题，最后还是卸载重装更加</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Windows系统" scheme="https://blog.zoutl.cn/tags/Windows%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="Node.js" scheme="https://blog.zoutl.cn/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序与Java后端接口交互</title>
    <link href="https://blog.zoutl.cn/531.html"/>
    <id>https://blog.zoutl.cn/531.html</id>
    <published>2022-12-05T08:01:10.000Z</published>
    <updated>2022-12-05T08:54:44.108Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>微信小程序可以通过<code>wx.request</code>函数发起HTTPS网络请求，从Java后端接口动态获取数据，官方文档链接为：<a href="https://developers.weixin.qq.com/miniprogram/dev/api/network/request/wx.request.html#%E5%8A%9F%E8%83%BD%E6%8F%8F%E8%BF%B0">RequestTask | 微信开放文档 (qq.com)</a></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="跳过域名检测"><a href="#跳过域名检测" class="headerlink" title="跳过域名检测"></a>跳过域名检测</h4><p>使用<code>localhost</code>或其他开发环境接口时，控制台报错，我们需要跳过服务器域名的校验</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221205162652069.png" alt="image-20221205162652069" style="zoom: 50%;" /><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h4><h5 id="新建Spring-Boot项目"><a href="#新建Spring-Boot项目" class="headerlink" title="新建Spring Boot项目"></a>新建Spring Boot项目</h5><p>新建项目时，最少要添加一个<code>Spring Web</code>依赖</p><h5 id="application-yml配置文件"><a href="#application-yml配置文件" class="headerlink" title="application.yml配置文件"></a>application.yml配置文件</h5><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">tomcat:</span></span><br><span class="line">    <span class="attr">uri-encoding:</span> <span class="string">utf-8</span></span><br></pre></td></tr></table></figure><h5 id="HelloWorldController-java"><a href="#HelloWorldController-java" class="headerlink" title="HelloWorldController.java"></a>HelloWorldController.java</h5><p>下面接口可以通过<a href="http://localhost/helloWorld">localhost/helloWorld</a>进行访问</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-12-05 15:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorldController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/helloWorld&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">helloWord</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;HelloWorld &quot;</span> + id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="小程序代码"><a href="#小程序代码" class="headerlink" title="小程序代码"></a>小程序代码</h4><h5 id="页面wxml代码"><a href="#页面wxml代码" class="headerlink" title="页面wxml代码"></a>页面wxml代码</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/demo/demo.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>结果: <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>&#123;&#123;result&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span><span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px solid red;&quot;</span> <span class="attr">model:value</span>=<span class="string">&quot;&#123;&#123;id&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;margin-top: 14rpx;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">catchtap</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="页面js代码"><a href="#页面js代码" class="headerlink" title="页面js代码"></a>页面js代码</h5><p>只展示了关键代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/demo/demo.js</span></span><br><span class="line">Page(&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面的初始数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="attr">result</span>: <span class="string">&#x27;我是默认值&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="title">submit</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> _this = <span class="built_in">this</span>;</span><br><span class="line">        wx.request(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;http://localhost/helloWorld&#x27;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line">                <span class="attr">id</span>: _this.data.id</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="title">success</span>(<span class="params">res</span>)</span> &#123;</span><br><span class="line">                _this.setData(&#123;</span><br><span class="line">                    <span class="attr">result</span>: res.data</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-05%20165038.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信小程序可以通过&lt;code&gt;wx.request&lt;/code&gt;函数发起HTTPS网络请求，从Java后端接口动态获取数据，官方文档链接为：</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序组件使用slot标签</title>
    <link href="https://blog.zoutl.cn/530.html"/>
    <id>https://blog.zoutl.cn/530.html</id>
    <published>2022-12-05T06:54:28.000Z</published>
    <updated>2022-12-05T07:22:10.538Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>微信小程序组件通过使用slot标签，可以让使用这个组件的页面向slot标签按需插入一些内容，情况可分为使用<code>单个slot</code>和<code>多个slot</code>，本博客的代码是在<a href="https://blog.zoutl.cn/529.html">微信小程序自定义组件 | LeDao’s Blog (zoutl.cn)</a>的基础上进行修改</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="单个slot"><a href="#单个slot" class="headerlink" title="单个slot"></a>单个slot</h4><p>直接在组件的<code>wxml</code>文件里加上一个slot标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--components/input/input.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;font-size: 18px;&quot;</span>&gt;</span>自定义组件<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px solid red;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;inputValue&#125;&#125;&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用组件时，只需要在组件标签内加上要插入的内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/demo/demo.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-input</span> <span class="attr">input-value</span>=<span class="string">&quot;777&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: green;font-weight: bold;&quot;</span>&gt;</span>我是通过slot标签插入组件的内容<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">my-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下图所示，绿色文本是插入的</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221205150649283.png" alt="image-20221205150649283"></p><h4 id="多个slot"><a href="#多个slot" class="headerlink" title="多个slot"></a>多个slot</h4><p>需要使用多slot时，可以在组件js中声明启用，在组件定义时的选项中<code>启用多slot支持</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/input/input.js</span></span><br><span class="line">Component(&#123;</span><br><span class="line"></span><br><span class="line">    <span class="attr">options</span>: &#123;</span><br><span class="line">        <span class="attr">multipleSlots</span>: <span class="literal">true</span> <span class="comment">//开启多slot支持</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组件的属性列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">properties</span>: &#123;</span><br><span class="line">        <span class="attr">inputValue</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="number">666</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组件的初始数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">data</span>: &#123;&#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组件的方法列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">methods</span>: &#123;&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>组件的slot标签需要加上一个<code>name</code>属性，这样在使用组件时就可以根据name的值准确插入内容了，组件页面代码如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--components/input/input.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;before&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;font-size: 18px;&quot;</span>&gt;</span>自定义组件<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px solid red;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;inputValue&#125;&#125;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;after&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用组件时，通过slot属性将内容插入组件额不同slot标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/demo/demo.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-input</span> <span class="attr">input-value</span>=<span class="string">&quot;777&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">slot</span>=<span class="string">&quot;before&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: green;font-weight: bold;&quot;</span>&gt;</span>前面<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">text</span> <span class="attr">slot</span>=<span class="string">&quot;after&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: green;font-weight: bold;&quot;</span>&gt;</span>后面<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">my-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下图所示，绿色文本是插入的</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221205152023368.png" alt="image-20221205152023368"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信小程序组件通过使用slot标签，可以让使用这个组件的页面向slot标签按需插入一些内容，情况可分为使用&lt;code&gt;单个slot&lt;/cod</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序自定义组件</title>
    <link href="https://blog.zoutl.cn/529.html"/>
    <id>https://blog.zoutl.cn/529.html</id>
    <published>2022-12-05T05:47:21.000Z</published>
    <updated>2022-12-05T08:52:31.631Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>开发者可以将页面内的功能模块抽象成自定义组件，以便在不同的页面中重复使用；也可以将复杂的页面拆分成多个低耦合的模块，有助于代码维护，自定义组件在使用时与基础组件非常相似</p><p>类似于页面，一个自定义组件由 <code>json</code>、<code>wxml</code>、<code>wxss</code>、<code>js</code> 4个文件组成</p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="新建Component"><a href="#新建Component" class="headerlink" title="新建Component"></a>新建Component</h4><p>首先新建一个文件夹，命名为<code>components</code>，和<code>pages</code>文件夹的位置同级，用于管理所有组件</p><p>在<code>components</code>文件夹内新建一个文件夹，命名为<code>input</code>，右键点击这个文件夹并选择新建Component，也命名为<code>input</code>，项目结构如下图所示</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221205140702088.png" alt="image-20221205140702088"></p><h4 id="组件wxml代码"><a href="#组件wxml代码" class="headerlink" title="组件wxml代码"></a>组件wxml代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--components/input/input.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;font-size: 18px;&quot;</span>&gt;</span>自定义组件<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px solid red;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#123;&#123;inputValue&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="组件js文件"><a href="#组件js文件" class="headerlink" title="组件js文件"></a>组件js文件</h4><p>只改了属性列表，定义了一个属性<code>inputValue</code>，数据类型为<code>Number</code>，默认值为<code>666</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/input/input.js</span></span><br><span class="line">Component(&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组件的属性列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">properties</span>: &#123;</span><br><span class="line">        <span class="attr">inputValue</span>: &#123;</span><br><span class="line">            <span class="attr">type</span>: <span class="built_in">Number</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="number">666</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组件的初始数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 组件的方法列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="使用组件"><a href="#使用组件" class="headerlink" title="使用组件"></a>使用组件</h4><p>页面使用组件之前，首先在该页面的<code>json文件</code>中进行引用声明，需要提供每个自定义组件的<code>标签名</code>和对应的自定义组件<code>文件路径</code>，标签名怎么写都行</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;my-input&quot;</span>:<span class="string">&quot;/components/input/input&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面wxml代码如下，<code>my-input</code>和上面的要一样，<code>input-value</code>是上面定义的属性<code>inputValue</code>（改成inputValue也可以），如果不写<code>input-value</code>会显示其默认值666</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/demo/demo.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-input</span> <span class="attr">input-value</span>=<span class="string">&quot;777&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-05%20143716.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;开发者可以将页面内的功能模块抽象成自定义组件，以便在不同的页面中重复使用；也可以将复杂的页面拆分成多个低耦合的模块，有助于代码维护，自定义组</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序事件绑定</title>
    <link href="https://blog.zoutl.cn/528.html"/>
    <id>https://blog.zoutl.cn/528.html</id>
    <published>2022-12-04T15:46:27.000Z</published>
    <updated>2022-12-05T08:53:18.498Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>事件是视图层到逻辑层的通讯方式，可以将用户的行为反馈到逻辑层进行处理</p><p>事件分为冒泡事件和非冒泡事件：</p><ol><li>冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递（触发父节点的事件）</li><li>非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递</li></ol><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="简单事件绑定"><a href="#简单事件绑定" class="headerlink" title="简单事件绑定"></a>简单事件绑定</h4><blockquote><p>页面wxml代码，text标签实时显示num的值，两个按钮分别绑定<code>num加1</code>和<code>num减1</code>事件</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;font-size: 18px;&quot;</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;add&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>加1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;reduce&quot;</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20px;&quot;</span>&gt;</span>减1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/demo/demo.js</span></span><br><span class="line">Page(&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 页面的初始数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">num</span>: <span class="number">5</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">// 加1</span></span><br><span class="line">    <span class="function"><span class="title">add</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">            <span class="attr">num</span>: <span class="built_in">this</span>.data.num + <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line"><span class="comment">// 减1</span></span><br><span class="line">    <span class="function"><span class="title">reduce</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">            <span class="attr">num</span>: <span class="built_in">this</span>.data.num - <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>效果</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-04%20235906%20.gif"></p><h4 id="冒泡事件"><a href="#冒泡事件" class="headerlink" title="冒泡事件"></a>冒泡事件</h4><p>bindtap会让事件向父节点冒泡</p><blockquote><p>页面wxml代码，outer是middle的父节点，middle是inner的父节点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>bindtap冒泡<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">&#x27;handout&#x27;</span>&gt;</span></span><br><span class="line">   outer</span><br><span class="line">   <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">&#x27;handmiddle&#x27;</span>&gt;</span></span><br><span class="line">     middle</span><br><span class="line">     <span class="tag">&lt;<span class="name">view</span> <span class="attr">bindtap</span>=<span class="string">&#x27;handinner&#x27;</span>&gt;</span>inner<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js代码</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">handout: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;out&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">handmiddle</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;middle&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="attr">handinner</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;inner&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>效果</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-05%20000719.gif"></p><blockquote><p>分析</p></blockquote><ol><li>点击outer时，只会触发它本身的事件handout事件，即：<font color="#dd0000">只触发了handout事件</font></li><li>点击middle时，触发它本身的事件handmiddle事件后，向其父节点outer冒泡触发handout事件，即：<font color="#dd0000">依次触发了handmiddle、handout事件</font></li><li>点击inner时，触发它本身的事件handinner事件后，向其父节点middle冒泡触发handmiddle事件（相当于点击了middle），最后触发了handout事件，即：<font color="#dd0000">依次触发了handinner、handmiddle、handout事件</font></li></ol><h4 id="非冒泡事件"><a href="#非冒泡事件" class="headerlink" title="非冒泡事件"></a>非冒泡事件</h4><p>catchtap会阻止事件向父节点冒泡</p><blockquote><p>页面wxml代码</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span>catchtap非冒泡<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">view</span> <span class="attr">catchtap</span>=<span class="string">&#x27;handout&#x27;</span>&gt;</span></span><br><span class="line">   outer</span><br><span class="line">   <span class="tag">&lt;<span class="name">view</span> <span class="attr">catchtap</span>=<span class="string">&#x27;handmiddle&#x27;</span>&gt;</span></span><br><span class="line">     middle</span><br><span class="line">     <span class="tag">&lt;<span class="name">view</span> <span class="attr">catchtap</span>=<span class="string">&#x27;handinner&#x27;</span>&gt;</span>inner<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>js代码</p></blockquote><p>和上面一样</p><blockquote><p>效果</p></blockquote><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-05%20001655.gif"></p><blockquote><p>分析</p></blockquote><p>因为catchtap是阻止向父节点冒泡的，所以点击outer、middle、inner都只会触发自身的事件，catchtap的事件可以被子节点触发</p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>微信开发文档地址：<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxml/event.html#%E6%99%AE%E9%80%9A%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A">事件 | 微信开放文档 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;事件是视图层到逻辑层的通讯方式，可以将用户的行为反馈到逻辑层进行处理&lt;/p&gt;
&lt;p&gt;事件分为冒泡事件和非冒泡事件：&lt;/p&gt;
&lt;ol&gt;
&lt;li</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序数据简单绑定和双向绑定</title>
    <link href="https://blog.zoutl.cn/527.html"/>
    <id>https://blog.zoutl.cn/527.html</id>
    <published>2022-12-04T11:04:49.000Z</published>
    <updated>2022-12-05T08:53:33.305Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>微信小程序每个页面的数据都来自其对应的js文件的data</p><p>数据简单绑定就是，当data中的数据改变时，页面的数据也会实时改变（前者影响后者）</p><p>数据双向绑定就是，页面的数据和data中与之对应的数据只要有一个改变了，另一个就会改变（互相影响）</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221204192711603.png" alt="image-20221204192711603" style="zoom: 50%;" /><h3 id="简单绑定"><a href="#简单绑定" class="headerlink" title="简单绑定"></a>简单绑定</h3><p>数据绑定使用 Mustache 语法（双大括号）将变量包起来</p><h4 id="初始数据"><a href="#初始数据" class="headerlink" title="初始数据"></a>初始数据</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页面的初始数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">data: &#123;</span><br><span class="line">num: <span class="number">5</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h4 id="页面wxml代码"><a href="#页面wxml代码" class="headerlink" title="页面wxml代码"></a>页面wxml代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>初始数据的num是多少，页面的数据就是多少</p><h3 id="双向绑定"><a href="#双向绑定" class="headerlink" title="双向绑定"></a>双向绑定</h3><p>目前微信小程序的双向绑定只能是一个单一字段的绑定，下面以<code>input输入框</code>为例，和值双向绑定的格式为<code>model:value=&quot;&#123;&#123;num&#125;&#125;&quot;</code>（num为绑定的数据）</p><h4 id="初始数据-1"><a href="#初始数据-1" class="headerlink" title="初始数据"></a>初始数据</h4><p>和上面一样</p><h4 id="页面wxml代码-1"><a href="#页面wxml代码-1" class="headerlink" title="页面wxml代码"></a>页面wxml代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 单向绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;color: red;font-size: 18px;&quot;</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 双向绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 2px solid red;&quot;</span> <span class="attr">model:value</span>=<span class="string">&quot;&#123;&#123;num&#125;&#125;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><p>在输入框输入什么，文本就显示什么</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-04%20210021.gif"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>官方文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/data.html">数据绑定 | 微信开放文档 (qq.com)</a>和<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/two-way-bindings.html">简易双向绑定 | 微信开放文档 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;微信小程序每个页面的数据都来自其对应的js文件的data&lt;/p&gt;
&lt;p&gt;数据简单绑定就是，当data中的数据改变时，页面的数据也会实时改变（</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序上传项目</title>
    <link href="https://blog.zoutl.cn/526.html"/>
    <id>https://blog.zoutl.cn/526.html</id>
    <published>2022-12-04T08:44:49.000Z</published>
    <updated>2022-12-04T09:10:47.996Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改AppId"><a href="#修改AppId" class="headerlink" title="修改AppId"></a>修改AppId</h3><p>如果新建项目时没有输入自己的AppId，而是使用测试号，那么就需要修改AppId了，否则跳过此步骤（上传按钮不可用就需要修改，和下图一样）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221204164946475.png" alt="image-20221204164946475"></p><p>修改成自己的AppId，如何查看自己的AppId查看博客：<a href="https://blog.zoutl.cn/471.html">微信开发者工具创建小程序 | LeDao’s Blog (zoutl.cn)</a></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221204165337322.png" alt="image-20221204165337322"></p><h3 id="开始上传"><a href="#开始上传" class="headerlink" title="开始上传"></a>开始上传</h3><p>如果多次上传，只会保留最后一次上传的版本</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221204170341397.png" alt="image-20221204170341397"></p><h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><p>到<a href="https://mp.weixin.qq.com/">https://mp.weixin.qq.com</a>登录后，找到<code>版本管理</code>，到最下面的<code>开发版本</code>中查看</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221204170641622.png" alt="image-20221204170641622"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;修改AppId&quot;&gt;&lt;a href=&quot;#修改AppId&quot; class=&quot;headerlink&quot; title=&quot;修改AppId&quot;&gt;&lt;/a&gt;修改AppId&lt;/h3&gt;&lt;p&gt;如果新建项目时没有输入自己的AppId，而是使用测试号，那么就需要修改AppId了，否则跳过此步骤（</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序删除项目</title>
    <link href="https://blog.zoutl.cn/525.html"/>
    <id>https://blog.zoutl.cn/525.html</id>
    <published>2022-12-02T07:31:52.000Z</published>
    <updated>2022-12-04T09:16:09.212Z</updated>
    
    <content type="html"><![CDATA[<h3 id="查看所有项目"><a href="#查看所有项目" class="headerlink" title="查看所有项目"></a>查看所有项目</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221204153807920.png" alt="image-20221204153807920"></p><h3 id="删除记录"><a href="#删除记录" class="headerlink" title="删除记录"></a>删除记录</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-12-04%20154026.gif"></p><h3 id="删除本地文件"><a href="#删除本地文件" class="headerlink" title="删除本地文件"></a>删除本地文件</h3><p>上面只是删除了项目在微信开发者工具的记录而已，本地磁盘上的文件是没有删除的，我们需要找到项目的文件夹然后删除即可</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;查看所有项目&quot;&gt;&lt;a href=&quot;#查看所有项目&quot; class=&quot;headerlink&quot; title=&quot;查看所有项目&quot;&gt;&lt;/a&gt;查看所有项目&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://image.zoutl.cn/hexo-blog/blogImage/i</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序模板的使用与引用</title>
    <link href="https://blog.zoutl.cn/524.html"/>
    <id>https://blog.zoutl.cn/524.html</id>
    <published>2022-12-01T13:39:20.000Z</published>
    <updated>2022-12-04T09:15:37.429Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>对于一些重复使用的代码，我们可以将它封装成模板，以减少代码量</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>定义一个名为<code>template1</code>的模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;template1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;myName&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>初始数据，写在使用模板的页面js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 页面的初始数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">templateData</span>:&#123;</span><br><span class="line">    <span class="attr">myName</span>: <span class="string">&#x27;ledao&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>is属性</code>动态决定具体需要渲染哪个模板，<code>data属性</code>是要引用的数据，在定义模板的页面使用时不用import</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;template1&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;...templateData&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="import"><a href="#import" class="headerlink" title="import"></a>import</h4><p>在一个页面引用<code>定义在其它页面的模板</code>时，这个模板本来的js和css就不能用了，需要在引用模板的页面重新写js和css，示例代码如下（<code>.wxml后缀</code>加不加都行）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;/pages/templatetest/templatetest.wxml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;template1&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;...templateData&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="include"><a href="#include" class="headerlink" title="include"></a>include</h4><p>include将目标文件<strong>除了</strong> <code>&lt;template/&gt;</code> <code>&lt;wxs/&gt;</code> 外的整个代码引入，相当于是拷贝到 <code>include</code> 位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">src</span>=<span class="string">&quot;/pages/templatetest/templatetest.wxml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>微信官方文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/template.html">模板 | 微信开放文档 (qq.com)</a>和<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/import.html">引用 | 微信开放文档 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;对于一些重复使用的代码，我们可以将它封装成模板，以减少代码量&lt;/p&gt;
&lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;he</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序使用Vant Weapp组件库实现tabBar标签栏</title>
    <link href="https://blog.zoutl.cn/523.html"/>
    <id>https://blog.zoutl.cn/523.html</id>
    <published>2022-11-24T15:03:13.000Z</published>
    <updated>2022-12-04T09:15:48.886Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>和微信官方的tabBar标签栏相比，Vant Weapp的tabBar标签栏更加美观，还有徽标提示</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="引入tarBar组件"><a href="#引入tarBar组件" class="headerlink" title="引入tarBar组件"></a>引入tarBar组件</h4><p>引入步骤查看：<a href="https://blog.zoutl.cn/518.html">微信小程序引入 Vant Weapp 组件库 | LeDao’s Blog (zoutl.cn)</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;van-tabbar&quot;</span>: <span class="string">&quot;/dist/tabbar/index&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;van-tabbar-item&quot;</span>: <span class="string">&quot;/dist/tabbar-item/index&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><p>要新建的页面和上一篇博客一样，博客链接为：<a href="https://blog.zoutl.cn/522.html">微信小程序实现 tabBar 标签栏 | LeDao’s Blog (zoutl.cn)</a></p><h4 id="添加tarBar配置"><a href="#添加tarBar配置" class="headerlink" title="添加tarBar配置"></a>添加tarBar配置</h4><p>在<code>app.json</code>中添加tarBar配置，<code>&quot;custom&quot;: true</code>用来声明这个tarBar是定制的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;custom&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/type/type&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;分类&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/cart/cart&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;购物车&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/my/my&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;我的&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建Component"><a href="#新建Component" class="headerlink" title="新建Component"></a>新建Component</h4><p>首先在根目录下添加一个文件夹，该文件夹要命名为<code>custom-tab-bar</code>，然后右键点击这个文件夹，选择<code>新建Component</code>并输入<code>index</code></p><p>在<code>custom-tab-bar/index.wxml</code>中编写Vant Weapp的tarBar代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-tabbar</span> <span class="attr">active</span>=<span class="string">&quot;&#123;&#123; active &#125;&#125;&quot;</span> <span class="attr">active-color</span>=<span class="string">&quot;#e35d55&quot;</span> <span class="attr">bind:change</span>=<span class="string">&quot;onChange&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;wap-home-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;shouye&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/shouye/shouye&quot;</span>&gt;</span></span><br><span class="line">      首页</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;apps-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;type&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/type/type&quot;</span>&gt;</span></span><br><span class="line">      分类</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;shopping-cart-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;cart&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/cart/cart&quot;</span> <span class="attr">dot</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">      购物车</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;manager-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;my&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/my/my&quot;</span>&gt;</span></span><br><span class="line">      我的</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-tabbar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>custom-tab-bar/index.js</code>的<code>methods</code>函数里面添加以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户点击Tabbar的时候调用微信内置函数wx.switchTab()进行Tab切换</span></span><br><span class="line"><span class="function"><span class="title">onChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line"><span class="comment">// event.detail 的值为当前选中项的索引</span></span><br><span class="line"><span class="keyword">var</span> that = <span class="built_in">this</span></span><br><span class="line"><span class="keyword">switch</span> (event.detail) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/shouye/shouye&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/type/type&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/cart/cart&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/my/my&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//改变active属性，从而告诉Tabbar用户点击的是第几个Tab</span></span><br><span class="line"><span class="function"><span class="title">init</span>(<span class="params">active</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.setData(&#123;</span><br><span class="line"><span class="attr">active</span>: active</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改标签页的js文件"><a href="#修改标签页的js文件" class="headerlink" title="修改标签页的js文件"></a>修改标签页的js文件</h4><p>首先说明一下，标签页的索引从0开始</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221128002939747.png" alt="image-20221128002939747"></p><p>在首页的js文件的<code>onShow()</code>函数加入以下代码（<code>分类、购物车、我的</code>3个页面也要加），对应的索引看上图</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onShow</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.getTabBar().init(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-11-28%20003754.gif" style="zoom: 50%;" /><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>如果页面的内容过多需要下拉时，会有部分内容被Vant Weapp的tabBar标签栏遮住，即使使用<code>placeholder</code>属性也没有用，我们可以在该页面的最后加入下面代码解决这个问题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;padding-bottom: 20%;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果要使用微信官方的tarBar标签栏查看博客：<a href="https://blog.zoutl.cn/522.html">微信小程序实现 tabBar 标签栏 | LeDao’s Blog (zoutl.cn)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;和微信官方的tabBar标签栏相比，Vant Weapp的tabBar标签栏更加美观，还有徽标提示&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Vant Weapp" scheme="https://blog.zoutl.cn/tags/Vant-Weapp/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序实现tabBar标签栏</title>
    <link href="https://blog.zoutl.cn/522.html"/>
    <id>https://blog.zoutl.cn/522.html</id>
    <published>2022-08-01T08:37:33.000Z</published>
    <updated>2022-11-27T16:53:02.741Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>如果小程序是一个多tab应用（客户端窗口的底部或顶部有tab栏可以切换页面），可以通过tabBar配置项指定tab栏的表现，以及tab切换时显示的对应页面，<code>tab栏至少2个最多5个</code></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>本博客设计的标签栏有4个标签：首页、分类、购物车、我的，对应代码为：</p><table><thead><tr><th align="center">中文</th><th align="center">代码</th></tr></thead><tbody><tr><td align="center">首页</td><td align="center">shouye</td></tr><tr><td align="center">分类</td><td align="center">type</td></tr><tr><td align="center">购物车</td><td align="center">cart</td></tr><tr><td align="center">我的</td><td align="center">my</td></tr></tbody></table><h4 id="找图片"><a href="#找图片" class="headerlink" title="找图片"></a>找图片</h4><p>推荐网址：<a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p><p>每个标签页都需要找两张图片，分别在<code>标签被选中时</code>和<code>标签没有被选中时</code>使用，图片示例如下图所示（图片名称带<code>_</code>符号的是未选中的，否则是选中的）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221127190337437.png" alt="image-20221127190337437"></p><p>复制图片到项目中，直接新建一个文件夹（我命名为<code>images</code>），然后将找好的图片粘贴进去</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221127191333180.png" alt="image-20221127191333180"></p><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><p>新建4个页面，添加以下代码：（看后面4个，添加代码后保存会自动生成文件）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;entryPagePath&quot;</span>: <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;pages/demo/demo&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/demo01/demo01&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/logs/logs&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/type/type&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/cart/cart&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/my/my&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加tarBar配置"><a href="#添加tarBar配置" class="headerlink" title="添加tarBar配置"></a>添加tarBar配置</h4><p>和<code>pages</code>配置同级</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;selectedColor&quot;</span>: <span class="string">&quot;#e35d55&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_shouye.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/shouye.png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/type/type&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;分类&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_type.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/type.png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/cart/cart&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;购物车&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_cart.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/cart.png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/my/my&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;我的&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_my.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/my.png&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>首页的展示效果是写了其它代码的，不需要理会</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-11-27%20192108.gif" style="zoom: 50%;" /><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>tarBar的一些配置如下：</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必填</th><th align="center">默认值</th><th align="center">描述</th><th align="center">最低版本</th></tr></thead><tbody><tr><td align="center">color</td><td align="center">HexColor</td><td align="center">是</td><td align="center"></td><td align="center">tab 上的文字默认颜色，仅支持十六进制颜色</td><td align="center"></td></tr><tr><td align="center">selectedColor</td><td align="center">HexColor</td><td align="center">是</td><td align="center"></td><td align="center">tab 上的文字选中时的颜色，仅支持十六进制颜色</td><td align="center"></td></tr><tr><td align="center">backgroundColor</td><td align="center">HexColor</td><td align="center">是</td><td align="center"></td><td align="center">tab 的背景色，仅支持十六进制颜色</td><td align="center"></td></tr><tr><td align="center">borderStyle</td><td align="center">string</td><td align="center">否</td><td align="center">black</td><td align="center">tabbar 上边框的颜色， 仅支持 <code>black</code> / <code>white</code></td><td align="center"></td></tr><tr><td align="center">list</td><td align="center">Array</td><td align="center">是</td><td align="center"></td><td align="center">tab 的列表，详见 <code>list</code> 属性说明，最少 2 个、最多 5 个 tab</td><td align="center"></td></tr><tr><td align="center">position</td><td align="center">string</td><td align="center">否</td><td align="center">bottom</td><td align="center">tabBar 的位置，仅支持 <code>bottom</code> / <code>top</code></td><td align="center"></td></tr><tr><td align="center">custom</td><td align="center">boolean</td><td align="center">否</td><td align="center">false</td><td align="center">自定义 tabBar，见<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html">详情</a></td><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.5.0</a></td></tr></tbody></table><p>其中 list 接受一个数组，<strong>只能配置最少 2 个、最多 5 个 tab</strong>。tab 按数组的顺序排序，每个项都是一个对象，其属性值如下：</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必填</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">pagePath</td><td align="center">string</td><td align="center">是</td><td align="center">页面路径，必须在 pages 中先定义</td></tr><tr><td align="center">text</td><td align="center">string</td><td align="center">是</td><td align="center">tab 上按钮文字</td></tr><tr><td align="center">iconPath</td><td align="center">string</td><td align="center">否</td><td align="center">图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 <strong>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</strong></td></tr><tr><td align="center">selectedIconPath</td><td align="center">string</td><td align="center">否</td><td align="center">选中时的图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 <strong>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</strong></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;如果小程序是一个多tab应用（客户端窗口的底部或顶部有tab栏可以切换页面），可以通过tabBar配置项指定tab栏的表现，以及tab切换时</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
</feed>
