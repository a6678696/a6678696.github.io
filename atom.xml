<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeDao&#39;s Blog</title>
  
  
  <link href="https://blog.zoutl.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.zoutl.cn/"/>
  <updated>2022-12-01T14:53:48.687Z</updated>
  <id>https://blog.zoutl.cn/</id>
  
  <author>
    <name>LeDao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序模板的使用与引用</title>
    <link href="https://blog.zoutl.cn/524.html"/>
    <id>https://blog.zoutl.cn/524.html</id>
    <published>2022-12-01T13:39:20.000Z</published>
    <updated>2022-12-01T14:53:48.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>对于一些重复使用的模块，我们可以将它封装成模板，以减少代码量</p><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>定义一个名为<code>template1</code>的模板</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">name</span>=<span class="string">&quot;template1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">text</span>&gt;</span>&#123;&#123;myName&#125;&#125;<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p>初始数据，写在使用模板的页面js中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 页面的初始数据</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">templateData</span>:&#123;</span><br><span class="line">    <span class="attr">myName</span>: <span class="string">&#x27;ledao&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>is属性</code>动态决定具体需要渲染哪个模板，<code>data属性</code>是要引用的数据，在定义模板的页面使用时不用import</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;template1&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;...templateData&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="import"><a href="#import" class="headerlink" title="import"></a>import</h4><p>在一个页面引用<code>定义在其它页面的模板</code>时，这个模板本来的js和css就不能用了，需要在引用模板的页面重新写js和css，示例代码如下（<code>.wxml后缀</code>加不加都行）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">src</span>=<span class="string">&quot;/pages/templatetest/templatetest.wxml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">is</span>=<span class="string">&quot;template1&quot;</span> <span class="attr">data</span>=<span class="string">&quot;&#123;&#123;...templateData&#125;&#125;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="include"><a href="#include" class="headerlink" title="include"></a>include</h4><p>include将目标文件<strong>除了</strong> <code>&lt;template/&gt;</code> <code>&lt;wxs/&gt;</code> 外的整个代码引入，相当于是拷贝到 <code>include</code> 位置</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">include</span> <span class="attr">src</span>=<span class="string">&quot;/pages/templatetest/templatetest.wxml&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>微信官方文档：<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/template.html">模板 | 微信开放文档 (qq.com)</a>和<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/wxml/import.html">引用 | 微信开放文档 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;对于一些重复使用的模块，我们可以将它封装成模板，以减少代码量&lt;/p&gt;
&lt;h3 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;he</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序使用Vant Weapp组件库实现tabBar标签栏</title>
    <link href="https://blog.zoutl.cn/523.html"/>
    <id>https://blog.zoutl.cn/523.html</id>
    <published>2022-08-04T15:03:13.000Z</published>
    <updated>2022-11-27T17:09:48.689Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>和微信官方的tabBar标签栏相比，Vant Weapp的tabBar标签栏更加美观，还有徽标提示</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="引入tarBar组件"><a href="#引入tarBar组件" class="headerlink" title="引入tarBar组件"></a>引入tarBar组件</h4><p>引入步骤查看：<a href="https://blog.zoutl.cn/518.html">微信小程序引入 Vant Weapp 组件库 | LeDao’s Blog (zoutl.cn)</a></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;van-tabbar&quot;</span>: <span class="string">&quot;/dist/tabbar/index&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;van-tabbar-item&quot;</span>: <span class="string">&quot;/dist/tabbar-item/index&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><p>要新建的页面和上一篇博客一样，博客链接为：<a href="https://blog.zoutl.cn/522.html">微信小程序实现 tabBar 标签栏 | LeDao’s Blog (zoutl.cn)</a></p><h4 id="添加tarBar配置"><a href="#添加tarBar配置" class="headerlink" title="添加tarBar配置"></a>添加tarBar配置</h4><p>在<code>app.json</code>中添加tarBar配置，<code>&quot;custom&quot;: true</code>用来声明这个tarBar是定制的</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;custom&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/type/type&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;分类&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/cart/cart&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;购物车&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/my/my&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;我的&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="新建Component"><a href="#新建Component" class="headerlink" title="新建Component"></a>新建Component</h4><p>首先在根目录下添加一个文件夹，该文件夹要命名为<code>custom-tab-bar</code>，然后右键点击这个文件夹，选择<code>新建Component</code>并输入<code>index</code></p><p>在<code>custom-tab-bar/index.wxml</code>中编写Vant Weapp的tarBar代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">van-tabbar</span> <span class="attr">active</span>=<span class="string">&quot;&#123;&#123; active &#125;&#125;&quot;</span> <span class="attr">active-color</span>=<span class="string">&quot;#e35d55&quot;</span> <span class="attr">bind:change</span>=<span class="string">&quot;onChange&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;wap-home-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;shouye&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/shouye/shouye&quot;</span>&gt;</span></span><br><span class="line">      首页</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;apps-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;type&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/type/type&quot;</span>&gt;</span></span><br><span class="line">      分类</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;shopping-cart-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;cart&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/cart/cart&quot;</span> <span class="attr">dot</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">      购物车</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">icon</span>=<span class="string">&quot;manager-o&quot;</span> <span class="attr">data-page</span>=<span class="string">&quot;my&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;/pages/my/my&quot;</span>&gt;</span></span><br><span class="line">      我的</span><br><span class="line">    <span class="tag">&lt;/<span class="name">van-tabbar-item</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">van-tabbar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>custom-tab-bar/index.js</code>的<code>methods</code>函数里面添加以下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用户点击Tabbar的时候调用微信内置函数wx.switchTab()进行Tab切换</span></span><br><span class="line"><span class="function"><span class="title">onChange</span>(<span class="params">event</span>)</span> &#123;</span><br><span class="line"><span class="comment">// event.detail 的值为当前选中项的索引</span></span><br><span class="line"><span class="keyword">var</span> that = <span class="built_in">this</span></span><br><span class="line"><span class="keyword">switch</span> (event.detail) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/shouye/shouye&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/type/type&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/cart/cart&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">wx.switchTab(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;/pages/my/my&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//改变active属性，从而告诉Tabbar用户点击的是第几个Tab</span></span><br><span class="line"><span class="function"><span class="title">init</span>(<span class="params">active</span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.setData(&#123;</span><br><span class="line"><span class="attr">active</span>: active</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="修改标签页的js文件"><a href="#修改标签页的js文件" class="headerlink" title="修改标签页的js文件"></a>修改标签页的js文件</h4><p>首先说明一下，标签页的索引从0开始</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221128002939747.png" alt="image-20221128002939747"></p><p>在首页的js文件的<code>onShow()</code>函数加入以下代码（<code>分类、购物车、我的</code>3个页面也要加），对应的索引看上图</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">onShow</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.getTabBar().init(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-11-28%20003754.gif" style="zoom: 50%;" /><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>如果页面的内容过多需要下拉时，会有部分内容被Vant Weapp的tabBar标签栏遮住，即使使用<code>placeholder</code>属性也没有用，我们可以在该页面的最后加入下面代码解决这个问题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">&quot;padding-bottom: 20%;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果要使用微信官方的tarBar标签栏查看博客：<a href="https://blog.zoutl.cn/522.html">微信小程序实现 tabBar 标签栏 | LeDao’s Blog (zoutl.cn)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;和微信官方的tabBar标签栏相比，Vant Weapp的tabBar标签栏更加美观，还有徽标提示&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Vant Weapp" scheme="https://blog.zoutl.cn/tags/Vant-Weapp/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序实现tabBar标签栏</title>
    <link href="https://blog.zoutl.cn/522.html"/>
    <id>https://blog.zoutl.cn/522.html</id>
    <published>2022-08-01T08:37:33.000Z</published>
    <updated>2022-11-27T16:53:02.741Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>如果小程序是一个多tab应用（客户端窗口的底部或顶部有tab栏可以切换页面），可以通过tabBar配置项指定tab栏的表现，以及tab切换时显示的对应页面，<code>tab栏至少2个最多5个</code></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>本博客设计的标签栏有4个标签：首页、分类、购物车、我的，对应代码为：</p><table><thead><tr><th align="center">中文</th><th align="center">代码</th></tr></thead><tbody><tr><td align="center">首页</td><td align="center">shouye</td></tr><tr><td align="center">分类</td><td align="center">type</td></tr><tr><td align="center">购物车</td><td align="center">cart</td></tr><tr><td align="center">我的</td><td align="center">my</td></tr></tbody></table><h4 id="找图片"><a href="#找图片" class="headerlink" title="找图片"></a>找图片</h4><p>推荐网址：<a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p><p>每个标签页都需要找两张图片，分别在<code>标签被选中时</code>和<code>标签没有被选中时</code>使用，图片示例如下图所示（图片名称带<code>_</code>符号的是未选中的，否则是选中的）</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221127190337437.png" alt="image-20221127190337437"></p><p>复制图片到项目中，直接新建一个文件夹（我命名为<code>images</code>），然后将找好的图片粘贴进去</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221127191333180.png" alt="image-20221127191333180"></p><h4 id="新建页面"><a href="#新建页面" class="headerlink" title="新建页面"></a>新建页面</h4><p>新建4个页面，添加以下代码：（看后面4个，添加代码后保存会自动生成文件）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;entryPagePath&quot;</span>: <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">    <span class="string">&quot;pages&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;pages/demo/demo&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/index/index&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/demo01/demo01&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/logs/logs&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/type/type&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/cart/cart&quot;</span>,</span><br><span class="line">        <span class="string">&quot;pages/my/my&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="添加tarBar配置"><a href="#添加tarBar配置" class="headerlink" title="添加tarBar配置"></a>添加tarBar配置</h4><p>和<code>pages</code>配置同级</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;tabBar&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;selectedColor&quot;</span>: <span class="string">&quot;#e35d55&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;list&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/shouye/shouye&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;首页&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_shouye.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/shouye.png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/type/type&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;分类&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_type.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/type.png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/cart/cart&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;购物车&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_cart.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/cart.png&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;pagePath&quot;</span>: <span class="string">&quot;pages/my/my&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;text&quot;</span>: <span class="string">&quot;我的&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;iconPath&quot;</span>: <span class="string">&quot;images/_my.png&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;selectedIconPath&quot;</span>: <span class="string">&quot;images/my.png&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>首页的展示效果是写了其它代码的，不需要理会</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-11-27%20192108.gif" style="zoom: 50%;" /><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>tarBar的一些配置如下：</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必填</th><th align="center">默认值</th><th align="center">描述</th><th align="center">最低版本</th></tr></thead><tbody><tr><td align="center">color</td><td align="center">HexColor</td><td align="center">是</td><td align="center"></td><td align="center">tab 上的文字默认颜色，仅支持十六进制颜色</td><td align="center"></td></tr><tr><td align="center">selectedColor</td><td align="center">HexColor</td><td align="center">是</td><td align="center"></td><td align="center">tab 上的文字选中时的颜色，仅支持十六进制颜色</td><td align="center"></td></tr><tr><td align="center">backgroundColor</td><td align="center">HexColor</td><td align="center">是</td><td align="center"></td><td align="center">tab 的背景色，仅支持十六进制颜色</td><td align="center"></td></tr><tr><td align="center">borderStyle</td><td align="center">string</td><td align="center">否</td><td align="center">black</td><td align="center">tabbar 上边框的颜色， 仅支持 <code>black</code> / <code>white</code></td><td align="center"></td></tr><tr><td align="center">list</td><td align="center">Array</td><td align="center">是</td><td align="center"></td><td align="center">tab 的列表，详见 <code>list</code> 属性说明，最少 2 个、最多 5 个 tab</td><td align="center"></td></tr><tr><td align="center">position</td><td align="center">string</td><td align="center">否</td><td align="center">bottom</td><td align="center">tabBar 的位置，仅支持 <code>bottom</code> / <code>top</code></td><td align="center"></td></tr><tr><td align="center">custom</td><td align="center">boolean</td><td align="center">否</td><td align="center">false</td><td align="center">自定义 tabBar，见<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html">详情</a></td><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.5.0</a></td></tr></tbody></table><p>其中 list 接受一个数组，<strong>只能配置最少 2 个、最多 5 个 tab</strong>。tab 按数组的顺序排序，每个项都是一个对象，其属性值如下：</p><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">必填</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">pagePath</td><td align="center">string</td><td align="center">是</td><td align="center">页面路径，必须在 pages 中先定义</td></tr><tr><td align="center">text</td><td align="center">string</td><td align="center">是</td><td align="center">tab 上按钮文字</td></tr><tr><td align="center">iconPath</td><td align="center">string</td><td align="center">否</td><td align="center">图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 <strong>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</strong></td></tr><tr><td align="center">selectedIconPath</td><td align="center">string</td><td align="center">否</td><td align="center">选中时的图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 <strong>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</strong></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;如果小程序是一个多tab应用（客户端窗口的底部或顶部有tab栏可以切换页面），可以通过tabBar配置项指定tab栏的表现，以及tab切换时</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>加快访问GitHub的速度</title>
    <link href="https://blog.zoutl.cn/521.html"/>
    <id>https://blog.zoutl.cn/521.html</id>
    <published>2022-07-27T05:37:38.000Z</published>
    <updated>2022-11-27T08:24:38.564Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>为了加快访问GitHub的速度，目前找到两个比较方便的方法：</p><ol><li>使用Edge插件<code>GitHub加速</code></li><li>使用软件<code>FastGithub</code>，<font color="#dd0000"><strong>这种方式比较稳定</strong></font></li></ol><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="使用Edge插件GitHub加速"><a href="#使用Edge插件GitHub加速" class="headerlink" title="使用Edge插件GitHub加速"></a>使用Edge插件GitHub加速</h4><p>插件地址：<a href="https://microsoftedge.microsoft.com/addons/detail/github%E5%8A%A0%E9%80%9F/alhnbdjjbokpmilgemopoomnldpejihb?hl=zh-CN">GitHub加速 - Microsoft Edge Addons</a>，安装后就可以访问GitHub了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221126134510390.png" alt="image-20221126134510390"></p><h4 id="使用软件FastGithub"><a href="#使用软件FastGithub" class="headerlink" title="使用软件FastGithub"></a>使用软件FastGithub</h4><p>GitHub地址：<a href="https://github.com/dotnetcore/FastGithub/releases">Releases · dotnetcore/FastGithub</a>，根据自己的电脑选择对应的版本</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221126134706416.png" alt="image-20221126134706416"></p><p>如果无法访问GitHub直接去百度搜索，我这里提供一下<code>Windows 64位</code>的版本</p><ul><li>百度网盘链接：<a href="https://pan.baidu.com/s/13MmCQgj1pDSEp9FsRUBv0g?pwd=rp1y">https://pan.baidu.com/s/13MmCQgj1pDSEp9FsRUBv0g?pwd=rp1y</a></li><li>提取码：<code>rp1y</code></li></ul><p>下载后解压，打开<code>fastgithub.exe</code>，<font color="#dd0000">不是FastGithub.UI.exe（这是监控流量的，可以不用打开）</font>，运行后是控制台窗口，只需保持运行即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221126135618956.png" alt="image-20221126135618956"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;为了加快访问GitHub的速度，目前找到两个比较方便的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用Edge插件&lt;code&gt;GitHub加速&lt;/co</summary>
      
    
    
    
    <category term="版本控制" scheme="https://blog.zoutl.cn/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序应用和页面的生命周期</title>
    <link href="https://blog.zoutl.cn/520.html"/>
    <id>https://blog.zoutl.cn/520.html</id>
    <published>2022-07-23T13:07:13.000Z</published>
    <updated>2022-11-26T15:23:25.487Z</updated>
    
    <content type="html"><![CDATA[<h3 id="应用生命周期"><a href="#应用生命周期" class="headerlink" title="应用生命周期"></a>应用生命周期</h3><h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>注册小程序，接受一个<code>Object</code>参数，其指定小程序的生命周期回调等</p><p>App()必须在 <code>app.js</code> 中调用，必须调用且只能调用一次，不然会出现无法预期的后果</p><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">说明</th><th align="center">最低版本</th></tr></thead><tbody><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onLaunch-Object-object">onLaunch</a></td><td align="center">function</td><td align="center">生命周期回调——监听小程序初始化</td><td align="center"></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onShow-Object-object">onShow</a></td><td align="center">function</td><td align="center">生命周期回调——监听小程序启动或切前台</td><td align="center"></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onHide">onHide</a></td><td align="center">function</td><td align="center">生命周期回调——监听小程序切后台</td><td align="center"></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onError-String-error">onError</a></td><td align="center">function</td><td align="center">错误监听函数</td><td align="center"></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onPageNotFound-Object-object">onPageNotFound</a></td><td align="center">function</td><td align="center">页面不存在监听函数</td><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">1.9.90</a></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onUnhandledRejection-Object-object">onUnhandledRejection</a></td><td align="center">function</td><td align="center">未处理的 Promise 拒绝事件监听函数</td><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.10.0</a></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onThemeChange-Object-object">onThemeChange</a></td><td align="center">function</td><td align="center">监听系统主题变化</td><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.11.0</a></td></tr><tr><td align="center">其他</td><td align="center">any</td><td align="center">开发者可以添加任意的函数或数据变量到 <code>Object</code> 参数中，用 <code>this</code> 可以访问</td><td align="center"></td></tr></tbody></table><h4 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">App(&#123;</span><br><span class="line">  onLaunch (options) &#123;</span><br><span class="line">    <span class="comment">// Do something initial when launch.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onShow (options) &#123;</span><br><span class="line">    <span class="comment">// Do something when show.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onHide () &#123;</span><br><span class="line">    <span class="comment">// Do something when hide.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  onError (msg) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(msg)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">globalData</span>: <span class="string">&#x27;I am global data&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="来源及详情"><a href="#来源及详情" class="headerlink" title="来源及详情"></a>来源及详情</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/App.html#onLaunch-Object-object">App(Object object) | 微信开放文档 (qq.com)</a></p><h3 id="页面生命周期"><a href="#页面生命周期" class="headerlink" title="页面生命周期"></a>页面生命周期</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><p>注册小程序中的一个页面，接受一个 <code>Object</code> 类型参数，其指定页面的初始数据、生命周期回调、事件处理函数等</p><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><table><thead><tr><th align="center">属性</th><th align="center">类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#data">data</a></td><td align="center">Object</td><td align="center">页面的初始数据</td></tr><tr><td align="center">options</td><td align="center">Object</td><td align="center">页面的组件选项，同 <a href="https://developers.weixin.qq.com/miniprogram/dev/api/xr-frame/classes/Component.html"><code>Component</code> 构造器</a> 中的 <code>options</code> ，需要基础库版本 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.10.1</a></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html">behaviors</a></td><td align="center">String Array</td><td align="center">类似于 mixins 和traits的组件间代码复用机制，参见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html">behaviors</a>，需要基础库版本 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.9.2</a></td></tr><tr><td align="center"><strong>生命周期回调函数</strong></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onLoad-Object-query">onLoad</a></td><td align="center">function</td><td align="center">生命周期回调—监听页面加载</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShow">onShow</a></td><td align="center">function</td><td align="center">生命周期回调—监听页面显示</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onReady">onReady</a></td><td align="center">function</td><td align="center">生命周期回调—监听页面初次渲染完成</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onHide">onHide</a></td><td align="center">function</td><td align="center">生命周期回调—监听页面隐藏</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onUnload">onUnload</a></td><td align="center">function</td><td align="center">生命周期回调—监听页面卸载</td></tr><tr><td align="center"><strong>页面事件处理函数</strong></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onPullDownRefresh">onPullDownRefresh</a></td><td align="center">function</td><td align="center">监听用户下拉动作，需要配置一下不然无法下拉</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onReachBottom">onReachBottom</a></td><td align="center">function</td><td align="center">页面上拉触底事件的处理函数，内容少不需要上拉时就不触发</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareAppMessage-Object-object">onShareAppMessage</a></td><td align="center">function</td><td align="center">用户点击右上角转发</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareTimeline">onShareTimeline</a></td><td align="center">function</td><td align="center">用户点击右上角转发到朋友圈</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onAddToFavorites-Object-object">onAddToFavorites</a></td><td align="center">function</td><td align="center">用户点击右上角收藏</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onPageScroll-Object-object">onPageScroll</a></td><td align="center">function</td><td align="center">页面滚动触发事件的处理函数</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onResize-Object-object">onResize</a></td><td align="center">function</td><td align="center">页面尺寸改变时触发，详见 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/resizable.html#%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E5%90%AF%E7%94%A8%E5%B1%8F%E5%B9%95%E6%97%8B%E8%BD%AC%E6%94%AF%E6%8C%81">响应显示区域变化</a></td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onTabItemTap-Object-object">onTabItemTap</a></td><td align="center">function</td><td align="center">当前是 tab 页时，点击 tab 时触发</td></tr><tr><td align="center"><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onSaveExitState">onSaveExitState</a></td><td align="center">function</td><td align="center">页面销毁前保留状态回调</td></tr><tr><td align="center"><strong>其他</strong></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">其他</td><td align="center">any</td><td align="center">开发者可以添加任意的函数或数据到 <code>Object</code> 参数中，在页面的函数中用 <code>this</code> 可以访问。<strong>这部分属性会在页面实例创建时进行一次深拷贝</strong></td></tr></tbody></table><h4 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.js</span></span><br><span class="line">Page(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">text</span>: <span class="string">&quot;This is page data.&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onLoad</span>: <span class="function"><span class="keyword">function</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do some initialize when page load.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onShow</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page show.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onReady</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page ready.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onHide</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page hide.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onUnload</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page close.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onPullDownRefresh</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when pull down.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onReachBottom</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page reach bottom.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onShareAppMessage</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// return custom share data when user share.</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onPageScroll</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page scroll</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">onResize</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Do something when page resize</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="title">onTabItemTap</span>(<span class="params">item</span>)</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item.index)</span><br><span class="line">    <span class="built_in">console</span>.log(item.pagePath)</span><br><span class="line">    <span class="built_in">console</span>.log(item.text)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// Event handler.</span></span><br><span class="line">  <span class="attr">viewTap</span>: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">      <span class="attr">text</span>: <span class="string">&#x27;Set some data for updating view.&#x27;</span></span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// this is setData callback</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">customData</span>: &#123;</span><br><span class="line">    <span class="attr">hi</span>: <span class="string">&#x27;MINA&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="来源及详情-1"><a href="#来源及详情-1" class="headerlink" title="来源及详情"></a>来源及详情</h4><p><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onLoad-Object-query">Page(Object object) | 微信开放文档 (qq.com)</a></p><h4 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h4><p>使用<code>onPullDownRefresh</code>监听下拉事件之前需要去配置一下，分为全局配置和局部配置</p><ul><li><p>全局配置，小程序的全部页面都可以进行下拉操作</p><p>在<code>app.json</code>中的<code>window</code>属性中加入以下代码</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;enablePullDownRefresh&quot;</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221126214433647.png" alt="image-20221126214433647"></p></li><li><p>局部配置，在哪个页面配置哪个页面才可以进行下拉操作</p><p>在页面配置文件中添加上面的代码</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221126214423332.png" alt="image-20221126214423332"></p></li></ul><h3 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h3><p>顺序为<code>从上到下</code>，来源：<a href="https://developers.weixin.qq.com/community/develop/article/doc/000002e9b647c833cab9ef81f51c13">你不知道的小程序系列之生命周期执行顺序 | 微信开放社区 (qq.com)</a></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-11-26%20201022.png" alt="2022-11-26 201022"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;应用生命周期&quot;&gt;&lt;a href=&quot;#应用生命周期&quot; class=&quot;headerlink&quot; title=&quot;应用生命周期&quot;&gt;&lt;/a&gt;应用生命周期&lt;/h3&gt;&lt;h4 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序使用官方swiper组件实现轮播图</title>
    <link href="https://blog.zoutl.cn/519.html"/>
    <id>https://blog.zoutl.cn/519.html</id>
    <published>2022-07-19T13:30:34.000Z</published>
    <updated>2022-11-24T14:56:06.900Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>最近在使用Vant Weapp组件库，但是没有轮播图这个组件，经过一番对比发现：使用微信官方的swiper组件最方便，和Vant Weapp搭配看着也不错</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="wxml代码"><a href="#wxml代码" class="headerlink" title="wxml代码"></a>wxml代码</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;banner&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">swiper</span> <span class="attr">indicator-dots</span> <span class="attr">indicator-active-color</span>=<span class="string">&quot;#ef5243&quot;</span> <span class="attr">circular</span> <span class="attr">autoplay</span> <span class="attr">interval</span>=<span class="string">&quot;3000&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">swiper-item</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;carouselImageList&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="wxss代码"><a href="#wxss代码" class="headerlink" title="wxss代码"></a>wxss代码</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">350</span>rpx;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> swiper &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> image &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">350</span>rpx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="js代码（初始数据）"><a href="#js代码（初始数据）" class="headerlink" title="js代码（初始数据）"></a>js代码（初始数据）</h4><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">data: &#123;</span><br><span class="line">    carouselImageList: [</span><br><span class="line">        <span class="string">&quot;https://image.zoutl.cn/hexo-blog/blogCoverImage/11.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://image.zoutl.cn/hexo-blog/blogCoverImage/12.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://image.zoutl.cn/hexo-blog/blogCoverImage/13.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://image.zoutl.cn/hexo-blog/blogCoverImage/14.jpg&quot;</span>,</span><br><span class="line">        <span class="string">&quot;https://image.zoutl.cn/hexo-blog/blogCoverImage/15.jpg&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-11-24%20225004.gif" alt="2022-11-24 225004"></p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>swiper属性查看：<a href="https://developers.weixin.qq.com/miniprogram/dev/component/swiper.html#%E5%B1%9E%E6%80%A7%E8%AF%B4%E6%98%8E">swiper属性说明 | 微信开放文档 (qq.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;最近在使用Vant Weapp组件库，但是没有轮播图这个组件，经过一番对比发现：使用微信官方的swiper组件最方便，和Vant Weapp</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序引入Vant Weapp组件库</title>
    <link href="https://blog.zoutl.cn/518.html"/>
    <id>https://blog.zoutl.cn/518.html</id>
    <published>2022-07-10T17:46:59.000Z</published>
    <updated>2022-11-27T17:10:00.739Z</updated>
    
    <content type="html"><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>GitHub地址：<a href="https://github.com/youzan/vant-weapp">youzan/vant-weapp: 轻量、可靠的小程序 UI 组件库 (github.com)</a></p><p>下载地址：<a href="https://github.com/youzan/vant-weapp/archive/refs/heads/dev.zip">https://github.com/youzan/vant-weapp/archive/refs/heads/dev.zip</a></p><p>解压后里面有一个名为<code>dist</code>的文件夹，这个文件夹包含了我们要使用的Vant Weapp组件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221124201239421.png" alt="image-20221124201239421"></p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="复制dist文件夹"><a href="#复制dist文件夹" class="headerlink" title="复制dist文件夹"></a>复制dist文件夹</h4><p>将上面解压后得到的<code>dist</code>文件夹到项目文件夹中，和<code>pages</code>文件夹同级，如果不能直接在微信开发工具中粘贴就用电脑的资源管理器</p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221124202226224.png" alt="image-20221124202226224" style="zoom:80%;" /><h4 id="修改app-json"><a href="#修改app-json" class="headerlink" title="修改app.json"></a>修改app.json</h4><p>将<code>app.json</code>中的 <code>&quot;style&quot;: &quot;v2&quot;</code> 删除，小程序的<a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html#style">新版基础组件</a>强行加上了许多样式，难以覆盖，不关闭将造成部分组件样式混乱</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221124203510350.png" alt="image-20221124203510350"></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><blockquote><p>在json文件中配置，要在哪个页面使用组件，就在其对应的json文件中配置</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;van-button&quot;</span>: <span class="string">&quot;/dist/button/index&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221124204847754.png" alt="image-20221124204847754"></p><blockquote><p>代码</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>主要按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>信息按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>危险按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>效果</p></blockquote><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221124205104037.png" alt="image-20221124205104037" style="zoom:67%;" /><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>上面是<code>局部引入</code>组件（一般建议使用这种方式），也就是说，组件只在指定页面生效（谁引入谁才可以用）</p><p>如果嫌麻烦可以使用<code>全局引入</code>，直接在<code>app.json</code>中添加以下代码来实现引入（和其它属性使用英文的<code>,</code>分隔），这样被引入的组件在所有页面都会生效</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;usingComponents&quot;</span>: &#123;</span><br><span class="line">    <span class="comment">//引入按钮组件</span></span><br><span class="line">    <span class="attr">&quot;van-button&quot;</span>: <span class="string">&quot;/dist/button/index&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20221124231959231.png" alt="image-20221124231959231"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;p&gt;GitHub地址：&lt;a href=&quot;https://github.com/youzan/vant-weapp&quot;&gt;youzan/vant-we</summary>
      
    
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="微信小程序" scheme="https://blog.zoutl.cn/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Vant Weapp" scheme="https://blog.zoutl.cn/tags/Vant-Weapp/"/>
    
  </entry>
  
  <entry>
    <title>创建String字符串的两种方式</title>
    <link href="https://blog.zoutl.cn/517.html"/>
    <id>https://blog.zoutl.cn/517.html</id>
    <published>2022-06-26T03:18:05.000Z</published>
    <updated>2022-08-14T08:44:38.529Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Java创建String字符串有两种方式：</p><ol><li>直接创建，存储在公共池，创建前会先检查公共池中是否已经存在相等的字符串，已存在就不会创建了直接引用已经存在的</li><li>通过new来创建，存储在堆上，无论是否已经存在相等的字符串，都会创建一个新的字符串</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="直接创建"><a href="#直接创建" class="headerlink" title="直接创建"></a>直接创建</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str1 = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">String str2 = <span class="string">&quot;a&quot;</span>;</span><br></pre></td></tr></table></figure><h3 id="通过new来创建"><a href="#通过new来创建" class="headerlink" title="通过new来创建"></a>通过new来创建</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String str4 = <span class="keyword">new</span> String(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">String str5 = <span class="keyword">new</span> String(<span class="string">&quot;a&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-03-09 23:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str1 = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        String str2 = <span class="string">&quot;a&quot;</span>;</span><br><span class="line">        String str3 = str2;</span><br><span class="line">        String str4 = <span class="keyword">new</span> String(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        String str5 = <span class="keyword">new</span> String(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        String str6 = str5;</span><br><span class="line">        System.out.println(str1 == str2);</span><br><span class="line">        System.out.println(str2 == str3);</span><br><span class="line">        System.out.println(str3 == str4);</span><br><span class="line">        System.out.println(str4 == str5);</span><br><span class="line">        System.out.println(str5 == str6);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220626112852513.png" alt="image-20220626112852513"></p><h4 id="分析图解"><a href="#分析图解" class="headerlink" title="分析图解"></a>分析图解</h4><p>指向同一个的比较结果是true，反之则为false</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220626190134077.png" alt="image-20220626190134077"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;Java创建String字符串有两种方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接创建，存储在公共池，创建前会先检查公共池中是否已经存在相等的字符串</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>使用Markdown语法写邮件</title>
    <link href="https://blog.zoutl.cn/516.html"/>
    <id>https://blog.zoutl.cn/516.html</id>
    <published>2022-06-25T13:10:42.000Z</published>
    <updated>2022-06-25T14:09:30.926Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>插件名称为：<code>Markdown Here</code>，安装链接如下：（不会科学上网的使用第二个链接）</p><table><thead><tr><th align="center">出处</th><th align="center">链接</th></tr></thead><tbody><tr><td align="center">谷歌插件商店（可以科学上网的使用，最方便）</td><td align="center"><a href="https://chrome.google.com/webstore/detail/markdown-here/elifhakcjgalahccnjkneoccemfahfoa">查看</a></td></tr><tr><td align="center">扩展迷（国内使用）</td><td align="center"><a href="https://www.extfans.com/productivity/elifhakcjgalahccnjkneoccemfahfoa/">查看</a></td></tr></tbody></table><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><p>安装后要启用插件，只可以在正文部分使用，使用Markdown语法后写完邮件后，在正文区域右键点击，点击<code>Markdown转换</code>然后发送即可，如果要继续编辑再次点击<code>Markdown转换</code></p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022-06-25%20214713.gif"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h2&gt;&lt;p&gt;插件名称为：&lt;code&gt;Markdown Here&lt;/code&gt;，安装链接如下：（不会科学上网的使用第二个链接）&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="其它" scheme="https://blog.zoutl.cn/categories/%E5%85%B6%E5%AE%83/"/>
    
    
    <category term="Markdown" scheme="https://blog.zoutl.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>去除来必力评论框下面的广告</title>
    <link href="https://blog.zoutl.cn/515.html"/>
    <id>https://blog.zoutl.cn/515.html</id>
    <published>2022-05-27T09:01:32.000Z</published>
    <updated>2022-05-27T09:14:10.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>关掉了浏览器的屏蔽广告插件后，突然发现来必力的评论框下面居然有广告，这肯定不能忍，找到了下面两个方法（通过添加CSS或JavaScript代码去除），这两个方法单独使用或者一起使用都可以把来必力的评论框下面的广告给去除</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="添加CSS代码"><a href="#添加CSS代码" class="headerlink" title="添加CSS代码"></a>添加CSS代码</h3><p>在主题的文件夹中找到<code>normalize.min.css</code>，具体路径看下图</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220527170745531.png" alt="image-20220527170745531"></p><p>打开文件后直接在最下面加入下面代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.trc_rbox_container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加JavaScript代码"><a href="#添加JavaScript代码" class="headerlink" title="添加JavaScript代码"></a>添加JavaScript代码</h3><p>在主题的文件夹中找到<code>livere.pug</code>，具体路径看下图</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220527170846522.png" alt="image-20220527170846522"></p><p>打开文件后直接在最下面加入下面代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">script.</span><br><span class="line">  <span class="keyword">var</span> intervalFunctionID = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; myTimer() &#125;, <span class="number">1000</span>);</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">myTimer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&quot;taboola-livere&quot;</span>) != <span class="literal">null</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.getElementById(<span class="string">&quot;taboola-livere&quot;</span>).style.display == <span class="string">&quot;none&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">//alert(&quot;Interval function stopped&quot;);</span></span><br><span class="line">          <span class="built_in">clearInterval</span>(intervalFunctionID);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">&quot;taboola-livere&quot;</span>).style.display=<span class="string">&quot;none&quot;</span>;</span><br><span class="line">      <span class="comment">//alert(&quot;Interval function running&quot;);</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>来源：<a href="https://wzw21.cn/2022/02/06/rm-ad/">去除来必力（Livere）附带广告 | WiZardWen (wzw21.cn)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;关掉了浏览器的屏蔽广告插件后，突然发现来必力的评论框下面居然有广告，这肯定不能忍，找到了下面两个方法（通过添加CSS或JavaScript代</summary>
      
    
    
    
    <category term="Hexo博客" scheme="https://blog.zoutl.cn/categories/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Hexo博客" scheme="https://blog.zoutl.cn/tags/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>jsdelivr被污染导致本站不翻墙无法正常访问</title>
    <link href="https://blog.zoutl.cn/514.html"/>
    <id>https://blog.zoutl.cn/514.html</id>
    <published>2022-05-27T05:43:30.000Z</published>
    <updated>2022-05-27T07:27:57.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本站使用的博客框架是<code>Hexo</code>，使用的主题是<code>Butterfly</code>，该主题使用的大多数都是<code>cdn.jsdelivr.net</code>上的静态资源，由于被污染后导致不翻墙无法访问，进而使本站无法正常访问</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="替换方案"><a href="#替换方案" class="headerlink" title="替换方案"></a>替换方案</h3><p>把<code>cdn.jsdelivr.net</code>替换成下面四个网址之一即可（不保证一定可用，可以先试试行不行，貌似第二个最稳），等到<code>cdn.jsdelivr.net</code>恢复后改回来即可</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fastly.jsdelivr.net</span></span><br><span class="line"><span class="attr">gcore.jsdelivr.net</span></span><br><span class="line"><span class="attr">testingcf.jsdelivr.net</span></span><br><span class="line"><span class="attr">test1.jsdelivr.net</span></span><br></pre></td></tr></table></figure><h3 id="修改主题的配置"><a href="#修改主题的配置" class="headerlink" title="修改主题的配置"></a>修改主题的配置</h3><p><code>Butterfly</code>这个主题的静态资源引用定义在<code>/scripts/events</code>文件夹下的<code>config.js</code>中，打开它把<code>cdn.jsdelivr.net</code>替换成上面的四个网址之一</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220527135915798.png" alt="image-20220527135915798"></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>还可以把这些静态资源下载下来，放在又拍云的云存储或直接放在主题文件夹中，只不过后期升级主题会很麻烦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;本站使用的博客框架是&lt;code&gt;Hexo&lt;/code&gt;，使用的主题是&lt;code&gt;Butterfly&lt;/code&gt;，该主题使用的大多数都是&lt;c</summary>
      
    
    
    
    <category term="Hexo博客" scheme="https://blog.zoutl.cn/categories/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="Hexo博客" scheme="https://blog.zoutl.cn/tags/Hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA使用插件实现对Stream流操作的调试</title>
    <link href="https://blog.zoutl.cn/513.html"/>
    <id>https://blog.zoutl.cn/513.html</id>
    <published>2022-05-26T03:09:06.000Z</published>
    <updated>2022-05-26T03:34:26.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>插件名称为：<code>Java Stream Debugger</code>，好像在IntelliJ IDEA的插件市场没找到，但是在已安装插件列表中已经有这个插件了，应该是新版的IntelliJ IDEA已经内置了这个插件（所以要使用这个插件就将IntelliJ IDEA更新为最新的版本即可）</p><h2 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h2><h3 id="要调试的代码"><a href="#要调试的代码" class="headerlink" title="要调试的代码"></a>要调试的代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        list.add(<span class="string">&quot;blog.zoutl.cn&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;www.zoutl.cn&quot;</span>);</span><br><span class="line">        list.add(<span class="string">&quot;www.baidu.cn&quot;</span>);</span><br><span class="line">        List&lt;String&gt; resultList=list.stream()</span><br><span class="line">                .filter(e-&gt;e.contains(<span class="string">&quot;zoutl.cn&quot;</span>))</span><br><span class="line">                .filter(e-&gt;e.length()&gt;<span class="number">12</span>)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line">        System.out.println(resultList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调试过程"><a href="#调试过程" class="headerlink" title="调试过程"></a>调试过程</h3><p>首先打个断点，然后开始调试，当程序执行到流Stream操作时，插件的调试按钮就会被点亮</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220526112957403.png" alt="image-20220526112957403"></p><p>点击上面被点亮的按钮，会出现下面界面，可以很清楚地看出每一个操作后符合条件的数据</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220526113247661.png" alt="image-20220526113247661"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h2&gt;&lt;p&gt;插件名称为：&lt;code&gt;Java Stream Debugger&lt;/code&gt;，好像在IntelliJ IDEA的插件市场没</summary>
      
    
    
    
    <category term="开发工具" scheme="https://blog.zoutl.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title>GitHub给仓库添加开源许可证</title>
    <link href="https://blog.zoutl.cn/512.html"/>
    <id>https://blog.zoutl.cn/512.html</id>
    <published>2022-05-25T06:40:44.000Z</published>
    <updated>2022-05-25T08:29:27.934Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="什么时候"><a href="#什么时候" class="headerlink" title="什么时候"></a>什么时候</h3><p>GitHub创建开源许可证的情况有两种：</p><ol><li>创建仓库时，直接选择开源许可证</li><li>创建仓库后，需要新建一个LICENSE文件</li></ol><h3 id="如何选择"><a href="#如何选择" class="headerlink" title="如何选择"></a>如何选择</h3><p>世界上的开源许可证，大概有<a href="https://www.gnu.org/licenses/license-list.html">上百种</a>。很少有人搞得清楚它们的区别。即使在最流行的六种（<a href="https://www.gnu.org/licenses/gpl.html">GPL</a>、<a href="https://en.wikipedia.org/wiki/BSD_licenses">BSD</a>、<a href="https://en.wikipedia.org/wiki/MIT_License">MIT</a>、<a href="https://www.mozilla.org/MPL/">Mozilla</a>、<a href="https://www.apache.org/licenses/LICENSE-2.0">Apache</a>和<a href="https://www.gnu.org/copyleft/lesser.html">LGPL</a>）之中做选择，也很复杂，下面一图可以很简单地说明它们之间的区别</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/bg2011050101.png"></p><p>参考文章链接为：<a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html">如何选择开源许可证？ - 阮一峰的网络日志 (ruanyifeng.com)</a></p><h2 id="创建开源许可证"><a href="#创建开源许可证" class="headerlink" title="创建开源许可证"></a>创建开源许可证</h2><h3 id="创建仓库时"><a href="#创建仓库时" class="headerlink" title="创建仓库时"></a>创建仓库时</h3><p>在创建仓库时，可以直接选择开源许可证</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220525145426878.png" alt="image-20220525145426878"></p><h3 id="创建仓库后"><a href="#创建仓库后" class="headerlink" title="创建仓库后"></a>创建仓库后</h3><p>添加一个文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220525150359985.png" alt="image-20220525150359985"></p><p>命名为<code>LICENSE</code>，会出现选择开源许可证的按钮</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220525150709925.png" alt="image-20220525150709925"></p><p>选择自己需要的开源许可证，然后提交，会跳回上一页</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220525151208973.png" alt="image-20220525151208973"></p><p>最后提交新文件的更改即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220525152630593.png" alt="image-20220525152630593"></p><h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220525152154265.png" alt="image-20220525152154265"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;什么时候&quot;&gt;&lt;a href=&quot;#什么时候&quot; class=&quot;headerlink&quot; title=&quot;什么时候&quot;&gt;&lt;/a&gt;什么时候&lt;/h</summary>
      
    
    
    
    <category term="版本控制" scheme="https://blog.zoutl.cn/categories/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    
    
    <category term="GitHub" scheme="https://blog.zoutl.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Vue项目实现统一管理请求的后端IP地址和端口</title>
    <link href="https://blog.zoutl.cn/511.html"/>
    <id>https://blog.zoutl.cn/511.html</id>
    <published>2022-05-17T04:08:23.000Z</published>
    <updated>2022-05-17T04:55:30.810Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在前后端分离的项目中，每个请求后端的方法都要写一次IP地址以及端口，后面如果要修改IP地址或端口号的话就要改很多个地方了，这样会很麻烦，进行统一管理是很有必要的</p><h2 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h2><h3 id="新建JS文件"><a href="#新建JS文件" class="headerlink" title="新建JS文件"></a>新建JS文件</h3><p>新建一个JS文件，命名为<code>url.js</code>，内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getServerUrl</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;http://localhost:8080/&quot;</span> + url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h3><p>首先在对应的页面引入上面的JavaScript文件，在<code>&lt;script&gt;&lt;/script&gt;</code>内使用以下代码引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;getServerUrl&#125; <span class="keyword">from</span> <span class="string">&quot;@/config/url&quot;</span>;</span><br></pre></td></tr></table></figure><p>在最上面引入，如下图所示</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220517123847227.png" alt="image-20220517123847227"></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>例如我们要请求的后端路径为<code>http://localhost:8080/user/login</code>，那么使用的格式如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = getServerUrl(<span class="string">&quot;user/login&quot;</span>);</span><br></pre></td></tr></table></figure><p>上面的url就可以在axios请求中使用了</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220517124258313.png" alt="image-20220517124258313"></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>如果请求的后端IP地址和端口有多个，那么我们可以再传入一个参数，以这个参数为条件选择对应的IP地址和端口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">getServerUrl</span>(<span class="params">url, moudle</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (moudle === <span class="string">&quot;miaosha-user&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;http://localhost:8081/&quot;</span> + url;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (moudle === <span class="string">&quot;miaosha-goods&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;http://localhost:8082/&quot;</span> + url;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (moudle === <span class="string">&quot;miaosha-order1&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;http://localhost:8083/&quot;</span> + url;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>则使用的格式如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> url = getServerUrl(<span class="string">&quot;user/login&quot;</span>,<span class="string">&quot;miaosha-user&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;在前后端分离的项目中，每个请求后端的方法都要写一次IP地址以及端口，后面如果要修改IP地址或端口号的话就要改很多个地方了，这样会很麻烦，进行</summary>
      
    
    
    
    <category term="前端" scheme="https://blog.zoutl.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="https://blog.zoutl.cn/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>激活IntelliJ IDEA的热部署插件Jrebel</title>
    <link href="https://blog.zoutl.cn/510.html"/>
    <id>https://blog.zoutl.cn/510.html</id>
    <published>2022-05-06T18:04:03.000Z</published>
    <updated>2022-05-06T18:36:04.479Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>在IntelliJ IDEA的插件市场安装Jrebel插件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220507021231297.png" alt="image-20220507021231297"></p><h2 id="生成GUID"><a href="#生成GUID" class="headerlink" title="生成GUID"></a>生成GUID</h2><p>在线生成GUID的网站：<a href="https://www.guidgen.com/">Generate GUIDs online (guidgen.com)</a></p><p>根据获得的GUID拼接激活的链接，<code>https://jrebel.qekang.com/</code>后面接GUID，即：<code>https://jrebel.qekang.com/GUID</code></p><h2 id="激活插件"><a href="#激活插件" class="headerlink" title="激活插件"></a>激活插件</h2><p>用到上一步的激活链接</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220507021816684.png" alt="image-20220507021816684"></p><h2 id="设置成离线工作模式"><a href="#设置成离线工作模式" class="headerlink" title="设置成离线工作模式"></a>设置成离线工作模式</h2><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220507022604834.png" alt="image-20220507022604834"></p><h2 id="设置自动编译"><a href="#设置自动编译" class="headerlink" title="设置自动编译"></a>设置自动编译</h2><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220507023005627.png" alt="image-20220507023005627"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;安装插件&quot;&gt;&lt;a href=&quot;#安装插件&quot; class=&quot;headerlink&quot; title=&quot;安装插件&quot;&gt;&lt;/a&gt;安装插件&lt;/h2&gt;&lt;p&gt;在IntelliJ IDEA的插件市场安装Jrebel插件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://image.z</summary>
      
    
    
    
    <category term="开发工具" scheme="https://blog.zoutl.cn/categories/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
    <category term="Jrebel" scheme="https://blog.zoutl.cn/tags/Jrebel/"/>
    
  </entry>
  
  <entry>
    <title>Spring框架@Value注解的使用</title>
    <link href="https://blog.zoutl.cn/509.html"/>
    <id>https://blog.zoutl.cn/509.html</id>
    <published>2022-05-05T10:39:07.000Z</published>
    <updated>2022-05-05T11:30:17.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>@Value注解属于Spring框架，用来给变量注入值，使用方式如下：</p><ol><li>将常量注入</li><li>将配置文件的值注入</li><li>将其它Bean的值注入</li></ol><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="将常量注入"><a href="#将常量注入" class="headerlink" title="将常量注入"></a>将常量注入</h3><h4 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h4><p>格式为：<code>@Value(&quot;ledao&quot;)</code>，<code>ledao</code>是注入的常量</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-05-05 18:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;ledao&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将配置文件的值注入"><a href="#将配置文件的值注入" class="headerlink" title="将配置文件的值注入"></a>将配置文件的值注入</h3><h4 id="格式-1"><a href="#格式-1" class="headerlink" title="格式"></a>格式</h4><p>格式为：<code>@Value(&quot;$&#123;server.port&#125;&quot;)</code>，使用<code>$</code>符号，<code>server.port</code>是配置文件中定义的项目的访问端口号</p><p>如果格式为<code>@Value(&quot;$&#123;server.port1:8888&#125;&quot;)</code>，当配置文件中<code>server.port1</code>不存在时注入<code>8888</code>，存在就注入<code>server.port1</code>的值</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-05-05 18:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> port;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="将其它Bean的值注入"><a href="#将其它Bean的值注入" class="headerlink" title="将其它Bean的值注入"></a>将其它Bean的值注入</h3><h4 id="格式-2"><a href="#格式-2" class="headerlink" title="格式"></a>格式</h4><p>格式为：<code>@Value(&quot;#&#123;tom&#125;&quot;)</code>，使用<code>#</code>符号，<code>tom</code>是Bean的名称</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><blockquote><p>实体类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-05-05 19:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>创建一个名为tom的Bean</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-05-05 19:07</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = &quot;tom&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">tom</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Student student = <span class="keyword">new</span> Student();</span><br><span class="line">        student.setId(<span class="number">1</span>);</span><br><span class="line">        student.setName(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> student;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>测试代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-05-05 18:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;#&#123;tom&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Student student;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> student.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;@Value注解属于Spring框架，用来给变量注入值，使用方式如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将常量注入&lt;/li&gt;
&lt;li&gt;将配置文件的</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Spring" scheme="https://blog.zoutl.cn/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA将Spring Boot项目打包成jar包并在CentOS7运行</title>
    <link href="https://blog.zoutl.cn/508.html"/>
    <id>https://blog.zoutl.cn/508.html</id>
    <published>2022-04-27T13:24:34.000Z</published>
    <updated>2022-09-18T13:56:37.949Z</updated>
    
    <content type="html"><![CDATA[<h3 id="修改打包方式"><a href="#修改打包方式" class="headerlink" title="修改打包方式"></a>修改打包方式</h3><p>首先在pom.xml文件中修改打包的方式为jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220427212818312.png" alt="image-20220427212818312"></p><h3 id="跳过测试项目"><a href="#跳过测试项目" class="headerlink" title="跳过测试项目"></a>跳过测试项目</h3><p>打包项目时，可以把<code>打包前测试</code>这一步跳过，可以减少打包时间</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220427213216736.png" alt="image-20220427213216736"></p><h3 id="开始打包"><a href="#开始打包" class="headerlink" title="开始打包"></a>开始打包</h3><p>打包前先清理一下，移除所有上一次构建生成的文件</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220427213430502.png" alt="image-20220427213430502"></p><p>打包的jar包在当前项目文件夹下的<code>target</code>文件夹下</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220427213829083.png" alt="image-20220427213829083"></p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><h4 id="前台运行"><a href="#前台运行" class="headerlink" title="前台运行"></a>前台运行</h4><p>输入下面命令即可运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar KangXin-0.0.1-SNAPSHOT.jar --server.port=8080</span><br></pre></td></tr></table></figure><h4 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h4><blockquote><p>上面的命令是前台运行的，按<code>CTRL+C</code>后就终止运行了，后台运行的命令如下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar KangXin-0.0.1-SNAPSHOT.jar &gt; mylog.txt 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p>命令解释：</p><p>将以往控制台输出的内容写入当前目录下的<code>mylog.txt</code></p><p><code>2&gt;&amp;1</code>：2 就是标准错误，1 是标准输出，该命令相当于把标准错误重定向到标准输出。这里 &amp; 相当于标准错误等效于标准输出，即把标准错误和标准输出同时输出到指定的文件<code>mylog.txt</code>中</p><blockquote><p>然后通过下面命令可以查看正在后台运行的程序</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">jobs</span></span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220427221426002.png" alt="image-20220427221426002"></p><blockquote><p>如果要终止这个程序就使用<code>fg 编号</code>命令调回前台控制，然后按<code>CTRL+C</code>终止运行，从上图可知编号为1</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fg</span> 1</span><br></pre></td></tr></table></figure><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220427221613702.png" alt="image-20220427221613702"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;修改打包方式&quot;&gt;&lt;a href=&quot;#修改打包方式&quot; class=&quot;headerlink&quot; title=&quot;修改打包方式&quot;&gt;&lt;/a&gt;修改打包方式&lt;/h3&gt;&lt;p&gt;首先在pom.xml文件中修改打包的方式为jar&lt;/p&gt;
&lt;figure class=&quot;highlight </summary>
      
    
    
    
    <category term="运维" scheme="https://blog.zoutl.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Spring Boot" scheme="https://blog.zoutl.cn/tags/Spring-Boot/"/>
    
    <category term="IntelliJ IDEA" scheme="https://blog.zoutl.cn/tags/IntelliJ-IDEA/"/>
    
    <category term="CentOS7" scheme="https://blog.zoutl.cn/tags/CentOS7/"/>
    
  </entry>
  
  <entry>
    <title>Lambda表达式的基本使用</title>
    <link href="https://blog.zoutl.cn/507.html"/>
    <id>https://blog.zoutl.cn/507.html</id>
    <published>2022-04-25T17:38:32.000Z</published>
    <updated>2022-04-26T11:39:51.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Lambda表达式就是对某一个接口方法的实现，可以替代我们以前经常写的匿名内部类来实现接口方法，本质是一个匿名函数</p><h3 id="使用的要求"><a href="#使用的要求" class="headerlink" title="使用的要求"></a>使用的要求</h3><p>接口必须是函数式接口，也就是说这个接口有且仅有一个抽象方法，但是可以有多个非抽象方法</p><h3 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h3><p>函数式接口示例代码如下：（add是抽象方法，add1和add2是非抽象方法）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">MyInterface1</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add2</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> a + b + c;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用<code>@FunctionalInterface</code>注解后，编译器将会强制检查该接口是否确实有且仅有一个抽象方法，否则将会报错。不使用这个注解也是可以的，这个注解只是用来检查是否是函数式接口，没有其它作用，只要接口只有一个抽象方法那它就是函数式接口，和注解没有任何关系</p><h3 id="Lambda表达式格式"><a href="#Lambda表达式格式" class="headerlink" title="Lambda表达式格式"></a>Lambda表达式格式</h3><p><code>(参数列表)-&gt;&#123;方法体&#125;</code></p><p>说明：</p><p><code>()</code> ：用来描述参数列表</p><p><code>&#123;&#125;</code> ：用来描述方法体</p><p><code>-&gt;</code> ：Lambda运算符，可以叫做箭头符号，或者goes to</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="定义函数式接口"><a href="#定义函数式接口" class="headerlink" title="定义函数式接口"></a>定义函数式接口</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">MyInterface1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用匿名内部类"><a href="#使用匿名内部类" class="headerlink" title="使用匿名内部类"></a>使用匿名内部类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambda;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-04-26 0:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LambdaTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MyInterface m1 = <span class="keyword">new</span> MyInterface() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> a + b;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(m1.add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用Lambda表达式"><a href="#使用Lambda表达式" class="headerlink" title="使用Lambda表达式"></a>使用Lambda表达式</h3><p>在上面的接口中，<code>int a, int b</code>是参数列表，方法体是接口的实现（根据接口名称应该知道方法体是<code>return a+b;</code>），所以Lambda表达式如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambda;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-04-26 0:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LambdaTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MyInterface m2 = (<span class="keyword">int</span> a, <span class="keyword">int</span> b) -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> a + b;</span><br><span class="line">        &#125;;</span><br><span class="line">        System.out.println(m2.add(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lambda表达式简写规则"><a href="#Lambda表达式简写规则" class="headerlink" title="Lambda表达式简写规则"></a>Lambda表达式简写规则</h3><blockquote><p>参数列表</p></blockquote><p>参数类型可以省略，因为可以根据接口方法知道参数的类型</p><p>当参数只有一个时，<code>括号()</code>可以省略，如果有两个及以上的参数括号不可以省略</p><blockquote><p>方法体</p></blockquote><p>当方法体的语句只有一条时，可以省略<code>大括号&#123;&#125;</code></p><h3 id="简写上面的Lambda表达式"><a href="#简写上面的Lambda表达式" class="headerlink" title="简写上面的Lambda表达式"></a>简写上面的Lambda表达式</h3><p>根据Lambda表达式简写规则可以将上面的代码简写，代码如下所示：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> lambda;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2022-04-26 0:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LambdaTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        MyInterface m2 = (a, b) -&gt; a + b;</span><br><span class="line">        System.out.println(m2.add(<span class="number">2</span>, <span class="number">3</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;Lam</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
    <category term="Lambda" scheme="https://blog.zoutl.cn/tags/Lambda/"/>
    
  </entry>
  
  <entry>
    <title>通过Ngrok实现让别人访问自己本地运行的项目</title>
    <link href="https://blog.zoutl.cn/506.html"/>
    <id>https://blog.zoutl.cn/506.html</id>
    <published>2022-04-25T12:37:41.000Z</published>
    <updated>2022-04-25T19:40:29.198Z</updated>
    
    <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>Ngrok是一个反向代理，通过在公共的端点和本地运行的Web服务器之间建立一个安全的通道，从而实现让别人访问自己本地运行的项目</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="注册并登录"><a href="#注册并登录" class="headerlink" title="注册并登录"></a>注册并登录</h4><p>网址为：<a href="https://ngrok.cc/login">会员登陆 (ngrok.cc)</a></p><h4 id="实名认证"><a href="#实名认证" class="headerlink" title="实名认证"></a>实名认证</h4><p>以前是不需要实名认证的，但是由于被人用来弄违法的网站，所以现在强制实名认证，实名认证需要收取两块钱的费用</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220425204751143.png" alt="image-20220425204751143"></p><h4 id="开通隧道"><a href="#开通隧道" class="headerlink" title="开通隧道"></a>开通隧道</h4><p>使用免费的就行，需要自定义域名以及不能忍受速度慢的可以花钱买</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220425205918019.png" alt="image-20220425205918019"></p><p>确定添加后，在点击确认即可</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220425210631124.png" alt="image-20220425210631124"></p><h4 id="下载客户端"><a href="#下载客户端" class="headerlink" title="下载客户端"></a>下载客户端</h4><p>在左侧菜单选择隧道管理，然后下载Ngrok客户端</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220425211730192.png" alt="image-20220425211730192"></p><p>选择适合自己的版本</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2022425_211819_1650892699.png"></p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>解压后打开启动工具</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220425212130856.png" alt="image-20220425212130856"></p><p>复制隧道id到刚刚打开的窗口内，并回车</p><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220425212422709.png" alt="image-20220425212422709"></p><p>最后输入上图的赠送域名即可访问</p><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>我试了一下，免费的会很卡，如果真的有需要，就花10块钱买一个月的服务器吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;Ngrok是一个反向代理，通过在公共的端点和本地运行的Web服务器之间建立一个安全的通道，从而实现让别人访问自己本地运行的项目&lt;/p&gt;
&lt;h</summary>
      
    
    
    
    <category term="运维" scheme="https://blog.zoutl.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
    <category term="Ngrok" scheme="https://blog.zoutl.cn/tags/Ngrok/"/>
    
  </entry>
  
  <entry>
    <title>LocalDateTime的基本使用</title>
    <link href="https://blog.zoutl.cn/505.html"/>
    <id>https://blog.zoutl.cn/505.html</id>
    <published>2022-04-23T03:22:46.000Z</published>
    <updated>2022-04-25T19:40:32.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>java.util.Date以及它的格式化工具类SimpleDateFormat都是线程不安全的，不推荐使用</p><p>Java 8之后推荐使用<code>LocalDateTime</code>代替Date，<code>DateTimeFormatter</code>代替SimpleDateFormat</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><h3 id="LocalDateTime"><a href="#LocalDateTime" class="headerlink" title="LocalDateTime"></a>LocalDateTime</h3><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">now()</td><td align="center">从默认时区的系统时钟获取当前的日期时间</td></tr><tr><td align="center">getYear()</td><td align="center">获取年份字段</td></tr><tr><td align="center">getMonthValue()</td><td align="center">获取月份字段，从1到12</td></tr><tr><td align="center">getDayOfMonth()</td><td align="center">获取当前月的第几天</td></tr><tr><td align="center">getHour()</td><td align="center">获取小时字段</td></tr><tr><td align="center">getMinute()</td><td align="center">获取分钟字段</td></tr><tr><td align="center">getSecond()</td><td align="center">获取秒钟字段</td></tr></tbody></table><h3 id="DateTimeFormatter"><a href="#DateTimeFormatter" class="headerlink" title="DateTimeFormatter"></a>DateTimeFormatter</h3><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">ofPattern(String pattern)</td><td align="center">使用指定的模式创建格式化程序</td></tr><tr><td align="center">format(TemporalAccessor temporal)</td><td align="center">使用此格式化程序格式化日期时间对象</td></tr></tbody></table><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取当前时间</span></span><br><span class="line">        LocalDateTime localDateTime = LocalDateTime.now();</span><br><span class="line">        System.out.println(localDateTime);</span><br><span class="line">        <span class="comment">//年份</span></span><br><span class="line">        System.out.println(localDateTime.getYear());</span><br><span class="line">        <span class="comment">//格式化</span></span><br><span class="line">        DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy年MM月dd日 HH:mm:ss&quot;</span>);</span><br><span class="line">        System.out.println(dateTimeFormatter.format(localDateTime));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/image-20220423115516512.png" alt="image-20220423115516512"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;java.util.Date以及它的格式化工具类SimpleDateFormat都是线程不安全的，不推荐使用&lt;/p&gt;
&lt;p&gt;Java 8之后</summary>
      
    
    
    
    <category term="后端" scheme="https://blog.zoutl.cn/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
    <category term="Java" scheme="https://blog.zoutl.cn/tags/Java/"/>
    
  </entry>
  
</feed>
