<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>用Tomcat运行web项目</title>
    <url>/10.html</url>
    <content><![CDATA[<p>1.将项目(war包)复制到Tomcat安装目录的webapps文件夹中</p>
<p>2.然后去bin文件夹中,点击startup.bat即可启动Tomcat运行项目</p>
<p>3.点击bin文件夹中的shutdown.bat关闭Tomcat</p>]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>一个非常好用的Java工具包：HulTool</title>
    <url>/100.html</url>
    <content><![CDATA[<h3 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a><strong>官方网站</strong></h3><p><a href="https://www.hutool.cn/">https://www.hutool.cn/</a></p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h3><p>Hutool是一个Java工具包类库，对文件、流、加密解密、转码、正则、线程、XML等JDK方法进行封装，组成各种Util工具类</p>
<h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a><strong>主要功能</strong></h3><p>日期工具：通过DateUtil类，提供高度便捷的日期访问、处理和转换方式。</p>
<p>HTTP客户端：通过HttpUtil对HTTP客户端的封装，实现便捷的HTTP请求，并简化文件上传操作。</p>
<p>转换工具：通过Convert类中的相应静态方法，提供一整套的类型转换解决方案，并通过ConverterRegistry工厂类自定义转换。</p>
<p>配置文件工具：通过Setting对象，提供兼容Properties文件的更加强大的配置文件工具，用于解决中文、分组等JDK配置文件存在的诸多问题。</p>
<p>日志工具：Hutool的日志功能，通过抽象Log接口，提供对Slf4j、LogBack、Log4j、JDK-Logging的全面兼容支持。</p>
<p>JDBC工具类：通过db模块，提供对MySQL、Oracle等关系型数据库的JDBC封装，借助ActiveRecord思想，大大简化数据库操作。</p>
<p>更多功能：<a href="https://www.hutool.cn/docs/#/">官方参考文档</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>pom.xml代码（dependencies中加入）：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>解决：关于CKEditor的代码高亮</title>
    <url>/101.html</url>
    <content><![CDATA[<blockquote>
<p>去代码在线高亮网站获得高亮后的HTML代码：（网站如下图所示）</p>
</blockquote>
<p>地址：<a href="https://c.runoob.com/front-end/5536">https://c.runoob.com/front-end/5536</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312194044.jpg" alt="img"></p>
<p>说明：①处填入要高亮的原始代码，②处是高亮后的HTML代码（是我们需要的），③处是高亮后的代码的效果预览</p>
<blockquote>
<p>点击CKEditor编辑器左上角的源码选项，进入编辑源码状态，在对应的位置将刚刚得到的HTML代码复制进去即可</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312194504.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>利用highlight.js实现代码高亮：<a href="/126.html">highlight.js实现代码高亮</a></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>CKEditor</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL数据库中text字段长度不够</title>
    <url>/102.html</url>
    <content><![CDATA[<p>text类型是可变长度的字符串，最多65535个字符；</p>
<p>可以把字段类型改成MEDIUMTEXT（最多存放16777215个字符）或者LONGTEXT（最多存放4294967295个字符）</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/u014417619/article/details/76798233">mysql的text字段长度？mysql数据库中text字段长度不够的问题_u014417619的专栏-CSDN博客_mysql的text字段长度</a></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>制作网站logo</title>
    <url>/103.html</url>
    <content><![CDATA[<h3 id="网站地址："><a href="#网站地址：" class="headerlink" title="网站地址："></a><strong>网站地址：</strong></h3><p><a href="http://www.uugai.com/">http://www.uugai.com/</a></p>
<h3 id="输入logo的名称"><a href="#输入logo的名称" class="headerlink" title="输入logo的名称"></a>输入logo的名称</h3><p>进入网站后，输入logo的名称，然后点击开始设计</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312223126.jpg" alt="img"></p>
<h3 id="设计文案"><a href="#设计文案" class="headerlink" title="设计文案"></a><strong>设计文案</strong></h3><p>下方的拼音（我称之为副标题）不删除的话最近的logo图片会有两行字（副标题可以根据自己的需要输入，如果不需要两行字就把下面的副标题删除即可），然后提交文案</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312223528.jpg" alt="img"></p>
<h3 id="选择自己喜欢的字体"><a href="#选择自己喜欢的字体" class="headerlink" title="选择自己喜欢的字体"></a><strong>选择自己喜欢的字体</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312223625.jpg" alt="img"></p>
<h3 id="选择logo图案"><a href="#选择logo图案" class="headerlink" title="选择logo图案"></a><strong>选择logo图案</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312223719.jpg" alt="img"></p>
<h3 id="生成logo下载"><a href="#生成logo下载" class="headerlink" title="生成logo下载"></a><strong>生成logo下载</strong></h3><p>也可在下方选择字体的颜色（小字体即前面说的副标题）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312223854.jpg" alt="img"></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>根据ip地址获取真实地址</title>
    <url>/104.html</url>
    <content><![CDATA[<h3 id="pom-xml引入"><a href="#pom-xml引入" class="headerlink" title="pom.xml引入"></a><strong>pom.xml引入</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.util;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据IP获取真实地址</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-03-13 11:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddressUtil</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAddress</span><span class="params">(String ip)</span> </span>&#123;</span><br><span class="line">        String result1 = HttpUtil.get(<span class="string">&quot;https://www.ip138.com/iplookup.asp?ip=&quot;</span> + ip + <span class="string">&quot;&amp;action=2&quot;</span>);</span><br><span class="line">        String result = result1.split(<span class="string">&quot;\&quot;ASN归属地\&quot;:\&quot;&quot;</span>)[<span class="number">1</span>].split(<span class="string">&quot;\&quot;, \&quot;iP段\&quot;:&quot;</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String ip = <span class="string">&quot;180.136.86.160&quot;</span>;</span><br><span class="line">        System.out.println(getAddress(ip));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210313120545.jpg" alt="img"></p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a><strong>原理</strong></h3><p>找到一个查ip的网站，随便查一个ip，然后将地址栏中的链接复制下来，链接中的ip之后在Java代码中可以动态拼接</p>
<p>通过<a href="https://www.hutool.cn/">Hutool工具包</a>的HttpUtil.get方法获取查某个ip得到结果后的网站源码</p>
<p>通过Java的String.split方法截取网站源码中的真实地址</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>另一种方法：<a href="https://www.cnblogs.com/GoslingWu/p/13689958.html">java-通过ip获取地址 - 公众号/架构师与哈苏 - 博客园</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>实现鼠标移入文字向右移动效果</title>
    <url>/105.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&#x27;div1&#x27;</span>&gt;</span>&gt;&gt;&gt;鼠标移入此行会缓慢向右路移动&lt;&lt;&lt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#div1</span> &#123;</span><br><span class="line">	-webkit-<span class="attribute">transition</span>: margin-left .<span class="number">8s</span>;</span><br><span class="line">	-moz-<span class="attribute">transition</span>: margin-left .<span class="number">8s</span>;</span><br><span class="line">	-o-<span class="attribute">transition</span>: margin-left .<span class="number">8s</span>;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#div1</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">	<span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/smile1/p/12007164.html">鼠标移入文字上向右移动效果 - Crazy丶迷恋 - 博客园</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>解决：Tomcat运行项目时Quartz定时任务执行两次</title>
    <url>/106.html</url>
    <content><![CDATA[<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a><strong>原因</strong></h3><p>在Tomcat的配置文件conf/server.xml中：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/test&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>其中<Host/>告诉Tomcat，在启动的时候加载webapps下的所有项目工程文件，<Context/>又让Tomcat再加载了一遍（一般情况下配置<Context/>，主要是由于想域名访问时将工程名去掉的原因配置），这种情况下会导致工程中的quartz定时被两次触发，执行两次。</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a><strong>解决办法</strong></h3><p>将Tomcat的配置文件conf/server.xml修改为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;false&quot;</span> <span class="attr">deployOnStartup</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/test&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>autoDeploy：是否允许自动部署，默认值是true，即表示 Tomcat 会自动检测appBase目录下面的文件变化从而自动应用到正在运行的 Web 应用程序。<br>deployOnStartup=”false”,表示Tomcat服务器启动时, 不会自动发布appBase目录下所有的Web应用。</p>
<h3 id="会出现的问题"><a href="#会出现的问题" class="headerlink" title="会出现的问题"></a><strong>会出现的问题</strong></h3><p>但是这样虽然解决了Quartz的执行两次的问题，但也存在另一个问题——无法解压war包。就是war包放到webapps目录下，不会自动解压生成项目文件夹，你所看到的项目文件夹是历史文件夹。所以，这是一个不断修改conf/server.xml的过程——当需要解压文件夹的时候，修改成true，解压完成后，改成false，记得重启Tomcat。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/qq_38410730/article/details/88370891">【Java Web】Quartz定时任务执行两次的解决方法_Yngz_Miao的博客-CSDN博客</a></p>]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>给网页添加背景图片（网页缩小放大都不受影响）</title>
    <url>/107.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bjimg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.bjimg</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: fixed;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">	<span class="attribute">min-width</span>: <span class="number">1000px</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: -<span class="number">10</span>;</span><br><span class="line">	zoom: <span class="number">1</span>;</span><br><span class="line">	<span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">	<span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">../static/images/background.png</span>);</span><br><span class="line">	<span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">	<span class="attribute">background-size</span>: cover;</span><br><span class="line">	-webkit-<span class="attribute">background-size</span>: cover;</span><br><span class="line">	-o-<span class="attribute">background-size</span>: cover;</span><br><span class="line">	<span class="attribute">background-position</span>: center <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/luo1831251387/article/details/110772006?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242">给网页添加背景图片 html+css_北极光之夜。-CSDN博客</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>鼠标移入div显示查看更多</title>
    <url>/108.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;box&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;image&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://photo.tuchong.com/316540/f/6406791.jpg&#x27;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">width</span>=<span class="string">&#x27;100%&#x27;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;mask&#x27;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&#x27;link&#x27;</span> <span class="attr">href</span>=<span class="string">&#x27;https://blog.csdn.net/Hreticent/article/details/85109668&#x27;</span>&gt;</span></span><br><span class="line">	查看更多</span><br><span class="line">  <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.mask</span> &#123;</span><br><span class="line">	<span class="attribute">background-color</span>:<span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">116</span>);</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">	<span class="attribute">position</span>: absolute;</span><br><span class="line">	<span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">	<span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">	<span class="attribute">display</span>: none</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.image</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">	<span class="attribute">position</span>: relative;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.mask</span> &#123;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.link</span> &#123;</span><br><span class="line">	<span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">	<span class="attribute">height</span>: <span class="number">40px</span>;</span><br><span class="line">	<span class="attribute">display</span>: block;</span><br><span class="line">	<span class="attribute">background</span>: <span class="number">#FFF</span>;</span><br><span class="line">	<span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">	<span class="attribute">text-align</span>: center;</span><br><span class="line">	<span class="attribute">margin</span>: <span class="number">80px</span> auto;</span><br><span class="line">	<span class="attribute">color</span>: <span class="number">#ff00a5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/Hreticent/article/details/85109668">鼠标移入div显示查看更多demo_Hey-CSDN博客</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot引入Quartz定时任务</title>
    <url>/109.html</url>
    <content><![CDATA[<h3 id="pom-xml代码"><a href="#pom-xml代码" class="headerlink" title="pom.xml代码"></a><strong>pom.xml代码</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.quartz;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableScheduling;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Scheduled;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 每天23点自动删除已被删除文章中的图片</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-23 11:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableScheduling</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteInvalidImage</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> BlogService blogService;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Scheduled(cron = &quot;0 0 23 * * ?&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//这里填入定时执行的代码</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>常用cron表达式：<a href="http://www.zoutl.cn/blog/13">常用cron表达式</a></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Github私有仓库改为公开</title>
    <url>/11.html</url>
    <content><![CDATA[<h3 id="打开设置"><a href="#打开设置" class="headerlink" title="打开设置"></a>打开设置</h3><p>进入该仓库所在首页，找到Settings并点击（在首页的菜单栏）</p>
<p><img src="https://i.loli.net/2021/07/29/u3lyp6t9j2k4V1F.png" alt="20210227090442.jpg"></p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>在出现的页面找到Danger Zone（在最下面），点击Change visibility按钮</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210311165133.jpg"></p>
<p>然后选择Make public，并根据提示输入指定内容，点击同意按钮，然后输入GitHub账号的密码即可修改完成</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210311165306.jpg"></p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>部落冲突攻略</title>
    <url>/110.html</url>
    <content><![CDATA[<h3 id="指导网站"><a href="#指导网站" class="headerlink" title="指导网站"></a><strong>指导网站</strong></h3><p><a href="https://www.cocservice.top/">https://www.cocservice.top/</a></p>
<h3 id="配兵"><a href="#配兵" class="headerlink" title="配兵"></a>配兵</h3><h4 id="超级女巫"><a href="#超级女巫" class="headerlink" title="超级女巫"></a><strong>超级女巫</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210327011129.jpg" alt="img"></p>
<h4 id="8848流"><a href="#8848流" class="headerlink" title="8848流"></a><strong>8848流</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210327011245.jpg" alt="img"></p>
<p>视频教程链接：<a href="https://www.youtube.com/watch?v=GNKpNH5Img4">https://www.youtube.com/watch?v=GNKpNH5Img4</a></p>
<h4 id="超级女巫-女巫"><a href="#超级女巫-女巫" class="headerlink" title="超级女巫+女巫"></a><strong>超级女巫+女巫</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210327011354.jpg" alt="img"></p>
<p>视频教程链接：<a href="https://www.youtube.com/watch?v=wzVR0pPbbYU">https://www.youtube.com/watch?v=wzVR0pPbbYU</a></p>
<h4 id="冰冻龙流（攻城机器用滚木车）"><a href="#冰冻龙流（攻城机器用滚木车）" class="headerlink" title="冰冻龙流（攻城机器用滚木车）"></a><strong>冰冻龙流</strong>（攻城机器用滚木车）</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210420222435.jpg" alt="img"></p>
<p>视频教程链接：<a href="https://www.youtube.com/watch?v=2_oV7ws49t4">https://www.youtube.com/watch?v=2_oV7ws49t4</a></p>
<h4 id="天女超法皮卡流"><a href="#天女超法皮卡流" class="headerlink" title="天女超法皮卡流"></a><strong>天女超法皮卡流</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210428141543.jpg" alt="img"></p>
<p>视频教程链接：<a href="https://www.bilibili.com/video/BV1My4y1b7kK">https://www.bilibili.com/video/BV1My4y1b7kK</a></p>
<h3 id="常用数据"><a href="#常用数据" class="headerlink" title="常用数据"></a>常用数据</h3><h4 id="城墙等级和炸弹人数量"><a href="#城墙等级和炸弹人数量" class="headerlink" title="城墙等级和炸弹人数量"></a><strong>城墙等级和炸弹人数量</strong></h4><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210327011522.jpg" alt="img"></strong></p>
<h4 id="传奇联赛胜利奖杯"><a href="#传奇联赛胜利奖杯" class="headerlink" title="传奇联赛胜利奖杯"></a><strong>传奇联赛胜利奖杯</strong></h4><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210421224722.jpg" alt="img"></strong></p>
<h4 id="部落冲突联赛奖励图"><a href="#部落冲突联赛奖励图" class="headerlink" title="部落冲突联赛奖励图"></a><strong>部落冲突联赛奖励图</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210501201333.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210501201443.jpg" alt="img"></p>
<h3 id="阵型"><a href="#阵型" class="headerlink" title="阵型"></a><strong>阵型</strong></h3><p><a href="https://link.clashofclans.com/cn?action=OpenLayout&amp;id=TH14:WB:AAAATAAAAAE7a-CC6CO6VLE599N9_DOM">https://link.clashofclans.com/cn?action=OpenLayout&amp;id=TH14%3AWB%3AAAAATAAAAAE7a-CC6CO6VLE599N9_DOM</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210704025421.jpg" alt="img"></p>
<p><a href="https://link.clashofclans.com/cn?action=OpenLayout&amp;id=TH14:WB:AAAATAAAAAE7a-k9e4msVwq1sNtFRBps">https://link.clashofclans.com/cn?action=OpenLayout&amp;id=TH14%3AWB%3AAAAATAAAAAE7a-k9e4msVwq1sNtFRBps</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210704025406.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>部落冲突</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLyog备份和导入MySQL数据库</title>
    <url>/111.html</url>
    <content><![CDATA[<h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a><strong>备份</strong></h3><p>1.右键点击要备份的数据库，选中（备份数据库，转储到SQL）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210423234316.jpg" alt="img"></p>
<p>2.第二条红线处选择存储的位置，然后点击导出即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210423234600.jpg" alt="img"></p>
<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a><strong>恢复</strong></h3><p>1.右键点击要恢复的数据库，选中（执行SQL脚本）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210423234835.jpg" alt="img"></p>
<p>2.选择对应的SQL文件，点击执行即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210423235030.jpg" alt="img"></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>mysqldump命令备份数据库</title>
    <url>/112.html</url>
    <content><![CDATA[<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a><strong>命令</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqldump -uroot -p123456 db_myblog&gt; D:/db_backup/db_myblog.sql</span><br></pre></td></tr></table></figure>

<p>-u后面接的是数据库用户名，-p后面接的是密码，然后是空格接上数据库名称（db_myblog是我的数据库名称），后面则是存储的位置以及存储后的文件名</p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h3><p>1.在mysql安装目录下bin文件夹中,打开CMD窗口</p>
<p>2.输入上述命令，然后查看对应位置是否生成该SQL文件</p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424000522.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10脚本代码备份MySQL数据库</title>
    <url>/113.html</url>
    <content><![CDATA[<h3 id="创建backdb-bat文件"><a href="#创建backdb-bat文件" class="headerlink" title="创建backdb.bat文件"></a><strong>创建backdb.bat文件</strong></h3><p>打开该文件，输入以下内容并保存</p>
<p>D盘创建名为db_backup文件夹，-u后的root是数据库连接时用户名，-p后的123456是密码，db_myblog是我的数据库名称</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 取日期、时间变量值<span class="built_in">set</span> yy=%date:~0,4%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> mm=%date:~5,2%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> dd=%date:~8,2%</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> /i %time:~0,2% lss 10 <span class="built_in">set</span> hh=0%time:~1,1%</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> /i %time:~0,2% geq 10 <span class="built_in">set</span> hh=%time:~0,2%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> mn=%time:~3,2%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> ss=%time:~6,2%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> date=%yy%%mm%%dd%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> time=%hh%%mn%%ss%</span><br><span class="line"> </span><br><span class="line"><span class="built_in">set</span> filename=%date%_%time%</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;C:/Program Files/MySQL/MySQL Server 5.6/bin/mysqldump.exe&quot;</span> -uroot -p123456 --opt --default-character-set=utf8 -e --triggers -R --hex-blob --flush-logs -x --databases db_myblog &gt; D:/db_backup/db_myblog%filename%.sql</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> 导出已经完成</span><br><span class="line"> </span><br><span class="line"><span class="comment">#pause</span></span><br></pre></td></tr></table></figure>

<h3 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424001904.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>Java备份MySQL数据库</title>
    <url>/114.html</url>
    <content><![CDATA[<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-04-23 21:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Backup</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据库用户名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String user_name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据库密码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String user_psw;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 需要备份的数据库名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String db_name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主机IP</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String host_ip;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 字符集</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String user_charset;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 存放备份文件的路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String backup_path;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 命令</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String stmt;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Backup</span><span class="params">(String user_name, String user_psw, String db_name,</span></span></span><br><span class="line"><span class="params"><span class="function">                  String host_ip, String user_charset, String backup_path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.user_name = user_name;</span><br><span class="line">        <span class="keyword">this</span>.user_psw = user_psw;</span><br><span class="line">        <span class="keyword">this</span>.db_name = db_name;</span><br><span class="line">        <span class="comment">// 主机IP;</span></span><br><span class="line">        <span class="keyword">if</span> (host_ip == <span class="keyword">null</span> || host_ip.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// 默认为本机</span></span><br><span class="line">            <span class="keyword">this</span>.host_ip = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.host_ip = host_ip;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 字符集</span></span><br><span class="line">        <span class="keyword">if</span> (user_charset == <span class="keyword">null</span> || user_charset.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">// 默认为安装时设置的字符集</span></span><br><span class="line">            <span class="keyword">this</span>.user_charset = <span class="string">&quot; &quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.user_charset = <span class="string">&quot; --default-character-set=&quot;</span> + user_charset;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.backup_path = backup_path;</span><br><span class="line">        <span class="keyword">this</span>.stmt = <span class="string">&quot;C:\\Program Files\\MySQL\\MySQL Server 5.6\\bin\\mysqldump &quot;</span></span><br><span class="line">                + <span class="keyword">this</span>.db_name + <span class="string">&quot; -h &quot;</span> + <span class="keyword">this</span>.host_ip + <span class="string">&quot; -u&quot;</span> + <span class="keyword">this</span>.user_name</span><br><span class="line">                + <span class="string">&quot; -p&quot;</span> + <span class="keyword">this</span>.user_psw + <span class="keyword">this</span>.user_charset + <span class="string">&quot; --result-file=&quot;</span></span><br><span class="line">                + <span class="keyword">this</span>.backup_path;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">backup_run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> run_result = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(<span class="keyword">this</span>.stmt);</span><br><span class="line">            run_result = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> run_result;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Backup backup = <span class="keyword">new</span> Backup(<span class="string">&quot;root&quot;</span>, <span class="string">&quot;123456&quot;</span>, <span class="string">&quot;db_myblog&quot;</span>, <span class="keyword">null</span>, <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">                <span class="string">&quot;D:\\db_backup\\db_myblog.sql&quot;</span>);</span><br><span class="line">        <span class="keyword">boolean</span> result = backup.backup_run();</span><br><span class="line">        <span class="keyword">if</span> (result) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;备份成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424002930.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424003003.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10使用任务计划程序</title>
    <url>/115.html</url>
    <content><![CDATA[<h3 id="打开控制面板，搜索管理工具–-gt-任务计划程序"><a href="#打开控制面板，搜索管理工具–-gt-任务计划程序" class="headerlink" title="打开控制面板，搜索管理工具–&gt;任务计划程序"></a>打开控制面板，搜索管理工具–&gt;任务计划程序</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424012241.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424012344.jpg" alt="img"></p>
<h3 id="点击右侧的创建基本任务"><a href="#点击右侧的创建基本任务" class="headerlink" title="点击右侧的创建基本任务"></a>点击右侧的创建基本任务</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424012529.jpg" alt="img"></p>
<h3 id="开始创建基本任务"><a href="#开始创建基本任务" class="headerlink" title="开始创建基本任务"></a><strong>开始创建基本任务</strong></h3><h4 id="输入名称和描述"><a href="#输入名称和描述" class="headerlink" title="输入名称和描述"></a>输入名称和描述</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424012918.jpg" alt="img"></p>
<h4 id="选择触发时间"><a href="#选择触发时间" class="headerlink" title="选择触发时间"></a>选择触发时间</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424012943.jpg" alt="img"></p>
<h4 id="选择操作（选择启动程序）"><a href="#选择操作（选择启动程序）" class="headerlink" title="选择操作（选择启动程序）"></a>选择操作（选择启动程序）</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424013002.jpg" alt="img"></p>
<h4 id="选择自己的程序或脚本"><a href="#选择自己的程序或脚本" class="headerlink" title="选择自己的程序或脚本"></a>选择自己的程序或脚本</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424013028.jpg" alt="img"></p>
<h4 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h4><h3 id="也可在下方选择字体的颜色（小字体即前面说的副标题）"><a href="#也可在下方选择字体的颜色（小字体即前面说的副标题）" class="headerlink" title="也可在下方选择字体的颜色（小字体即前面说的副标题）"></a>也可在下方选择字体的颜色（小字体即前面说的副标题）</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210424013256.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>定时自动备份MySQL数据库</title>
    <url>/116.html</url>
    <content><![CDATA[<h3 id="方法一-使用任务计划程序"><a href="#方法一-使用任务计划程序" class="headerlink" title="方法一.使用任务计划程序"></a><strong>方法一.使用任务计划程序</strong></h3><p>①<a href="/113.html">Windows脚本代码备份MySQL数据库</a></p>
<p>②<a href="/115.html">Windows10使用任务计划程序</a></p>
<h3 id="方法二-使用Quartz定时任务（Java代码实现）"><a href="#方法二-使用Quartz定时任务（Java代码实现）" class="headerlink" title="方法二.使用Quartz定时任务（Java代码实现）"></a><strong>方法二.使用Quartz定时任务（Java代码实现）</strong></h3><p>①<a href="/109.html">Spring Boot引入Quartz定时任务</a></p>
<p>②<a href="/4.html">常用cron表达式</a></p>
<p>③<a href="/114.html">Java备份MySQL数据库</a></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>commons-io常用方法</title>
    <url>/117.html</url>
    <content><![CDATA[<h3 id="pom-xml代码"><a href="#pom-xml代码" class="headerlink" title="pom.xml代码"></a><strong>pom.xml代码</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a><strong>常用方法</strong></h3><p><font color="#dd0000">FileUtils.writeStringToFile</font></p>
<p>写入字符串到指定文件，直接覆盖掉</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File file1 = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\a.txt&quot;</span>);</span><br><span class="line">FileUtils.writeStringToFile(file1,<span class="string">&quot;sss&quot;</span>,<span class="string">&quot;UTF-8&quot;</span>);</span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">FileUtils.readFileToString</font></p>
<p>指定编码表读取内容</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File file1 = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\a.txt&quot;</span>);</span><br><span class="line">String str = FileUtils.readFileToString(file1, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">System.out.println(str);</span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">FileUtils.copyFile</font></p>
<p>复制一个文件的内容到另一个文件，如果目标文件不存在那么会新建它</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File file1 = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\a.txt&quot;</span>);</span><br><span class="line">File file2 = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\b.txt&quot;</span>);</span><br><span class="line">FileUtils.copyFile(file1, file2);</span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">FileUtils.copyDirectory</font></p>
<p>复制一个文件夹的内容到另一个文件夹，如果目标文件夹不存在那么会新建它</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File srcDir = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\blogImage&quot;</span>);</span><br><span class="line">File destDir = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\blogimage2&quot;</span>);</span><br><span class="line">FileUtils.copyDirectory(srcDir, destDir);</span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">FileUtils.copyDirectoryToDirectory</font></p>
<p>复制一个文件夹及其内容到另一个文件夹，如果目标文件夹不存在那么会新建它（注意：本方法和上一个方法存在差异）</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">File srcDir = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\blogImage&quot;</span>);</span><br><span class="line">File destDir = <span class="keyword">new</span> File(<span class="string">&quot;E:\\sql files\\blogimage2&quot;</span>);</span><br><span class="line">FileUtils.copyDirectoryToDirectory(srcDir,destDir);</span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">FileUtils.forceDelete</font></p>
<p>删除文件</p>
<p><font color="#dd0000">FileUtils.deleteDirectory</font></p>
<p>删除文件夹</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/chen13579867831/article/details/78993861">commons-io中操作文件的一些常用方法_iTED-CSDN博客</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyUI自定义图标</title>
    <url>/118.html</url>
    <content><![CDATA[<h3 id="下载图标"><a href="#下载图标" class="headerlink" title="下载图标"></a><strong>下载图标</strong></h3><p>①从网站下载：</p>
<p>网站地址：<a href="https://www.easyicon.net/">图标下载，ICON(SVG/PNG/ICO/ICNS)图标搜索下载 - Easyicon</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210427000311.jpg" alt="img"></p>
<p>选择16PX的PNG格式即可</p>
<p>②EasyUI图标打包下载：</p>
<p>百度网盘链接：<a href="https://pan.baidu.com/s/1Y0678vgcZbkHOTcdRr0hyQ">https://pan.baidu.com/s/1Y0678vgcZbkHOTcdRr0hyQ</a></p>
<p>提取码：cv65</p>
<h3 id="在EasyUI文件夹的themes文件夹中放入下载好的图片（文件名后缀改为-gif）"><a href="#在EasyUI文件夹的themes文件夹中放入下载好的图片（文件名后缀改为-gif）" class="headerlink" title="在EasyUI文件夹的themes文件夹中放入下载好的图片（文件名后缀改为.gif）"></a><strong>在EasyUI文件夹的themes文件夹中放入下载好的图片（文件名后缀改为.gif）</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210427000607.jpg" alt="img"></p>
<h3 id="在EasyUI文件夹的themes文件夹的icon-css中添加图标代码"><a href="#在EasyUI文件夹的themes文件夹的icon-css中添加图标代码" class="headerlink" title="在EasyUI文件夹的themes文件夹的icon.css中添加图标代码"></a><strong>在EasyUI文件夹的themes文件夹的icon.css中添加图标代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.icon-setMenuBlog</span>&#123;</span><br><span class="line">	<span class="attribute">background</span>:<span class="built_in">url</span>(<span class="string">&#x27;usericons/setMenuBlog.gif&#x27;</span>) no-repeat center center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>EasyUI</tag>
      </tags>
  </entry>
  <entry>
    <title>格式化时间</title>
    <url>/119.html</url>
    <content><![CDATA[<p>Java格式化代码使用的类是SimpleDateFormat</p>
<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><p>格式有yyyy-MM-dd HH:mm:ss，yyyy年MM月dd日 HH时mm分ss秒等</p>
<p>SimpleDateFormat simpleDateFormat = new SimpleDateFormat(“yyyy-MM-dd HH:mm:ss”);</p>
<p>simpleDateFormat.format(要格式化的时间)</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Date date = <span class="keyword">new</span> Date();</span><br><span class="line">        System.out.println(<span class="string">&quot;格式化前：&quot;</span>+date);</span><br><span class="line">        System.out.println(<span class="string">&quot;格式化后：&quot;</span>);</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        System.out.println(simpleDateFormat.format(date));</span><br><span class="line">        SimpleDateFormat simpleDateFormat2 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy年MM月dd日 HH时mm分ss秒&quot;</span>);</span><br><span class="line">        System.out.println(simpleDateFormat2.format(date));</span><br><span class="line">        SimpleDateFormat simpleDateFormat1 = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a><strong>运行结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210517050045.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>个人博客系统</title>
    <url>/12.html</url>
    <content><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><strong>项目地址</strong></h3><p>GitHub地址：<a href="https://github.com/a6678696/MyBlog">https://github.com/a6678696/MyBlog</a></p>
<p>项目演示地址：<a href="http://www.zoutl.cn/">http://www.zoutl.cn/</a></p>
<h3 id="使用的技术"><a href="#使用的技术" class="headerlink" title="使用的技术"></a><strong>使用的技术</strong></h3><p>本项目核心技术采用Spring Boot+mybatis；开发工具idea；数据库mysql5.6；模版引擎采用的是thymeleaf；安全框架采用SpringSecurity；在线编辑器ckeditor；Lucene全文检索；quartz定时任务；JavaMail实现QQ邮箱发送邮件；highlight.js代码高亮；Highcharts图表；Redis存储经常查看的数据；</p>
<h3 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a><strong>功能介绍</strong></h3><h4 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h4><p>主页分页展示所有博客、按类别分类博客、按日期分类博客、查看博客内容详情、Lucene全文检索博客标题和摘要、点赞博客、评论博客、网站数据展示</p>
<h4 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h4><p>写博客、博客类别管理、博客管理、安全退出、每天23点定时删除无效的博客图片（删除的博客但未删除其引用的图片）、查看访问记录、一键切换前台UI（下面图片展示的是第一套UI，网站当前使用的是第二套UI）、评论管理（删除、审核、回复）、查看点赞记录、友情链接管理、一键备份数据以及每天23点定时备份数据（包括数据库、博客正文图片、Lucene索引）、有人留言给自动给站长发邮件、一键设置邮件提醒与否、系统自动封禁ip、封禁ip管理、highlight.js代码高亮、后台修改代码风格、每日访问ip个数统计、每日访问数统计</p>
<h3 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a><strong>图片展示</strong></h3><h4 id="前台-1"><a href="#前台-1" class="headerlink" title="前台"></a>前台</h4><h5 id="博客首页"><a href="#博客首页" class="headerlink" title="博客首页"></a>博客首页</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194039.jpg"></p>
<h5 id="按博客类别分类"><a href="#按博客类别分类" class="headerlink" title="按博客类别分类"></a>按博客类别分类</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194507.jpg"></p>
<h5 id="查看博客详情页面"><a href="#查看博客详情页面" class="headerlink" title="查看博客详情页面"></a>查看博客详情页面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194540.jpg"></p>
<h5 id="搜索博客"><a href="#搜索博客" class="headerlink" title="搜索博客"></a>搜索博客</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194603.jpg"></p>
<h5 id="发表评论"><a href="#发表评论" class="headerlink" title="发表评论"></a>发表评论</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210205224038.jpg"></p>
<h5 id="被封禁后的访问界面"><a href="#被封禁后的访问界面" class="headerlink" title="被封禁后的访问界面"></a>被封禁后的访问界面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210517043817.jpg"></p>
<h4 id="后台-1"><a href="#后台-1" class="headerlink" title="后台"></a>后台</h4><h5 id="管理员登陆"><a href="#管理员登陆" class="headerlink" title="管理员登陆"></a>管理员登陆</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194641.jpg"></p>
<h5 id="后台首页"><a href="#后台首页" class="headerlink" title="后台首页"></a>后台首页</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210517052031.jpg"></p>
<h5 id="写博客"><a href="#写博客" class="headerlink" title="写博客"></a>写博客</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194739.jpg"></p>
<h5 id="博客类别管理"><a href="#博客类别管理" class="headerlink" title="博客类别管理"></a>博客类别管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210327113716.jpg"></p>
<h5 id="博客管理"><a href="#博客管理" class="headerlink" title="博客管理"></a>博客管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210327113728.jpg"></p>
<h5 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210205223758.jpg"></p>
<h5 id="ip封禁管理"><a href="#ip封禁管理" class="headerlink" title="ip封禁管理"></a>ip封禁管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210517043724.jpg"></p>
<h5 id="查看点赞记录"><a href="#查看点赞记录" class="headerlink" title="查看点赞记录"></a>查看点赞记录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210205223820.jpg"></p>
<h5 id="查看访问记录"><a href="#查看访问记录" class="headerlink" title="查看访问记录"></a>查看访问记录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022013413.jpg"></p>
<h5 id="每日访问ip个数统计"><a href="#每日访问ip个数统计" class="headerlink" title="每日访问ip个数统计"></a>每日访问ip个数统计</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210609231205.jpg"></p>
<h5 id="切换前台UI"><a href="#切换前台UI" class="headerlink" title="切换前台UI"></a>切换前台UI</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210203150340.jpg"></p>
<h5 id="一键备份数据"><a href="#一键备份数据" class="headerlink" title="一键备份数据"></a>一键备份数据</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210516231054.jpg"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210516231105.jpg"></p>
<h5 id="设置邮件提醒与否"><a href="#设置邮件提醒与否" class="headerlink" title="设置邮件提醒与否"></a>设置邮件提醒与否</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210516231217.jpg"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210516231228.jpg"></p>
<h5 id="后台修改代码风格"><a href="#后台修改代码风格" class="headerlink" title="后台修改代码风格"></a>后台修改代码风格</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210531042558.jpg"></p>
<h5 id="安全退出后台"><a href="#安全退出后台" class="headerlink" title="安全退出后台"></a>安全退出后台</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010194904.jpg"></p>]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>个人项目</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot引入MyBatis</title>
    <url>/120.html</url>
    <content><![CDATA[<h3 id="pom-xml代码"><a href="#pom-xml代码" class="headerlink" title="pom.xml代码"></a><strong>pom.xml代码</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a><strong>application.yml配置</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#mybatis的相关配置</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="comment">#mapper配置文件</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybatis/mapper/*.xml</span></span><br><span class="line">  <span class="attr">type-aliases-package:</span> <span class="string">com.ledao.entity</span></span><br><span class="line">  <span class="comment">#开启驼峰命名</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="加入-MapperScan注解"><a href="#加入-MapperScan注解" class="headerlink" title="加入@MapperScan注解"></a><strong>加入@MapperScan注解</strong></h3><p>在项目的启动类中加入@MapperScan注解，这样就可以指定要扫描的Mapper类的包的路径了</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210526091807.jpg" alt="img"></p>
<h3 id="项目代码示例"><a href="#项目代码示例" class="headerlink" title="项目代码示例"></a><strong>项目代码示例</strong></h3><p>以对一个博客类进行操作为例</p>
<h4 id="Blog类"><a href="#Blog类" class="headerlink" title="Blog类"></a>Blog类</h4><p>已省略setter和getter方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客实体</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-11 00:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 摘要</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String summary;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date releaseDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点击次数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer click;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogTypeId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BlogType blogType;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客里存在的第一张图片，主要用于列表展示的缩略图</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String imageName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客数量 非博客实际属性 主要是 根据发布日期归档查询数量用到</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布日期的字符串 只取年和月</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String releaseDateStr;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该类型的博客数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于判断当前IP是否点赞过这篇博客</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isLike;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点赞数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer likeNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是导航条文章（0或空代表不是，1代表是）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isMenuBlog;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置成为导航条文章的时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date setMenuBlogDate;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h4 id="BlogMapper接口"><a href="#BlogMapper接口" class="headerlink" title="BlogMapper接口"></a>BlogMapper接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.mapper;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Blog;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客Mapper接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-11 00:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogMapper</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页分条件查询博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">list</span><span class="params">(Map map)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取记录数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Long <span class="title">getCount</span><span class="params">(Map map)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blog</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">add</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blog</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">update</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Blog <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据日期分月分组查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">countList</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据博客类型查询博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blogTypeId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findByBlogTypeId</span><span class="params">(Integer blogTypeId)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取上一篇博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Blog <span class="title">getPreviousBlog</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取下一篇博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Blog <span class="title">getNextBlog</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取导航条文章（根据设置时间升序排列）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">getMenuBlogList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="BlogMapper的XML文件"><a href="#BlogMapper的XML文件" class="headerlink" title="BlogMapper的XML文件"></a>BlogMapper的XML文件</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--suppress ALL--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ledao.mapper.BlogMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BlogResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;title&quot;</span> <span class="attr">column</span>=<span class="string">&quot;title&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;summary&quot;</span> <span class="attr">column</span>=<span class="string">&quot;summary&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;releaseDate&quot;</span> <span class="attr">column</span>=<span class="string">&quot;releaseDate&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;click&quot;</span> <span class="attr">column</span>=<span class="string">&quot;click&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;content&quot;</span> <span class="attr">column</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;blogTypeId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;blogTypeId&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;isMenuBlog&quot;</span> <span class="attr">column</span>=<span class="string">&quot;isMenuBlog&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;setMenuBlogDate&quot;</span> <span class="attr">column</span>=<span class="string">&quot;setMenuBlogDate&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from t_blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null and title != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and title like #&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;blogTypeId != null&quot;</span>&gt;</span></span><br><span class="line">                and blogTypeId = #&#123;blogTypeId&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlog != null&quot;</span>&gt;</span></span><br><span class="line">                and isMenuBlog = #&#123;isMenuBlog&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlogKey != null&quot;</span>&gt;</span></span><br><span class="line">                and isMenuBlog != 1</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;releaseDateStr != null and releaseDateStr != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and date_format(releaseDate, &#x27;%Y年%m月&#x27;) = #&#123;releaseDateStr&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sortByReleaseDate == null&quot;</span>&gt;</span></span><br><span class="line">            order by releaseDate desc</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;start != null and size != null&quot;</span>&gt;</span></span><br><span class="line">            limit #&#123;start&#125;,#&#123;size&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCount&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Long&quot;</span>&gt;</span></span><br><span class="line">        select count(*)</span><br><span class="line">        from t_blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null and title != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and title like #&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;blogTypeId != null&quot;</span>&gt;</span></span><br><span class="line">                and blogTypeId = #&#123;blogTypeId&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlog != null&quot;</span>&gt;</span></span><br><span class="line">                and isMenuBlog = #&#123;isMenuBlog&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlogKey != null&quot;</span>&gt;</span></span><br><span class="line">                and isMenuBlog != 1</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;releaseDateStr != null and releaseDateStr != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and date_format(releaseDate, &#x27;%Y年%m月&#x27;) = #&#123;releaseDateStr&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">        insert into t_blog (title, summary, content, releaseDate, click, blogTypeId,isMenuBlog)</span><br><span class="line">        values (#&#123;title&#125;, #&#123;summary&#125;, #&#123;content&#125;, now(), 0, #&#123;blogTypeId&#125;,0);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">        update t_blog</span><br><span class="line">        <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null and title != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                title=#&#123;title&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;summary != null and summary != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                summary=#&#123;summary&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;content != null and content != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                content=#&#123;content&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;click != null&quot;</span>&gt;</span></span><br><span class="line">                click=#&#123;click&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;blogTypeId != null&quot;</span>&gt;</span></span><br><span class="line">                blogTypeId=#&#123;blogTypeId&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlog != null&quot;</span>&gt;</span></span><br><span class="line">                isMenuBlog = #&#123;isMenuBlog&#125;,</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;setMenuBlogDate != null&quot;</span>&gt;</span></span><br><span class="line">                setMenuBlogDate=now(),</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span>&gt;</span></span><br><span class="line">        delete</span><br><span class="line">        from t_blog</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from t_blog</span><br><span class="line">        where id = #&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;countList&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">        select date_format(releaseDate, &#x27;%Y年%m月&#x27;) as releaseDateStr, count(*) as blogCount</span><br><span class="line">        from t_blog where isMenuBlog=0</span><br><span class="line">        group by date_format(releaseDate, &#x27;%Y年%m月&#x27;)</span><br><span class="line">        order by date_format(releaseDate, &#x27;%Y年%m月&#x27;) desc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findByBlogTypeId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from t_blog</span><br><span class="line">        where blogTypeId = #&#123;blogTypeId&#125;</span><br><span class="line">        order by releaseDate desc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getPreviousBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.ledao.entity.Blog&quot;</span>&gt;</span></span><br><span class="line">        SELECT *</span><br><span class="line">        FROM t_blog</span><br><span class="line">        WHERE id <span class="symbol">&amp;lt;</span></span><br><span class="line">              #&#123;id&#125;</span><br><span class="line">        ORDER BY id DESC</span><br><span class="line">        LIMIT 1;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getNextBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.ledao.entity.Blog&quot;</span>&gt;</span></span><br><span class="line">        SELECT *</span><br><span class="line">        FROM t_blog</span><br><span class="line">        WHERE id <span class="symbol">&amp;gt;</span></span><br><span class="line">              #&#123;id&#125;</span><br><span class="line">        ORDER BY id asc</span><br><span class="line">        LIMIT 1;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getMenuBlogList&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from t_blog</span><br><span class="line">        where isMenuBlog = 1</span><br><span class="line">        order by setMenuBlogDate asc</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="BlogService接口"><a href="#BlogService接口" class="headerlink" title="BlogService接口"></a>BlogService接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Blog;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客Service接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-11 00:33</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分页分条件查询博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">list</span><span class="params">(Map map)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取记录数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Long <span class="title">getCount</span><span class="params">(Map map)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blog</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">add</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blog</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">update</span><span class="params">(Blog blog)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Integer <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Blog <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据日期分月分组查询</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">countList</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据博客类型查询博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blogTypeId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">findByBlogTypeId</span><span class="params">(Integer blogTypeId)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取上一篇博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Blog <span class="title">getPreviousBlog</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取下一篇博客</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Blog <span class="title">getNextBlog</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取导航条文章（根据设置时间升序排列）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Blog&gt; <span class="title">getMenuBlogList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="BlogService接口的实现类"><a href="#BlogService接口的实现类" class="headerlink" title="BlogService接口的实现类"></a>BlogService接口的实现类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service.impl;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Blog;</span><br><span class="line"><span class="keyword">import</span> com.ledao.mapper.BlogMapper;</span><br><span class="line"><span class="keyword">import</span> com.ledao.service.BlogService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客Service接口实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-11 00:34</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;blogService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogServiceImpl</span> <span class="keyword">implements</span> <span class="title">BlogService</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> BlogMapper blogMapper;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">list</span><span class="params">(Map map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.list(map);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getCount</span><span class="params">(Map map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.getCount(map);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">add</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.add(blog);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">update</span><span class="params">(Blog blog)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.update(blog);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">countList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.countList();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">findByBlogTypeId</span><span class="params">(Integer blogTypeId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.findByBlogTypeId(blogTypeId);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getPreviousBlog</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.getPreviousBlog(id);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Blog <span class="title">getNextBlog</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.getNextBlog(id);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Blog&gt; <span class="title">getMenuBlogList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> blogMapper.getMenuBlogList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis的元素属性</title>
    <url>/121.html</url>
    <content><![CDATA[<h3 id="Select-元素的属性"><a href="#Select-元素的属性" class="headerlink" title="Select 元素的属性"></a>Select 元素的属性</h3><table>
<thead>
<tr>
<th align="left">值</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">id</td>
<td align="left">在命名空间中唯一的标识符，可以被用来引用这条语句。</td>
</tr>
<tr>
<td align="left">parameterType</td>
<td align="left">将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。</td>
</tr>
<tr>
<td align="left">resultType</td>
<td align="left">期望从这条语句中返回结果的类全限定名或别名。 注意，如果返回的是集合，那应该设置为集合包含的类型，而不是集合本身的类型。 resultType 和 resultMap 之间只能同时使用一个。</td>
</tr>
<tr>
<td align="left">resultMap</td>
<td align="left">对外部 resultMap 的命名引用。结果映射是 MyBatis 最强大的特性，如果你对其理解透彻，许多复杂的映射问题都能迎刃而解。 resultType 和 resultMap 之间只能同时使用一个。</td>
</tr>
<tr>
<td align="left">flushCache</td>
<td align="left">将其设置为 true 后，只要语句被调用，都会导致本地缓存和二级缓存被清空，默认值：false。</td>
</tr>
<tr>
<td align="left">useCache</td>
<td align="left">将其设置为 true 后，将会导致本条语句的结果被二级缓存缓存起来，默认值：对 select 元素为 true。</td>
</tr>
<tr>
<td align="left">timeout</td>
<td align="left">这个设置是在抛出异常之前，驱动程序等待数据库返回请求结果的秒数。默认值为未设置（unset）（依赖数据库驱动）。</td>
</tr>
<tr>
<td align="left">fetchSize</td>
<td align="left">这是一个给驱动的建议值，尝试让驱动程序每次批量返回的结果行数等于这个设置值。 默认值为未设置（unset）（依赖驱动）。</td>
</tr>
<tr>
<td align="left">statementType</td>
<td align="left">可选 STATEMENT，PREPARED 或 CALLABLE。这会让 MyBatis 分别使用 Statement，PreparedStatement 或 CallableStatement，默认值：PREPARED。</td>
</tr>
<tr>
<td align="left">resultSetType</td>
<td align="left">FORWARD_ONLY，SCROLL_SENSITIVE, SCROLL_INSENSITIVE 或 DEFAULT（等价于 unset） 中的一个，默认值为 unset （依赖数据库驱动）。</td>
</tr>
<tr>
<td align="left">databaseId</td>
<td align="left">如果配置了数据库厂商标识（databaseIdProvider），MyBatis 会加载所有不带 databaseId 或匹配当前 databaseId 的语句；如果带和不带的语句都有，则不带的会被忽略。</td>
</tr>
<tr>
<td align="left">resultOrdered</td>
<td align="left">这个设置仅针对嵌套结果 select 语句：如果为 true，将会假设包含了嵌套结果集或是分组，当返回一个主结果行时，就不会产生对前面结果集的引用。 这就使得在获取嵌套结果集的时候不至于内存不够用。默认值：<code>false</code>。</td>
</tr>
</tbody></table>
<h3 id="Insert-Update-Delete-元素的属性"><a href="#Insert-Update-Delete-元素的属性" class="headerlink" title="Insert, Update, Delete 元素的属性"></a>Insert, Update, Delete 元素的属性</h3><table>
<thead>
<tr>
<th>值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>在命名空间中唯一的标识符，可以被用来引用这条语句。</td>
</tr>
<tr>
<td>parameterType</td>
<td>将会传入这条语句的参数的类全限定名或别名。这个属性是可选的，因为 MyBatis 可以通过类型处理器（TypeHandler）推断出具体传入语句的参数，默认值为未设置（unset）。</td>
</tr>
<tr>
<td>flushCache</td>
<td>将其设置为 true 后，只要语句被调用，都会导致本地缓存和二级缓存被清空，默认值：（对 insert、update 和 delete 语句）true。</td>
</tr>
<tr>
<td>timeout</td>
<td>这个设置是在抛出异常之前，驱动程序等待数据库返回请求结果的秒数。默认值为未设置（unset）（依赖数据库驱动）。</td>
</tr>
<tr>
<td>statementType</td>
<td>可选 STATEMENT，PREPARED 或 CALLABLE。这会让 MyBatis 分别使用 Statement，PreparedStatement 或 CallableStatement，默认值：PREPARED。</td>
</tr>
<tr>
<td>useGeneratedKeys</td>
<td>（仅适用于 insert 和 update）这会令 MyBatis 使用 JDBC 的 getGeneratedKeys 方法来取出由数据库内部生成的主键（比如：像 MySQL 和 SQL Server 这样的关系型数据库管理系统的自动递增字段），默认值：false。</td>
</tr>
<tr>
<td>keyProperty</td>
<td>（仅适用于 insert 和 update）指定能够唯一识别对象的属性，MyBatis 会使用 getGeneratedKeys 的返回值或 insert 语句的 selectKey 子元素设置它的值，默认值：未设置（<code>unset</code>）。如果生成列不止一个，可以用逗号分隔多个属性名称。</td>
</tr>
<tr>
<td>keyColumn</td>
<td>（仅适用于 insert 和 update）设置生成键值在表中的列名，在某些数据库（像 PostgreSQL）中，当主键列不是表中的第一列的时候，是必须设置的。如果生成列不止一个，可以用逗号分隔多个属性名称。</td>
</tr>
<tr>
<td>databaseId</td>
<td>如果配置了数据库厂商标识（databaseIdProvider），MyBatis 会加载所有不带 databaseId 或匹配当前 databaseId 的语句；如果带和不带的语句都有，则不带的会被忽略。</td>
</tr>
</tbody></table>
<h3 id="selectKey-元素的属性"><a href="#selectKey-元素的属性" class="headerlink" title="selectKey 元素的属性"></a>selectKey 元素的属性</h3><table>
<thead>
<tr>
<th>值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>keyProperty</td>
<td><code>selectKey</code> 语句结果应该被设置到的目标属性。如果生成列不止一个，可以用逗号分隔多个属性名称。</td>
</tr>
<tr>
<td>keyColumn</td>
<td>返回结果集中生成列属性的列名。如果生成列不止一个，可以用逗号分隔多个属性名称。</td>
</tr>
<tr>
<td>resultType</td>
<td>结果的类型。通常 MyBatis 可以推断出来，但是为了更加准确，写上也不会有什么问题。MyBatis 允许将任何简单类型用作主键的类型，包括字符串。如果生成列不止一个，则可以使用包含期望属性的 Object 或 Map。</td>
</tr>
<tr>
<td>order</td>
<td>可以设置为 <code>BEFORE</code> 或 <code>AFTER</code>。如果设置为 <code>BEFORE</code>，那么它首先会生成主键，设置 <code>keyProperty</code> 再执行插入语句。如果设置为 <code>AFTER</code>，那么先执行插入语句，然后是 <code>selectKey</code> 中的语句 - 这和 Oracle 数据库的行为相似，在插入语句内部可能有嵌入索引调用。</td>
</tr>
<tr>
<td>statementType</td>
<td>和前面一样，MyBatis 支持 <code>STATEMENT</code>，<code>PREPARED</code> 和 <code>CALLABLE</code> 类型的映射语句，分别代表 <code>Statement</code>, <code>PreparedStatement</code> 和 <code>CallableStatement</code> 类型。</td>
</tr>
</tbody></table>
<h3 id="ResultMap的属性列表"><a href="#ResultMap的属性列表" class="headerlink" title="ResultMap的属性列表"></a>ResultMap的属性列表</h3><table>
<thead>
<tr>
<th>值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>id</td>
<td>当前命名空间中的一个唯一标识，用于标识一个结果映射。</td>
</tr>
<tr>
<td>type</td>
<td>类的完全限定名, 或者一个类型别名（关于内置的类型别名，可以参考上面的表格）。</td>
</tr>
<tr>
<td>autoMapping</td>
<td>如果设置这个属性，MyBatis 将会为本结果映射开启或者关闭自动映射。 这个属性会覆盖全局的属性 autoMappingBehavior。默认值：未设置（unset）。</td>
</tr>
</tbody></table>
<h3 id="ResultMap子元素"><a href="#ResultMap子元素" class="headerlink" title="ResultMap子元素"></a>ResultMap子元素</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210526103952.jpg"></p>
<h3 id="ResultMap子元素Id和Result的属性"><a href="#ResultMap子元素Id和Result的属性" class="headerlink" title="ResultMap子元素Id和Result的属性"></a>ResultMap子元素Id和Result的属性</h3><table>
<thead>
<tr>
<th>值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>property</td>
<td>映射到列结果的字段或属性。如果 JavaBean 有这个名字的属性（property），会先使用该属性。否则 MyBatis 将会寻找给定名称的字段（field）。 无论是哪一种情形，你都可以使用常见的点式分隔形式进行复杂属性导航。 比如，你可以这样映射一些简单的东西：“username”，或者映射到一些复杂的东西上：“address.street.number”。</td>
</tr>
<tr>
<td>column</td>
<td>数据库中的列名，或者是列的别名。一般情况下，这和传递给 <code>resultSet.getString(columnName)</code> 方法的参数一样。</td>
</tr>
<tr>
<td>javaType</td>
<td>一个 Java 类的全限定名，或一个类型别名（关于内置的类型别名，可以参考上面的表格）。 如果你映射到一个 JavaBean，MyBatis 通常可以推断类型。然而，如果你映射到的是 HashMap，那么你应该明确地指定 javaType 来保证行为与期望的相一致。</td>
</tr>
<tr>
<td>jdbcType</td>
<td>JDBC 类型，所支持的 JDBC 类型参见这个表格之后的“支持的 JDBC 类型”。 只需要在可能执行插入、更新和删除的且允许空值的列上指定 JDBC 类型。这是 JDBC 的要求而非 MyBatis 的要求。如果你直接面向 JDBC 编程，你需要对可以为空值的列指定这个类型。</td>
</tr>
<tr>
<td>typeHandler</td>
<td>我们在前面讨论过默认的类型处理器。使用这个属性，你可以覆盖默认的类型处理器。 这个属性值是一个类型处理器实现类的全限定名，或者是类型别名。</td>
</tr>
</tbody></table>
<h3 id="ResultMap子元素-constructor-的属性"><a href="#ResultMap子元素-constructor-的属性" class="headerlink" title="ResultMap子元素 constructor 的属性"></a>ResultMap子元素 constructor 的属性</h3><table>
<thead>
<tr>
<th>值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>column</td>
<td>数据库中的列名，或者是列的别名。一般情况下，这和传递给 <code>resultSet.getString(columnName)</code> 方法的参数一样。</td>
</tr>
<tr>
<td>javaType</td>
<td>一个 Java 类的完全限定名，或一个类型别名（关于内置的类型别名，可以参考上面的表格）。 如果你映射到一个 JavaBean，MyBatis 通常可以推断类型。然而，如果你映射到的是 HashMap，那么你应该明确地指定 javaType 来保证行为与期望的相一致。</td>
</tr>
<tr>
<td>jdbcType</td>
<td>JDBC 类型，所支持的 JDBC 类型参见这个表格之前的“支持的 JDBC 类型”。 只需要在可能执行插入、更新和删除的且允许空值的列上指定 JDBC 类型。这是 JDBC 的要求而非 MyBatis 的要求。如果你直接面向 JDBC 编程，你需要对可能存在空值的列指定这个类型。</td>
</tr>
<tr>
<td>typeHandler</td>
<td>我们在前面讨论过默认的类型处理器。使用这个属性，你可以覆盖默认的类型处理器。 这个属性值是一个类型处理器实现类的完全限定名，或者是类型别名。</td>
</tr>
<tr>
<td>select</td>
<td>用于加载复杂类型属性的映射语句的 ID，它会从 column 属性中指定的列检索数据，作为参数传递给此 select 语句。具体请参考关联元素。</td>
</tr>
<tr>
<td>resultMap</td>
<td>结果映射的 ID，可以将嵌套的结果集映射到一个合适的对象树中。 它可以作为使用额外 select 语句的替代方案。它可以将多表连接操作的结果映射成一个单一的 <code>ResultSet</code>。这样的 <code>ResultSet</code> 将会将包含重复或部分数据重复的结果集。为了将结果集正确地映射到嵌套的对象树中，MyBatis 允许你 “串联”结果映射，以便解决嵌套结果集的问题。想了解更多内容，请参考下面的关联元素。</td>
</tr>
<tr>
<td>name</td>
<td>构造方法形参的名字。从 3.4.3 版本开始，通过指定具体的参数名，你可以以任意顺序写入 arg 元素。</td>
</tr>
</tbody></table>
<h3 id="ResultMap子元素-association-的属性"><a href="#ResultMap子元素-association-的属性" class="headerlink" title="ResultMap子元素 association 的属性"></a>ResultMap子元素 association 的属性</h3><table>
<thead>
<tr>
<th>值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>property</td>
<td>映射到列结果的字段或属性。如果用来匹配的 JavaBean 存在给定名字的属性，那么它将会被使用。否则 MyBatis 将会寻找给定名称的字段。 无论是哪一种情形，你都可以使用通常的点式分隔形式进行复杂属性导航。 比如，你可以这样映射一些简单的东西：“username”，或者映射到一些复杂的东西上：“address.street.number”。</td>
</tr>
<tr>
<td>javaType</td>
<td>一个 Java 类的完全限定名，或一个类型别名（关于内置的类型别名，可以参考上面的表格）。 如果你映射到一个 JavaBean，MyBatis 通常可以推断类型。然而，如果你映射到的是 HashMap，那么你应该明确地指定 javaType 来保证行为与期望的相一致。</td>
</tr>
<tr>
<td>jdbcType</td>
<td>JDBC 类型，所支持的 JDBC 类型参见这个表格之前的“支持的 JDBC 类型”。 只需要在可能执行插入、更新和删除的且允许空值的列上指定 JDBC 类型。这是 JDBC 的要求而非 MyBatis 的要求。如果你直接面向 JDBC 编程，你需要对可能存在空值的列指定这个类型。</td>
</tr>
<tr>
<td>typeHandler</td>
<td>我们在前面讨论过默认的类型处理器。使用这个属性，你可以覆盖默认的类型处理器。 这个属性值是一个类型处理器实现类的完全限定名，或者是类型别名。</td>
</tr>
<tr>
<td><strong>关联的嵌套Select 查询</strong></td>
<td></td>
</tr>
<tr>
<td>column</td>
<td>数据库中的列名，或者是列的别名。一般情况下，这和传递给 <code>resultSet.getString(columnName)</code> 方法的参数一样。 注意：在使用复合主键的时候，你可以使用 <code>column=&quot;&#123;prop1=col1,prop2=col2&#125;&quot;</code> 这样的语法来指定多个传递给嵌套 Select 查询语句的列名。这会使得 <code>prop1</code> 和 <code>prop2</code> 作为参数对象，被设置为对应嵌套 Select 语句的参数。</td>
</tr>
<tr>
<td>select</td>
<td>用于加载复杂类型属性的映射语句的 ID，它会从 column 属性指定的列中检索数据，作为参数传递给目标 select 语句。 具体请参考下面的例子。注意：在使用复合主键的时候，你可以使用 <code>column=&quot;&#123;prop1=col1,prop2=col2&#125;&quot;</code> 这样的语法来指定多个传递给嵌套 Select 查询语句的列名。这会使得 <code>prop1</code> 和 <code>prop2</code> 作为参数对象，被设置为对应嵌套 Select 语句的参数。</td>
</tr>
<tr>
<td>fetchType</td>
<td>可选的。有效值为 <code>lazy</code> 和 <code>eager</code>。 指定属性后，将在映射中忽略全局配置参数 <code>lazyLoadingEnabled</code>，使用属性的值。</td>
</tr>
<tr>
<td><strong>关联的嵌套结果映射</strong></td>
<td></td>
</tr>
<tr>
<td>resultMap</td>
<td>结果映射的 ID，可以将此关联的嵌套结果集映射到一个合适的对象树中。 它可以作为使用额外 select 语句的替代方案。它可以将多表连接操作的结果映射成一个单一的 <code>ResultSet</code>。这样的 <code>ResultSet</code> 有部分数据是重复的。 为了将结果集正确地映射到嵌套的对象树中, MyBatis 允许你“串联”结果映射，以便解决嵌套结果集的问题。使用嵌套结果映射的一个例子在表格以后。</td>
</tr>
<tr>
<td>columnPrefix</td>
<td>当连接多个表时，你可能会不得不使用列别名来避免在 <code>ResultSet</code> 中产生重复的列名。指定 columnPrefix 列名前缀允许你将带有这些前缀的列映射到一个外部的结果映射中。 详细说明请参考后面的例子。</td>
</tr>
<tr>
<td>notNullColumn</td>
<td>默认情况下，在至少一个被映射到属性的列不为空时，子对象才会被创建。 你可以在这个属性上指定非空的列来改变默认行为，指定后，Mybatis 将只在这些列非空时才创建一个子对象。可以使用逗号分隔来指定多个列。默认值：未设置（unset）。</td>
</tr>
<tr>
<td>autoMapping</td>
<td>如果设置这个属性，MyBatis 将会为本结果映射开启或者关闭自动映射。 这个属性会覆盖全局的属性 autoMappingBehavior。注意，本属性对外部的结果映射无效，所以不能搭配 <code>select</code> 或 <code>resultMap</code> 元素使用。默认值：未设置（unset）。</td>
</tr>
</tbody></table>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis的结果映射</title>
    <url>/122.html</url>
    <content><![CDATA[<h3 id="结果映射的作用"><a href="#结果映射的作用" class="headerlink" title="结果映射的作用"></a><strong>结果映射的作用</strong></h3><p>resultMap 元素是 MyBatis 中最重要最强大的元素。它可以让你从 90% 的 JDBC ResultSets 数据提取代码中解放出来，并在一些情形下允许你进行一些 JDBC 不支持的操作。实际上，在为一些比如连接的复杂语句编写映射代码的时候，一份 resultMap 能够代替实现同等功能的数千行代码。ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><p>实体类（已经省略getter和setter方法）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客实体</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-11 00:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 摘要</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String summary;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date releaseDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点击次数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer click;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogTypeId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BlogType blogType;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客里存在的第一张图片，主要用于列表展示的缩略图</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String imageName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客数量 非博客实际属性 主要是 根据发布日期归档查询数量用到</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布日期的字符串 只取年和月</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String releaseDateStr;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该类型的博客数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于判断当前IP是否点赞过这篇博客</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isLike;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点赞数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer likeNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是导航条文章（0或空代表不是，1代表是）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isMenuBlog;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置成为导航条文章的时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date setMenuBlogDate;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>XML文件中的结果映射代码(相关属性查看博客：<a href="/121.html">mybatis的元素属性</a>)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BlogResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;title&quot;</span> <span class="attr">column</span>=<span class="string">&quot;title&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;summary&quot;</span> <span class="attr">column</span>=<span class="string">&quot;summary&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;releaseDate&quot;</span> <span class="attr">column</span>=<span class="string">&quot;releaseDate&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;click&quot;</span> <span class="attr">column</span>=<span class="string">&quot;click&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;content&quot;</span> <span class="attr">column</span>=<span class="string">&quot;content&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;blogTypeId&quot;</span> <span class="attr">column</span>=<span class="string">&quot;blogTypeId&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;isMenuBlog&quot;</span> <span class="attr">column</span>=<span class="string">&quot;isMenuBlog&quot;</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;setMenuBlogDate&quot;</span> <span class="attr">column</span>=<span class="string">&quot;setMenuBlogDate&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis的增删改查示例（XML映射器）</title>
    <url>/123.html</url>
    <content><![CDATA[<h3 id="增加"><a href="#增加" class="headerlink" title="增加"></a><strong>增加</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;add&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;BlogType&quot;</span>&gt;</span></span><br><span class="line">	insert into t_blogtype (name, sortNum) values (#&#123;name&#125;,#&#123;sortNum&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a><strong>删除</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;delete&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span>&gt;</span></span><br><span class="line">	delete from t_blogtype where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a><strong>修改</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;update&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;BlogType&quot;</span>&gt;</span></span><br><span class="line">	update t_blogtype</span><br><span class="line">	<span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name != null and name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			name=#&#123;name&#125;,</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sortNum != null&quot;</span>&gt;</span></span><br><span class="line">			sortNum=#&#123;sortNum&#125;,</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">	where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a><strong>查询</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;integer&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogTypeResult&quot;</span>&gt;</span></span><br><span class="line">	select * from t_blogtype where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>相关元素查看博客：<a href="/121.html">mybatis的元素属性</a></p>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis动态SQL示例</title>
    <url>/124.html</url>
    <content><![CDATA[<h3 id="if"><a href="#if" class="headerlink" title="if"></a><strong>if</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">	select *</span><br><span class="line">	from t_blog</span><br><span class="line">	<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null and title != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			and title like #&#123;title&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;blogTypeId != null&quot;</span>&gt;</span></span><br><span class="line">			and blogTypeId = #&#123;blogTypeId&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlog != null&quot;</span>&gt;</span></span><br><span class="line">			and isMenuBlog = #&#123;isMenuBlog&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;isMenuBlogKey != null&quot;</span>&gt;</span></span><br><span class="line">			and isMenuBlog != 1</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;releaseDateStr != null and releaseDateStr != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">			and date_format(releaseDate, &#x27;%Y年%m月&#x27;) = #&#123;releaseDateStr&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;sortByReleaseDate == null&quot;</span>&gt;</span></span><br><span class="line">		order by releaseDate desc</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;start != null and size != null&quot;</span>&gt;</span></span><br><span class="line">		limit #&#123;start&#125;,#&#123;size&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="choose、when、otherwise"><a href="#choose、when、otherwise" class="headerlink" title="choose、when、otherwise"></a><strong>choose、when、otherwise</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findActiveBlogLike&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">  SELECT * FROM BLOG WHERE state = ‘ACTIVE’</span><br><span class="line">  <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">      AND title like #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author != null and author.name != null&quot;</span>&gt;</span></span><br><span class="line">      AND author_name like #&#123;author.name&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">      AND featured = 1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="trim、where、set"><a href="#trim、where、set" class="headerlink" title="trim、where、set"></a><strong>trim、where、set</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">&quot;WHERE&quot;</span> <span class="attr">prefixOverrides</span>=<span class="string">&quot;AND |OR &quot;</span>&gt;</span></span><br><span class="line">  ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findActiveBlogLike&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">  SELECT * FROM BLOG</span><br><span class="line">  <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;state != null&quot;</span>&gt;</span></span><br><span class="line">         state = #&#123;state&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">        AND title like #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null and author.name != null&quot;</span>&gt;</span></span><br><span class="line">        AND author_name like #&#123;author.name&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateAuthorIfNecessary&quot;</span>&gt;</span></span><br><span class="line">  update Author</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;username != null&quot;</span>&gt;</span>username=#&#123;username&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;password != null&quot;</span>&gt;</span>password=#&#123;password&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;email != null&quot;</span>&gt;</span>email=#&#123;email&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;bio != null&quot;</span>&gt;</span>bio=#&#123;bio&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a><strong>foreach</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectPostIn&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;domain.blog.Post&quot;</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="script"><a href="#script" class="headerlink" title="script"></a><strong>script</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">@Update(&#123;&quot;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="handlebars"><span class="xml">&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;update Author&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;  <span class="tag">&lt;<span class="name">set</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&#x27;username != null&#x27;</span>&gt;</span>username=#&#123;username&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&#x27;password != null&#x27;</span>&gt;</span>password=#&#123;password&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&#x27;email != null&#x27;</span>&gt;</span>email=#&#123;email&#125;,<span class="tag">&lt;/<span class="name">if</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&#x27;bio != null&#x27;</span>&gt;</span>bio=#&#123;bio&#125;<span class="tag">&lt;/<span class="name">if</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;  <span class="tag">&lt;/<span class="name">set</span>&gt;</span>&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;where id=#&#123;id&#125;&quot;,</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">  &quot;</span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;&#125;)</span><br><span class="line">void updateAuthorValues(Author author);</span><br></pre></td></tr></table></figure>

<h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a><strong>bind</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectBlogsLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">&quot;pattern&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#x27;%&#x27; + _parameter.getTitle() + &#x27;%&#x27;&quot;</span> /&gt;</span></span><br><span class="line">  SELECT * FROM BLOG</span><br><span class="line">  WHERE title LIKE #&#123;pattern&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis的关联（association）元素</title>
    <url>/125.html</url>
    <content><![CDATA[<p>关联（association）元素处理“有一个”类型的关系。 比如，在示例中，一个博客有一个用户。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;blogResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;author&quot;</span> <span class="attr">column</span>=<span class="string">&quot;author_id&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Author&quot;</span> <span class="attr">select</span>=<span class="string">&quot;selectAuthor&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAuthor&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Author&quot;</span>&gt;</span></span><br><span class="line">  SELECT * FROM AUTHOR WHERE ID = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>highlight.js实现代码高亮</title>
    <url>/126.html</url>
    <content><![CDATA[<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a><strong>引入</strong></h3><p>更换代码样式直接修改link标签的css文件名，例如：将androidstudio改为github就行了，更多样式名称查看：<a href="/130.html">highlight.js代码样式名称</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>  <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/styles/androidstudio.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/highlight.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>hljs.initHighlightingOnLoad();<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码块外围代码"><a href="#代码块外围代码" class="headerlink" title="代码块外围代码"></a><strong>代码块外围代码</strong></h3><p>code标签的class内填代码类型，不填也可以，会自动检测</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">&quot;HTML&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>特别地，上面的格式会让代码块和上面的元素空出一行，如果不想空出一行，让&lt;code&gt;头标签顶格就行，如下所示：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">&quot;HTML&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="HTML代码需要进行转义"><a href="#HTML代码需要进行转义" class="headerlink" title="HTML代码需要进行转义"></a><strong>HTML代码需要进行转义</strong></h3><p>HTML代码转义网站：<a href="https://www.html.cn/tool/html-escape/">HTML转义工具-前端开发转换工具 | WEB前端开发</a></p>
<h3 id="在code标签内填入要展示的代码"><a href="#在code标签内填入要展示的代码" class="headerlink" title="在code标签内填入要展示的代码"></a><strong>在code标签内填入要展示的代码</strong></h3><h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>highlight.js官网：<a href="https://highlightjs.org/">highlight.js</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>highlight.js</tag>
      </tags>
  </entry>
  <entry>
    <title>一套绝佳的图标字体库和CSS框架：Font Awesome 图标</title>
    <url>/127.html</url>
    <content><![CDATA[<p>Font Awesome 是一套绝佳的图标字体库和CSS框架。</p>
<p>Font Awesome 字体为您提供可缩放矢量图标,它可以被定制大小、颜色、阴影以及任何可以用CSS的样式。</p>
<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a><strong>引入</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用（class中填图标的代码名称）"><a href="#使用（class中填图标的代码名称）" class="headerlink" title="使用（class中填图标的代码名称）"></a><strong>使用</strong>（class中填图标的代码名称）</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:48px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-car&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:60px;color:red;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>查看更多图标以及来源：<a href="https://www.runoob.com/font-awesome/fontawesome-tutorial.html">Font Awesome 图标 | 菜鸟教程</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML+JavaScript动态获取当前时间</title>
    <url>/128.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;tipForTime&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #00B0E8;text-align: center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>当前时间:<span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;time&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: grey&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取当前时间</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="built_in">window</span>.requestAnimationFrame(getDate)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDate</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="built_in">window</span>.requestAnimationFrame(getDate)</span><br><span class="line">	&#125;, <span class="number">1000</span> / <span class="number">2</span>)</span><br><span class="line">	<span class="keyword">var</span> d = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">	<span class="keyword">var</span> year = d.getFullYear()  <span class="comment">//获取年</span></span><br><span class="line">	<span class="keyword">var</span> month = d.getMonth() + <span class="number">1</span>;  <span class="comment">//获取月，从 Date 对象返回月份 (0 ~ 11)，故在此处+1</span></span><br><span class="line">	<span class="keyword">var</span> day = d.getDay()    <span class="comment">//获取日</span></span><br><span class="line">	<span class="keyword">var</span> days = d.getDate() <span class="comment">//获取日期</span></span><br><span class="line">	<span class="keyword">var</span> hour = d.getHours()   <span class="comment">//获取小时</span></span><br><span class="line">	<span class="keyword">var</span> minute = d.getMinutes()  <span class="comment">//获取分钟</span></span><br><span class="line">	<span class="keyword">var</span> second = d.getSeconds()   <span class="comment">//获取秒</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (month &lt; <span class="number">10</span>) month = <span class="string">&quot;0&quot;</span> + month</span><br><span class="line">	<span class="keyword">if</span> (days &lt; <span class="number">10</span>) days = <span class="string">&quot;0&quot;</span> + days</span><br><span class="line">	<span class="keyword">if</span> (hour &lt; <span class="number">10</span>) hour = <span class="string">&quot;0&quot;</span> + hour</span><br><span class="line">	<span class="keyword">if</span> (minute &lt; <span class="number">10</span>) minute = <span class="string">&quot;0&quot;</span> + minute</span><br><span class="line">	<span class="keyword">if</span> (second &lt; <span class="number">10</span>) second = <span class="string">&quot;0&quot;</span> + second</span><br><span class="line">	<span class="keyword">if</span> (hour &gt;= <span class="number">6</span> &amp;&amp; hour &lt; <span class="number">12</span>) &#123;</span><br><span class="line">		$(<span class="string">&quot;#tipForTime&quot;</span>).html(<span class="string">&quot;早上好!&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (hour &gt;= <span class="number">12</span> &amp;&amp; hour &lt; <span class="number">19</span>) &#123;</span><br><span class="line">		$(<span class="string">&quot;#tipForTime&quot;</span>).html(<span class="string">&quot;下午好!&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> <span class="keyword">if</span> (hour &gt;= <span class="number">19</span> &amp;&amp; hour &lt; <span class="number">23</span>) &#123;</span><br><span class="line">		$(<span class="string">&quot;#tipForTime&quot;</span>).html(<span class="string">&quot;晚上好!&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		$(<span class="string">&quot;#tipForTime&quot;</span>).html(<span class="string">&quot;夜深了!请注意休息!!!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> week = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;星期日&quot;</span>, <span class="string">&quot;星期一&quot;</span>, <span class="string">&quot;星期二&quot;</span>, <span class="string">&quot;星期三&quot;</span>, <span class="string">&quot;星期四&quot;</span>, <span class="string">&quot;星期五&quot;</span>, <span class="string">&quot;星期六&quot;</span>)</span><br><span class="line">	<span class="keyword">var</span> Tools = <span class="built_in">document</span>.getElementById(<span class="string">&quot;time&quot;</span>)</span><br><span class="line">	<span class="keyword">var</span> time = year + <span class="string">&quot;-&quot;</span> + month + <span class="string">&quot;-&quot;</span> + days + <span class="string">&quot; &quot;</span> + hour + <span class="string">&quot;:&quot;</span> + minute + <span class="string">&quot;:&quot;</span> + second+<span class="string">&quot;  &quot;</span>+week[day]</span><br><span class="line">	$(<span class="string">&quot;#time&quot;</span>).html(time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果如下图"><a href="#结果如下图" class="headerlink" title="结果如下图"></a><strong>结果如下图</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601074858.jpg" alt="img"></strong></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/qq_40625778/article/details/88880786">HTML+JS动态获取当前时间_公众号：【C you again】-CSDN博客_js显示当前时间</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL获取时间差</title>
    <url>/129.html</url>
    <content><![CDATA[<h3 id="DATEDIFF函数"><a href="#DATEDIFF函数" class="headerlink" title="DATEDIFF函数"></a><strong>DATEDIFF函数</strong></h3><p>只可以计算天数</p>
<p>SQL语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> DATEDIFF (&quot;2021-04-25 23:23:12&quot;,&quot;2021-04-21 23:23:12&quot;) <span class="keyword">AS</span> days;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601080348.jpg" alt="img"></p>
<h3 id="TIMESTAMPDIFF函数"><a href="#TIMESTAMPDIFF函数" class="headerlink" title="TIMESTAMPDIFF函数"></a><strong>TIMESTAMPDIFF函数</strong></h3><p>可以根据自己的需求计算天数、小时、分钟、秒钟</p>
<p>SQL语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF (<span class="keyword">DAY</span>,&quot;2021-04-21 23:23:12&quot;,&quot;2021-04-25 23:23:12&quot;) <span class="keyword">AS</span> &quot;天&quot;;</span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF (<span class="keyword">HOUR</span>,&quot;2021-04-21 23:23:12&quot;,&quot;2021-04-25 23:23:12&quot;) <span class="keyword">AS</span> &quot;时&quot;;</span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF (<span class="keyword">MINUTE</span>,&quot;2021-04-21 23:23:12&quot;,&quot;2021-04-25 23:23:12&quot;) <span class="keyword">AS</span> &quot;分&quot;;</span><br><span class="line"><span class="keyword">SELECT</span> TIMESTAMPDIFF (<span class="keyword">SECOND</span>,&quot;2021-04-21 23:23:12&quot;,&quot;2021-04-25 23:23:12&quot;) <span class="keyword">AS</span> &quot;秒&quot;;</span><br></pre></td></tr></table></figure>

<p>结果：（图片从左到右与上面的SQL语句从上到下一一对应）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601080435.jpg" alt="img"><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601080446.jpg" alt="img"><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601080458.jpg" alt="img"><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601080507.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/zq1003/p/14705233.html">mysql 比较两个日期的时间差 - 未确定 - 博客园</a></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>进销存系统</title>
    <url>/13.html</url>
    <content><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><strong>项目地址</strong></h3><p>GitHub地址：<a href="https://github.com/a6678696/JXC">https://github.com/a6678696/JXC</a></p>
<h3 id="使用的技术"><a href="#使用的技术" class="headerlink" title="使用的技术"></a><strong>使用的技术</strong></h3><p>本系统使用Spring Boot架构，数据访问层采用Spring Data Jpa，安全框架采用Shiro，实现了完整权限系统，Controller方法采用shiro注解，来实现有效的权限控制；界面采用了Easyui技术；</p>
<h3 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a><strong>功能介绍</strong></h3><p>进货管理（进货入库、退货出库、进货单据查询、退货单据查询、当前库存查询）、销售管理（销售出库、客户退货、销售单据查询、客户退货查询）、库存管理（商品报损、商品报溢、库存报警、报损报溢查询）、统计报表（供应商进退货单统计、客户进退货单统计、按日统计销售利润、按月统计销售利润）、供应商管理、客户管理、商品管理、期初库存管理、权限管理模块（角色管理、用户管理）、查看系统日志、修改密码、安全退出</p>
<h3 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a><strong>图片展示</strong></h3><h4 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113454.jpg"></p>
<h4 id="公司进货入库"><a href="#公司进货入库" class="headerlink" title="公司进货入库"></a>公司进货入库</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113340.jpg"></p>
<h4 id="公司退货出库"><a href="#公司退货出库" class="headerlink" title="公司退货出库"></a>公司退货出库</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113526.jpg"></p>
<h4 id="公司进货单据查询"><a href="#公司进货单据查询" class="headerlink" title="公司进货单据查询"></a>公司进货单据查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113610.jpg"></p>
<h4 id="公司退货单据查询"><a href="#公司退货单据查询" class="headerlink" title="公司退货单据查询"></a>公司退货单据查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015031019.jpg"></p>
<h4 id="商品销售出库"><a href="#商品销售出库" class="headerlink" title="商品销售出库"></a>商品销售出库</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113829.jpg"></p>
<h4 id="客户退货"><a href="#客户退货" class="headerlink" title="客户退货"></a>客户退货</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113901.jpg"></p>
<h4 id="销售单据查询"><a href="#销售单据查询" class="headerlink" title="销售单据查询"></a>销售单据查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011113932.jpg"></p>
<h4 id="客户退货单据查询"><a href="#客户退货单据查询" class="headerlink" title="客户退货单据查询"></a>客户退货单据查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114014.jpg"></p>
<h4 id="商品报损"><a href="#商品报损" class="headerlink" title="商品报损"></a>商品报损</h4><p>商品过期、受潮等</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114108.jpg"></p>
<h4 id="商品报溢"><a href="#商品报溢" class="headerlink" title="商品报溢"></a>商品报溢</h4><p>商品实际数量比记录的数量少，可能是初期记录失误，实际与记录相差的数量</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114146.jpg"></p>
<h4 id="库存报警"><a href="#库存报警" class="headerlink" title="库存报警"></a>库存报警</h4><p>当商品的当前库存&lt;库存下限</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114235.jpg"></p>
<h4 id="报损报溢记录查询"><a href="#报损报溢记录查询" class="headerlink" title="报损报溢记录查询"></a>报损报溢记录查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114320.jpg"></p>
<h4 id="公司进货退货记录查询"><a href="#公司进货退货记录查询" class="headerlink" title="公司进货退货记录查询"></a>公司进货退货记录查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114402.jpg"></p>
<h4 id="销售和客户退货记录查询"><a href="#销售和客户退货记录查询" class="headerlink" title="销售和客户退货记录查询"></a>销售和客户退货记录查询</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011114442.jpg"></p>
<h4 id="公司进货和退货的商品明细"><a href="#公司进货和退货的商品明细" class="headerlink" title="公司进货和退货的商品明细"></a>公司进货和退货的商品明细</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015024805.jpg"></p>
<h4 id="商品销售和客户退货明细"><a href="#商品销售和客户退货明细" class="headerlink" title="商品销售和客户退货明细"></a>商品销售和客户退货明细</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015024834.jpg"></p>
<h4 id="按日统计利润"><a href="#按日统计利润" class="headerlink" title="按日统计利润"></a>按日统计利润</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015024918.jpg"></p>
<h4 id="按月统计利润"><a href="#按月统计利润" class="headerlink" title="按月统计利润"></a>按月统计利润</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025019.jpg"></p>
<h4 id="供应商管理"><a href="#供应商管理" class="headerlink" title="供应商管理"></a>供应商管理</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025056.jpg"></p>
<h4 id="客户管理"><a href="#客户管理" class="headerlink" title="客户管理"></a>客户管理</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025127.jpg"></p>
<h4 id="商品管理"><a href="#商品管理" class="headerlink" title="商品管理"></a>商品管理</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025210.jpg"></p>
<h4 id="设置商品的库存"><a href="#设置商品的库存" class="headerlink" title="设置商品的库存"></a>设置商品的库存</h4><p>新添加的商品的数量为0</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025246.jpg"></p>
<h4 id="给角色赋予权限"><a href="#给角色赋予权限" class="headerlink" title="给角色赋予权限"></a>给角色赋予权限</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025323.jpg"></p>
<h4 id="给用户赋予角色"><a href="#给用户赋予角色" class="headerlink" title="给用户赋予角色"></a>给用户赋予角色</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025402.jpg"></p>
<h4 id="查看系统日志"><a href="#查看系统日志" class="headerlink" title="查看系统日志"></a>查看系统日志</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025434.jpg"></p>
<h4 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025516.jpg"></p>
<h4 id="安全退出系统"><a href="#安全退出系统" class="headerlink" title="安全退出系统"></a>安全退出系统</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015025550.jpg"></p>]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>个人项目</tag>
      </tags>
  </entry>
  <entry>
    <title>highlight.js代码样式名称</title>
    <url>/130.html</url>
    <content><![CDATA[<h3 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h3><p>本博客系统专用或者和本站引用同一个网站的cdn加速</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>  <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/styles/androidstudio.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="常用语言类型"><a href="#常用语言类型" class="headerlink" title="常用语言类型"></a><strong>常用语言类型</strong></h3><p>HTML, XML，Bash，CSS，Java，JavaScript，JSON，SQL</p>
<h3 id="代码样式名称"><a href="#代码样式名称" class="headerlink" title="代码样式名称"></a><strong>代码样式名称</strong></h3><p><font color="#dd0000">更换代码样式直接修改link标签的css文件名，例如：将androidstudio改为github就行了</font></p>
<h4 id="androidstudio"><a href="#androidstudio" class="headerlink" title="androidstudio"></a>androidstudio</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601093713.jpg" alt="img"></p>
<h4 id="agate"><a href="#agate" class="headerlink" title="agate"></a>agate</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601093747.jpg" alt="img"></p>
<h4 id="github"><a href="#github" class="headerlink" title="github"></a>github</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601093819.jpg" alt="img"></p>
<h4 id="idea"><a href="#idea" class="headerlink" title="idea"></a>idea</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601093905.jpg" alt="img"></p>
<h4 id="ascetic"><a href="#ascetic" class="headerlink" title="ascetic"></a>ascetic</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601093933.jpg" alt="img"></p>
<h4 id="brown-paper"><a href="#brown-paper" class="headerlink" title="brown-paper"></a>brown-paper</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094002.jpg" alt="img"></p>
<h4 id="codepen-embed"><a href="#codepen-embed" class="headerlink" title="codepen-embed"></a>codepen-embed</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094032.jpg" alt="img"></p>
<h4 id="color-brewer"><a href="#color-brewer" class="headerlink" title="color-brewer"></a>color-brewer</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094106.jpg" alt="img"></p>
<h4 id="dark"><a href="#dark" class="headerlink" title="dark"></a>dark</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094135.jpg" alt="img"></p>
<h4 id="docco"><a href="#docco" class="headerlink" title="docco"></a>docco</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094230.jpg" alt="img"></p>
<h4 id="far"><a href="#far" class="headerlink" title="far"></a>far</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094257.jpg" alt="img"></p>
<h4 id="foundation"><a href="#foundation" class="headerlink" title="foundation"></a>foundation</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094326.jpg" alt="img"></p>
<h4 id="gml"><a href="#gml" class="headerlink" title="gml"></a>gml</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094401.jpg" alt="img"></p>
<h4 id="googlecode"><a href="#googlecode" class="headerlink" title="googlecode"></a>googlecode</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094445.jpg" alt="img"></p>
<h4 id="gradient-dark"><a href="#gradient-dark" class="headerlink" title="gradient-dark"></a>gradient-dark</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094521.jpg" alt="img"></p>
<h4 id="gradient-light"><a href="#gradient-light" class="headerlink" title="gradient-light"></a>gradient-light</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094558.jpg" alt="img"></p>
<h4 id="grayscale"><a href="#grayscale" class="headerlink" title="grayscale"></a>grayscale</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094639.jpg" alt="img"></p>
<h4 id="hybrid"><a href="#hybrid" class="headerlink" title="hybrid"></a>hybrid</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094714.jpg" alt="img"></p>
<h4 id="ir-black"><a href="#ir-black" class="headerlink" title="ir-black"></a>ir-black</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094751.jpg" alt="img"></p>
<h4 id="isbl-editor-dark"><a href="#isbl-editor-dark" class="headerlink" title="isbl-editor-dark"></a>isbl-editor-dark</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094841.jpg" alt="img"></p>
<h4 id="isbl-editor-light"><a href="#isbl-editor-light" class="headerlink" title="isbl-editor-light"></a>isbl-editor-light</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094910.jpg" alt="img"></p>
<h4 id="lioshi"><a href="#lioshi" class="headerlink" title="lioshi"></a>lioshi</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601094945.jpg" alt="img"></p>
<h4 id="magula"><a href="#magula" class="headerlink" title="magula"></a>magula</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095024.jpg" alt="img"></p>
<h4 id="mono-blue"><a href="#mono-blue" class="headerlink" title="mono-blue"></a>mono-blue</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095100.jpg" alt="img"></p>
<h4 id="monokai"><a href="#monokai" class="headerlink" title="monokai"></a>monokai</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095127.jpg" alt="img"></p>
<h4 id="monokai-sublime"><a href="#monokai-sublime" class="headerlink" title="monokai-sublime"></a>monokai-sublime</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095220.jpg" alt="img"></p>
<h4 id="night-owl"><a href="#night-owl" class="headerlink" title="night-owl"></a>night-owl</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095253.jpg" alt="img"></p>
<h4 id="nnfx-dark"><a href="#nnfx-dark" class="headerlink" title="nnfx-dark"></a>nnfx-dark</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095340.jpg" alt="img"></p>
<h4 id="nnfx-light"><a href="#nnfx-light" class="headerlink" title="nnfx-light"></a>nnfx-light</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095409.jpg" alt="img"></p>
<h4 id="pojoaque"><a href="#pojoaque" class="headerlink" title="pojoaque"></a>pojoaque</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095443.jpg" alt="img"></p>
<h4 id="purebasic"><a href="#purebasic" class="headerlink" title="purebasic"></a>purebasic</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095507.jpg" alt="img"></p>
<h4 id="rainbow"><a href="#rainbow" class="headerlink" title="rainbow"></a>rainbow</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095538.jpg" alt="img"></p>
<h4 id="routeros"><a href="#routeros" class="headerlink" title="routeros"></a>routeros</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095627.jpg" alt="img"></p>
<h4 id="school-book"><a href="#school-book" class="headerlink" title="school-book"></a>school-book</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095702.jpg" alt="img"></p>
<h4 id="shades-of-purple"><a href="#shades-of-purple" class="headerlink" title="shades-of-purple"></a>shades-of-purple</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095750.jpg" alt="img"></p>
<h4 id="srcery"><a href="#srcery" class="headerlink" title="srcery"></a>srcery</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095817.jpg" alt="img"></p>
<h4 id="stackoverflow-dark"><a href="#stackoverflow-dark" class="headerlink" title="stackoverflow-dark"></a>stackoverflow-dark</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095843.jpg" alt="img"></p>
<h4 id="stackoverflow-light"><a href="#stackoverflow-light" class="headerlink" title="stackoverflow-light"></a>stackoverflow-light</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095914.jpg" alt="img"></p>
<h4 id="sunburst"><a href="#sunburst" class="headerlink" title="sunburst"></a>sunburst</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601095946.jpg" alt="img"></p>
<h4 id="tomorrow-night-blue"><a href="#tomorrow-night-blue" class="headerlink" title="tomorrow-night-blue"></a>tomorrow-night-blue</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601100017.jpg" alt="img"></p>
<h4 id="tomorrow-night-bright"><a href="#tomorrow-night-bright" class="headerlink" title="tomorrow-night-bright"></a>tomorrow-night-bright</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601100043.jpg" alt="img"></p>
<h4 id="vs"><a href="#vs" class="headerlink" title="vs"></a>vs</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601100117.jpg" alt="img"></p>
<h4 id="xcode"><a href="#xcode" class="headerlink" title="xcode"></a>xcode</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210601100144.jpg" alt="img"></p>
<h4 id="an-old-hope"><a href="#an-old-hope" class="headerlink" title="an-old-hope"></a>an-old-hope</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719231000.jpg" alt="img"></p>
<h4 id="atelier-forest-light"><a href="#atelier-forest-light" class="headerlink" title="atelier-forest-light"></a>atelier-forest-light</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719231819.jpg" alt="img"></p>
<h4 id="atom-one-dark-reasonable"><a href="#atom-one-dark-reasonable" class="headerlink" title="atom-one-dark-reasonable"></a>atom-one-dark-reasonable</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719232807.jpg" alt="img"></p>
<h4 id="atom-one-dark"><a href="#atom-one-dark" class="headerlink" title="atom-one-dark"></a>atom-one-dark</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719233111.jpg" alt="img"></p>
<h4 id="atom-one-light"><a href="#atom-one-light" class="headerlink" title="atom-one-light"></a>atom-one-light</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719233343.jpg" alt="img"></p>
<h4 id="color-brewer-1"><a href="#color-brewer-1" class="headerlink" title="color-brewer"></a>color-brewer</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719233701.jpg" alt="img"></p>
<h4 id="darcula"><a href="#darcula" class="headerlink" title="darcula"></a>darcula</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210719234112.jpg" alt="img"></p>
<h4 id="docco-1"><a href="#docco-1" class="headerlink" title="docco"></a>docco</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720011049.jpg" alt="img"></p>
<h4 id="dracula"><a href="#dracula" class="headerlink" title="dracula"></a>dracula</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720011101.jpg" alt="img"></p>
<h4 id="github-gist"><a href="#github-gist" class="headerlink" title="github-gist"></a>github-gist</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720012201.jpg" alt="img"></p>
<h4 id="gml-1"><a href="#gml-1" class="headerlink" title="gml"></a>gml</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720012210.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>更多样式去官网查看：<a href="https://highlightjs.org/static/demo/">highlight.js demo</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>highlight.js</tag>
      </tags>
  </entry>
  <entry>
    <title>给highlight.js代码高亮加行号</title>
    <url>/131.html</url>
    <content><![CDATA[<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.hljsln</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">3em</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hljsln</span> <span class="selector-class">.ln-bg</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">2.2em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#555</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.18</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hljsln</span> <span class="selector-class">.ln-num</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">    -webkit-touch-callout: none;</span><br><span class="line">    -webkit-user-select: none;</span><br><span class="line">    -khtml-user-select: none;</span><br><span class="line">    -moz-user-select: none;</span><br><span class="line">    -ms-user-select: none;</span><br><span class="line">    user-select: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hljsln</span> <span class="selector-class">.ln-num</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#777</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    <span class="attribute">font-weight</span>: normal;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(data-num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><p>将JavaScript代码保存为文件 highlight.line-numbers.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">w, d</span>) </span>&#123;</span><br><span class="line">    w.hljsln = &#123;</span><br><span class="line">        <span class="attr">initLineNumbersOnLoad</span>: initLineNumbersOnLoad,</span><br><span class="line">        <span class="attr">addLineNumbersForCode</span>: addLineNumbersForCode</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">initLineNumbersOnLoad</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (d.readyState === <span class="string">&#x27;interactive&#x27;</span> || d.readyState === <span class="string">&#x27;complete&#x27;</span>) &#123;</span><br><span class="line">            documentReady();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            w.addEventListener(<span class="string">&#x27;DOMContentLoaded&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                documentReady();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">addLineNumbersForCode</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">1</span>;</span><br><span class="line">        html = <span class="string">&#x27;&lt;span class=&quot;ln-num&quot; data-num=&quot;&#x27;</span> + num + <span class="string">&#x27;&quot;&gt;&lt;/span&gt;&#x27;</span> + html;</span><br><span class="line">        html = html.replace(<span class="regexp">/\r\n|\r|\n/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">            num++;</span><br><span class="line">            <span class="keyword">return</span> a + <span class="string">&#x27;&lt;span class=&quot;ln-num&quot; data-num=&quot;&#x27;</span> + num + <span class="string">&#x27;&quot;&gt;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        html = <span class="string">&#x27;&lt;span class=&quot;ln-bg&quot;&gt;&lt;/span&gt;&#x27;</span> + html;</span><br><span class="line">        <span class="keyword">return</span> html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">documentReady</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> elements = d.querySelectorAll(<span class="string">&#x27;pre code&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; elements.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (elements[i].className.indexOf(<span class="string">&#x27;hljsln&#x27;</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> html = elements[i].innerHTML;</span><br><span class="line">                html = addLineNumbersForCode(html);</span><br><span class="line">                elements[i].innerHTML = html;</span><br><span class="line">                elements[i].className += <span class="string">&#x27; hljsln&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>));</span><br></pre></td></tr></table></figure>

<h3 id="加载并执行初始化如下"><a href="#加载并执行初始化如下" class="headerlink" title="加载并执行初始化如下"></a><strong>加载并执行初始化如下</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>  <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/styles/androidstudio.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/highlight.line-numbers.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/highlight.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>hljs.initHighlightingOnLoad();hljsln.initLineNumbersOnLoad();<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果如下图"><a href="#结果如下图" class="headerlink" title="结果如下图"></a><strong>结果如下图</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210603041214.jpg" alt="img"></strong></p>
<p>可以看到第1和8行是空行，但是也显示了行号，为了让它不显示，将上面JavaScript代码中的addLineNumbersForCode方法修改成下面的代码即可：（修改后结果如下图所示）</p>
<p>JavaScript代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addLineNumbersForCode</span>(<span class="params">html</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">var</span> max = <span class="number">0</span>;</span><br><span class="line">	html = html.replace(<span class="regexp">/\r\n|\r|\n/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">b</span>) </span>&#123;</span><br><span class="line">		max++;</span><br><span class="line">		<span class="keyword">if</span> (max != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> b;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">	html = html.replace(<span class="regexp">/\r\n|\r|\n/g</span>, <span class="function"><span class="keyword">function</span> (<span class="params">a</span>) </span>&#123;</span><br><span class="line">		num++;</span><br><span class="line">		<span class="keyword">if</span> (num != <span class="number">0</span> &amp;&amp; num != max) &#123;</span><br><span class="line">			<span class="keyword">return</span> a + <span class="string">&#x27;&lt;span class=&quot;ln-num&quot; data-num=&quot;&#x27;</span> + num + <span class="string">&#x27;&quot;&gt;&lt;/span&gt;&#x27;</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span> <span class="keyword">if</span> (num != <span class="number">0</span> &amp;&amp; num == max) &#123;</span><br><span class="line">			<span class="keyword">return</span> a + <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;);</span><br><span class="line">	html = <span class="string">&#x27;&lt;span class=&quot;ln-bg&quot; style=&quot;margin-left: 1px&quot;&gt;&lt;/span&gt;&#x27;</span> + html;</span><br><span class="line">	<span class="keyword">return</span> html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>图片：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210603041531.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.yangdx.com/2020/04/144.html">自己写 highlight.js 行号插件 | 天角星</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>highlight.js</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery让鼠标定位到指定输入框</title>
    <url>/132.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;codeStyle&quot;</span> <span class="attr">class</span>=<span class="string">&quot;easyui-validatebox&quot;</span> <span class="attr">required</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">&quot;#codeStyle&quot;</span>).get(<span class="number">0</span>).focus();</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/yyj108317/article/details/109045695">用jquery让鼠标定位输入框_白不懂黑的静的专栏-CSDN博客</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>title标签加图标</title>
    <url>/133.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;short icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/static/images/favicon.ico&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210603224943.jpg" alt="img"></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyUI格式化网格数据</title>
    <url>/134.html</url>
    <content><![CDATA[<p>Blog实体类（博客实体）和BlogType实体类（博客类别实体），每个blog都有对应的blogType，博客类别实体有名称等属性，而我们只需要显示博客类别的名称，则格式化过程如下所示：</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><p>Blog实体类：（博客实体，已省略setter和getter方法）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客实体</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-11 00:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Blog</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 标题</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 摘要</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String summary;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String content;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date releaseDate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点击次数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer click;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogTypeId;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BlogType blogType;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客里存在的第一张图片，主要用于列表展示的缩略图</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String imageName;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客数量 非博客实际属性 主要是 根据发布日期归档查询数量用到</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogCount;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发布日期的字符串 只取年和月</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String releaseDateStr;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该类型的博客数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer blogNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于判断当前IP是否点赞过这篇博客</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isLike;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点赞数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer likeNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 是否是导航条文章（0或空代表不是，1代表是）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer isMenuBlog;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置成为导航条文章的时间</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Date setMenuBlogDate;</span><br><span class="line">    </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<p>BlogType实体类：（博客类别实体，已省略setter和getter方法）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 博客类别实体类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-10 21:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogType</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 博客类别名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排列数字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer sortNum;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 该类别的博客数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Long blogNum;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">&quot;dg&quot;</span> <span class="attr">title</span>=<span class="string">&quot;博客管理&quot;</span> <span class="attr">class</span>=<span class="string">&quot;easyui-datagrid&quot;</span> <span class="attr">striped</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">fitColumns</span>=<span class="string">&quot;true&quot;</span> <span class="attr">pagination</span>=<span class="string">&quot;true&quot;</span> <span class="attr">rownumbers</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">url</span>=<span class="string">&quot;/admin/blog/list&quot;</span> <span class="attr">fit</span>=<span class="string">&quot;true&quot;</span> <span class="attr">toolbar</span>=<span class="string">&quot;#tb&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">field</span>=<span class="string">&quot;cb&quot;</span> <span class="attr">checkbox</span>=<span class="string">&quot;true&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">field</span>=<span class="string">&quot;id&quot;</span> <span class="attr">width</span>=<span class="string">&quot;20&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">field</span>=<span class="string">&quot;title&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">formatter</span>=<span class="string">&quot;formatTitle&quot;</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">field</span>=<span class="string">&quot;releaseDate&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>发布日期<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span> <span class="attr">field</span>=<span class="string">&quot;blogType&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">formatter</span>=<span class="string">&quot;formatType&quot;</span>&gt;</span>博客类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">formatType</span>(<span class="params">val, row</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> val.name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>前端</tag>
        <tag>EasyUI</tag>
      </tags>
  </entry>
  <entry>
    <title>使用CKEditor富文本编辑器</title>
    <url>/135.html</url>
    <content><![CDATA[<h3 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a><strong>头文件</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/static/ckeditor/ckeditor.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="HTML代码（使用textarea标签）"><a href="#HTML代码（使用textarea标签）" class="headerlink" title="HTML代码（使用textarea标签）"></a><strong>HTML代码</strong>（使用textarea标签）</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;content&quot;</span> <span class="attr">name</span>=<span class="string">&quot;content&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;30&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;80&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    CKEDITOR.replace(<span class="string">&quot;content&quot;</span>);</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>CKEditor</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Java实现HTTP请求</title>
    <url>/136.html</url>
    <content><![CDATA[<h3 id="commons-httpclient"><a href="#commons-httpclient" class="headerlink" title="commons-httpclient"></a><strong>commons-httpclient</strong></h3><p>pom.xml代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-httpclient<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.HttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.HttpException;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.methods.GetMethod;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.httpclient.params.HttpMethodParams;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Http请求工具类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-07 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">sendGet</span><span class="params">(String urlParam)</span> <span class="keyword">throws</span> HttpException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 创建httpClient实例对象</span></span><br><span class="line">        HttpClient httpClient = <span class="keyword">new</span> HttpClient();</span><br><span class="line">        <span class="comment">// 设置httpClient连接主机服务器超时时间：15000毫秒</span></span><br><span class="line">        httpClient.getHttpConnectionManager().getParams().setConnectionTimeout(<span class="number">15000</span>);</span><br><span class="line">        <span class="comment">// 创建GET请求方法实例对象</span></span><br><span class="line">        GetMethod getMethod = <span class="keyword">new</span> GetMethod(urlParam);</span><br><span class="line">        <span class="comment">// 设置post请求超时时间</span></span><br><span class="line">        getMethod.getParams().setParameter(HttpMethodParams.SO_TIMEOUT, <span class="number">60000</span>);</span><br><span class="line">        getMethod.addRequestHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        httpClient.executeMethod(getMethod);</span><br><span class="line"></span><br><span class="line">        String result = getMethod.getResponseBodyAsString();</span><br><span class="line">        getMethod.releaseConnection();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String ip = <span class="string">&quot;116.179.32.87&quot;</span>;</span><br><span class="line">        String url = <span class="string">&quot;http://ip.ws.126.net/ipquery?ip=&quot;</span> + ip;</span><br><span class="line">        String result = sendGet(url);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="Java工具包类库Hutool的HttpUtil-get方法（简单快捷）"><a href="#Java工具包类库Hutool的HttpUtil-get方法（简单快捷）" class="headerlink" title="Java工具包类库Hutool的HttpUtil.get方法（简单快捷）"></a><strong>Java工具包类库Hutool的HttpUtil.get方法（简单快捷）</strong></h3><p>pom.xml代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	String ip = <span class="string">&quot;116.179.32.87&quot;</span>;</span><br><span class="line">	String url = <span class="string">&quot;http://ip.ws.126.net/ipquery?ip=&quot;</span> + ip;</span><br><span class="line">	String str = HttpUtil.get(url);</span><br><span class="line">	System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java截取两个字符串之间的字符串</title>
    <url>/137.html</url>
    <content><![CDATA[<h3 id="使用的方法"><a href="#使用的方法" class="headerlink" title="使用的方法"></a>使用的方法</h3><h4 id="String-indexOf"><a href="#String-indexOf" class="headerlink" title="String.indexOf"></a><strong>String.indexOf</strong></h4><p>传入的数据类型为String，返回传入字符串第一次出现的位置（索引从0开始，返回字符串第一个字符的位置）</p>
<h4 id="String-substring"><a href="#String-substring" class="headerlink" title="String.substring"></a><strong>String.substring</strong></h4><p>传入数据类型为两个int，用于截取字符串（包括头，不包括尾）</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-07 7:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String str = <span class="string">&quot;12345678923&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> begin = str.indexOf(<span class="string">&quot;23&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> last = str.indexOf(<span class="string">&quot;89&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;\&quot;23\&quot;第一次出现的位置为:&quot;</span> + begin);</span><br><span class="line">        System.out.println(<span class="string">&quot;\&quot;89\&quot;第一次出现的位置为:&quot;</span> + last);</span><br><span class="line">        String substring = str.substring(begin + <span class="number">2</span>, last);</span><br><span class="line">        System.out.println(<span class="string">&quot;截取的结果为:&quot;</span> + substring);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210607092942.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>要截取什么样的字符串可根据String.substring包括头不包括尾的特性来灵活截取</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java解析JSON的四种方式</title>
    <url>/138.html</url>
    <content><![CDATA[<h3 id="Link实体类：（已省略setter和getter方法）"><a href="#Link实体类：（已省略setter和getter方法）" class="headerlink" title="Link实体类：（已省略setter和getter方法）"></a><strong>Link实体类：</strong>（已省略setter和getter方法）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 友情链接实体</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-02-03 17:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链接地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排列序号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer sortNum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Link&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, url=&#x27;&quot;</span> + url + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, sortNum=&quot;</span> + sortNum +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="利用传统方式"><a href="#利用传统方式" class="headerlink" title="利用传统方式"></a><strong>利用传统方式</strong></h3><p>pom.xml代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>20160810<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Link;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-07 7:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Link link = <span class="keyword">new</span> Link();</span><br><span class="line">        link.setId(<span class="number">1</span>);</span><br><span class="line">        link.setName(<span class="string">&quot;LeDao的博客&quot;</span>);</span><br><span class="line">        link.setUrl(<span class="string">&quot;http://www.zoutl.cn&quot;</span>);</span><br><span class="line">        link.setSortNum(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//实体类转Json</span></span><br><span class="line">        JSONObject jsonObject = <span class="keyword">new</span> JSONObject();</span><br><span class="line">        jsonObject.put(<span class="string">&quot;id&quot;</span>, link.getId());</span><br><span class="line">        jsonObject.put(<span class="string">&quot;name&quot;</span>, link.getName());</span><br><span class="line">        jsonObject.put(<span class="string">&quot;url&quot;</span>, link.getUrl());</span><br><span class="line">        jsonObject.put(<span class="string">&quot;sortNum&quot;</span>, link.getSortNum());</span><br><span class="line">        System.out.println(jsonObject.toString());</span><br><span class="line">        <span class="comment">//Json转实体类</span></span><br><span class="line">        Link link2 = <span class="keyword">new</span> Link();</span><br><span class="line">        link2.setId((Integer) jsonObject.get(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">        link2.setName((String) jsonObject.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">        link2.setUrl((String) jsonObject.get(<span class="string">&quot;url&quot;</span>));</span><br><span class="line">        link2.setSortNum((Integer) jsonObject.get(<span class="string">&quot;sortNum&quot;</span>));</span><br><span class="line">        System.out.println(link2.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="利用Jackson方式"><a href="#利用Jackson方式" class="headerlink" title="利用Jackson方式"></a><strong>利用Jackson方式</strong></h3><p>pom.xml代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.12.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Link;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-07 7:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        Link link = <span class="keyword">new</span> Link();</span><br><span class="line">        link.setId(<span class="number">1</span>);</span><br><span class="line">        link.setName(<span class="string">&quot;LeDao的博客&quot;</span>);</span><br><span class="line">        link.setUrl(<span class="string">&quot;http://www.zoutl.cn&quot;</span>);</span><br><span class="line">        link.setSortNum(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//实体类转Json</span></span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        String jsonString = objectMapper.writeValueAsString(link);</span><br><span class="line">        System.out.println(jsonString);</span><br><span class="line">        <span class="comment">//Json转实体类</span></span><br><span class="line">        Link link2 = objectMapper.readValue(jsonString,Link.class);</span><br><span class="line">        System.out.println(link2.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="利用GSON方式"><a href="#利用GSON方式" class="headerlink" title="利用GSON方式"></a><strong>利用GSON方式</strong></h3><p>pom.xml代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Link;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-07 7:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        Link link = <span class="keyword">new</span> Link();</span><br><span class="line">        link.setId(<span class="number">1</span>);</span><br><span class="line">        link.setName(<span class="string">&quot;LeDao的博客&quot;</span>);</span><br><span class="line">        link.setUrl(<span class="string">&quot;http://www.zoutl.cn&quot;</span>);</span><br><span class="line">        link.setSortNum(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//实体类转Json</span></span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">        String jsonString = gson.toJson(link);</span><br><span class="line">        System.out.println(jsonString);</span><br><span class="line">        <span class="comment">//Json转实体类</span></span><br><span class="line">        Link link2 = gson.fromJson(jsonString, Link.class);</span><br><span class="line">        System.out.println(link2.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="利用FastJSON方式"><a href="#利用FastJSON方式" class="headerlink" title="利用FastJSON方式"></a><strong>利用FastJSON方式</strong></h3><p>pom.xml代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.75<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Link;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-07 7:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> JsonProcessingException </span>&#123;</span><br><span class="line">        Link link = <span class="keyword">new</span> Link();</span><br><span class="line">        link.setId(<span class="number">1</span>);</span><br><span class="line">        link.setName(<span class="string">&quot;LeDao的博客&quot;</span>);</span><br><span class="line">        link.setUrl(<span class="string">&quot;http://www.zoutl.cn&quot;</span>);</span><br><span class="line">        link.setSortNum(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//实体类转Json</span></span><br><span class="line">        Object jsonString = JSON.toJSON(link);</span><br><span class="line">        System.out.println(jsonString.toString());</span><br><span class="line">        <span class="comment">//Json转实体类</span></span><br><span class="line">        Link link2 = JSON.parseObject(jsonString.toString(), Link.class);</span><br><span class="line">        System.out.println(link2.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210607102408.jpg" alt="img"></p>
<h3 id="几种方式的比较"><a href="#几种方式的比较" class="headerlink" title="几种方式的比较"></a><strong>几种方式的比较</strong></h3><table>
<thead>
<tr>
<th><strong>类型</strong></th>
<th><strong>简介</strong></th>
</tr>
</thead>
<tbody><tr>
<td>传统Json方式</td>
<td>复杂的Json数据转换成实体类存在缺陷，性能和功能不够完善</td>
</tr>
<tr>
<td>Jackson方式</td>
<td>复杂的Json数据转换成实体类存在缺陷，性能和功能优于传统方式</td>
</tr>
<tr>
<td>Gson方式</td>
<td>功能方面在几种方式中最优，性能方面不如Jackson方式</td>
</tr>
<tr>
<td>FastJson方式</td>
<td>复杂的实体类转换成Json数据存在缺陷，解析json的速度优于其他方式</td>
</tr>
</tbody></table>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/leosblog/article/details/80842640">Java解析JSON的四种方式_云恒子-CSDN博客_java解析json</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven找依赖包或下载jar包</title>
    <url>/139.html</url>
    <content><![CDATA[<h3 id="进入网站"><a href="#进入网站" class="headerlink" title="进入网站"></a><strong>进入网站</strong></h3><p><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p>
<h3 id="搜索要使用的依赖包（搜索gson）"><a href="#搜索要使用的依赖包（搜索gson）" class="headerlink" title="搜索要使用的依赖包（搜索gson）"></a><strong>搜索要使用的依赖包（搜索gson）</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210607104110.jpg" alt="img"></p>
<h3 id="选择要使用的版本，点击Version列的版本号"><a href="#选择要使用的版本，点击Version列的版本号" class="headerlink" title="选择要使用的版本，点击Version列的版本号"></a><strong>选择要使用的版本，点击Version列的版本号</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210607104226.jpg" alt="img"></p>
<h3 id="点击第一条红线处的jar链接即可下载jar包，第二条红线处选择maven就是pom-xml的引入代码"><a href="#点击第一条红线处的jar链接即可下载jar包，第二条红线处选择maven就是pom-xml的引入代码" class="headerlink" title="点击第一条红线处的jar链接即可下载jar包，第二条红线处选择maven就是pom.xml的引入代码"></a><strong>点击第一条红线处的jar链接即可下载jar包，第二条红线处选择maven就是pom.xml的引入代码</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210607104520.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot2.0实现自定义404页面渲染</title>
    <url>/14.html</url>
    <content><![CDATA[<h3 id="第一种写法"><a href="#第一种写法" class="headerlink" title="第一种写法"></a><strong>第一种写法</strong></h3><p>实现ErrorPageRegistrar(404.html放在项目webapp下)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorPageConfig</span> <span class="keyword">implements</span> <span class="title">ErrorPageRegistrar</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerErrorPages</span><span class="params">(ErrorPageRegistry registry)</span> </span>&#123;</span><br><span class="line">        ErrorPage[] errorPages = <span class="keyword">new</span> ErrorPage[<span class="number">2</span>];</span><br><span class="line">        errorPages[<span class="number">0</span>] = <span class="keyword">new</span> ErrorPage(HttpStatus.NOT_FOUND, <span class="string">&quot;/404.html&quot;</span>);</span><br><span class="line">        errorPages[<span class="number">1</span>] = <span class="keyword">new</span> ErrorPage(HttpStatus.INTERNAL_SERVER_ERROR, <span class="string">&quot;/500.html&quot;</span>);</span><br><span class="line"> </span><br><span class="line">        registry.addErrorPages(errorPages);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="第二种写法"><a href="#第二种写法" class="headerlink" title="第二种写法"></a><strong>第二种写法</strong></h3><p>Spring Boot2.0之后的写法(404.html文件放在resources的static文件夹中)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorPageConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> WebServerFactoryCustomizer <span class="title">webServerFactoryCustomizer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//第二种写法：java8 lambda写法</span></span><br><span class="line">        <span class="keyword">return</span> (factory -&gt; &#123;</span><br><span class="line">            ErrorPage errorPage404 = <span class="keyword">new</span> ErrorPage(HttpStatus.NOT_FOUND, <span class="string">&quot;/404.html&quot;</span>);</span><br><span class="line">            factory.addErrorPages(errorPage404);</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>jQuery发送Ajax请求</title>
    <url>/140.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">id</span>=<span class="string">&quot;url2&quot;</span>&gt;</span>看我看我<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">url:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">required</span>=<span class="string">&quot;required&quot;</span> <span class="attr">id</span>=<span class="string">&quot;url1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:click()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">button</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">click</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> urlStr = $(<span class="string">&quot;#url1&quot;</span>).val();</span><br><span class="line">	<span class="keyword">if</span> (urlStr == <span class="keyword">null</span> || urlStr == <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">		alert(<span class="string">&quot;请输入链接!!&quot;</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	$.ajax(&#123;</span><br><span class="line">		url: <span class="string">&quot;/blog/getJson&quot;</span>,</span><br><span class="line">		type: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">		data: &#123;urlStr: urlStr&#125;,</span><br><span class="line">		success: function (result) &#123;</span><br><span class="line">			<span class="keyword">var</span> obj = JSON.parse(result);</span><br><span class="line">			$(<span class="string">&quot;#url2&quot;</span>).html(obj.name + <span class="string">&quot; : &quot;</span> + obj.url);</span><br><span class="line">			$(<span class="string">&quot;#url2&quot;</span>).attr(<span class="string">&quot;style&quot;</span>, <span class="string">&quot;color:red&quot;</span>);</span><br><span class="line">		&#125;,</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><p>Link实体类：（已省略setter和getter方法）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 友情链接实体</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-02-03 17:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 链接地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 排列序号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer sortNum;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Link&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, url=&#x27;&quot;</span> + url + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, sortNum=&quot;</span> + sortNum +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>请求的方法getJson：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getJson&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getJson</span><span class="params">(String urlStr)</span> </span>&#123;</span><br><span class="line">	Link link = <span class="keyword">new</span> Link();</span><br><span class="line">	link.setId(<span class="number">1</span>);</span><br><span class="line">	link.setName(<span class="string">&quot;LeDao的博客&quot;</span>);</span><br><span class="line">	link.setUrl(urlStr);</span><br><span class="line">	link.setSortNum(<span class="number">1</span>);</span><br><span class="line">	Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">	String jsonString = gson.toJson(link);</span><br><span class="line">	<span class="keyword">return</span> jsonString;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a><strong>参数说明</strong></h3><table>
<thead>
<tr>
<th><strong>序 号</strong></th>
<th><strong>参数</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>url</td>
<td>String 类型参数，发送请求的地址</td>
</tr>
<tr>
<td>2</td>
<td>type</td>
<td>String 类型参数，设置请求方式（ GET、POST、PUT、DELETE ）</td>
</tr>
<tr>
<td>3</td>
<td>timeout</td>
<td>Number类型参数，设置请求超时时间（毫秒）</td>
</tr>
<tr>
<td>4</td>
<td>async</td>
<td>Boolean 类型参数，默认设置为 true，当为 true 表示发送异步请求，当为 false 表示发送同步请求</td>
</tr>
<tr>
<td>5</td>
<td>cache</td>
<td>Boolean 类型参数，默认设置为 true 默认为 true（当 dataType 为 script 时，默认为 false ），设置为false将不会从浏览器缓存中加载请求信息</td>
</tr>
<tr>
<td>6</td>
<td>data</td>
<td>Object 或 String 类型的参数，发送请求的参数，如果是 GET 方式则以 ? &amp; 形式拼接到 url 中，如果是 POST 方式则将数据放在 FormData 中</td>
</tr>
<tr>
<td>7</td>
<td>dataType</td>
<td>String类型的参数，指定服务器返回的数据类型 xml：返回XML文档 html：返回纯文本HTML信息 script：返回纯文本JavaScript代码 json：返回JSON数据 jsonp：JSONP格式 text：返回纯文本字符串</td>
</tr>
<tr>
<td>8</td>
<td>beforeSend</td>
<td>Function 类型参数，发送请求前可以修改 XMLHttpRequest 对象的函数，例如添加自定义 HTTP 头</td>
</tr>
<tr>
<td>9</td>
<td>complete</td>
<td>Function 类型参数，请求完成后调用的回调函数（请求成功或失败时均调用）</td>
</tr>
<tr>
<td>10</td>
<td>success</td>
<td>Function 类型参数，请求成功的回调函数</td>
</tr>
<tr>
<td>11</td>
<td>error</td>
<td>Function 类型参数，请求失败的回调函数</td>
</tr>
<tr>
<td>12</td>
<td>contentType</td>
<td>String 类型参数，当发送信息至服务器时，内容编码类型默认为”application/x-www-form-urlencoded”</td>
</tr>
<tr>
<td>13</td>
<td>dataFilter</td>
<td>Function类型参数，给Ajax返回的原始数据进行预处理的函数。提供data和type两个参数。data是Ajax返回的原始数据，type是调用jQuery.ajax时提供的dataType参数。函数返回的值将由jQuery进一步处理function(data, type){   //返回处理后的数据   return data; }</td>
</tr>
<tr>
<td>14</td>
<td>global</td>
<td>Boolean 类型参数，默认为true。表示是否触发全局ajax事件。设置为false将不会触发全局ajax事件，ajaxStart或ajaxStop可用于控制各种ajax事件</td>
</tr>
<tr>
<td>15</td>
<td>ifModified</td>
<td>Boolean 类型参数，默认为false。仅在服务器数据改变时获取新数据。服务器数据改变判断的依据是Last-Modified头信息。默认值是false，即忽略头信息</td>
</tr>
<tr>
<td>16</td>
<td>jsonp</td>
<td>String 类型参数，在一个jsonp请求中重写回调函数的名字。该值用来替代在”callback=?”这种GET或POST请求中URL参数里的”callback”部分，例如{jsonp:’onJsonPLoad’}会导致将”onJsonPLoad=?”传给服务器</td>
</tr>
<tr>
<td>17</td>
<td>username</td>
<td>String 类型参数，用于响应HTTP访问认证请求的用户名</td>
</tr>
<tr>
<td>18</td>
<td>password</td>
<td>String 类型参数，用于响应HTTP访问认证请求的密码</td>
</tr>
<tr>
<td>19</td>
<td>processData</td>
<td>Boolean 类型参数，默认为true。默认情况下，发送的数据将被转换为对象（从技术角度来讲并非字符串）以配合默认内容类型”application/x-www-form-urlencoded”。如果要发送DOM树信息或者其他不希望转换的信息，请设置为false</td>
</tr>
<tr>
<td>20</td>
<td>scriptCharset</td>
<td>String 类型参数，只有当请求时dataType为”jsonp”或者”script”，并且type是GET时才会用于强制修改字符集(charset)。通常在本地和远程的内容编码不同时使用</td>
</tr>
</tbody></table>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/assiduous_me/article/details/90108590?utm_medium=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control">JQuery 中使用 Ajax 发送 GET、POST 请求_assiduous_me的博客-CSDN博客_ajax发送get请求</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Highcharts的使用</title>
    <url>/141.html</url>
    <content><![CDATA[<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a><strong>引入</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://code.highcharts.com/highcharts.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;container&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> chart = <span class="keyword">new</span> Highcharts.Chart(&#123;</span><br><span class="line">		<span class="attr">chart</span>: &#123;</span><br><span class="line">			<span class="attr">renderTo</span>: <span class="string">&quot;container&quot;</span>,</span><br><span class="line">			<span class="attr">type</span>: <span class="string">&#x27;column&#x27;</span>,</span><br><span class="line">			<span class="attr">events</span>: &#123;</span><br><span class="line">				<span class="attr">load</span>: <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">					$.post(<span class="string">&quot;/blog/highlight&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">						<span class="keyword">var</span> rows = result.rows;</span><br><span class="line">						<span class="keyword">var</span> xArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">						<span class="keyword">var</span> yArr = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">						<span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; rows.length; i++) &#123;</span><br><span class="line">							xArr.push(rows[i].name);</span><br><span class="line">							yArr.push(rows[i].num);</span><br><span class="line">						&#125;</span><br><span class="line">						chart.xAxis[<span class="number">0</span>].categories = xArr;</span><br><span class="line">						chart.series[<span class="number">0</span>].setData(yArr);</span><br><span class="line"></span><br><span class="line">					&#125;, <span class="string">&quot;json&quot;</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="comment">//标题</span></span><br><span class="line">		<span class="attr">title</span>: &#123;</span><br><span class="line">			<span class="attr">text</span>: <span class="string">&#x27;剩余水果数量&#x27;</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="comment">//X轴的意义</span></span><br><span class="line">		<span class="attr">xAxis</span>: &#123;</span><br><span class="line">			<span class="attr">title</span>: <span class="string">&#x27;水果类型&#x27;</span>,</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="comment">//Y轴的意义</span></span><br><span class="line">		<span class="attr">yAxis</span>: &#123;</span><br><span class="line">			<span class="attr">title</span>: &#123;</span><br><span class="line">				<span class="attr">text</span>: <span class="string">&#x27;数量&#x27;</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="comment">//数据列的意义</span></span><br><span class="line">		<span class="attr">series</span>: [&#123;</span><br><span class="line">			<span class="attr">name</span>: <span class="string">&#x27;数量&#x27;</span>,</span><br><span class="line">		&#125;]</span><br><span class="line">	&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><p>Fruit实体类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-08 21:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer num;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(String name, Integer num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>从后台获取数据：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/highlight&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map <span class="title">highlight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Map resultMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">	List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	fruitList.add(<span class="keyword">new</span> Fruit(<span class="string">&quot;苹果&quot;</span>,<span class="number">8</span>));</span><br><span class="line">	fruitList.add(<span class="keyword">new</span> Fruit(<span class="string">&quot;香蕉&quot;</span>,<span class="number">2</span>));</span><br><span class="line">	fruitList.add(<span class="keyword">new</span> Fruit(<span class="string">&quot;梨&quot;</span>,<span class="number">16</span>));</span><br><span class="line">	fruitList.add(<span class="keyword">new</span> Fruit(<span class="string">&quot;油桃&quot;</span>,<span class="number">7</span>));</span><br><span class="line">	fruitList.add(<span class="keyword">new</span> Fruit(<span class="string">&quot;西瓜&quot;</span>,<span class="number">13</span>));</span><br><span class="line">	fruitList.add(<span class="keyword">new</span> Fruit(<span class="string">&quot;橘子&quot;</span>,<span class="number">5</span>));</span><br><span class="line">	resultMap.put(<span class="string">&quot;rows&quot;</span>, fruitList);</span><br><span class="line">	<span class="keyword">return</span> resultMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a><strong>结果截图</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210608225716.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>如果将上面的柱状图换成折线图，将JavaScript代码中的 <strong>type: ‘column’</strong> 改为 <strong>type: ‘line’</strong> 即可</p>
<p>使用了jQuery，请先引入jQuery</p>
<p>Highcharts中文官网：<a href="https://www.highcharts.com.cn/">兼容 IE6+、完美支持移动端、图表类型丰富的 HTML5 交互图表 | Highcharts</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>前端</tag>
        <tag>Highcharts</tag>
      </tags>
  </entry>
  <entry>
    <title>switch语句</title>
    <url>/142.html</url>
    <content><![CDATA[<p>switch语句将从与选项值相匹配的case标签处开始执行直到遇到break语句，或者执行到switch语句的结束处为止。如果没有相匹配的case标签，而有default子句，就执行这个子句。（必须严格执行每个case必须以break语句结束，不然程序会继续执行下去，直到遇到break语句或者执行到default语句）</p>
<h3 id="正确的例子"><a href="#正确的例子" class="headerlink" title="正确的例子"></a><strong>正确的例子</strong></h3><p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">switch</span> (i) &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			System.out.println(<span class="number">1</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			System.out.println(<span class="number">2</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			System.out.println(<span class="number">3</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210613163509.jpg" alt="img"></p>
<h3 id="错误的例子"><a href="#错误的例子" class="headerlink" title="错误的例子"></a><strong>错误的例子</strong></h3><p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">switch</span> (i) &#123;</span><br><span class="line">		<span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">			System.out.println(<span class="number">1</span>);</span><br><span class="line">			</span><br><span class="line">		<span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">			System.out.println(<span class="number">2</span>);</span><br><span class="line">			</span><br><span class="line">		<span class="keyword">default</span>:</span><br><span class="line">			System.out.println(<span class="number">3</span>);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210613163627.jpg" alt="img"></p>
<h3 id="结果分析"><a href="#结果分析" class="headerlink" title="结果分析"></a><strong>结果分析</strong></h3><p>在错误的例子中，即使只有条件1符合条件，但是由于没有break语句终止程序，程序会继续执行下去，直到遇到break语句或执行完程序。（如果条件2有break语句，那么控制台只输出1和2）</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Maven</title>
    <url>/143.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a><strong>下载</strong></h3><p>网站链接：<a href="https://maven.apache.org/download.cgi">https://maven.apache.org/download.cgi</a></p>
<p>点击下图中的划红线的链接即可开始下载</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615013830.jpg" alt="img"></p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>在指定的位置解压刚刚下载的压缩包（不需要安装）</p>
<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a><strong>配置环境变量</strong></h3><p>①配置MAVEN_HOME（bin文件夹所在路径）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">D:\Java\apache-maven-3.8.1-bin\apache-maven-3.8.1</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615015207.jpg" alt="img"></p>
<p>②配置Path</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%MAVEN_HOME%\bin</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615015301.jpg" alt="img"></p>
<p>③查看是否配置成功，运行CMD，输入mvn -version</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615015050.jpg" alt="img"></p>
<h3 id="修改settings文件"><a href="#修改settings文件" class="headerlink" title="修改settings文件"></a>修改settings文件</h3><p>①修改本地仓库路径（根据自己需要设置，在第53行）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:/Java/apache-maven-3.8.1-bin/apache-maven-3.8.1/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>②修改jar包下载地址（放在mirrors节点内）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span>        </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>③查看是否配置成功，运行CMD，输入mvn help:system</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615020715.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/a805814077/article/details/100545928">Maven的安装与配置_a805814077的博客-CSDN博客_maven安装与配置</a></p>]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>idea配置Maven</title>
    <url>/144.html</url>
    <content><![CDATA[<p>1处选择maven安装路径（即bin文件夹所在路径）</p>
<p>2处选择settings文件的路径（打勾Override）</p>
<p>3处选择本地仓库路径（打勾Override）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615021527.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Maven</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL5.6的安装与配置（解压版）</title>
    <url>/145.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a><strong>下载</strong></h3><p>百度网盘链接：<a href="https://pan.baidu.com/s/1Cqx8KPLHYgnKPSL21jBZZA">https://pan.baidu.com/s/1Cqx8KPLHYgnKPSL21jBZZA</a></p>
<p>提取码：g37r</p>
<h3 id="解压到指定路径"><a href="#解压到指定路径" class="headerlink" title="解压到指定路径"></a><strong>解压到指定路径</strong></h3><h3 id="修改-my-default-文件（根据刚刚解压的路径修改）"><a href="#修改-my-default-文件（根据刚刚解压的路径修改）" class="headerlink" title="修改 my-default 文件（根据刚刚解压的路径修改）"></a><strong>修改 my-default 文件（根据刚刚解压的路径修改）</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615022815.jpg" alt="img"></strong></p>
<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615022826.jpg" alt="img"></strong></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><p>①用管理员权限运行cmd，进入bin文件夹</p>
<p>②用 mysqld -install 命令安装</p>
<p>③用 net start mysql 命令启动服务</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615024450.jpg" alt="img"></p>
<h3 id="设置密码（安装成功以后，关闭当前命令行，重启cmd-exe）"><a href="#设置密码（安装成功以后，关闭当前命令行，重启cmd-exe）" class="headerlink" title="设置密码（安装成功以后，关闭当前命令行，重启cmd.exe）"></a><strong>设置密码（安装成功以后，关闭当前命令行，重启cmd.exe）</strong></h3><p>输入：</p>
<p>mysqladmin -u root -p password</p>
<p>回车，</p>
<p>出现“Enter password：”，直接回车，未设置密码时默认没有密码，</p>
<p>出现“New password：”输入新的密码，回车即可，</p>
<p>出现“Confirm new password:”确认密码，回车即可。</p>
<p>修改完密码以后，下次重新登录时，键入 mysql -u root -p 即可，接着输入设置后的密码即可登录。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615025037.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：</p>
<p>①安装：<a href="https://www.jb51.net/article/86852.htm">mysql5.6安装配置方法图文教程_Mysql_脚本之家</a></p>
<p>②设置密码：<a href="https://blog.csdn.net/java6218/article/details/78496277">mysql 5.6安装成功后如何设置密码？_RichurLiu的专栏-CSDN博客_mysql5.6设置密码</a></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>idea从GitHub克隆项目</title>
    <url>/146.html</url>
    <content><![CDATA[<h3 id="获取GitHub项目的git链接"><a href="#获取GitHub项目的git链接" class="headerlink" title="获取GitHub项目的git链接"></a><strong>获取GitHub项目的git链接</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615035554.jpg" alt="img"></p>
<h3 id="开始克隆（分两种类型：①克隆别人或自己的项目②克隆自己的项目）"><a href="#开始克隆（分两种类型：①克隆别人或自己的项目②克隆自己的项目）" class="headerlink" title="开始克隆（分两种类型：①克隆别人或自己的项目②克隆自己的项目）"></a><strong>开始克隆（分两种类型：①克隆别人或自己的项目②克隆自己的项目）</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615035907.jpg" alt="img"></strong></p>
<p>①克隆别人或自己的项目</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615040001.jpg" alt="img"></p>
<p>②克隆自己的项目</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615040107.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Tomcat</title>
    <url>/147.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a><strong>下载</strong></h3><p>网站地址：<a href="https://tomcat.apache.org/download-90.cgi">https://tomcat.apache.org/download-90.cgi</a></p>
<p>下载第三（32位）或者第四个（64位），根据自己的电脑选择（解压版，无需安装）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615051649.jpg" alt="img"></p>
<h3 id="解压到指定文件夹即可"><a href="#解压到指定文件夹即可" class="headerlink" title="解压到指定文件夹即可"></a><strong>解压到指定文件夹即可</strong></h3>]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>查看虚拟机里的CentOS7的IP</title>
    <url>/149.html</url>
    <content><![CDATA[<h3 id="查看ip的命令：ip-addr"><a href="#查看ip的命令：ip-addr" class="headerlink" title="查看ip的命令：ip addr"></a><strong>查看ip的命令：ip addr</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616050531.jpg" alt="img"></p>
<h3 id="如果没有上图划红线的inet属性，那么就要去修改ens33网卡的配置："><a href="#如果没有上图划红线的inet属性，那么就要去修改ens33网卡的配置：" class="headerlink" title="如果没有上图划红线的inet属性，那么就要去修改ens33网卡的配置："></a><strong>如果没有上图划红线的inet属性，那么就要去修改ens33网卡的配置：</strong></h3><p>查看网卡配置命令：vi /etc/sysconfig/network-scripts/ifcfg-ens33</p>
<p>下图中划红线处需要修改为ONBOOT=yes，按下i键进入编辑模式，修改后按ESC键退出，输入 :wq（保存并退出），最后按下回车键即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616050844.jpg" alt="img"></p>
<p>最后输入命令 ip addr 查看即可</p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>idea配置Tomcat</title>
    <url>/148.html</url>
    <content><![CDATA[<h3 id="打开配置界面"><a href="#打开配置界面" class="headerlink" title="打开配置界面"></a>打开配置界面</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615051928.jpg" alt="img"></p>
<h3 id="添加服务"><a href="#添加服务" class="headerlink" title="添加服务"></a><strong>添加服务</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615054009.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615053318.jpg" alt="img"></p>
<h3 id="配置Tomcat安装路径"><a href="#配置Tomcat安装路径" class="headerlink" title="配置Tomcat安装路径"></a><strong>配置Tomcat安装路径</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615054345.jpg" alt="img"></strong></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615053434.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615053520.jpg" alt="img"></p>
<h3 id="配置端口（我的8080被占用了，我设置成80端口，项目配置文件的端口也要一致）"><a href="#配置端口（我的8080被占用了，我设置成80端口，项目配置文件的端口也要一致）" class="headerlink" title="配置端口（我的8080被占用了，我设置成80端口，项目配置文件的端口也要一致）"></a><strong>配置端口（我的8080被占用了，我设置成80端口，项目配置文件的端口也要一致）</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615053700.jpg" alt="img"></p>
<h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a><strong>配置Deployment</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615053811.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615053841.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10系统定时关机cmd命令</title>
    <url>/15.html</url>
    <content><![CDATA[<h3 id="定时关机"><a href="#定时关机" class="headerlink" title="定时关机"></a><strong>定时关机</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shutdown -s -t 7200</span><br></pre></td></tr></table></figure>

<p>最后面的数字为秒,一小时=3600秒</p>
<h3 id="取消定时关机"><a href="#取消定时关机" class="headerlink" title="取消定时关机"></a><strong>取消定时关机</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">shutdown /a</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Xshell连接CentOS7</title>
    <url>/150.html</url>
    <content><![CDATA[<h3 id="新建连接"><a href="#新建连接" class="headerlink" title="新建连接"></a><strong>新建连接</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616102910.jpg" alt="img"></p>
<h3 id="填写会话属性"><a href="#填写会话属性" class="headerlink" title="填写会话属性"></a><strong>填写会话属性</strong></h3><p>如果不知道CentOS7的ip，查看博客：<a href="http://www.zoutl.cn/blog/183">查看虚拟机里的CentOS7的IP</a></p>
<p>为了方便辨认，名称和主机填CentOS7的ip，端口号填22</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616103147.jpg" alt="img"></p>
<h3 id="用户身份验证"><a href="#用户身份验证" class="headerlink" title="用户身份验证"></a><strong>用户身份验证</strong></h3><p>点击左侧菜单的用户身份验证，用户名和密码输入CentOS7的登陆用户名和密码，然后点击连接即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616103530.jpg" alt="img"></p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616103916.jpg" alt="img"></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7常用命令总结</title>
    <url>/151.html</url>
    <content><![CDATA[<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616122714.jpg" alt="img"></p>
<p>root代表当前登录用户，localhost代表主机名， ~代表当前主机目录，#代表用户权限（#表示超级用户，$表示普通用户）</p>
<h3 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a><strong>ls命令</strong></h3><p>均可表示当前目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./和.</span><br></pre></td></tr></table></figure>

<p>列出当前工作目录的内容（不包括隐藏文件）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure>

<p>列出root/ledao目录的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls root/ledao/</span><br></pre></td></tr></table></figure>

<p>列出当前工作目录的内容（包括隐藏文件）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -a</span><br></pre></td></tr></table></figure>

<p>列出当前工作目录的内容（查看详细信息）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -l（或者ll）</span><br></pre></td></tr></table></figure>

<p>列出当前工作目录的内容（按日期排序，降序）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -lt</span><br></pre></td></tr></table></figure>

<p>列出当前工作目录的内容（按日期排序，升序）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -ltr</span><br></pre></td></tr></table></figure>

<p>获取当前文件夹的文件个数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -l | grep <span class="string">&quot;^-&quot;</span> | wc -l</span><br></pre></td></tr></table></figure>

<h3 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a><strong>cd命令</strong></h3><p>回到根目录（根目录：[root@localhost /]）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /</span><br></pre></td></tr></table></figure>

<p>回到家目录（家目录：[root@localhost ~]）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> 或者 <span class="built_in">cd</span> ~</span><br></pre></td></tr></table></figure>

<p>回到上一级目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure>

<p>回到上两级目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../..</span><br></pre></td></tr></table></figure>

<p>进入ledao目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ledao</span><br></pre></td></tr></table></figure>

<p>进入ledao目录的11目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ledao/11</span><br></pre></td></tr></table></figure>

<h3 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h3><p>打印当前所在目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure>

<h3 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h3><p>创建一个叫dir1的目录（文件夹）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir dir1</span><br></pre></td></tr></table></figure>

<h3 id="rmdir命令"><a href="#rmdir命令" class="headerlink" title="rmdir命令"></a>rmdir命令</h3><p>删除名为dir1的空目录（目录非空时则会提示删除失败）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rmdir dir1</span><br></pre></td></tr></table></figure>

<h3 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h3><p>删除文件可以直接使用rm命令，若删除目录则必须配合选项”-r”，文件一旦通过rm命令删除，则无法恢复，所以必须格外小心地使用该命令。</p>
<p>删除文件1.txt</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm 1.txt</span><br></pre></td></tr></table></figure>

<p>删除目录dir1，如果是空目录则询问是否删除（输入y删除输入n不删除），是非空目录则先删除目录里的目录及文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -r dir1</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616124133.jpg" alt="img"></p>
<p>删除当前目录的所有目录及文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -r *</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616124223.jpg" alt="img"></p>
<h3 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h3><p>1.txt不存在则创建文件1.txt，存在则更改1.txt的时间属性为当前时间</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch 1.txt</span><br></pre></td></tr></table></figure>

<p>创建文件2.txt，3.txt（用于创建多个文件）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">touch 2.txt 3.txt</span><br></pre></td></tr></table></figure>

<h3 id="gt-命令"><a href="#gt-命令" class="headerlink" title="&gt;命令"></a>&gt;命令</h3><p>1.txt不存在则创建文件1.txt，存在则直接覆盖原文件，不会有任何提示</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt;1.txt</span><br></pre></td></tr></table></figure>

<h3 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h3><p>复制aa目录的所有目录及文件到bb目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp aa/* bb</span><br></pre></td></tr></table></figure>

<p>复制当前所在目录的3.txt文件到bb目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp 3.txt bb</span><br></pre></td></tr></table></figure>

<h3 id="vi命令"><a href="#vi命令" class="headerlink" title="vi命令"></a>vi命令</h3><p>打开1.txt进入命令模式，没有就新建文件（按下i键进入输入模式，按ESC退出输入模式进入命令模式，在命令模式下按下:（英文冒号）就进入了底线命令模式，按w保存，按q退出，按wq则保存后退出）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi 1.txt</span><br></pre></td></tr></table></figure>

<p>详细介绍：<a href="https://www.runoob.com/linux/linux-vim.html">Linux vi/vim | 菜鸟教程</a></p>
<h3 id="查看ip"><a href="#查看ip" class="headerlink" title="查看ip"></a>查看ip</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure>

<h3 id="重启网络服务"><a href="#重启网络服务" class="headerlink" title="重启网络服务"></a>重启网络服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service network restart</span><br></pre></td></tr></table></figure>

<h3 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h3><p>例如：mv aaa bbb（将文件 aaa 改名为 bbb）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv source_file(文件) dest_file(文件)</span><br></pre></td></tr></table></figure>

<p>例如：mv 1.txt dir1（将 1.txt 放入 dir1 目录中。注意，如果 dir1目录不存在，则该命令将 1.txt 改名为 dir1）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv source_file(文件) dest_directory(目录)</span><br></pre></td></tr></table></figure>

<p>例如：mv /usr/runoob/*  .（将 /usr/runoob 下的所有文件和目录移到当前目录下）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv source_directory(目录) dest_directory(目录)</span><br></pre></td></tr></table></figure>

<h3 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h3><p>查找所有目录中名称为mysql的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -name mysql</span><br></pre></td></tr></table></figure>

<p>查找/etc目录中名称为mysql的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find /etc -name mysql</span><br></pre></td></tr></table></figure>

<p>查找当前目录中名称为mysql的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find -name mysql</span><br></pre></td></tr></table></figure>

<h3 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h3><p>开放端口：8889，开放后要更新防火墙配置才能生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=8889/tcp --permanent</span><br></pre></td></tr></table></figure>

<p>删除端口：6666，删除后要更新防火墙配置才能生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=6666/tcp --permanent</span><br></pre></td></tr></table></figure>

<p>更新防火墙配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>查看端口：8889是否可用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --query-port=8889/tcp</span><br></pre></td></tr></table></figure>

<p>列出所有开放的端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --list-ports</span><br></pre></td></tr></table></figure>

<h3 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h3><p>查看1.txt的内容（不进入文件）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat 1.txt</span><br></pre></td></tr></table></figure>

<h3 id="清空文件内容"><a href="#清空文件内容" class="headerlink" title="清空文件内容"></a>清空文件内容</h3><p>清空1.txt的内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> &gt; 1.txt</span><br></pre></td></tr></table></figure>

<h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tail -f 日志文件</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装vsftp服务</title>
    <url>/152.html</url>
    <content><![CDATA[<p>我们需要向CentOS7操作系统的服务器上上传文件或者下载文件，这时候，ftp有必要安装下，我们选择主流的vsftp；</p>
<h3 id="安装vsftp"><a href="#安装vsftp" class="headerlink" title="安装vsftp"></a>安装vsftp</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> vsftpd</span><br></pre></td></tr></table></figure>

<h3 id="启动ftp服务"><a href="#启动ftp服务" class="headerlink" title="启动ftp服务"></a>启动ftp服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start vsftpd.service</span><br></pre></td></tr></table></figure>

<h3 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h3><p>永久添加tcp 21端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=21/tcp --permanent</span><br></pre></td></tr></table></figure>

<p>添加ftp服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-service=ftp</span><br></pre></td></tr></table></figure>

<p>重启防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><p>新建java1234用户 添加到root组，但是不允许用户登录，仅仅可以ftp登录，ftp登录后的默认目录是/home/data</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd -g root -d /home/data -s /sbin/nologin java1234</span><br></pre></td></tr></table></figure>

<h3 id="设置用户密码"><a href="#设置用户密码" class="headerlink" title="设置用户密码"></a>设置用户密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd java1234</span><br></pre></td></tr></table></figure>

<h3 id="设置权限"><a href="#设置权限" class="headerlink" title="设置权限"></a>设置权限</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown -R java1234:root /home/data</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setsebool -P ftpd_full_access on</span><br></pre></td></tr></table></figure>

<h3 id="修改vsftp配置文件，禁止匿名登录"><a href="#修改vsftp配置文件，禁止匿名登录" class="headerlink" title="修改vsftp配置文件，禁止匿名登录"></a>修改vsftp配置文件，禁止匿名登录</h3><p>把：anonymous_enable=YES 改为： anonymous_enable=NO</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/vsftpd/vsftpd.conf</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/306.html">Centos7.3安装vsftp服务_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>FTPRush向CentOS7上传文件和从CentOS7下载文件</title>
    <url>/153.html</url>
    <content><![CDATA[<h3 id="下载和安装FTPRush"><a href="#下载和安装FTPRush" class="headerlink" title="下载和安装FTPRush"></a><strong>下载和安装FTPRush</strong></h3><p>百度网盘链接：<a href="https://pan.baidu.com/s/1TLBzFAs94nHdDHunPfSF3g">https://pan.baidu.com/s/1TLBzFAs94nHdDHunPfSF3g</a></p>
<p>提取码：s3wr</p>
<h3 id="配置，输入密码按下回车键即可开始连接"><a href="#配置，输入密码按下回车键即可开始连接" class="headerlink" title="配置，输入密码按下回车键即可开始连接"></a><strong>配置，输入密码按下回车键即可开始连接</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616162414.jpg" alt="img"></strong></p>
<h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a><strong>上传文件</strong></h3><p>在本地窗口中右键点击要上传的文件，选择传输</p>
<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616162615.jpg" alt="img"></strong></p>
<p>然后在远程窗口即可看到刚刚上传的文件（上传的文件在/home/data/）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616162824.jpg" alt="img"></p>
<h3 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a><strong>下载文件</strong></h3><p>在本地窗口选择下载保存的路径，在远程窗口右键点击要下载的文件，选择传输即可</p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装和配置jre1.8</title>
    <url>/154.html</url>
    <content><![CDATA[<h3 id="下载jre"><a href="#下载jre" class="headerlink" title="下载jre"></a><strong>下载jre</strong></h3><p>①官网下载地址：<a href="https://www.oracle.com/java/technologies/javase-server-jre8-downloads.html">Server JRE (Java SE Runtime Environment) 8 Downloads</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210616234401.jpg" alt="img"></p>
<p>②百度网盘链接</p>
<p>链接：<a href="https://pan.baidu.com/s/1aRzE9hdak3N_KtkYMYyRKQ">https://pan.baidu.com/s/1aRzE9hdak3N_KtkYMYyRKQ</a></p>
<p>提取码：mbv3</p>
<h3 id="使用FTPRush上传jre到-home-data目录"><a href="#使用FTPRush上传jre到-home-data目录" class="headerlink" title="使用FTPRush上传jre到/home/data目录"></a><strong>使用FTPRush上传jre到/home/data目录</strong></h3><p>详细步骤查看博客：<a href="http://www.zoutl.cn/blog/187">FTPRush向CentOS7上传文件和从CentOS7下载文件</a></p>
<h3 id="解压以及剪切到-home-java-目录"><a href="#解压以及剪切到-home-java-目录" class="headerlink" title="解压以及剪切到/home/java/目录"></a><strong>解压以及剪切到/home/java/目录</strong></h3><p>①创建/home/java目录</p>
<p>[root@localhost ~]# cd /<br>[root@localhost /]# cd home<br>[root@localhost home]# mkdir java</p>
<p>②解压tar.gz压缩包 </p>
<p>[root@localhost data]# tar -zxvf server-jre-8u131-linux-x64.tar.gz </p>
<p>③把/home/data/下的jre剪切到/home/java/下</p>
<p>[root@localhost data]# mv /home/data/jdk1.8.0_131 /home/java</p>
<p>④给jre目录以及子目录授予root权限</p>
<p>[root@localhost data]# chown root:root -R /home/java/jdk1.8.0_131/</p>
<h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a><strong>配置环境变量</strong></h3><p>①编辑环境变量配置文件</p>
<p>[root@localhost data]# vi /etc/profile</p>
<p>在文件末尾加入下面代码（jdk名称根据实际情况填写），强制保存（wq!）退出</p>
<p>export JAVA_HOME=/home/java</p>
<p>export JRE_HOME=/home/java/jdk1.8.0_131</p>
<p>export CLASSPATH=$JRE_HOME/lib/rt.jar:$JRE_HOME/lib/ext</p>
<p>export PATH=$PATH:$JRE_HOME/bin</p>
<p>②使环境变量即时生效</p>
<p>[root@localhost data]# source /etc/profile</p>
<p>③验证是否配置成功</p>
<p>[root@localhost ~]# java -version</p>
<p>结果：</p>
<p>java version “1.8.0_131”<br>Java(TM) SE Runtime Environment (build 1.8.0_131-b11)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)</p>
<p>java或者javac命令也可以验证</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/307.html">Centos7.3安装和配置jre1.8_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装和配置MySQL5.7</title>
    <url>/155.html</url>
    <content><![CDATA[<h3 id="安装wget"><a href="#安装wget" class="headerlink" title="安装wget"></a><strong>安装wget</strong></h3><p>yum -y install wget</p>
<h3 id="下载和安装MySQL源包"><a href="#下载和安装MySQL源包" class="headerlink" title="下载和安装MySQL源包"></a><strong>下载和安装MySQL源包</strong></h3><p>wget <a href="https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm">https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</a></p>
<p>yum -y localinstall mysql57-community-release-el7-11.noarch.rpm</p>
<h3 id="在线安装MySQL"><a href="#在线安装MySQL" class="headerlink" title="在线安装MySQL"></a><strong>在线安装MySQL</strong></h3><p>yum -y install mysql-community-server</p>
<h3 id="启动MySQL服务"><a href="#启动MySQL服务" class="headerlink" title="启动MySQL服务"></a><strong>启动MySQL服务</strong></h3><p>systemctl start mysqld</p>
<h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a><strong>设置开机启动</strong></h3><p>[root@localhost ~]# systemctl enable mysqld<br>[root@localhost ~]# systemctl daemon-reload</p>
<h3 id="修改root本地登录密码"><a href="#修改root本地登录密码" class="headerlink" title="修改root本地登录密码"></a><strong>修改root本地登录密码</strong></h3><p>mysql安装完成之后，在/var/log/mysqld.log文件中给root生成了一个临时的默认密码（下图中划红线的就是临时密码）。</p>
<p>[root@localhost ~]# vi /var/log/mysqld.log</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617022055.jpg" alt="img"></p>
<h3 id="进入mysql命令行，修改密码"><a href="#进入mysql命令行，修改密码" class="headerlink" title="进入mysql命令行，修改密码"></a><strong>进入mysql命令行，修改密码</strong></h3><p>mysql&gt; ALTER USER ‘root‘@’localhost’ IDENTIFIED BY ‘Caofeng2012@’;</p>
<p>修改密码为 Caofeng2012@   (备注 mysql5.7默认密码策略要求密码必须是大小写字母数字特殊字母的组合，至少8位) </p>
<h3 id="设置允许远程登录"><a href="#设置允许远程登录" class="headerlink" title="设置允许远程登录"></a><strong>设置允许远程登录</strong></h3><p>Mysql默认不允许远程登录，我们需要设置下，并且防火墙开放3306端口；</p>
<p>mysql&gt; GRANT ALL PRIVILEGES ON <em>.</em> TO ‘root‘@’%’ IDENTIFIED BY ‘Caofeng2012@’ WITH GRANT OPTION;</p>
<h3 id="设置防火墙"><a href="#设置防火墙" class="headerlink" title="设置防火墙"></a><strong>设置防火墙</strong></h3><p>[root@localhost ~]# firewall-cmd --zone=public --add-port=3306/tcp --permanent</p>
<p>[root@localhost ~]# firewall-cmd --reload</p>
<h3 id="1配置默认编码为utf8"><a href="#1配置默认编码为utf8" class="headerlink" title="1配置默认编码为utf8"></a><strong>1配置默认编码为utf8</strong></h3><p>修改/etc/my.cnf配置文件，在[mysqld]下添加编码配置，如下所示：</p>
<p>[mysqld]</p>
<p>character_set_server=utf8</p>
<p>init_connect=’SET NAMES utf8’</p>
<p>打开my.cnf文件命令：</p>
<p>[root@localhost ~]# vi /etc/my.cnf</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617022657.jpg" alt="img"></p>
<h3 id="重启mysql服务"><a href="#重启mysql服务" class="headerlink" title="重启mysql服务"></a><strong>重启mysql服务</strong></h3><p>[root@localhost ~]# systemctl restart mysqld</p>
<p>再查看编码</p>
<p>mysql&gt; show variables like ‘%character%’;</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617022911.jpg" alt="img"></p>
<h3 id="SQLyog测试远程连接"><a href="#SQLyog测试远程连接" class="headerlink" title="SQLyog测试远程连接"></a><strong>SQLyog测试远程连接</strong></h3><p>输入CentOS7的ip，MySQL的用户名和密码</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617023118.jpg" alt="img"></p>
<p>结果如下图</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617023212.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/308.html">Centos7.3安装和配置Mysql5.7_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装和配置Tomcat9</title>
    <url>/156.html</url>
    <content><![CDATA[<h3 id="下载tomcat"><a href="#下载tomcat" class="headerlink" title="下载tomcat"></a><strong>下载tomcat</strong></h3><p>下载地址：<a href="https://tomcat.apache.org/download-90.cgi">https://tomcat.apache.org/download-90.cgi</a></p>
<p>下载tar.gz压缩包</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617023834.jpg" alt="img"></p>
<h3 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h3><p>使用FTPRush上传Tomcat压缩包到/home/data目录</p>
<p>详细步骤查看博客：<a href="http://www.zoutl.cn/blog/187">FTPRush向CentOS7上传文件和从CentOS7下载文件</a></p>
<h3 id="新建目录"><a href="#新建目录" class="headerlink" title="新建目录"></a>新建目录</h3><p>新建/home/tomcat9目录存放tomcat9</p>
<p>[root@localhost home]# mkdir tomcat9</p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>[root@localhost data]# tar -zxvf apache-tomcat-9.0.46.tar.gz</p>
<h3 id="移动文件夹"><a href="#移动文件夹" class="headerlink" title="移动文件夹"></a>移动文件夹</h3><p>将解压后的文件夹剪切到/home/tomcat9目录</p>
<p>[root@localhost data]# mv apache-tomcat-9.0.46 /home/tomcat9/</p>
<h3 id="修改server-xml"><a href="#修改server-xml" class="headerlink" title="修改server.xml"></a>修改server.xml</h3><p>server.xml可以配置端口，编码以及配置项目等等，我们这里就配置一个端口，把默认的8080，修改成80</p>
<p>[root@localhost tomcat9]# vi /home/tomcat9/apache-tomcat-9.0.46/conf/server.xml</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617031259.jpg" alt="img"></p>
<h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><p>开放80端口</p>
<p>firewall-cmd --zone=public --add-port=80/tcp --permanent</p>
<p>重启防火墙</p>
<p>firewall-cmd --reload</p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>[root@localhost tomcat9]# /home/tomcat9/apache-tomcat-9.0.46/bin/startup.sh</p>
<p>看到下面界面说明安装成功</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617031209.jpg" alt="img"></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7部署Java项目</title>
    <url>/157.html</url>
    <content><![CDATA[<h3 id="将项目打包成war包"><a href="#将项目打包成war包" class="headerlink" title="将项目打包成war包"></a><strong>将项目打包成war包</strong></h3><p><a href="http://www.zoutl.cn/blog/35">idea将spring boot项目打包成war包</a></p>
<p>特别地，平时我们开发用Windows系统，而部署项目用Linux系统（没有C、D等盘符），那么我们需要修改文件路径</p>
<p>Windows系统</p>
<p>①Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String mySettingLocation = <span class="string">&quot;E:\\MyProject\\IDEA\\ActualCombat\\MyBlog\\src\\main\\webapp\\static\\myConfig.setting&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>②yml文件路径</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#博客正文图片存储地址</span></span><br><span class="line"><span class="attr">blogImageFilePath:</span> <span class="string">C://Java/apache-tomcat-9.0.22-windows-x64/apache-tomcat-9.0.22-windows-x64/apache-tomcat-9.0.22/webapps/MyBlog/static/images/blogImage/</span></span><br></pre></td></tr></table></figure>

<p>③yml文件MySQL连接</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据库连接配置</span></span><br><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_myblog?serverTimezone=GMT%2B8&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">12345</span></span><br></pre></td></tr></table></figure>

<p>Linux系统</p>
<p>①Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String mySettingLocation = <span class="string">&quot;/home/tomcat9/apache-tomcat-9.0.46/webapps/MyBlog/static/myConfig.setting&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>②yml文件路径</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#博客正文图片存储地址</span></span><br><span class="line"><span class="attr">blogImageFilePath:</span> <span class="string">/home/tomcat9/apache-tomcat-9.0.46/webapps/MyBlog/static/images/blogImage/</span></span><br></pre></td></tr></table></figure>

<p>③yml文件MySQL连接</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#数据库连接配置</span></span><br><span class="line"><span class="attr">datasource:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">  <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.0.153/db_myblog?serverTimezone=GMT%2B8&amp;useUnicode=true&amp;characterEncoding=utf8</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h3 id="CentOS7环境安装与配置"><a href="#CentOS7环境安装与配置" class="headerlink" title="CentOS7环境安装与配置"></a><strong>CentOS7环境安装与配置</strong></h3><p><a href="http://www.zoutl.cn/blog/184">Xshell连接CentOS7</a></p>
<p><a href="http://www.zoutl.cn/blog/186">CentOS7安装vsftp服务</a></p>
<p><a href="http://www.zoutl.cn/blog/187">FTPRush向CentOS7上传文件和从CentOS7下载文件</a></p>
<p><a href="http://www.zoutl.cn/blog/189">CentOS7安装和配置jre1.8</a></p>
<p><a href="http://www.zoutl.cn/blog/190">Centos7安装和配置Mysql5.7</a></p>
<p><a href="http://www.zoutl.cn/blog/191">Centos7安装和配置Tomcat9</a></p>
<h3 id="使用FTPRush上传war包到-home-data目录"><a href="#使用FTPRush上传war包到-home-data目录" class="headerlink" title="使用FTPRush上传war包到/home/data目录"></a><strong>使用FTPRush上传war包到/home/data目录</strong></h3><p>详细步骤查看博客：<a href="http://www.zoutl.cn/blog/187">FTPRush向CentOS7上传文件和从CentOS7下载文件</a></p>
<h3 id="将-home-data目录的war包移动到-home-tomcat9-apache-tomcat-9-0-46-webapps目录中"><a href="#将-home-data目录的war包移动到-home-tomcat9-apache-tomcat-9-0-46-webapps目录中" class="headerlink" title="将/home/data目录的war包移动到/home/tomcat9/apache-tomcat-9.0.46/webapps目录中"></a><strong>将/home/data目录的war包移动到/home/tomcat9/apache-tomcat-9.0.46/webapps目录中</strong></h3><p>[root@localhost webapps]# mv /home/data/MyBlog.war /home/tomcat9/apache-tomcat-9.0.46/webapps</p>
<h3 id="修改-home-tomcat9-apache-tomcat-9-0-46-conf中的server-xml"><a href="#修改-home-tomcat9-apache-tomcat-9-0-46-conf中的server-xml" class="headerlink" title="修改/home/tomcat9/apache-tomcat-9.0.46/conf中的server.xml"></a><strong>修改/home/tomcat9/apache-tomcat-9.0.46/conf中的server.xml</strong></h3><p>[root@localhost conf]# vi /home/tomcat9/apache-tomcat-9.0.46/conf/server.xml</p>
<p>在下图位置添加代码：&lt;Context path=”” docBase=”/home/tomcat9/apache-tomcat-9.0.46/webapps/MyBlog” debug=”0” reloadable=”true” /&gt;</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617043545.jpg" alt="img"></p>
<p>保存后退出</p>
<h3 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a><strong>启动tomcat</strong></h3><p>[root@localhost conf]# /home/tomcat9/apache-tomcat-9.0.46/bin/startup.sh</p>
<h3 id="浏览器查看（直接输入CentOS7的ip即可）"><a href="#浏览器查看（直接输入CentOS7的ip即可）" class="headerlink" title="浏览器查看（直接输入CentOS7的ip即可）"></a><strong>浏览器查看</strong>（直接输入CentOS7的ip即可）</h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210617044137.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7部署Java项目速度很慢</title>
    <url>/158.html</url>
    <content><![CDATA[<h3 id="查找-java-security-文件的路径"><a href="#查找-java-security-文件的路径" class="headerlink" title="查找 java.security 文件的路径"></a><strong>查找 java.security 文件的路径</strong></h3><p>[root@izy4gmk7hhqg1ez webapps]# find / -name java.security</p>
<h3 id="打开-java-security-文件"><a href="#打开-java-security-文件" class="headerlink" title="打开 java.security 文件"></a><strong>打开 java.security 文件</strong></h3><p>[root@izy4gmk7hhqg1ez webapps]# vi /home/java/jdk1.8.0_131/jre/lib/security/java.security</p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a><strong>修改</strong></h3><p>securerandom.source=file:/dev/random 替换成：securerandom.source=file:/dev/urandom</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210618032852.jpg" alt="img"></p>
<p>保存并退出即可</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/weixin_39883440/article/details/114214059">java web项目启动超级慢_java web项目部署在linux系统出现第一次登录高延迟的问题…_weixin_39883440的博客-CSDN博客</a></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7实时查看Tomcat运行日志</title>
    <url>/159.html</url>
    <content><![CDATA[<h3 id="查找catalina-out的路径"><a href="#查找catalina-out的路径" class="headerlink" title="查找catalina.out的路径"></a><strong>查找catalina.out的路径</strong></h3><p>[root@izy4gmk7hhqg1ez webapps]# find / -name catalina.out<br>/home/tomcat9/apache-tomcat-9.0.46/logs/catalina.out</p>
<h3 id="实时查看Tomcat运行日志命令"><a href="#实时查看Tomcat运行日志命令" class="headerlink" title="实时查看Tomcat运行日志命令"></a><strong>实时查看Tomcat运行日志命令</strong></h3><p>tail -f /home/tomcat9/apache-tomcat-9.0.46/logs/catalina.out</p>
<h3 id="结果如下图"><a href="#结果如下图" class="headerlink" title="结果如下图"></a><strong>结果如下图</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210618035601.jpg" alt="img"></strong></p>
<p><strong>按ctrl+c退出</strong></p>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>CentOS7</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat多域名配置</title>
    <url>/16.html</url>
    <content><![CDATA[<p>首先找到服务器tomcat server.xml配置，然后在原来的基础上，多复制一份Host节点，然后name改成我们需要设置的域名 以及Context节点对应好项目路径即可</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;jxc.zoutl.cn&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span> <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/home/tomcat9/apache-tomcat-9.0.46/webapps/JXC&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;0&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- SingleSignOn valve, share authentication between web applications Documentation at: /docs/config/valve.html --&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--&lt;Valve className=&quot;org.apache.catalina.authenticator.SingleSignOn&quot; /&gt;--&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">&lt;!-- Access log processes all example. Documentation at: /docs/config/valve.html <span class="doctag">Note:</span> The pattern used is equivalent to using pattern=&quot;common&quot; --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">&quot;org.apache.catalina.valves.AccessLogValve&quot;</span> <span class="attr">directory</span>=<span class="string">&quot;logs&quot;</span> <span class="attr">prefix</span>=<span class="string">&quot;localhost_access_log&quot;</span> <span class="attr">suffix</span>=<span class="string">&quot;.txt&quot;</span> <span class="attr">pattern</span>=<span class="string">&quot;%h %l %u %t <span class="symbol">&amp;quot;</span>%r<span class="symbol">&amp;quot;</span> %s %b&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011181925.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装Redis</title>
    <url>/160.html</url>
    <content><![CDATA[<h3 id="安装gcc"><a href="#安装gcc" class="headerlink" title="安装gcc"></a><strong>安装gcc</strong></h3><p>gcc编译c的，因为redis是c编写的，所以我们先安装下gcc</p>
<p>yum install gcc-c++</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>wget方式下载redis压缩包，并解压，以及编译</p>
<p>下载命令</p>
<p>wget <a href="http://download.redis.io/releases/redis-3.2.9.tar.gz">http://download.redis.io/releases/redis-3.2.9.tar.gz</a></p>
<p>解压命令</p>
<p>tar -zxvf redis-3.2.9.tar.gz</p>
<p>编译命令</p>
<p>[root@izy4gmk7hhqg1ez ~]# cd redis-3.2.9<br>[root@izy4gmk7hhqg1ez redis-3.2.9]# make</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><p>[root@izy4gmk7hhqg1ez redis-3.2.9]# make PREFIX=/usr/local/redis install</p>
<p>安装完后，需要将刚刚解压的文件夹内 redis.conf 复制到 redis 的安装目录/usr/local/redis/中</p>
<p>[root@izy4gmk7hhqg1ez redis-3.2.9]# cp /root/redis-3.2.9/redis.conf /usr/local/redis/</p>
<h3 id="启动和关闭Redis"><a href="#启动和关闭Redis" class="headerlink" title="启动和关闭Redis"></a><strong>启动和关闭Redis</strong></h3><h4 id="前台启动和关闭"><a href="#前台启动和关闭" class="headerlink" title="前台启动和关闭"></a>前台启动和关闭</h4><p>[root@izy4gmk7hhqg1ez ~]# /usr/local/redis/bin/redis-server </p>
<p>看到下面的界面说明已经启动成功了</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620003402.jpg" alt="img"></p>
<p>按ctrl+c退出</p>
<p>这种启动是前端或者前台启动，假如退出 程序就终止或者退出了。</p>
<p>所以这种服务程序，必须后端运行；</p>
<h4 id="后台启动和关闭"><a href="#后台启动和关闭" class="headerlink" title="后台启动和关闭"></a>后台启动和关闭</h4><p><strong>修改配置文件redis.conf</strong></p>
<p>打开配置文件（打开后按/键，并输入关键字按下回车键可快速搜索文本内容）</p>
<p>[root@izy4gmk7hhqg1ez ~]# vi /usr/local/redis/redis.conf</p>
<p>daemonize no 修改成：daemonize yes</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620003417.jpg" alt="img"></p>
<p><strong>加载配置文件运行Redis</strong></p>
<p>[root@izy4gmk7hhqg1ez ~]# /usr/local/redis/bin/redis-server /usr/local/redis/redis.conf</p>
<p><strong>搜索Redis服务</strong></p>
<p>[root@izy4gmk7hhqg1ez ~]# ps -ef | grep -i redis</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620003448.jpg" alt="img"></p>
<p>看到端口号说明已经启动成功了</p>
<p><strong>停止Redis服务</strong></p>
<p>[root@izy4gmk7hhqg1ez ~]# /usr/local/redis/bin/redis-cli shutdown</p>
<p>再次搜索Redis服务，发现端口号没了，说明Redis服务已经停止了</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/311.html">Redis安装_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>实现Jedis连接</title>
    <url>/161.html</url>
    <content><![CDATA[<h3 id="引入Jedis依赖"><a href="#引入Jedis依赖" class="headerlink" title="引入Jedis依赖"></a><strong>引入Jedis依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">&quot;192.168.0.153&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;LeDao&quot;</span>);</span><br><span class="line">        String value = jedis.get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行代码时出现错误"><a href="#运行代码时出现错误" class="headerlink" title="运行代码时出现错误"></a><strong>运行代码时出现错误</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620082302.jpg" alt="img"></p>
<p>代表连接超时了，我们配置下防火墙，开一个6379端口权限</p>
<p>[root@localhost redis]# firewall-cmd --zone=public --add-port=6379/tcp --permanent<br>success<br>[root@localhost redis]# firewall-cmd --reload<br>success</p>
<p>修改 /usr/local/redis/redis.conf 配置文件：将bind 127.0.0.1注释掉，在前面加#号即可（因为这里绑定了本机）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620082316.jpg" alt="img"></p>
<h3 id="重启Redis服务，再次运行Java代码"><a href="#重启Redis服务，再次运行Java代码" class="headerlink" title="重启Redis服务，再次运行Java代码"></a><strong>重启Redis服务，再次运行Java代码</strong></h3><p>[root@localhost redis]# ./bin/redis-cli shutdown<br>[root@localhost redis]# ps -ef | grep -i redis<br>root    4620  4534  0 02:32 pts/0   00:00:00 grep --color=auto -i redis<br>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ps -ef | grep -i redis<br>root    4622    1  0 02:32 ?     00:00:00 ./bin/redis-server *:6379<br>root    4626  4534  0 02:32 pts/0   00:00:00 grep --color=auto -i redis</p>
<p>再次出现错误（下面是错误信息）</p>
<p>Exception in thread “main” redis.clients.jedis.exceptions.JedisDataException: DENIED Redis is running in protected mode because protected mode is enabled, no bind address was specified, no authentication password is requested to clients. In this mode connections are only accepted from the loopback interface. If you want to connect from external computers to Redis you may adopt one of the following solutions: 1) Just disable protected mode sending the command ‘CONFIG SET protected-mode no’ from the loopback interface by connecting to Redis from the same host the server is running, however MAKE SURE Redis is not publicly accessible from internet if you do so. Use CONFIG REWRITE to make this change permanent. 2) Alternatively you can just disable the protected mode by editing the Redis configuration file, and setting the protected mode option to ‘no’, and then restarting the server. 3) If you started the server manually just for testing, restart it with the ‘--protected-mode no’ option. 4) Setup a bind address or an authentication password. NOTE: You only need to do one of the above things in order for the server to start accepting connections from the outside.<br>   at redis.clients.jedis.Protocol.processError(Protocol.java:127)<br>   at redis.clients.jedis.Protocol.process(Protocol.java:161)<br>   at redis.clients.jedis.Protocol.read(Protocol.java:215)<br>   at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)<br>   at redis.clients.jedis.Connection.getStatusCodeReply(Connection.java:239)<br>   at redis.clients.jedis.Jedis.set(Jedis.java:121)<br>   at com.ledao.jedis.JedisTest.main(JedisTest.java:14)</p>
<p>出现错误的原因是因为远程连接redis，redis自我保护，拒绝访问，解决办法有两种：（推荐使用第二种方法：设置Redis连接密码）</p>
<p>①关闭Redis的自我保护（不推荐使用）</p>
<p>protected-mode yes 的yes修改为no即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620082329.jpg" alt="img"></p>
<p>②设置Redis连接密码，关闭Redis服务后就会失效，需要重新设置（推荐使用）</p>
<p>进入客户端</p>
<p>[root@localhost redis]# ./bin/redis-cli</p>
<p>设置密码</p>
<p>127.0.0.1:6379&gt; config set requirepass 123456<br>OK<br>127.0.0.1:6379&gt; quit</p>
<p>验证是否设置成功（出现OK就说明设置成功了）</p>
<p>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; auth 123456<br>OK<br>127.0.0.1:6379&gt; quit</p>
<h3 id="Java代码中设置Redis密码，然后再次运行"><a href="#Java代码中设置Redis密码，然后再次运行" class="headerlink" title="Java代码中设置Redis密码，然后再次运行"></a><strong>Java代码中设置Redis密码，然后再次运行</strong></h3><p>jedis.auth(“123456”);</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">&quot;192.168.0.153&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.auth(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;LeDao&quot;</span>);</span><br><span class="line">        String value = jedis.get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        System.out.println(value);</span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620082147.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/314.html">Jedis连接 HelloWorld实现_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis使用连接池</title>
    <url>/162.html</url>
    <content><![CDATA[<h3 id="池化的基本思想"><a href="#池化的基本思想" class="headerlink" title="池化的基本思想"></a><strong>池化的基本思想</strong></h3><p>①可以在初始化的时候创建一些对象，当有需要使用的时候直接从池中获取，提高响应速度；</p>
<p>②使用过的对象不进行销毁，保存起来，等下一次需要对象的时候，拿出来重复使用，减少频繁创建对象所造成的开销；</p>
<p>③创建的对象统一保存，方面管理和维护。</p>
<h3 id="池化好处总结"><a href="#池化好处总结" class="headerlink" title="池化好处总结"></a><strong>池化好处总结</strong></h3><p>①提高响应的速度</p>
<p>②降低资源的消耗</p>
<p>③方便管理和维护</p>
<p>Jedis连接就是连接池中JedisPool管理的资源，JedisPool保证资源在一个可控范围内，并且保障线程安全。使用合理的GenericObjectPoolConfig配置能够提升Redis的服务性能，降低资源开销。下列两表将对一些重要参数进行说明，并提供设置建议。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620090617.jpg" alt="img"></p>
<p>空闲Jedis对象检测由下列四个参数组合完成，testWhileIdle是该功能的开关。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620090627.jpg" alt="img"></p>
<p>可以在org.apache.commons.pool2.impl.BaseObjectPoolConfig中查看全部默认值。</p>
<p>关键参数设置建议</p>
<p>maxTotal（最大连接数）<br>想合理设置maxTotal（最大连接数）需要考虑的因素较多，如：<br>•业务希望的Redis并发量；•客户端执行命令时间；•Redis资源，例如nodes （如应用个数等） * maxTotal不能超过Redis的最大连接数；•资源开销，例如虽然希望控制空闲连接，但又不希望因为连接池中频繁地释放和创建连接造成不必要的开销。<br>假设一次命令时间，即borrow|return resource加上Jedis执行命令 （ 含网络耗时）的平均耗时约为1ms，一个连接的QPS大约是1000，业务期望的QPS是50000，那么理论上需要的资源池大小是50000 / 1000 = 50。<br>但事实上这只是个理论值，除此之外还要预留一些资源，所以maxTotal可以比理论值大一些。这个值不是越大越好，一方面连接太多会占用客户端和服务端资源，另一方面对于Redis这种高QPS的服务器，如果出现大命令的阻塞，即使设置再大的资源池也无济于事。</p>
<p>maxIdle与minIdle<br>maxIdle实际上才是业务需要的最大连接数，maxTotal 是为了给出余量，所以 maxIdle 不要设置得过小，否则会有new Jedis（新连接）开销，而minIdle是为了控制空闲资源检测。<br>连接池的最佳性能是maxTotal=maxIdle，这样就避免了连接池伸缩带来的性能干扰。但如果并发量不大或者maxTotal设置过高，则会导致不必要的连接资源浪费。<br>您可以根据实际总QPS和调用Redis的客户端规模整体评估每个节点所使用的连接池大小。</p>
<p>使用监控获取合理值<br>在实际环境中，比较可靠的方法是通过监控来尝试获取参数的最佳值。可以考虑通过JMX等方式实现监控，从而找到合理值。</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        jedisPoolConfig.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">        jedisPoolConfig.setMaxIdle(<span class="number">10</span>);</span><br><span class="line">        JedisPool jedisPool = <span class="keyword">new</span> JedisPool(jedisPoolConfig, <span class="string">&quot;192.168.0.153&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        Jedis jedis = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            jedis.auth(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">            jedis.set(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;LeDao&quot;</span>);</span><br><span class="line">            String value = jedis.get(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">            System.out.println(value);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (jedis != <span class="keyword">null</span>) &#123;</span><br><span class="line">                jedis.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (jedisPool != <span class="keyword">null</span>) &#123;</span><br><span class="line">                jedisPool.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/u010648555/article/details/103858684">掌握JedisPoolConfig参数配置，学会调优技能_阿飞云-CSDN博客</a></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7关闭Redis的两种方法</title>
    <url>/163.html</url>
    <content><![CDATA[<h3 id="使用Linux命令"><a href="#使用Linux命令" class="headerlink" title="使用Linux命令"></a><strong>使用Linux命令</strong></h3><p>如果设置了连接密码，就不能使用此方法</p>
<p>[root@localhost redis]# /usr/local/redis/bin/redis-cli shutdown</p>
<h3 id="使用Redis命令"><a href="#使用Redis命令" class="headerlink" title="使用Redis命令"></a><strong>使用Redis命令</strong></h3><p>[root@localhost redis]# /usr/local/redis/bin/redis-cli<br>127.0.0.1:6379&gt; shutdown<br>not connected&gt; </p>
<p>按ctrl+c退出</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>查看Redis服务是否开启（有端口号说明Redis服务已经启动，没有则说明服务已停止）</p>
<p>[root@localhost redis]# ps -ef | grep -i redis</p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis字符串</title>
    <url>/164.html</url>
    <content><![CDATA[<h3 id="获取指定-key-的值"><a href="#获取指定-key-的值" class="headerlink" title="获取指定 key 的值"></a><strong>获取指定 key 的值</strong></h3><p>get key：</p>
<p>127.0.0.1:6379&gt; get name<br>“ledao”</p>
<h3 id="设置指定-key-的值（如果key不存在就新建并复制，存在则值覆盖）"><a href="#设置指定-key-的值（如果key不存在就新建并复制，存在则值覆盖）" class="headerlink" title="设置指定 key 的值（如果key不存在就新建并复制，存在则值覆盖）"></a><strong>设置指定 key 的值</strong>（如果key不存在就新建并复制，存在则值覆盖）</h3><p>set key value</p>
<p>127.0.0.1:6379&gt; set name ledao<br>OK<br>127.0.0.1:6379&gt; get name<br>“ledao”<br>127.0.0.1:6379&gt; set name ledao333<br>OK<br>127.0.0.1:6379&gt; get name<br>“ledao333”</p>
<h3 id="删除指定key"><a href="#删除指定key" class="headerlink" title="删除指定key"></a><strong>删除指定key</strong></h3><p>del key</p>
<p>127.0.0.1:6379&gt; get num<br>“1”<br>127.0.0.1:6379&gt; del num<br>(integer) 1<br>127.0.0.1:6379&gt; get num<br>(nil)</p>
<h3 id="返回-key-中字符串值的子字符（包括头包括尾，下标从0开始计算）"><a href="#返回-key-中字符串值的子字符（包括头包括尾，下标从0开始计算）" class="headerlink" title="返回 key 中字符串值的子字符（包括头包括尾，下标从0开始计算）"></a><strong>返回 key 中字符串值的子字符</strong>（包括头包括尾，下标从0开始计算）</h3><p>127.0.0.1:6379&gt; set name ledao333<br>OK<br>127.0.0.1:6379&gt; get name<br>“ledao333”<br>127.0.0.1:6379&gt; getrange name 0 1<br>“le”</p>
<h3 id="将给定-key-的值设为-value-，并返回-key-的旧值-old-value"><a href="#将给定-key-的值设为-value-，并返回-key-的旧值-old-value" class="headerlink" title="将给定 key 的值设为 value ，并返回 key 的旧值(old value)"></a><strong>将给定 key 的值设为 value ，并返回 key 的旧值(old value)</strong></h3><p>getset key value</p>
<p>127.0.0.1:6379&gt; getset name LeDao<br>“ledao333”<br>127.0.0.1:6379&gt; get name<br>“LeDao”</p>
<h3 id="只有在-key-不存在时设置-key-的值"><a href="#只有在-key-不存在时设置-key-的值" class="headerlink" title="只有在 key 不存在时设置 key 的值"></a><strong>只有在 key 不存在时设置 key 的值</strong></h3><p>setnx key value</p>
<p>127.0.0.1:6379&gt; get name<br>“LeDao”<br>127.0.0.1:6379&gt; setnx name ledao<br>(integer) 0<br>127.0.0.1:6379&gt; get name<br>“LeDao”</p>
<h3 id="返回-key-所储存的字符串值的长度"><a href="#返回-key-所储存的字符串值的长度" class="headerlink" title="返回 key 所储存的字符串值的长度"></a><strong>返回 key 所储存的字符串值的长度</strong></h3><p>strlen key</p>
<p>127.0.0.1:6379&gt; get name<br>“LeDao”<br>127.0.0.1:6379&gt; strlen name<br>(integer) 5</p>
<h3 id="同时设置一个或多个-key-value-对"><a href="#同时设置一个或多个-key-value-对" class="headerlink" title="同时设置一个或多个 key-value 对"></a><strong>同时设置一个或多个 key-value 对</strong></h3><p>mset key1 value1 key2 value2 …</p>
<p>127.0.0.1:6379&gt; mset name1 ledao1 name2 ledao2<br>OK<br>127.0.0.1:6379&gt; get name1<br>“ledao1”<br>127.0.0.1:6379&gt; get name2<br>“ledao2”</p>
<h3 id="将-key-中储存的数字值增一"><a href="#将-key-中储存的数字值增一" class="headerlink" title="将 key 中储存的数字值增一"></a><strong>将 key 中储存的数字值增一</strong></h3><p>incr key</p>
<p>127.0.0.1:6379&gt; set num 0<br>OK<br>127.0.0.1:6379&gt; get num<br>“0”<br>127.0.0.1:6379&gt; incr num<br>(integer) 1<br>127.0.0.1:6379&gt; get num<br>“1”</p>
<h3 id="将-key-中储存的数字值减一"><a href="#将-key-中储存的数字值减一" class="headerlink" title="将 key 中储存的数字值减一"></a><strong>将 key 中储存的数字值减一</strong></h3><p>decr key</p>
<p>127.0.0.1:6379&gt; get num<br>“2”<br>127.0.0.1:6379&gt; decr num<br>(integer) 1<br>127.0.0.1:6379&gt; get num<br>“1”</p>
<h3 id="如果-key-已经存在并且是一个字符串，-APPEND-命令将指定的-value-追加到该-key-原来值（value）的末尾，如果不存在就相当于set-key-value"><a href="#如果-key-已经存在并且是一个字符串，-APPEND-命令将指定的-value-追加到该-key-原来值（value）的末尾，如果不存在就相当于set-key-value" class="headerlink" title="如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾，如果不存在就相当于set key value"></a><strong>如果 key 已经存在并且是一个字符串， APPEND 命令将指定的 value 追加到该 key 原来值（value）的末尾，如果不存在就相当于set key value</strong></h3><p>append key value</p>
<p>127.0.0.1:6379&gt; get name<br>“LeDao”<br>127.0.0.1:6379&gt; append name 666<br>(integer) 8<br>127.0.0.1:6379&gt; get name<br>“LeDao666”<br>127.0.0.1:6379&gt; get name4<br>(nil)<br>127.0.0.1:6379&gt; append name4 666<br>(integer) 3<br>127.0.0.1:6379&gt; get name4<br>“666”</p>
<h3 id="Java代码：（请先设置Redis的连接密码，查看博客：实现Jedis连接-，在第4点的第②小点）"><a href="#Java代码：（请先设置Redis的连接密码，查看博客：实现Jedis连接-，在第4点的第②小点）" class="headerlink" title="Java代码：（请先设置Redis的连接密码，查看博客：实现Jedis连接 ，在第4点的第②小点）"></a><strong>Java代码：</strong>（请先设置Redis的连接密码，查看博客：<a href="http://www.zoutl.cn/blog/196">实现Jedis连接</a> ，在第4点的第②小点）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">&quot;192.168.0.153&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.auth(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        jedis.set(<span class="string">&quot;LeDao的博客&quot;</span>, <span class="string">&quot;http://www.zoutl.cn&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;LeDao的博客网址：&quot;</span>+jedis.get(<span class="string">&quot;LeDao的博客&quot;</span>));</span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620110136.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>更多命令：<a href="https://www.runoob.com/redis/redis-strings.html">https://www.runoob.com/redis/redis-strings.html</a></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis keys 命令</title>
    <url>/165.html</url>
    <content><![CDATA[<p>常用命令</p>
<h3 id="获取指定-key-的值"><a href="#获取指定-key-的值" class="headerlink" title="获取指定 key 的值"></a><strong>获取指定 key 的值</strong></h3><p>get key</p>
<p>127.0.0.1:6379&gt; get name<br>“ledao”</p>
<h3 id="删除指定key"><a href="#删除指定key" class="headerlink" title="删除指定key"></a><strong>删除指定key</strong></h3><p>del key</p>
<p>127.0.0.1:6379&gt; get num<br>“1”<br>127.0.0.1:6379&gt; del num<br>(integer) 1<br>127.0.0.1:6379&gt; get num<br>(nil)</p>
<h3 id="检查给定-key-是否存在"><a href="#检查给定-key-是否存在" class="headerlink" title="检查给定 key 是否存在"></a><strong>检查给定 key 是否存在</strong></h3><p>exists key</p>
<p>127.0.0.1:6379&gt; exists name<br>(integer) 1</p>
<h3 id="返回-key-所储存的值的类型"><a href="#返回-key-所储存的值的类型" class="headerlink" title="返回 key 所储存的值的类型"></a><strong>返回 key 所储存的值的类型</strong></h3><p>type key</p>
<p>127.0.0.1:6379&gt; type name<br>string</p>
<h3 id="显示所有key"><a href="#显示所有key" class="headerlink" title="显示所有key"></a><strong>显示所有key</strong></h3><p>keys *</p>
<p>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“set3”</li>
<li>“age”</li>
<li>“l1”</li>
<li>“newSet”</li>
<li>“l2”</li>
<li>“set1”</li>
<li>“1”</li>
<li>“fruitList”</li>
<li>“set2”</li>
</ol>
<h3 id="查找所有以某字符串开头的key"><a href="#查找所有以某字符串开头的key" class="headerlink" title="查找所有以某字符串开头的key"></a><strong>查找所有以某字符串开头的key</strong></h3><p>keys f*</p>
<p>127.0.0.1:6379&gt; keys f*</p>
<ol>
<li>“fruitList”</li>
</ol>
<h3 id="重命名key"><a href="#重命名key" class="headerlink" title="重命名key"></a><strong>重命名key</strong></h3><p>rename key newName</p>
<p>127.0.0.1:6379&gt; rename list1 list2<br>OK</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>更多命令：<a href="https://www.runoob.com/redis/redis-keys.html">https://www.runoob.com/redis/redis-keys.html</a></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 哈希(Hash)</title>
    <url>/166.html</url>
    <content><![CDATA[<p>Redis hash 是一个 string 类型的 field（字段） 和 value（值） 的映射表，hash 特别适合用于存储对象。</p>
<p>Redis 中每个 hash 可以存储 232 - 1 键值对（40多亿）。</p>
<p>常用命令：</p>
<h3 id="hset单个字段设置"><a href="#hset单个字段设置" class="headerlink" title="hset单个字段设置"></a><strong>hset单个字段设置</strong></h3><p>127.0.0.1:6379&gt; hset h1 username root<br>(integer) 1<br>127.0.0.1:6379&gt; hset h1 password 123456<br>(integer) 1</p>
<h3 id="hget获取值"><a href="#hget获取值" class="headerlink" title="hget获取值"></a><strong>hget获取值</strong></h3><p>127.0.0.1:6379&gt; hget h1 username<br>“root”<br>127.0.0.1:6379&gt; hget h1 password<br>“123456”</p>
<h3 id="hmset-多个字段一起设置"><a href="#hmset-多个字段一起设置" class="headerlink" title="hmset 多个字段一起设置"></a><strong>hmset 多个字段一起设置</strong></h3><p>127.0.0.1:6379&gt; hmset h2 username ledao password 333<br>OK</p>
<h3 id="hmget获取多个字段"><a href="#hmget获取多个字段" class="headerlink" title="hmget获取多个字段"></a><strong>hmget获取多个字段</strong></h3><p>127.0.0.1:6379&gt; hmget h2 username password</p>
<ol>
<li>“ledao”</li>
<li>“333”</li>
</ol>
<h3 id="hgetall获取全部字段"><a href="#hgetall获取全部字段" class="headerlink" title="hgetall获取全部字段"></a><strong>hgetall获取全部字段</strong></h3><p>127.0.0.1:6379&gt; hgetall h2</p>
<ol>
<li>“username”</li>
<li>“ledao”</li>
<li>“password”</li>
<li>“333”</li>
</ol>
<h3 id="hdel删除属性"><a href="#hdel删除属性" class="headerlink" title="hdel删除属性"></a><strong>hdel删除属性</strong></h3><p>可以一次删除一个或者多个</p>
<p>127.0.0.1:6379&gt; hdel h2 username password<br>(integer) 2<br>127.0.0.1:6379&gt; hgetall h2<br>(empty list or set)</p>
<h3 id="hincrby增加数字"><a href="#hincrby增加数字" class="headerlink" title="hincrby增加数字"></a><strong>hincrby增加数字</strong></h3><p>127.0.0.1:6379&gt; hset h1 age 20<br>(integer) 1<br>127.0.0.1:6379&gt; hgetall h1</p>
<ol>
<li>“username”</li>
<li>“root”</li>
<li>“password”</li>
<li>“123456”</li>
<li>“age”</li>
<li>“20”</li>
</ol>
<p>127.0.0.1:6379&gt; hincrby h1 age 5<br>(integer) 25</p>
<h3 id="hexists判断字段是否存在-1表示存在-0表示不存在"><a href="#hexists判断字段是否存在-1表示存在-0表示不存在" class="headerlink" title="hexists判断字段是否存在 1表示存在 0表示不存在"></a><strong>hexists判断字段是否存在 1表示存在 0表示不存在</strong></h3><p>127.0.0.1:6379&gt; hexists h1 age<br>(integer) 1<br>127.0.0.1:6379&gt; hexists h1 age2<br>(integer) 0</p>
<h3 id="hlen获取hash属性个数"><a href="#hlen获取hash属性个数" class="headerlink" title="hlen获取hash属性个数"></a><strong>hlen获取hash属性个数</strong></h3><p>127.0.0.1:6379&gt; hlen h1<br>(integer) 3</p>
<h3 id="hkeys获取所有属性名称"><a href="#hkeys获取所有属性名称" class="headerlink" title="hkeys获取所有属性名称"></a><strong>hkeys获取所有属性名称</strong></h3><p>127.0.0.1:6379&gt; hkeys h1</p>
<ol>
<li>“username”</li>
<li>“password”</li>
<li>“age”</li>
</ol>
<h3 id="hvals获取所有属性值"><a href="#hvals获取所有属性值" class="headerlink" title="hvals获取所有属性值"></a><strong>hvals获取所有属性值</strong></h3><p>127.0.0.1:6379&gt; hvals h1</p>
<ol>
<li>“root”</li>
<li>“123456”</li>
<li>“25”</li>
</ol>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">&quot;192.168.0.153&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.auth(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        <span class="comment">//设置字段</span></span><br><span class="line">        jedis.hset(<span class="string">&quot;h1&quot;</span>, <span class="string">&quot;username&quot;</span>, <span class="string">&quot;root&quot;</span>);</span><br><span class="line">        jedis.hset(<span class="string">&quot;h1&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;用户名：&quot;</span> + jedis.hget(<span class="string">&quot;h1&quot;</span>, <span class="string">&quot;username&quot;</span>) + <span class="string">&quot;，密码：&quot;</span> + jedis.hget(<span class="string">&quot;h1&quot;</span>, <span class="string">&quot;password&quot;</span>));</span><br><span class="line">        <span class="comment">//获取全部字段</span></span><br><span class="line">        Map&lt;String, String&gt; map=jedis.hgetAll(<span class="string">&quot;h1&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; stringStringEntry : map.entrySet()) &#123;</span><br><span class="line">            System.out.println(stringStringEntry.getKey()+<span class="string">&quot;:&quot;</span>+stringStringEntry.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210620134006.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 列表(List)</title>
    <url>/167.html</url>
    <content><![CDATA[<p>常用命令:</p>
<h3 id="lpush-方式添加，从左边开始添加"><a href="#lpush-方式添加，从左边开始添加" class="headerlink" title="lpush 方式添加，从左边开始添加"></a><strong>lpush 方式添加，从左边开始添加</strong></h3><p>lpush key value1 value2…</p>
<p>127.0.0.1:6379&gt; lpush l1 a b c d<br>(integer) 4<br>127.0.0.1:6379&gt; lpush l1 1 2 3 4<br>(integer) 8</p>
<h3 id="lrange-获取指定方位的集合元素（end是-1时表示最后一个位置）"><a href="#lrange-获取指定方位的集合元素（end是-1时表示最后一个位置）" class="headerlink" title="lrange 获取指定方位的集合元素（end是-1时表示最后一个位置）"></a><strong>lrange 获取指定方位的集合元素</strong>（end是-1时表示最后一个位置）</h3><p>lrange key start end</p>
<p>127.0.0.1:6379&gt; lrange l1 0 -1</p>
<ol>
<li>“4”</li>
<li>“3”</li>
<li>“2”</li>
<li>“1”</li>
<li>“d”</li>
<li>“c”</li>
<li>“b”</li>
<li>“a”</li>
</ol>
<h3 id="rpush-从右端开始添加（一般人比较习惯这种方式）"><a href="#rpush-从右端开始添加（一般人比较习惯这种方式）" class="headerlink" title="rpush 从右端开始添加（一般人比较习惯这种方式）"></a><strong>rpush 从右端开始添加</strong>（一般人比较习惯这种方式）</h3><p>rpush key value1 value2…</p>
<p>127.0.0.1:6379&gt; rpush l2 a b c d<br>(integer) 4<br>127.0.0.1:6379&gt; rpush l2 1 2 3 4<br>(integer) 8<br>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“a”</li>
<li>“b”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
<li>“4”</li>
</ol>
<h3 id="lpop-左侧弹出集合元素，rpop-右侧弹出集合元素"><a href="#lpop-左侧弹出集合元素，rpop-右侧弹出集合元素" class="headerlink" title="lpop 左侧弹出集合元素，rpop 右侧弹出集合元素"></a><strong>lpop 左侧弹出集合元素，rpop 右侧弹出集合元素</strong></h3><p>lpop/rpop key</p>
<p>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“a”</li>
<li>“b”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
<li>“4”</li>
</ol>
<p>127.0.0.1:6379&gt; lpop l2<br>“a”<br>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
<li>“4”</li>
</ol>
<p>127.0.0.1:6379&gt; rpop l2<br>“4”<br>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
</ol>
<h3 id="llen查看元素个数"><a href="#llen查看元素个数" class="headerlink" title="llen查看元素个数"></a><strong>llen查看元素个数</strong></h3><p>llen key</p>
<p>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
</ol>
<p>127.0.0.1:6379&gt; llen l2<br>(integer) 6</p>
<h3 id="lset-设置集合指定索引的值"><a href="#lset-设置集合指定索引的值" class="headerlink" title="lset 设置集合指定索引的值"></a><strong>lset 设置集合指定索引的值</strong></h3><p>lset key index value</p>
<p>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
</ol>
<p>127.0.0.1:6379&gt; lset l2 0 b1<br>OK<br>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b1”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
</ol>
<h3 id="linsert-在集合里插入指定元素"><a href="#linsert-在集合里插入指定元素" class="headerlink" title="linsert 在集合里插入指定元素"></a><strong>linsert 在集合里插入指定元素</strong></h3><p>在某元素之前插入一个元素（在某元素之后插入一个元素只要将before修改为after即可）</p>
<p>linsert key before 某元素 插入的元素</p>
<p>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b1”</li>
<li>“c”</li>
<li>“d”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
</ol>
<p>127.0.0.1:6379&gt; linsert l2 before 1 0<br>(integer) 7<br>127.0.0.1:6379&gt; lrange l2 0 -1</p>
<ol>
<li>“b1”</li>
<li>“c”</li>
<li>“d”</li>
<li>“0”</li>
<li>“1”</li>
<li>“2”</li>
<li>“3”</li>
</ol>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis结合JSON存储Java对象</title>
    <url>/168.html</url>
    <content><![CDATA[<p>先将Java对象转化成json字符串，然后Redis存储json字符串</p>
<h3 id="引入gson依赖"><a href="#引入gson依赖" class="headerlink" title="引入gson依赖"></a><strong>引入gson依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用到的方法"><a href="#使用到的方法" class="headerlink" title="使用到的方法"></a><strong>使用到的方法</strong></h3><p>Jedis.rpop()：右侧弹出元素</p>
<p>Jedis.llen()：获取Redis的list长度</p>
<p>Jedis.rpush()：从右侧开始添加元素</p>
<p>Jedis.lrange()：获取全部元素集合</p>
<p>Gson.toJson()：Java对象转化成json</p>
<p>Gson.fromJson()：json转化成Java对象</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><p>Fruit实体类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 22:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer num;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(String name, Integer num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Fruit</span><span class="params">(Integer id, String name, Integer num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Fruit&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, num=&quot;</span> + num +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-20 7:47</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">&quot;192.168.0.153&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">        jedis.auth(<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">        Fruit fruit1 = <span class="keyword">new</span> Fruit(<span class="number">1</span>, <span class="string">&quot;苹果&quot;</span>, <span class="number">11</span>);</span><br><span class="line">        Fruit fruit2 = <span class="keyword">new</span> Fruit(<span class="number">2</span>, <span class="string">&quot;梨&quot;</span>, <span class="number">6</span>);</span><br><span class="line">        Fruit fruit3 = <span class="keyword">new</span> Fruit(<span class="number">3</span>, <span class="string">&quot;油桃&quot;</span>, <span class="number">8</span>);</span><br><span class="line">        List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        fruitList.add(fruit1);</span><br><span class="line">        fruitList.add(fruit2);</span><br><span class="line">        fruitList.add(fruit3);</span><br><span class="line">        <span class="comment">//转化成json，便于redis存储Java对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;转化成json：&quot;</span>);</span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">        <span class="keyword">for</span> (Fruit fruit : fruitList) &#123;</span><br><span class="line">            jedis.rpush(<span class="string">&quot;redisFruitList&quot;</span>, gson.toJson(fruit));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        List&lt;String&gt; redisFruitList = jedis.lrange(<span class="string">&quot;redisFruitList&quot;</span>, <span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (String s : redisFruitList) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Redis的list转化成Java对象</span></span><br><span class="line">        System.out.println(<span class="string">&quot;转化成Java对象：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; redisFruitList.size(); i++) &#123;</span><br><span class="line">            Fruit fruit = gson.fromJson(redisFruitList.get(i), Fruit.class);</span><br><span class="line">            System.out.println(fruit.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//清空redisFruitList</span></span><br><span class="line">        Long length = jedis.llen(<span class="string">&quot;redisFruitList&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">                jedis.rpop(<span class="string">&quot;redisFruitList&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//关闭连接</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621074556.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JSON</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 集合(Set)</title>
    <url>/169.html</url>
    <content><![CDATA[<p>Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据。</p>
<p>Redis 中集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。</p>
<p>集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。</p>
<p>常用命令：</p>
<h3 id="添加set元素（添加一个或多个）"><a href="#添加set元素（添加一个或多个）" class="headerlink" title="添加set元素（添加一个或多个）"></a><strong>添加set元素</strong>（添加一个或多个）</h3><p>sadd key member1 member2…</p>
<p>127.0.0.1:6379&gt; sadd set1 a b c a<br>(integer) 3</p>
<h3 id="查看指定key集合元素"><a href="#查看指定key集合元素" class="headerlink" title="查看指定key集合元素"></a><strong>查看指定key集合元素</strong></h3><p>smembers key</p>
<p>127.0.0.1:6379&gt; smembers set1</p>
<ol>
<li>“b”</li>
<li>“a”</li>
<li>“c”</li>
</ol>
<h3 id="删除元素（删除一个或多个元素）"><a href="#删除元素（删除一个或多个元素）" class="headerlink" title="删除元素（删除一个或多个元素）"></a><strong>删除元素</strong>（删除一个或多个元素）</h3><p>srem key member1 member2…</p>
<p>127.0.0.1:6379&gt; smembers set1</p>
<ol>
<li>“1”</li>
<li>“c”</li>
<li>“a”</li>
<li>“b”</li>
<li>“3”</li>
<li>“2”</li>
</ol>
<p>127.0.0.1:6379&gt; srem set1 a 1<br>(integer) 2<br>127.0.0.1:6379&gt; smembers set1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“3”</li>
<li>“2”</li>
</ol>
<h3 id="判断某个元素是否存在（返回1表示存在，返回0表示不存在）"><a href="#判断某个元素是否存在（返回1表示存在，返回0表示不存在）" class="headerlink" title="判断某个元素是否存在（返回1表示存在，返回0表示不存在）"></a><strong>判断某个元素是否存在</strong>（返回1表示存在，返回0表示不存在）</h3><p>sismembers key member</p>
<p>127.0.0.1:6379&gt; smembers set1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“3”</li>
<li>“2”</li>
</ol>
<p>127.0.0.1:6379&gt; sismember set1 a<br>(integer) 0<br>127.0.0.1:6379&gt; sismember set1 2<br>(integer) 1</p>
<h3 id="计算两个集合的差集（key1去掉key1和key2的交集元素，key1和key2的位置交换会得到不同的结果）"><a href="#计算两个集合的差集（key1去掉key1和key2的交集元素，key1和key2的位置交换会得到不同的结果）" class="headerlink" title="计算两个集合的差集（key1去掉key1和key2的交集元素，key1和key2的位置交换会得到不同的结果）"></a><strong>计算两个集合的差集</strong>（key1去掉key1和key2的交集元素，key1和key2的位置交换会得到不同的结果）</h3><p>sdiff key1 key2</p>
<p>127.0.0.1:6379&gt; sadd set2 a b c<br>(integer) 3<br>127.0.0.1:6379&gt; sadd set3 b c d e<br>(integer) 4<br>127.0.0.1:6379&gt; sdiff set2 set3</p>
<ol>
<li>“a”</li>
</ol>
<p>127.0.0.1:6379&gt; sdiff set3 set2</p>
<ol>
<li>“d”</li>
<li>“e”</li>
</ol>
<h3 id="计算两个集合的交集"><a href="#计算两个集合的交集" class="headerlink" title="计算两个集合的交集"></a><strong>计算两个集合的交集</strong></h3><p>sinter key1 key2</p>
<p>127.0.0.1:6379&gt; sinter set2 set3</p>
<ol>
<li>“b”</li>
<li>“c”</li>
</ol>
<h3 id="计算两个集合的并集"><a href="#计算两个集合的并集" class="headerlink" title="计算两个集合的并集"></a><strong>计算两个集合的并集</strong></h3><p>sunion key1 key2</p>
<p>127.0.0.1:6379&gt; sunion set2 set3</p>
<ol>
<li>“b”</li>
<li>“a”</li>
<li>“c”</li>
<li>“e”</li>
<li>“d”</li>
</ol>
<h3 id="计算元素总数"><a href="#计算元素总数" class="headerlink" title="计算元素总数"></a><strong>计算元素总数</strong></h3><p>scard key</p>
<p>127.0.0.1:6379&gt; smembers set1</p>
<ol>
<li>“b”</li>
<li>“c”</li>
<li>“3”</li>
<li>“2”</li>
</ol>
<p>127.0.0.1:6379&gt; scard set1<br>(integer) 4</p>
<h3 id="随机取一个元素（count为空或者是1时，只随机选一个元素）"><a href="#随机取一个元素（count为空或者是1时，只随机选一个元素）" class="headerlink" title="随机取一个元素（count为空或者是1时，只随机选一个元素）"></a><strong>随机取一个元素</strong>（count为空或者是1时，只随机选一个元素）</h3><p>scard key count</p>
<p>127.0.0.1:6379&gt; srandmember set1<br>“3”<br>127.0.0.1:6379&gt; srandmember set1<br>“b”<br>127.0.0.1:6379&gt; srandmember set1 2</p>
<ol>
<li>“b”</li>
<li>“3”</li>
</ol>
<p>127.0.0.1:6379&gt; srandmember set1 2</p>
<ol>
<li>“3”</li>
<li>“2”</li>
</ol>
<h3 id="把差集结果存储到新集合中"><a href="#把差集结果存储到新集合中" class="headerlink" title="把差集结果存储到新集合中"></a><strong>把差集结果存储到新集合中</strong></h3><p>sdiffstore newKey key1 key2</p>
<p>127.0.0.1:6379&gt; smembers set2</p>
<ol>
<li>“b”</li>
<li>“a”</li>
<li>“c”</li>
</ol>
<p>127.0.0.1:6379&gt; smembers set3</p>
<ol>
<li>“d”</li>
<li>“b”</li>
<li>“e”</li>
<li>“c”</li>
</ol>
<p>127.0.0.1:6379&gt; sdiffstore newSet set2 set3<br>(integer) 1<br>127.0.0.1:6379&gt; smembers newSet</p>
<ol>
<li>“a”</li>
</ol>
<h3 id="把交集结果存储到新集合中"><a href="#把交集结果存储到新集合中" class="headerlink" title="把交集结果存储到新集合中"></a><strong>把交集结果存储到新集合中</strong></h3><p>sinterstore newKey key1 key2</p>
<p>127.0.0.1:6379&gt; smembers set2</p>
<ol>
<li>“b”</li>
<li>“a”</li>
<li>“c”</li>
</ol>
<p>127.0.0.1:6379&gt; smembers set3</p>
<ol>
<li>“d”</li>
<li>“b”</li>
<li>“e”</li>
<li>“c”</li>
</ol>
<p>127.0.0.1:6379&gt; sinterstore newSet set2 set3<br>(integer) 2<br>127.0.0.1:6379&gt; smembers newSet</p>
<ol>
<li>“b”</li>
<li>“c”</li>
</ol>
<h3 id="把并集结果存储到新集合中"><a href="#把并集结果存储到新集合中" class="headerlink" title="把并集结果存储到新集合中"></a><strong>把并集结果存储到新集合中</strong></h3><p>sunionstore newKey key1 key2</p>
<p>127.0.0.1:6379&gt; smembers set2</p>
<ol>
<li>“b”</li>
<li>“a”</li>
<li>“c”</li>
</ol>
<p>127.0.0.1:6379&gt; smembers set3</p>
<ol>
<li>“d”</li>
<li>“b”</li>
<li>“e”</li>
<li>“c”</li>
</ol>
<p>127.0.0.1:6379&gt; sunionstore newSet set2 set3<br>(integer) 5<br>127.0.0.1:6379&gt; smembers newSet</p>
<ol>
<li>“b”</li>
<li>“a”</li>
<li>“c”</li>
<li>“e”</li>
<li>“d”</li>
</ol>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云设置二级域名</title>
    <url>/17.html</url>
    <content><![CDATA[<h3 id="进入控制台"><a href="#进入控制台" class="headerlink" title="进入控制台"></a><strong>进入控制台</strong></h3><p>在阿里云官网登录后，点击右上角的控制台</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011182614.jpg" alt="img"></p>
<h3 id="进入域名管理界面"><a href="#进入域名管理界面" class="headerlink" title="进入域名管理界面"></a><strong>进入域名管理界面</strong></h3><p>点击左侧菜单的域名</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011182732.jpg" alt="img"></p>
<h3 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名"></a><strong>解析域名</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011182912.jpg" alt="img"></p>
<p>点击添加记录（主机记录为我们二级域名所要设置的名称，记录值为阿里云本机的id，其它的值根据图片设置即可）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201011183047.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 有序集合(sorted set)</title>
    <url>/170.html</url>
    <content><![CDATA[<p>Redis 有序集合和集合一样也是 string 类型元素的集合,且不允许重复的成员。</p>
<p>不同的是每个元素都会关联一个 double 类型的分数。redis 正是通过分数来为集合中的成员进行从小到大的排序。</p>
<p>有序集合的成员是唯一的,但分数(score)却可以重复。</p>
<p>集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是 O(1)。 集合中最大的成员数为 232 - 1 (4294967295, 每个集合可存储40多亿个成员)。</p>
<p>常用命令</p>
<h3 id="添加元素（里面包括年龄和名称，根据数值从小到大排列，如果继续添加元素：①值已存在，则数值覆盖②值不存在，就会添加进去）"><a href="#添加元素（里面包括年龄和名称，根据数值从小到大排列，如果继续添加元素：①值已存在，则数值覆盖②值不存在，就会添加进去）" class="headerlink" title="添加元素（里面包括年龄和名称，根据数值从小到大排列，如果继续添加元素：①值已存在，则数值覆盖②值不存在，就会添加进去）"></a><strong>添加元素</strong>（里面包括年龄和名称，根据数值从小到大排列，如果继续添加元素：①值已存在，则数值覆盖②值不存在，就会添加进去）</h3><p>zadd key 数值1 值1 数值2 值2…</p>
<p>127.0.0.1:6379&gt; zadd age 11 tom 8 jack 22 mary<br>(integer) 3</p>
<h3 id="查找元素（-1代表是最后一个）"><a href="#查找元素（-1代表是最后一个）" class="headerlink" title="查找元素（-1代表是最后一个）"></a><strong>查找元素</strong>（-1代表是最后一个）</h3><p>zrange key start end</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1</p>
<ol>
<li>“jack”</li>
<li>“tom”</li>
<li>“mary”</li>
</ol>
<h3 id="把数值也显示出来"><a href="#把数值也显示出来" class="headerlink" title="把数值也显示出来"></a><strong>把数值也显示出来</strong></h3><p>zrange key 0 -1 withscores</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<h3 id="降序排列"><a href="#降序排列" class="headerlink" title="降序排列"></a><strong>降序排列</strong></h3><p>zrevrange key start end withscores</p>
<p>127.0.0.1:6379&gt; zrevrange age 0 -1 withscores</p>
<ol>
<li>“mary”</li>
<li>“22”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“jack”</li>
<li>“8”</li>
</ol>
<h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a><strong>删除元素</strong></h3><p>127.0.0.1:6379&gt; zrange age 0 -1</p>
<ol>
<li>“sherry”</li>
<li>“jack”</li>
<li>“tom”</li>
<li>“mary”</li>
</ol>
<p>127.0.0.1:6379&gt; zrem age sherry<br>(integer) 1<br>127.0.0.1:6379&gt; zrange age 0 -1</p>
<ol>
<li>“jack”</li>
<li>“tom”</li>
<li>“mary”</li>
</ol>
<h3 id="查看集合里的元素个数"><a href="#查看集合里的元素个数" class="headerlink" title="查看集合里的元素个数"></a><strong>查看集合里的元素个数</strong></h3><p>zcard key</p>
<p>127.0.0.1:6379&gt; zcard age<br>(integer) 3</p>
<h3 id="根据排名来删除元素"><a href="#根据排名来删除元素" class="headerlink" title="根据排名来删除元素"></a><strong>根据排名来删除元素</strong></h3><p>zremrangebyrank key start end</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“aa”</li>
<li>“1”</li>
<li>“bb”</li>
<li>“2”</li>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<p>127.0.0.1:6379&gt; zremrangebyrank age 0 1<br>(integer) 2<br>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<h3 id="根据数值范围来删除元素"><a href="#根据数值范围来删除元素" class="headerlink" title="根据数值范围来删除元素"></a><strong>根据数值范围来删除元素</strong></h3><p>zremrangebyscore key min max</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“aa”</li>
<li>“1”</li>
<li>“bb”</li>
<li>“2”</li>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<p>127.0.0.1:6379&gt; zremrangebyscore age 0 4<br>(integer) 2<br>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<h3 id="根据评分范围来查找元素"><a href="#根据评分范围来查找元素" class="headerlink" title="根据评分范围来查找元素"></a><strong>根据评分范围来查找元素</strong></h3><p>zrangebyscore key min max withscores</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<p>127.0.0.1:6379&gt; zrangebyscore age 8 11 withscores</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
</ol>
<h3 id="限定查找起始（类似分页）"><a href="#限定查找起始（类似分页）" class="headerlink" title="限定查找起始（类似分页）"></a><strong>限定查找起始</strong>（类似分页）</h3><p>127.0.0.1:6379&gt; zrangebyscore age 0 100 withscores limit 0 2</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
</ol>
<h3 id="给指定元素加分"><a href="#给指定元素加分" class="headerlink" title="给指定元素加分"></a><strong>给指定元素加分</strong></h3><p>zincrby key 数值 值</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“8”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<p>127.0.0.1:6379&gt; zincrby age 2 jack<br>“10”<br>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“10”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<h3 id="查找指定数值范围的元素个数"><a href="#查找指定数值范围的元素个数" class="headerlink" title="查找指定数值范围的元素个数"></a><strong>查找指定数值范围的元素个数</strong></h3><p>zcount key min max</p>
<p>127.0.0.1:6379&gt; zrange age 0 -1 withscores</p>
<ol>
<li>“jack”</li>
<li>“10”</li>
<li>“tom”</li>
<li>“11”</li>
<li>“mary”</li>
<li>“22”</li>
</ol>
<p>127.0.0.1:6379&gt; zcount age 9 10<br>(integer) 1</p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Log4j</title>
    <url>/171.html</url>
    <content><![CDATA[<h3 id="创建一个maven项目"><a href="#创建一个maven项目" class="headerlink" title="创建一个maven项目"></a><strong>创建一个maven项目</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621124444.jpg" alt="img"></p>
<h3 id="引入Log4j依赖"><a href="#引入Log4j依赖" class="headerlink" title="引入Log4j依赖"></a><strong>引入Log4j依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="新建一个log4j-properties文件"><a href="#新建一个log4j-properties文件" class="headerlink" title="新建一个log4j.properties文件"></a><strong>新建一个log4j.properties文件</strong></h3><p>文件存放位置：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621124219.jpg" alt="img"></p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(Test.class);</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        logger.info(<span class="string">&quot;调试信息&quot;</span>);</span><br><span class="line">        logger.error(<span class="string">&quot;错误信息&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621124230.jpg" alt="img"></p>
<p>E盘下也有一个myLog.log文件</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621124239.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>图片压缩</title>
    <url>/172.html</url>
    <content><![CDATA[<h3 id="为什么要图片压缩？"><a href="#为什么要图片压缩？" class="headerlink" title="为什么要图片压缩？"></a>为什么要图片压缩？</h3><p>使用更少的带宽，可以加快网站加载速度</p>
<h3 id="tinypng"><a href="#tinypng" class="headerlink" title="tinypng"></a>tinypng</h3><h4 id="网站地址"><a href="#网站地址" class="headerlink" title="网站地址"></a>网站地址</h4><p><a href="https://tinypng.com/">https://tinypng.com/</a></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>点击虚线框可以选择要压缩的图片，或将图片（最多20张）拖到虚线框</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621130101.jpg" alt="img"></p>
<p>压缩成功，点击下载按钮即可下载到本地</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621130113.jpg" alt="img"></p>
<h3 id="squoosh"><a href="#squoosh" class="headerlink" title="squoosh"></a>squoosh</h3><h4 id="网站地址-1"><a href="#网站地址-1" class="headerlink" title="网站地址"></a>网站地址</h4><p><a href="https://squoosh.app/">https://squoosh.app/</a> ，可以安装到电脑上，下载地址：<a href="https://squoosh-desktop.vercel.app/#download">https://squoosh-desktop.vercel.app/#download</a></p>
<h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>上传图片后会自动压缩，点击下载按钮即可下载到本地</p>
<h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p>squoosh更加方便，squoosh压缩后下载的是图片，tinypng下载的是图片的压缩包还要解压一下；squoosh还可以安装到电脑上，不需要打开浏览器</p>
<p>对压缩的效率和质量我并不关心，所以不进行研究</p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>安装SSL证书</title>
    <url>/173.html</url>
    <content><![CDATA[<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a><strong>环境</strong></h3><p>阿里云服务器、CentOS7系统、Tomcat9</p>
<h3 id="申请免费证书"><a href="#申请免费证书" class="headerlink" title="申请免费证书"></a><strong>申请免费证书</strong></h3><p>阿里云可申请一年的免费证书</p>
<p>申请证书教程：<a href="https://help.aliyun.com/document_detail/98574.html?spm=a2c4g.11186623.6.600.1a2d7597CYqniO">https://help.aliyun.com/document_detail/98574.html?spm=a2c4g.11186623.6.600.1a2d7597CYqniO</a></p>
<h3 id="安装SSL证书前提条件"><a href="#安装SSL证书前提条件" class="headerlink" title="安装SSL证书前提条件"></a><strong>安装SSL证书前提条件</strong></h3><p>已从阿里云SSL证书服务控制台下载Tomcat服务器证书（包含PFX格式证书文件和TXT格式密码文件）。</p>
<p>申请SSL证书时绑定的域名已完成DNS解析、实现了该域名指向您Tomcat服务器的IP地址。</p>
<p>域名解析设置完成后执行ping <a href="http://www.yourdomain.com/">www.yourdomain.com</a> 命令，如果返回了您所设置解析的主机IP地址，说明解析成功。</p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h3><p>1、解压Tomcat证书</p>
<p>每次下载证书都会产生新的密码，该密码仅匹配本次下载的证书。如果需要更新证书文件，同时也要更新匹配的密码。</p>
<p>2、将下载的证书和密码文件拷贝到Tomcat的conf目录下</p>
<p>3、打开Tomcat/conf/server.xml，在server.xml文件中找到以下参数并进行修改</p>
<p>①将Connector port修改为80，将redirectPort修改为SSL默认端口443，让HTTPS请求转发到443端口</p>
<p>修改前：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改后：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;80&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>②将下面代码复制到server.xml中，certificateKeystoreFile代表证书文件的路径，certificateKeystorePassword为SSL证书的密码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;443&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span> <span class="attr">maxThreads</span>=<span class="string">&quot;150&quot;</span> <span class="attr">SSLEnabled</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">SSLHostConfig</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">Certificate</span>  <span class="attr">certificateKeystoreFile</span>=<span class="string">&quot;/home/tomcat9/apache-tomcat-9.0.46/conf/证书名称&quot;</span></span></span><br><span class="line"><span class="tag">		 <span class="attr">certificateKeystorePassword</span>=<span class="string">&quot;证书密码&quot;</span></span></span><br><span class="line"><span class="tag">		 <span class="attr">certificateKeystoreType</span>=<span class="string">&quot;PKCS12&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">SSLHostConfig</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Connector</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>③找到下面代码并修改</p>
<p>修改前：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8009&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;AJP/1.3&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改后：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">protocol</span>=<span class="string">&quot;AJP/1.3&quot;</span> <span class="attr">port</span>=<span class="string">&quot;8009&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;443&quot;</span> <span class="attr">secretRequired</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>④在web.xml文件最底部添加以下内容，实现HTTP自动跳转为HTTPS</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">web-resource-name</span>&gt;</span>SSL<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">user-data-constraint</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">transport-guarantee</span>&gt;</span>CONFIDENTIAL<span class="tag">&lt;/<span class="name">transport-guarantee</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">user-data-constraint</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>4、保存server.xml，重启Tomcat</p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p>出现锁图标和https说明SSL证书已经安装成功</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210621213545.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis持久化</title>
    <url>/174.html</url>
    <content><![CDATA[<p>持久化是将程序数据在持久状态和瞬时状态间转换的机制。通俗的讲，就是瞬时数据（比如内存中的数据，是不能永久保存的）持久化为持久数据（比如持久化至数据库中，能够长久保存）</p>
<p>持久化操作有两种方式：rdb方式、aof方式，可以单独使用或者结合使用</p>
<p>rdb方式：在指定的时间间隔写入硬盘</p>
<p>aof方式：将以日志，记录每一个操作，服务器启动后就构建数据库</p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis的持久化之RDB方式</title>
    <url>/175.html</url>
    <content><![CDATA[<p>RDB方式，Redis是默认支持的</p>
<p>优势：只有一个文件，时间间隔的数据，可以归档为一个文件，方便压缩转移（就一个文件）</p>
<p>劣势：如果宕机，数据损失比较大，因为它是没一个时间段进行持久化操作的。也就是积攒的数据比较多，一旦懵逼，就彻底懵逼了</p>
<h3 id="查看Redis配置"><a href="#查看Redis配置" class="headerlink" title="查看Redis配置"></a><strong>查看Redis配置</strong></h3><p>[root@localhost ~]# cd /usr/local/redis/<br>[root@localhost redis]# vi redis.conf</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622005939.jpg" alt="img"></p>
<p>save 900 1 表示 每900秒内至少有1个key发生变化，就持久化</p>
<p>save 300 10表示 每300秒内至少有10个key发生变化，就持久化</p>
<p>save 60 10000表示 每60秒内至少有10000个key发生变化，就持久化</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622005950.jpg" alt="img"></p>
<p>dbfilename配置是保存的持久化的文件名，默认是dump.rdb</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622010021.jpg" alt="img"></p>
<p>dir ./ 表示文件存储路径是当前路径</p>
<h3 id="查看当前路径的文件"><a href="#查看当前路径的文件" class="headerlink" title="查看当前路径的文件"></a><strong>查看当前路径的文件</strong></h3><p>[root@localhost redis]# ll</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622010034.jpg" alt="img"></p>
<p>当前路径里确实是有dump.rdb这个文件的</p>
<h3 id="备份和恢复数据"><a href="#备份和恢复数据" class="headerlink" title="备份和恢复数据"></a><strong>备份和恢复数据</strong></h3><p>①备份数据</p>
<p>删除已存在的备份文件</p>
<p>[root@localhost redis]# ls<br>bin  dump.rdb  redis.conf<br>[root@localhost redis]# rm dump.rdb<br>rm：是否删除普通文件 “dump.rdb”？y<br>[root@localhost redis]# ls<br>bin  redis.conf</p>
<p>打开Redis服务</p>
<p>[root@localhost redis]# ./bin/redis-server ./redis.conf</p>
<p>进入Redis客户端</p>
<p>[root@localhost redis]# ./bin/redis-cli </p>
<p>查看所有key（此时是没有数据的）</p>
<p>127.0.0.1:6379&gt; keys *<br>(empty list or set)</p>
<p>创建几个key</p>
<p>127.0.0.1:6379&gt; set a1 1<br>OK<br>127.0.0.1:6379&gt; set a2 2<br>OK<br>127.0.0.1:6379&gt; set a3 3<br>OK<br>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“a3”</li>
<li>“a2”</li>
<li>“a1”</li>
</ol>
<p>保存并关闭Redis（当前路径下多了一个备份文件dump.rdb）</p>
<p>127.0.0.1:6379&gt; shutdown save<br>not connected&gt; exit<br>[root@localhost redis]# ls<br>bin  dump.rdb  redis.conf</p>
<p>②恢复数据</p>
<p>再次打开Redis服务，查看所有key，发现有数据（说明是数据加载进来了，Redis服务启动时会自动加载备份文件）</p>
<p>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“a2”</li>
<li>“a3”</li>
<li>“a1”</li>
</ol>
<p>再次关闭Redis服务，将备份文件dump.rdb剪切到其它目录，然后启动Redis服务，查看所有key，发现是没有数据的（由于备份文件已经剪切到其它目录了，所以启动Redis服务时无法自动加载备份数据，查看所有key没有数据）</p>
<p>[root@localhost redis]# /usr/local/redis/bin/redis-cli shutdown<br>[root@localhost redis]# ls<br>bin  dump.rdb  redis.conf<br>[root@localhost redis]# mv dump.rdb /home/data/<br>[root@localhost redis]# ls<br>bin  redis.conf<br>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *<br>(empty list or set)</p>
<p>然后我们将之前剪切到其它目录的备份文件复制到Redis备份文件指定目录中，将新创建的备份文件（关闭Redis服务时自动创建）覆盖掉，启动Redis服务后又有数据了（Redis会在启动时加载备份文件）</p>
<p>[root@localhost redis]# cp /home/data/dump.rdb /usr/local/redis/<br>cp：是否覆盖”/usr/local/redis/dump.rdb”？ y<br>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“a1”</li>
<li>“a3”</li>
<li>“a2”</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>Redis服务在启动时自动加载备份文件，平时我们可以定期把rdb文件备份到指定地方，需要恢复的时候，直接把rdb搞到redis备份文件指定目录/usr/local/redis下即可</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/323.html">Redis的持久化之RDB方式_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis的持久化之AOF方式</title>
    <url>/176.html</url>
    <content><![CDATA[<p>AOF方式：将以日志，记录每一个操作</p>
<p>优势：安全性相对RDB方式高很多</p>
<p>劣势：效率相对RDB方式低很多</p>
<h3 id="查看和修改配置"><a href="#查看和修改配置" class="headerlink" title="查看和修改配置"></a><strong>查看和修改配置</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622023030.jpg" alt="img"></p>
<p>appendonly no默认关闭aof方式，我们修改成 yes 就开启</p>
<p>下面那个是默认的aof文件名</p>
<p>接下来找到</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622023041.jpg" alt="img"></p>
<p>这里是三种同步策略：</p>
<p>always是只要发生修改，立即同步（推荐使用，安全性最高）</p>
<p>everysec是每秒同步一次</p>
<p>no是不同步 </p>
<p>我们修改成always</p>
<p>保存并退出</p>
<h3 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a><strong>备份数据</strong></h3><p>启动Redis服务，增加几个key，退出客户端，查看当前目录，发现多了一个备份文件appendonly.aof</p>
<p>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ps -ef | grep -i redis<br>root    1754    1  0 02:04 ?     00:00:00 ./bin/redis-server *:6379<br>root    1758  1498  0 02:04 pts/0   00:00:00 grep –color=auto -i redis<br>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *<br>(empty list or set)<br>127.0.0.1:6379&gt; set a 1<br>OK<br>127.0.0.1:6379&gt; set b 2<br>OK<br>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“a”</li>
<li>“b”</li>
</ol>
<p>127.0.0.1:6379&gt; exit<br>[root@localhost redis]# ps -ef | grep -i redis<br>root    1754    1  0 02:04 ?     00:00:00 ./bin/redis-server *:6379<br>root    1761  1498  0 02:05 pts/0   00:00:00 grep –color=auto -i redis<br>[root@localhost redis]# ll<br>总用量 52<br>-rw-r–r–. 1 root root   77 6月  22 02:04 appendonly.aof<br>drwxr-xr-x. 2 root root  134 6月  20 00:37 bin<br>-rw-r–r–. 1 root root 46698 6月  22 02:02 redis.conf</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210622023055.jpg" alt="img"></p>
<p>退出Redis服务，用shutdown nosave命令关闭Redis就不会创建dump.rdb备份文件</p>
<p>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“a”</li>
<li>“b”</li>
</ol>
<p>127.0.0.1:6379&gt; shutdown nosave<br>not connected&gt; exit<br>[root@localhost redis]# ll<br>总用量 52<br>-rw-r–r–. 1 root root   77 6月  22 02:04 appendonly.aof<br>drwxr-xr-x. 2 root root  134 6月  20 00:37 bin<br>-rw-r–r–. 1 root root 46698 6月  22 02:02 redis.conf</p>
<h3 id="恢复数据"><a href="#恢复数据" class="headerlink" title="恢复数据"></a><strong>恢复数据</strong></h3><p>将appendonly.aof剪切到其它目录，重启Redis服务，查看所有key，发现没有数据</p>
<p>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *<br>(empty list or set)</p>
<p>退出Redis服务（shutdown nosave命令），将剪切到其它目录的appendonly.aof重新复制到备份文件指定目录/usr/local/redis，重启Redis服务，查看所有key，发现有数据</p>
<p>127.0.0.1:6379&gt; shutdown nosave<br>not connected&gt; exit<br>[root@localhost redis]# cp /home/data/appendonly.aof /usr/local/redis/<br>cp：是否覆盖”/usr/local/redis/appendonly.aof”？ y<br>[root@localhost redis]# ./bin/redis-server ./redis.conf<br>[root@localhost redis]# ./bin/redis-cli<br>127.0.0.1:6379&gt; keys *</p>
<ol>
<li>“b”</li>
<li>“a”</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>我们平时可以把aof文件定期备份，然后需要的时候拷贝到redis下，重启即可</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://blog.java1234.com/blog/articles/324.html">Redis的持久化之AOF方式_Java开源博客系统-Powered by java1234</a></p>]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven出现错误：Plugin &#39;org.springframework.boot:spring-boot-maven-plugin:&#39; not found</title>
    <url>/177.html</url>
    <content><![CDATA[<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a><strong>解决办法</strong></h3><p>给spring-boot-maven-plugin指定版本</p>
<h3 id="修改前"><a href="#修改前" class="headerlink" title="修改前"></a><strong>修改前</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a><strong>修改后</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>a标签实现文件下载</title>
    <url>/178.html</url>
    <content><![CDATA[<h3 id="通过纯前端技术实现文件下载，直接把a标签的href属性设置为文件路径即可"><a href="#通过纯前端技术实现文件下载，直接把a标签的href属性设置为文件路径即可" class="headerlink" title="通过纯前端技术实现文件下载，直接把a标签的href属性设置为文件路径即可"></a><strong>通过纯前端技术实现文件下载，直接把a标签的href属性设置为文件路径即可</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.zoutl.cn/fileDownload/nhdogjmejiglipccpnnnanhbledajbpd.zip&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;下载&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;下载&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="对于-txt-jpg-pdf-等浏览器支持直接打开的文件不会被执行下载，而是会直接打开，这时候使用download属性（为空时使用文件本来的名称，不为空时使用download的值）"><a href="#对于-txt-jpg-pdf-等浏览器支持直接打开的文件不会被执行下载，而是会直接打开，这时候使用download属性（为空时使用文件本来的名称，不为空时使用download的值）" class="headerlink" title="对于 txt , jpg , pdf 等浏览器支持直接打开的文件不会被执行下载，而是会直接打开，这时候使用download属性（为空时使用文件本来的名称，不为空时使用download的值）"></a><strong>对于 txt , jpg , pdf 等浏览器支持直接打开的文件不会被执行下载，而是会直接打开，这时候使用download属性（为空时使用文件本来的名称，不为空时使用download的值）</strong></h3><p>①为空（下载名为vue.js的文件）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">download</span>=<span class="string">&quot;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.zoutl.cn/fileDownload/vue.js&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;下载&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>②不为空（下载名为vue3.js的文件）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">download</span>=<span class="string">&quot;vue3.js&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.zoutl.cn/fileDownload/vue.js&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;下载&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210623171915.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/hcxy/p/6964958.html">a标签实现文件下载 - 亲爱的混蛋 - 博客园</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Java单元测试</title>
    <url>/179.html</url>
    <content><![CDATA[<h3 id="引入junit依赖"><a href="#引入junit依赖" class="headerlink" title="引入junit依赖"></a><strong>引入junit依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="创建一个测试专用的文件夹（在src文件夹下创建）"><a href="#创建一个测试专用的文件夹（在src文件夹下创建）" class="headerlink" title="创建一个测试专用的文件夹（在src文件夹下创建）"></a><strong>创建一个测试专用的文件夹</strong>（在src文件夹下创建）</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624041537.jpg" alt="img"></p>
<h3 id="常用注解介绍"><a href="#常用注解介绍" class="headerlink" title="常用注解介绍"></a><strong>常用注解介绍</strong></h3><p>@Test：把一个方法标记为测试方法</p>
<p>@Before：每一个测试方法执行前自动调用一次</p>
<p>@After：每一个测试方法执行完自动调用一次</p>
<p>@BeforeClass：所有测试方法执行前执行一次，在测试类还没有实例化就已经被加载，所以用static修饰</p>
<p>@AfterClass：所有测试方法执行完执行一次，在测试类还没有实例化就已经被加载，所以用static修饰</p>
<p>@Ignore：暂不执行该测试方法</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> jdk.nashorn.internal.ir.annotations.Ignore;</span><br><span class="line"><span class="keyword">import</span> org.junit.*;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-24 2:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BeforeClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;开始所有单元测试&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@AfterClass</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">endAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;所有单元测试结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">start</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;**********&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;开始单元测试&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">end</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;单元测试结束&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;----------&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Ignore</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ignoreMe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;忽略我&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;单元测试1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;单元测试2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624041328.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>注释</title>
    <url>/18.html</url>
    <content><![CDATA[<h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a><strong>单行注释</strong></h3><p>格式： //注释文字</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201013120335.jpg" alt="img"></p>
<h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a><strong>多行注释</strong></h3><p>格式： /* 注释文字 */</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201013120418.jpg" alt="img"></p>
<h3 id="文档注释"><a href="#文档注释" class="headerlink" title="文档注释"></a><strong>文档注释</strong></h3><p>格式：/** 注释文字 */</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201013120220.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>1、对于单行和多行注释，被注释的文字，不会被JVM（Java虚拟机）解释执行。所以，即使添加再多的注释，编译后生成的class文件占用硬盘字节多少不变。</p>
<p>2、对于文档注释，是Java特有的注释，其中注释内容可以被JDK提供的工具Javadoc所解析，生成一套以网页文件形式体现的该程序的说明文档。</p>
<p>3、注释是一个程序员必须要具有的良好编程习惯。初学者编写程序必须养成习惯：先写注释再写代码。</p>
<p>4、将自己的思想通过注释先整理出来，再用代码去体现，因为代码仅仅是思想的一种体现形式而已。</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>创建第一个Vue应用</title>
    <url>/180.html</url>
    <content><![CDATA[<h3 id="引入Vue-js"><a href="#引入Vue-js" class="headerlink" title="引入Vue.js"></a><strong>引入Vue.js</strong></h3><p>①下载js文件后引入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>②使用CDN方法</p>
<p>开发环境版本</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>生产环境版本</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产环境版本，优化了尺寸和速度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;flag?&#x27;color:blue&#x27;:&#x27;color:red&#x27;&quot;</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;message&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;modifyColor&quot;</span>&gt;</span>改变p的颜色<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app1&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!!&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">flag</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">modifyColor</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.flag) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.flag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.flag = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p>改变输入框内容，上面的文本也随之改变，点击按钮文本的颜色由蓝色和红色来回变换</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624232437.jpg" alt="img"></p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a><strong>小结</strong></h3><p>data 用于定义属性</p>
<p>methods 用于定义的函数，可以通过 return 来返回函数值</p>
<p>{ { } } 于输出对象属性和函数返回值</p>
<p>el 用于绑定某个id的标签</p>
<p>v-on:click 触发某个点击事件</p>
<p>v-model 动态绑定某个属性的值</p>
<p>v-bind 用于绑定HTML属性</p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot项目添加webapp目录</title>
    <url>/181.html</url>
    <content><![CDATA[<h3 id="打开Project-Structure"><a href="#打开Project-Structure" class="headerlink" title="打开Project Structure"></a><strong>打开Project Structure</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624111108.jpg" alt="img"></strong></p>
<span id="more"></span>

<h3 id="添加Web服务"><a href="#添加Web服务" class="headerlink" title="添加Web服务"></a><strong>添加Web服务</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624111123.jpg" alt="img"></strong></p>
<h3 id="添加web-xml文件"><a href="#添加web-xml文件" class="headerlink" title="添加web.xml文件"></a><strong>添加web.xml文件</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624111135.jpg" alt="img"></strong></p>
<h3 id="选择web-xml的文件路径，然后连续点击OK键即可成功添加webapp目录"><a href="#选择web-xml的文件路径，然后连续点击OK键即可成功添加webapp目录" class="headerlink" title="选择web.xml的文件路径，然后连续点击OK键即可成功添加webapp目录"></a><strong>选择web.xml的文件路径，然后连续点击OK键即可成功添加webapp目录</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624111146.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 条件语句</title>
    <url>/182.html</url>
    <content><![CDATA[<h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a><strong>v-if</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>flag是true就显示我<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">flag</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a><strong>v-else</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>flag==true<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>flag==false<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">flag</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a><strong>v-else-if</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">&quot;type===&#x27;A&#x27;&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;B&#x27;&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else-if</span>=<span class="string">&quot;type===&#x27;C&#x27;&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-else</span>&gt;</span>D<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">type</span>: <span class="string">&#x27;C&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a><strong>v-show</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-show</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>11111111<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">flag</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 循环语句</title>
    <url>/183.html</url>
    <content><![CDATA[<p>循环使用 v-for 指令。</p>
<p>v-for 指令需要以 <strong>site in sites</strong> 形式的特殊语法， sites 是源数据数组并且 site 是数组元素迭代的别名。</p>
<h3 id="迭代数组"><a href="#迭代数组" class="headerlink" title="迭代数组"></a><strong>迭代数组</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;student in students&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;student.name&#125;&#125;的年龄：&#123;&#123;student.age&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">students</span>: [</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>, <span class="attr">age</span>: <span class="number">14</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">name</span>: <span class="string">&#x27;Mary&#x27;</span>, <span class="attr">age</span>: <span class="number">12</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">name</span>: <span class="string">&#x27;Sherry&#x27;</span>, <span class="attr">age</span>: <span class="number">15</span>&#125;</span></span><br><span class="line"><span class="javascript">            ]</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624144800.jpg" alt="img"></p>
<h3 id="迭代对象"><a href="#迭代对象" class="headerlink" title="迭代对象"></a><strong>迭代对象</strong></h3><p>第一个参数是value，第二个参数属性key，第三个参数序号index的顺序必须严格对应</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key,index) in student&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;index&#125;&#125;---&#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">student</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">name</span>: <span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">age</span>: <span class="number">14</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">sex</span>: <span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624144816.jpg" alt="img"></p>
<h3 id="迭代整数"><a href="#迭代整数" class="headerlink" title="迭代整数"></a><strong>迭代整数</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>遍历1到<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">&quot;n in num&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;n&lt;num&quot;</span>&gt;</span>&#123;&#123;n&#125;&#125;，<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-else</span>&gt;</span>&#123;&#123;num&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">num</span>:<span class="number">33</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624144827.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 计算属性</title>
    <url>/184.html</url>
    <content><![CDATA[<p>计算属性关键词: computed</p>
<p>计算属性在处理一些复杂逻辑时是很有用的，在一个计算属性里可以完成各种复杂的逻辑，包括运算、函数调用等，只要最终返回一个结果就可以</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>计算X1²+X2²-2X1+3X2,其中X1=&#123;&#123;X1&#125;&#125;,X2=&#123;&#123;X2&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;X1&#125;&#125; * &#123;&#123;X1&#125;&#125; + &#123;&#123;X2&#125;&#125; * &#123;&#123;X2&#125;&#125; - 2 * &#123;&#123;X1&#125;&#125; + 3 * &#123;&#123;X2&#125;&#125;=<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;calculate&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    输入X1:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;X1&quot;</span>&gt;</span>，</span><br><span class="line">    输入X2:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;X2&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">X1</span>: <span class="number">5</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">X2</span>: <span class="number">3</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">calculate</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.X1 * <span class="built_in">this</span>.X1 + <span class="built_in">this</span>.X2 * <span class="built_in">this</span>.X2 - <span class="number">2</span> * <span class="built_in">this</span>.X1 + <span class="number">3</span> * <span class="built_in">this</span>.X2;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在输入框改变值，结果也会随之改变</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624231847.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 监听属性</title>
    <url>/185.html</url>
    <content><![CDATA[<p>通过 watch 来响应数据的变化</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">        计数器:&#123;&#123;counter&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">&quot;seen&quot;</span>&gt;</span>（</span><br><span class="line">            修改前值为：<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: blue&quot;</span>&gt;</span>&#123;&#123;oldVal&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>，</span><br><span class="line">            修改后值为：<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;newVal&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span>）</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;addCounter&quot;</span>&gt;</span>自加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;lessCounter&quot;</span>&gt;</span>自减<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">counter</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">seen</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">oldVal</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">newVal</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">addCounter</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter++;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lessCounter</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.counter &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.counter--;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">watch</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//第一个参数是新的值（改变后），第二个是旧的值（改变前）</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">counter</span>: <span class="function"><span class="keyword">function</span> (<span class="params">newValue, oldValue</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.oldVal = oldValue;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.newVal = newValue;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.seen = <span class="literal">true</span>;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624221541.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 样式绑定</title>
    <url>/186.html</url>
    <content><![CDATA[<p>lass 与 style 是 HTML 元素的属性，用于设置元素的样式，我们可以用 v-bind 来设置样式属性。</p>
<p>Vue.js v-bind 在处理 class 和 style 时， 专门增强了它。表达式的结果类型除了字符串之外，还可以是对象或数组。</p>
<h3 id="class属性绑定"><a href="#class属性绑定" class="headerlink" title="class属性绑定"></a><strong>class属性绑定</strong></h3><p>①使用属性值</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: green;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    第一种方式：</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;isActive?&#x27;active&#x27;:&#x27;active2&#x27;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    第二种方式：</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123; &#x27;active2&#x27;: isActive,&#x27;active&#x27;:!isActive &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;modifyClass&quot;</span>&gt;</span>改变样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">isActive</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">modifyClass</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.isActive = !<span class="built_in">this</span>.isActive;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624231555.jpg" alt="img"></p>
<p>②使用对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: green;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: red;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>classObject: &#123; &#x27;active&#x27;: &#123;&#123;classObject.active&#125;&#125;, &#x27;active2&#x27;: &#123;&#123;classObject.active2&#125;&#125; &#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;classObject&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;modifyClass&quot;</span>&gt;</span>改变样式<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">classObject</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">&#x27;active&#x27;</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">&#x27;active2&#x27;</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">modifyClass</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.classObject.active = !<span class="built_in">this</span>.classObject.active;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.classObject.active2 = !<span class="built_in">this</span>.classObject.active2;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624234936.jpg" alt="img"></p>
<p>③数组语法</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>vue测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.active2</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">background</span>: green;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>class=&quot;&#123;&#123;activeClass&#125;&#125; &#123;&#123;active2Class&#125;&#125;&quot;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;[activeClass,active2Class]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">activeClass</span>: <span class="string">&#x27;active&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">active2Class</span>: <span class="string">&#x27;active2&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210624235755.jpg" alt="img"></p>
<h3 id="Vue-js-style-内联样式"><a href="#Vue-js-style-内联样式" class="headerlink" title="Vue.js style(内联样式)"></a><strong>Vue.js style(内联样式)</strong></h3><p>①在 <strong>v-bind:style</strong> 直接设置样式</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;&#123;color:fontColor,fontSize:fontSize+&#x27;px&#x27;&#125;&quot;</span>&gt;</span>LeDao的博客<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;bigFontSize&quot;</span>&gt;</span>增大字号<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;smallFontSize&quot;</span>&gt;</span>减小字号<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">fontColor</span>: <span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fontSize</span>: <span class="number">15</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">bigFontSize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.fontSize++;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">smallFontSize</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.fontSize--;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625000947.jpg" alt="img"></p>
<p>②绑定一个对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;styleObject&quot;</span>&gt;</span>LeDao的博客：http://www.zoutl.cn<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">styleObject</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">color</span>: <span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">fontSize</span>: <span class="string">&#x27;33px&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>③绑定多个对象</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;[style1,style2]&quot;</span>&gt;</span>LeDao的博客<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">style1</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;green&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="string">&#x27;font-size&#x27;</span>:<span class="string">&#x27;33px&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">style2</span>:&#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">&#x27;font-weight&#x27;</span>:<span class="string">&#x27;bold&#x27;</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>一个优秀的制作GIF动图的软件：ScreenToGif</title>
    <url>/187.html</url>
    <content><![CDATA[<h3 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a><strong>下载与安装</strong></h3><p>官网：<a href="https://www.screentogif.com/">https://www.screentogif.com/</a></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a><strong>使用</strong></h3><p>打开软件，选择录像机</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625003918.jpg" alt="img"></p>
<p>调整录屏窗口大小</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625003946.jpg" alt="img"></p>
<p>点击右下角的红色圆点开始录像</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625004017.jpg" alt="img"></p>
<p>点击右下角的蓝色正方形完成录像</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625004059.jpg" alt="img"></p>
<p>选择文件、另存为、保存即可得到gif动图</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625004148.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 事件处理器</title>
    <url>/188.html</url>
    <content><![CDATA[<p>事件监听使用 v-on 指令</p>
<p>v-on:click点击事件，可以简写成@click</p>
<span id="more"></span>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>计数器：<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;counter++&quot;</span>&gt;</span>加1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;counter--&quot;</span>&gt;</span>减1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;number&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add(number)&quot;</span>&gt;</span>加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;number2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;less(number2)&quot;</span>&gt;</span>减<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">counter</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">number</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">number2</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">add</span>: <span class="function"><span class="keyword">function</span> (<span class="params">number</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter += <span class="built_in">parseInt</span>(number);</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">less</span>: <span class="function"><span class="keyword">function</span> (<span class="params">number2</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter -= <span class="built_in">parseInt</span>(number2);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625015442.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 表单</title>
    <url>/189.html</url>
    <content><![CDATA[<p>用 v-model 指令在表单控件元素上创建双向数据绑定</p>
<h3 id="输入框"><a href="#输入框" class="headerlink" title="输入框"></a><strong>输入框</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>info1:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;info1&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;info1&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入内容...&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 333px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>info2:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;white-space: pre&quot;</span>&gt;</span>&#123;&#123;info2&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;info2&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;输入多行文本...&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 333px;height: 222px&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">info1</span>:<span class="string">&#x27;LeDao的博客:http://www.zoutl.cn&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">info2</span>:<span class="string">&#x27;LeDao的博客:\r\nhttp://www.zoutl.cn&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625100507.jpg" alt="img"></p>
<h3 id="单选按钮"><a href="#单选按钮" class="headerlink" title="单选按钮"></a><strong>单选按钮</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Edge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Edge&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;Edge&quot;</span>&gt;</span>Edge<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Chrome&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;picked&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>当前选中:<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;picked&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">picked</span>: <span class="string">&#x27;Edge&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625102029.jpg" alt="img"></p>
<h3 id="复选框"><a href="#复选框" class="headerlink" title="复选框"></a><strong>复选框</strong></h3><p>复选框如果是一个为逻辑值，如果是多个则绑定到同一个数组</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 200px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>单个复选框:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;checkValue&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;flag&quot;</span>&gt;</span>&#123;&#123;checkValue ? &#x27;是&#x27; : &#x27;否&#x27;&#125;&#125;<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>多个复选框:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Edge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Edge&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;browers&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;Edge&quot;</span>&gt;</span>Edge<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Chrome&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;browers&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Firefox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Firefox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;browers&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;Firefox&quot;</span>&gt;</span>Firefox<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>选择的浏览器:<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;browers&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">checkValue</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">browers</span>: []</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625103546.jpg" alt="img"></p>
<h3 id="select列表"><a href="#select列表" class="headerlink" title="select列表"></a><strong>select列表</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 222px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>选择的浏览器是:<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;mySelect&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;mySelect&quot;</span> <span class="attr">name</span>=<span class="string">&quot;browers&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>选择一个浏览器<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Edge&quot;</span>&gt;</span>Edge<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Chrome&quot;</span>&gt;</span>Chrome<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;Firefox&quot;</span>&gt;</span>Firefox<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">mySelect</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625105025.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>常量</title>
    <url>/19.html</url>
    <content><![CDATA[<h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a><strong>定义</strong></h3><p>常量表示不能改变的数值。</p>
<h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a><strong>分类</strong></h3><p>整数常量：所有整数。</p>
<p>小数常量：所有小数。</p>
<p>布尔(boolean)型常量：只有两个数值，true、false。</p>
<p>字符常量：将一个数字字母或者符号用单引号( ‘ ‘ )标识，如：’a’。</p>
<p>字符串常量：将一个或者多个字符用双引号(“”)标识，如：”hello world”、”a”、””（空字符串）。</p>
<p>null常量：只有一个数值就是：null。</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js遍历数组时获取对象的下标</title>
    <url>/190.html</url>
    <content><![CDATA[<p>v-for=”(value, index) in 数组名”</p>
<p>第一个参数表示遍历时的对象，第二个参数则代表下标（参数值可以根据自己的需求设置）</p>
<h3 id="参考代码（使用了数组下标设置数组的值）"><a href="#参考代码（使用了数组下标设置数组的值）" class="headerlink" title="参考代码（使用了数组下标设置数组的值）"></a><strong>参考代码</strong>（使用了数组下标设置数组的值）</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>总价：&#123;&#123;calculatePriceTotal&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, index) in snacks&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background: beige&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: blue&quot;</span>&gt;</span>数组下标:&#123;&#123;index&#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>对象:&#123;&#123;value&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>编号:&#123;&#123;value.id&#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>名称:&#123;&#123;value.name&#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>价格:&#123;&#123;value.price&#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>数量:&#123;&#123;value.num&#125;&#125;<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>当前商品总价：&#123;&#123;value.num * value.price&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 5px&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;value.num&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addNum(index)&quot;</span>&gt;</span>加1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;lessNum(index)&quot;</span>&gt;</span>减1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">snacks</span>: [</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>: <span class="number">1</span>, <span class="attr">name</span>: <span class="string">&#x27;零食1&#x27;</span>, <span class="attr">price</span>: <span class="number">11</span>, <span class="attr">num</span>: <span class="number">3</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>: <span class="number">2</span>, <span class="attr">name</span>: <span class="string">&#x27;零食2&#x27;</span>, <span class="attr">price</span>: <span class="number">5</span>, <span class="attr">num</span>: <span class="number">2</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>: <span class="number">3</span>, <span class="attr">name</span>: <span class="string">&#x27;零食3&#x27;</span>, <span class="attr">price</span>: <span class="number">8</span>, <span class="attr">num</span>: <span class="number">6</span>&#125;</span></span><br><span class="line"><span class="javascript">            ]</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">addNum</span>: <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.snacks[index].num++;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="attr">lessNum</span>: <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.snacks[index].num &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.snacks[index].num--;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">calculatePriceTotal</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> total = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.snacks.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    total += <span class="built_in">parseInt</span>(<span class="built_in">this</span>.snacks[i].num) * <span class="built_in">parseInt</span>(<span class="built_in">this</span>.snacks[i].price);</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> total;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625135845.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 组件</title>
    <url>/191.html</url>
    <content><![CDATA[<p>Vue.js组件有全局组件和局部组件</p>
<h3 id="全局组件：所有实例都能用，注册方法如下"><a href="#全局组件：所有实例都能用，注册方法如下" class="headerlink" title="全局组件：所有实例都能用，注册方法如下"></a><strong>全局组件：所有实例都能用，注册方法如下</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//全局组件</span></span><br><span class="line">Vue.component(<span class="string">&#x27;myh1&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h1 style=&quot;color: red&quot;&gt;我的全局组件:myh1&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="局部组件：在实例选项中注册，组件只能在这个实例中使用，注册方法如下"><a href="#局部组件：在实例选项中注册，组件只能在这个实例中使用，注册方法如下" class="headerlink" title="局部组件：在实例选项中注册，组件只能在这个实例中使用，注册方法如下"></a><strong>局部组件：在实例选项中注册，组件只能在这个实例中使用，注册方法如下</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//局部组件</span></span><br><span class="line"><span class="keyword">let</span> Child = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h1&gt;我的局部组件:Child&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> Child2 = &#123;</span><br><span class="line">    <span class="attr">template</span>: <span class="string">&#x27;&lt;h1&gt;我的局部组件:Child2&lt;/h1&gt;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="组件使用"><a href="#组件使用" class="headerlink" title="组件使用"></a><strong>组件使用</strong></h3><p>创建一个js文件专门用于定义组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">//全局组件</span><br><span class="line">Vue.component(&#x27;myh1&#x27;, &#123;</span><br><span class="line">    template: &#x27;<span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>我的全局组件:myh1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&#x27;</span><br><span class="line">&#125;)</span><br><span class="line">//局部组件</span><br><span class="line">let Child = &#123;</span><br><span class="line">    template: &#x27;<span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的局部组件:Child<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&#x27;</span><br><span class="line">&#125;</span><br><span class="line">let Child2 = &#123;</span><br><span class="line">    template: &#x27;<span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的局部组件:Child2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Vue实例使用组件</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/component.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">测试app1（只有全局组件myh1生效，因为Vue实例中没有使用任何局部组件）</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">myh1</span>&gt;</span><span class="tag">&lt;/<span class="name">myh1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">myh2</span>&gt;</span><span class="tag">&lt;/<span class="name">myh2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">myh3</span>&gt;</span><span class="tag">&lt;/<span class="name">myh3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">测试app2（全局组件myh1和局部组件（Child，Child2）都生效）</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">myh1</span>&gt;</span><span class="tag">&lt;/<span class="name">myh1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">myh2</span>&gt;</span><span class="tag">&lt;/<span class="name">myh2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">myh3</span>&gt;</span><span class="tag">&lt;/<span class="name">myh3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app1&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app2&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;myh2&#x27;</span>: Child,</span></span><br><span class="line"><span class="javascript">            <span class="string">&#x27;myh3&#x27;</span>: Child2</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625151002.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>父组件向子组件传递数据</title>
    <url>/192.html</url>
    <content><![CDATA[<p>prop 是子组件用来接受父组件传递过来的数据的一个自定义属性</p>
<p>父组件的数据需要通过 props 把数据传给子组件，子组件需要显式地用 props 选项声明 “prop”</p>
<p>关于父组件和子组件：（下面的这段话中相同颜色代表同一组件）</p>
<p>我们将某段代码封装成一个组件，而这个组件又在另一个组件中被引入，而引入该封装的组件的组件叫做父组件（另一个组件），被引入的组件叫做子组件（这个组件）</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">-----------------------------------------------</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>传递静态数据<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-span1</span> <span class="attr">message11</span>=<span class="string">&quot;11&quot;</span> <span class="attr">message22</span>=<span class="string">&quot;22&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-span1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="handlebars"><span class="xml"></span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    Vue.component(&quot;my-span1&quot;, &#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        //传递多个数据</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        props: [&#x27;message11&#x27;, &#x27;message22&#x27;],</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        template: &#x27;<span class="tag">&lt;<span class="name">span</span>&gt;</span>message11=</span><span class="template-variable">&#123;&#123;<span class="name">message11</span>&#125;&#125;</span><span class="xml">,message22=</span><span class="template-variable">&#123;&#123;<span class="name">message22</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    new Vue(&#123;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">        el: &#x27;#app1&#x27;</span></span></span><br><span class="line"><span class="xml"><span class="handlebars">    &#125;)</span></span></span><br><span class="line"><span class="xml"><span class="handlebars"></span></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">-----------------------------------------------</span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>传递动态数据<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app2&quot;</span>&gt;</span></span><br><span class="line">    父组件内容:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;parentMessage&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    子组件内容:</span><br><span class="line">    <span class="tag">&lt;<span class="name">my-span1</span> <span class="attr">v-bind:message2</span>=<span class="string">&quot;parentMessage&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-span1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;my-span1&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//传递单个数据</span></span></span><br><span class="line"><span class="javascript">        <span class="attr">props</span>: [<span class="string">&#x27;message2&#x27;</span>],</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">&#x27;&lt;span&gt;&#123;&#123;message2&#125;&#125;&lt;/span&gt;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app2&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">parentMessage</span>: <span class="string">&#x27;123456&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">-----------------------------------------------</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625194623.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 组件 - 自定义事件</title>
    <url>/193.html</url>
    <content><![CDATA[<p>父组件是使用 props 传递数据给子组件，但如果子组件要把数据传递回去，就需要使用自定义事件</p>
<p>使用 $on(eventName) 监听事件</p>
<p>使用 $emit(eventName) 触发事件</p>
<p>父组件可以在使用子组件的地方直接用 v-on 来监听子组件触发的事件，以下实例中子组件已经和它外部完全解耦了，它所做的只是触发一个父组件关心的内部事件</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;total&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-button</span> <span class="attr">v-on:increment</span>=<span class="string">&quot;incrementTotal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">my-button</span> <span class="attr">v-on:increment</span>=<span class="string">&quot;incrementTotal&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;my-button&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">template</span>: <span class="string">&#x27;&lt;button @click=&quot;incrementHandler&quot;&gt;&#123;&#123;counter&#125;&#125;&lt;/button&gt;&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">counter</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">incrementHandler</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.counter++;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$emit(<span class="string">&#x27;increment&#x27;</span>);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">total</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">incrementTotal</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.total++;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625201841.jpg" alt="img"></strong></p>
<h3 id="代码解读"><a href="#代码解读" class="headerlink" title="代码解读"></a><strong>代码解读</strong></h3><p>点击按钮时，触发子组件内部的incrementHandler点击事件（当前按钮的标签值counter加1，触发父组件的子组件my-button外部的increment事件），increment事件即执行Vue实例的incrementTotal方法（total加1）</p>
<p>子组件内部：子组件的代码，例如上面的代码中子组件的内部就是&lt;button @click=”incrementHandler”&gt;&lt;/button&gt;</p>
<p>子组件的外部：&lt;子组件名称&gt;&lt;/子组件名称&gt;多出来的内容，例如上面的代码中子组件的外部就是v-on:increment=”incrementTotal”</p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 自定义指令</title>
    <url>/194.html</url>
    <content><![CDATA[<p>除了默认设置的核心指令( v-model 和 v-show )，Vue 也允许注册自定义指令</p>
<p>自定义指令分为全局指令和局部指令</p>
<p>下面分别注册全局指令和局部指令，指令功能：在页面加载时，元素获得焦点</p>
<h3 id="全局指令"><a href="#全局指令" class="headerlink" title="全局指令"></a><strong>全局指令</strong></h3><p>每个实例都可以使用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 444px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>页面加载时,input元素自动获取焦点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">&#x27;focus&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">inserted</span>: <span class="function"><span class="keyword">function</span> (<span class="params">elements</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            elements.focus();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="局部指令"><a href="#局部指令" class="headerlink" title="局部指令"></a><strong>局部指令</strong></h3><p>只能在注册局部指令的实例中使用</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 444px&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>页面加载时,input元素自动获取焦点<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-focus</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">directives</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">focus</span>: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">inserted</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    el.focus();</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625211215.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js 路由</title>
    <url>/195.html</url>
    <content><![CDATA[<p>Vue.js 路由允许我们通过不同的 URL 访问不同的内容，通过 Vue.js 可以实现多视图的单页Web应用</p>
<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a><strong>引入</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-router/2.7.0/vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="简单实例"><a href="#简单实例" class="headerlink" title="简单实例"></a><strong>简单实例</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-router/2.7.0/vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用 router-link 组件来导航. --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 通过传入 `to` 属性指定链接. --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;router-link&gt; 默认会被渲染成一个 `&lt;a&gt;` 标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/blog1&quot;</span>&gt;</span>第一篇博客<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/blog2&quot;</span>&gt;</span>第二篇博客<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 路由出口 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 1. 定义（路由）组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> blog1 = &#123;<span class="attr">template</span>: <span class="string">&#x27;&lt;p style=&quot;color: blue&quot;&gt;现在是第一篇博客&lt;/p&gt;&#x27;</span>&#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> blog2 = &#123;<span class="attr">template</span>: <span class="string">&#x27;&lt;p style=&quot;color: red&quot;&gt;现在是第二篇博客&lt;/p&gt;&#x27;</span>&#125;</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2. 定义路由</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> routes = [</span></span><br><span class="line"><span class="javascript">        &#123;<span class="attr">path</span>: <span class="string">&#x27;/blog1&#x27;</span>, <span class="attr">component</span>: blog1&#125;,</span></span><br><span class="line"><span class="javascript">        &#123;<span class="attr">path</span>: <span class="string">&#x27;/blog2&#x27;</span>, <span class="attr">component</span>: blog2&#125;</span></span><br><span class="line"><span class="javascript">    ]</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 3. 创建 router 实例，然后传 `routes` 配置</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> router = <span class="keyword">new</span> VueRouter(&#123;routes&#125;)</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 4. 创建和挂载根实例</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        router</span></span><br><span class="line"><span class="javascript">    &#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625213813.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot解决跨域问题</title>
    <url>/196.html</url>
    <content><![CDATA[<h3 id="为什么要实现跨域"><a href="#为什么要实现跨域" class="headerlink" title="为什么要实现跨域"></a>为什么要实现跨域</h3><p>如果没有实现跨域，前后端分离项目中Ajax就无法返回数据</p>
<h3 id="跨域方法"><a href="#跨域方法" class="headerlink" title="跨域方法"></a>跨域方法</h3><p>Spring Boot解决跨域使用@CrossOrigin注解，该注解有两个参数</p>
<p>origins： 允许可访问的域列表<br>maxAge:准备响应前的缓存持续的最大时间（以秒为单位）。</p>
<h3 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h3><h4 id="整个Controller"><a href="#整个Controller" class="headerlink" title="整个Controller"></a><strong>整个Controller</strong></h4><p>在指定类上方添加注解</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625235520.jpg" alt="img"></p>
<h4 id="单个方法"><a href="#单个方法" class="headerlink" title="单个方法"></a><strong>单个方法</strong></h4><p>在指定方法上方添加注解</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210625235531.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js Ajax(axios)</title>
    <url>/197.html</url>
    <content><![CDATA[<p>Vue.js 2.0 版本推荐使用 axios 来完成 ajax 请求</p>
<p>Axios 是一个基于 Promise 的 HTTP 库，可以用在浏览器和 node.js 中</p>
<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a><strong>引入</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/axios/0.18.0/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="get请求示例"><a href="#get请求示例" class="headerlink" title="get请求示例"></a><strong>get请求示例</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-router/2.7.0/vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/axios/0.18.0/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;returnInfo&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>总数量：&#123;&#123;getTotal&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,index) in returnInfo&quot;</span>&gt;</span></span><br><span class="line">        编号：&#123;&#123;value.id&#125;&#125;，名称：&#123;&#123;value.name&#125;&#125;，数量：&#123;&#123;value.num&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;addOne(index)&quot;</span>&gt;</span>加1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;lessOne(index)&quot;</span>&gt;</span>减1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">returnInfo</span>: <span class="literal">null</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">total</span>: <span class="number">0</span></span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            axios</span></span><br><span class="line"><span class="javascript">                .get(<span class="string">&#x27;https://www.zoutl.cn/getFruitListJson&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                .then(<span class="function"><span class="params">response</span> =&gt;</span> (<span class="built_in">this</span>.returnInfo = response.data.rows))</span></span><br><span class="line"><span class="javascript">                .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">                &#125;);</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//水果数量加1</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">addOne</span>: <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.returnInfo[index].num++;</span></span><br><span class="line"><span class="javascript">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="comment">//水果数量减1</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">lessOne</span>: <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (<span class="built_in">this</span>.returnInfo[index].num &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">this</span>.returnInfo[index].num--;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">computed</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//计算水果总数</span></span></span><br><span class="line"><span class="javascript">            <span class="attr">getTotal</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> total = <span class="number">0</span>;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="built_in">this</span>.returnInfo.length; i++) &#123;</span></span><br><span class="line"><span class="javascript">                    total += <span class="built_in">this</span>.returnInfo[i].num;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> total;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626015304.jpg" alt="img"></p>
<h3 id="post请求示例"><a href="#post请求示例" class="headerlink" title="post请求示例"></a><strong>post请求示例</strong></h3><p>直接在url中拼接要传递的数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-router/2.7.0/vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/axios/0.18.0/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20%;margin-top: 10%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入水果的信息:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    编号:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitId&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    名称:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitName&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    数量:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitNum&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;submitData&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitId</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitName</span>: <span class="string">&#x27;苹果&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitNum</span>: <span class="number">3</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">submitData</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                axios</span></span><br><span class="line"><span class="javascript">                    .post(<span class="string">&#x27;https://www.zoutl.cn/getFruitJson2?id=&#x27;</span> + <span class="built_in">this</span>.fruitId + <span class="string">&#x27;&amp;name=&#x27;</span> + <span class="built_in">this</span>.fruitName + <span class="string">&#x27;&amp;num=&#x27;</span> + <span class="built_in">this</span>.fruitNum + <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> id = response.data.id;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> name = response.data.name;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> num = response.data.num;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;编号:&quot;</span> + id + <span class="string">&quot;，名称:&quot;</span> + name + <span class="string">&quot;，数量:&quot;</span> + num);</span></span><br><span class="line"><span class="javascript">                    &#125;)</span></span><br><span class="line"><span class="javascript">                    .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">                    &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>使用URLSearchParams传递数据</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-router/2.7.0/vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/axios/0.18.0/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20%;margin-top: 10%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入水果的信息:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    编号:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitId&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    名称:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitName&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    数量:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitNum&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;submitData&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitId</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitName</span>: <span class="string">&#x27;苹果&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitNum</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">myInfo</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">submitData</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> param = <span class="keyword">new</span> URLSearchParams();</span></span><br><span class="line"><span class="javascript">                param.append(<span class="string">&quot;id&quot;</span>, <span class="built_in">this</span>.fruitId);</span></span><br><span class="line"><span class="javascript">                param.append(<span class="string">&quot;name&quot;</span>, <span class="built_in">this</span>.fruitName);</span></span><br><span class="line"><span class="javascript">                param.append(<span class="string">&quot;num&quot;</span>, <span class="built_in">this</span>.fruitNum);</span></span><br><span class="line"><span class="javascript">                axios</span></span><br><span class="line"><span class="javascript">                    .post(<span class="string">&#x27;https://www.zoutl.cn/getFruitJson2&#x27;</span>, param)</span></span><br><span class="line"><span class="javascript">                    .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> id = response.data.id;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> name = response.data.name;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> num = response.data.num;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;编号:&quot;</span> + id + <span class="string">&quot;，名称:&quot;</span> + name + <span class="string">&quot;，数量:&quot;</span> + num);</span></span><br><span class="line"><span class="javascript">                    &#125;)</span></span><br><span class="line"><span class="javascript">                    .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">                    &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626032621.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js的事件处理器中Ajax请求无法通过this调用Vue实例的数据</title>
    <url>/198.html</url>
    <content><![CDATA[<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a><strong>解决办法</strong></h3><p>Ajax请求外定义变量</p>
<p>let _this=this;</p>
<p>Ajax请求内使用该变量调用Vue实例的数据</p>
<p>_this.数据名=要修改的值</p>
<h3 id="错误的代码"><a href="#错误的代码" class="headerlink" title="错误的代码"></a><strong>错误的代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-router/2.7.0/vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/axios/0.18.0/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 20%;margin-top: 10%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>传递的数据:<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;myInfo&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>输入水果的信息:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    编号:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitId&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    名称:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitName&quot;</span>/&gt;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">    数量:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fruitNum&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;submitData&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitId</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitName</span>: <span class="string">&#x27;苹果&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">fruitNum</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">myInfo</span>: <span class="string">&#x27;这里显示传递的数据&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">submitData</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                axios</span></span><br><span class="line"><span class="javascript">                    .post(<span class="string">&#x27;https://www.zoutl.cn/getFruitJson2?id=&#x27;</span> + <span class="built_in">this</span>.fruitId + <span class="string">&#x27;&amp;name=&#x27;</span> + <span class="built_in">this</span>.fruitName + <span class="string">&#x27;&amp;num=&#x27;</span> + <span class="built_in">this</span>.fruitNum + <span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> id = response.data.id;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> name = response.data.name;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">let</span> num = response.data.num;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">this</span>.myInfo = <span class="string">&quot;编号:&quot;</span> + id + <span class="string">&quot;，名称:&quot;</span> + name + <span class="string">&quot;，数量:&quot;</span> + num;</span></span><br><span class="line"><span class="javascript">                    &#125;)</span></span><br><span class="line"><span class="javascript">                    .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(error);</span></span><br><span class="line"><span class="javascript">                    &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>点击提交按钮后，红色字体内容不改变</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626121839.jpg" alt="img"></p>
<h3 id="修改后（修改methods内的submitData方法）"><a href="#修改后（修改methods内的submitData方法）" class="headerlink" title="修改后（修改methods内的submitData方法）"></a><strong>修改后</strong>（修改methods内的submitData方法）</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">	<span class="attr">submitData</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">let</span> _this = <span class="built_in">this</span>;</span><br><span class="line">		axios</span><br><span class="line">			.post(<span class="string">&#x27;https://www.zoutl.cn/getFruitJson2?id=&#x27;</span> + <span class="built_in">this</span>.fruitId + <span class="string">&#x27;&amp;name=&#x27;</span> + <span class="built_in">this</span>.fruitName + <span class="string">&#x27;&amp;num=&#x27;</span> + <span class="built_in">this</span>.fruitNum + <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">			.then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">				<span class="keyword">let</span> id = response.data.id;</span><br><span class="line">				<span class="keyword">let</span> name = response.data.name;</span><br><span class="line">				<span class="keyword">let</span> num = response.data.num;</span><br><span class="line">				_this.myInfo = <span class="string">&quot;编号:&quot;</span> + id + <span class="string">&quot;，名称:&quot;</span> + name + <span class="string">&quot;，数量:&quot;</span> + num;</span><br><span class="line">			&#125;)</span><br><span class="line">			.catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">				<span class="built_in">console</span>.log(error);</span><br><span class="line">			&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>点击提交按钮后，红色字体内容改变</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626122020.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js Ajax(vue-resource)</title>
    <url>/199.html</url>
    <content><![CDATA[<h3 id="引入"><a href="#引入" class="headerlink" title="引入"></a><strong>引入</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="get请求"><a href="#get请求" class="headerlink" title="get请求"></a><strong>get请求</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue/2.4.2/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;myInfo&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;get()&quot;</span>&gt;</span>获取<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">myInfo</span>:<span class="string">&#x27;看这里&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">get</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _this = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$http</span></span><br><span class="line"><span class="javascript">                    .get(<span class="string">&#x27;https://www.zoutl.cn/getFruitListJson&#x27;</span>)</span></span><br><span class="line"><span class="javascript">                    .then(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        _this.myInfo = result.data;</span></span><br><span class="line"><span class="javascript">                    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&#x27;请求失败&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626125622.jpg" alt="img"></strong></p>
<h3 id="post请求"><a href="#post请求" class="headerlink" title="post请求"></a><strong>post请求</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue/2.4.2/vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/vue-resource/1.5.1/vue-resource.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span>&gt;</span>&#123;&#123;myInfo&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;post()&quot;</span>&gt;</span>获取<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">myInfo</span>: <span class="string">&#x27;看这里&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">post</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> _this = <span class="built_in">this</span>;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.$http</span></span><br><span class="line"><span class="javascript">                    .post(<span class="string">&#x27;https://www.zoutl.cn/getFruitJson2&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//传递的数据</span></span></span><br><span class="line"><span class="javascript">                        &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="attr">id</span>: <span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">                            <span class="attr">name</span>: <span class="string">&#x27;香蕉&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                            <span class="attr">num</span>: <span class="number">6</span></span></span><br><span class="line"><span class="javascript">                        &#125;,</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//如果Web服务器无法处理编码为 application/json 的请求，可以启用 emulateJSON 选项</span></span></span><br><span class="line"><span class="javascript">                        &#123;</span></span><br><span class="line"><span class="javascript">                            <span class="attr">emulateJSON</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="javascript">                        &#125;</span></span><br><span class="line"><span class="javascript">                    )</span></span><br><span class="line"><span class="javascript">                    .then(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        _this.myInfo = result.data;</span></span><br><span class="line"><span class="javascript">                    &#125;, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">console</span>.log(<span class="string">&#x27;请求失败&#x27;</span>);</span></span><br><span class="line"><span class="javascript">                    &#125;);</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626130632.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Java环境配置</title>
    <url>/2.html</url>
    <content><![CDATA[<h3 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h3><h3 id="配置Java环境"><a href="#配置Java环境" class="headerlink" title="配置Java环境"></a><strong>配置Java环境</strong></h3><p>右击”我的电脑”，点击”属性”，选择”高级系统设置”</p>
<h4 id="配置变量：JAVA-HOME"><a href="#配置变量：JAVA-HOME" class="headerlink" title="配置变量：JAVA_HOME"></a>配置变量：JAVA_HOME</h4><p>本地JDK安装路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">F:\java\jdk1.8.0_92</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010123055.jpg"></p>
<h4 id="配置变量：classpath"><a href="#配置变量：classpath" class="headerlink" title="配置变量：classpath"></a>配置变量：classpath</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar </span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010123126.jpg"></p>
<h4 id="配置变量：Path"><a href="#配置变量：Path" class="headerlink" title="配置变量：Path"></a>配置变量：Path</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">F:\java\jdk1.8.0_92\bin</span><br><span class="line">F:\java\jre\bin</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201020230001.jpg" alt="20201010123126.jpg"></p>
<h3 id="测试JDK是否安装成功"><a href="#测试JDK是否安装成功" class="headerlink" title="测试JDK是否安装成功"></a><strong>测试JDK是否安装成功</strong></h3><h4 id="打开cmd"><a href="#打开cmd" class="headerlink" title="打开cmd"></a>打开cmd</h4><p>快捷键：win+R，输入cmd</p>
<h4 id="输入下面的命令"><a href="#输入下面的命令" class="headerlink" title="输入下面的命令"></a>输入下面的命令</h4><p>键入命令: <strong>java -version</strong>、<strong>java</strong>、<strong>javac</strong> 几个命令，出现以下信息，说明环境变量配置成功；</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010124737.jpg" alt="20201010123126.jpg"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010124749.jpg" alt="20201010123126.jpg"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010124800.jpg" alt="20201010123126.jpg"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>进制</title>
    <url>/20.html</url>
    <content><![CDATA[<h3 id="十进制"><a href="#十进制" class="headerlink" title="十进制"></a><strong>十进制</strong></h3><p>我们平时所有的数字就是十进制</p>
<h3 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a><strong>二进制</strong></h3><p>用0和1表示</p>
<h3 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a><strong>进制转换</strong></h3><h4 id="二进制转换成十进制"><a href="#二进制转换成十进制" class="headerlink" title="二进制转换成十进制"></a>二进制转换成十进制</h4><p>*整数二进制转化为十进制</p>
<p>方法：“按权展开求和”，该方法的具体步骤是先将二进制的数写成加权系数展开式，而后根据十进制的加法规则进行求和</p>
<p>规律：个位上的数字的次数是0，十位上的数字的次数是1，……，依次递增，而十分位的数字的次数是-1，百分位上数字的次数是-2，……，依次递减。</p>
<p>*小数二进制转化为十进制</p>
<p>二进制小bai数的位权从小数点向右依次为-1、-2、-3……，按照这个du位权计算就可以zhi得到十进制小数。</p>
<p>例如：0.1011b=1<em>2^(-1)+0</em>2^(-2)+1<em>2^(-3)+1</em>2^(-4)=0.6875d。</p>
<h4 id="十进制转换成二进制"><a href="#十进制转换成二进制" class="headerlink" title="十进制转换成二进制"></a>十进制转换成二进制</h4><p>一个十进制数转换为二进制数要分整数部分和小数部分分别转换，最后再组合到一起</p>
<p>*整数十进制转换成二进制</p>
<p>整数部分采用 “除2取余，逆序排列”法。具体做法是：用2整除十进制整数，可以得到一个商和余数；再用2去除商，又会得到一个商和余数，如此进行，直到商为小于1时为止，然后把先得到的余数作为二进制数的低位有效位，后得到的余数作为二进制数的高位有效位，依次排列起来</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201013132701.jpg" alt="img"></p>
<p>*小数十进制转换成二进制</p>
<p>小数部分要使用“乘 2 取整法”。即用十进制的小数乘以 2 并取走结果的整数(必是 0 或 1)，然后再用剩下的小数重复刚才的步骤，直到剩余的小数为 0 时停止，最后将每次得到的整数部分按先后顺序从左到右排列即得到所对应二进制小数。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201013134023.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>安装vue-cli脚手架</title>
    <url>/200.html</url>
    <content><![CDATA[<h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a><strong>安装Node.js</strong></h3><p>官网：<a href="https://nodejs.org/">https://nodejs.org</a></p>
<p>下载第一个稳定版本，点击安装文件一直下一步即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626143355.jpg" alt="img"></p>
<p>安装是否安装成功，分别输入命令node –version，npm -v都可以看到版本号说明Node.js安装完成</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626143404.jpg" alt="img"></p>
<h3 id="安装vue-cli脚手架"><a href="#安装vue-cli脚手架" class="headerlink" title="安装vue-cli脚手架"></a><strong>安装vue-cli脚手架</strong></h3><p>打开cmd，输入命令：npm install -g <a href="mailto:&#118;&#117;&#x65;&#x2d;&#x63;&#x6c;&#x69;&#x40;&#x32;&#46;&#57;&#x2e;&#x36;">&#118;&#117;&#x65;&#x2d;&#x63;&#x6c;&#x69;&#x40;&#x32;&#46;&#57;&#x2e;&#x36;</a>，运行</p>
<p>等待安装完成，输入命令：vue -V，看到版本号说明脚手架安装完成</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626143413.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>vue-cli脚手架新建Vue项目</title>
    <url>/201.html</url>
    <content><![CDATA[<h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a><strong>新建项目</strong></h3><p>在Vue项目存储文件夹中打开cmd，输入命令：vue init webpack vue_demo，vue_demo是项目名称，然后进行一些配置</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626152259.jpg" alt="img"></p>
<h3 id="配置Node-js和npm"><a href="#配置Node-js和npm" class="headerlink" title="配置Node.js和npm"></a><strong>配置Node.js和npm</strong></h3><p>使用WebStorm打开刚刚新建的Vue文件，并配置Node.js和npm，Node interpreter选择Node.js安装目录中的node.exe文件，Package manager 选择Node.js安装目录中的node_modules的npm文件夹</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626151726.jpg" alt="img"></p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a><strong>启动</strong></h3><p>打开左下角终端Terminal，输入启动命令：npm run dev，按ctrl+enter运行</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626151753.jpg" alt="img"></p>
<h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a><strong>访问</strong></h3><p>打开运行信息的地址即可访问项目，出现以下页面</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626151925.jpg" alt="img"></p>
<h3 id="修改端口"><a href="#修改端口" class="headerlink" title="修改端口"></a><strong>修改端口</strong></h3><p>修改端口为80，让项目启动时自动打开浏览器（修改config文件夹的index.js，port: 8080的8080改为80，autoOpenBrower: false的false改为true）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626151833.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
        <tag>Node.js</tag>
      </tags>
  </entry>
  <entry>
    <title>基于vue-cli搭建自己的项目</title>
    <url>/202.html</url>
    <content><![CDATA[<p>在src/components下新建一个HelloWorld.vue文件，每个.vue文件都包括三个部分：&lt;template&gt;模版代码块，&lt;script&gt;是js代码块，&lt;style&gt;是样式代码块，其中如果&lt;style&gt;使用了scoped属性（让当前组件的样式不会修改到其它地方的样式，在父组件中是不能直接修改子组件的样式的，需要在父组件中使用vue的深度作用选择器），该样式只在本.vue文件下生效</p>
<h3 id="HelloWolrd-vue代码如下："><a href="#HelloWolrd-vue代码如下：" class="headerlink" title="HelloWolrd.vue代码如下："></a><strong>HelloWolrd.vue代码如下：</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;info&quot;</span>&gt;</span>&#123;&#123; info &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;HelloWorld&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">info</span>: <span class="string">&#x27;Hello Vue!&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="css">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="删除App-vue的全部代码，重写，在-lt-template-gt-中使用组件，-lt-script-gt-中引入组件，-lt-style-gt-中写样式"><a href="#删除App-vue的全部代码，重写，在-lt-template-gt-中使用组件，-lt-script-gt-中引入组件，-lt-style-gt-中写样式" class="headerlink" title="删除App.vue的全部代码，重写，在&lt;template&gt;中使用组件，&lt;script&gt;中引入组件，&lt;style&gt;中写样式"></a><strong>删除App.vue的全部代码，重写，在&lt;template&gt;中使用组件，&lt;script&gt;中引入组件，&lt;style&gt;中写样式</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">HelloWorld</span>&gt;</span><span class="tag">&lt;/<span class="name">HelloWorld</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">&#x27;./components/HelloWorld&#x27;</span><span class="comment">//引入组件HelloWorld.vue</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//映射组件标签,可以写成HelloWorld:HelloWorld,如果文件名和组件名一样那么可简写成HelloWorld</span></span></span><br><span class="line"><span class="javascript">    HelloWorld</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="src下的main-js-这个是项目入口配置文件，代码也删除重写"><a href="#src下的main-js-这个是项目入口配置文件，代码也删除重写" class="headerlink" title="src下的main.js 这个是项目入口配置文件，代码也删除重写"></a><strong>src下的main.js 这个是项目入口配置文件，代码也删除重写</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">入口js:创建实例</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">components</span>:&#123;</span><br><span class="line">    App</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">template</span>:<span class="string">&#x27;&lt;App&gt;&lt;/App&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="启动项目，看到下面的页面"><a href="#启动项目，看到下面的页面" class="headerlink" title="启动项目，看到下面的页面"></a>启动项目，看到下面的页面</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626215741.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>基于vue-cli安装Element UI</title>
    <url>/203.html</url>
    <content><![CDATA[<h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a><strong>安装方法</strong></h3><p>①使用npm i element-ui -S命令进行安装</p>
<p>②在package.json中添加，然后通过cnpm install进行安装</p>
<h3 id="进行安装（这里使用第二种方法）"><a href="#进行安装（这里使用第二种方法）" class="headerlink" title="进行安装（这里使用第二种方法）"></a><strong>进行安装</strong>（这里使用第二种方法）</h3><p>①打开package.js文件，找到devDependencies并在最后加上”element-ui”: “^2.2.1”</p>
<p>②通过命令cnpm install进行安装</p>
<p>③在src/main.js中添加以下内容</p>
<p>import ElementUI from ‘element-ui’<br>import ‘element-ui/lib/theme-chalk/index.css’<br>Vue.use(ElementUI)</p>
<p>添加的位置如下面代码所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">入口js:创建实例</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span> <span class="comment">//新添加</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span> <span class="comment">//新添加，避免后期打包样式不同，要放在import App from &#x27;./App&#x27;;之前</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line">Vue.use(ElementUI)<span class="comment">//新添加</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">components</span>:&#123;</span><br><span class="line">    App</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">template</span>:<span class="string">&#x27;&lt;App&gt;&lt;/App&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<p>到此，Element UI安装成功</p>
<h3 id="使用Element-UI"><a href="#使用Element-UI" class="headerlink" title="使用Element UI"></a><strong>使用Element UI</strong></h3><p>新建ElementUI.vue，代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;tableData&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 60%;margin-left: 20%;margin-top: 200px&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;date&quot;</span> <span class="attr">label</span>=<span class="string">&quot;日期&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;address&quot;</span> <span class="attr">label</span>=<span class="string">&quot;地址&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;ElementUI&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">tableData</span>: [&#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">date</span>: <span class="string">&#x27;2016-05-02&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>: <span class="string">&#x27;王小虎&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">address</span>: <span class="string">&#x27;上海市普陀区金沙江路 1518 弄&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">date</span>: <span class="string">&#x27;2016-05-04&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>: <span class="string">&#x27;王小虎&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">address</span>: <span class="string">&#x27;上海市普陀区金沙江路 1517 弄&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">date</span>: <span class="string">&#x27;2016-05-01&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>: <span class="string">&#x27;王小虎&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">address</span>: <span class="string">&#x27;上海市普陀区金沙江路 1519 弄&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="attr">date</span>: <span class="string">&#x27;2016-05-03&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">name</span>: <span class="string">&#x27;王小虎&#x27;</span>,</span></span><br><span class="line"><span class="javascript">        <span class="attr">address</span>: <span class="string">&#x27;上海市普陀区金沙江路 1516 弄&#x27;</span></span></span><br><span class="line"><span class="javascript">      &#125;]</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>App.vue代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ElementUI</span>&gt;</span><span class="tag">&lt;/<span class="name">ElementUI</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;./components/ElementUI&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">    ElementUI</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210626233935.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>使用动态组件实现组件切换</title>
    <url>/204.html</url>
    <content><![CDATA[<h3 id="定义两个组件"><a href="#定义两个组件" class="headerlink" title="定义两个组件"></a><strong>定义两个组件</strong></h3><p>Student.vue</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 10px&quot;</span>&gt;</span>当前是学生表<span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;students&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 60%;margin-left: 20%;margin-top: 20px&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;编号&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">students</span>:[</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;小米&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;小花&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;雪莉&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      ]</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Teacher.vue</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 10px&quot;</span>&gt;</span>当前是教师表<span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;teachers&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 60%;margin-left: 20%;margin-top: 20px&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;编号&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;Teacher&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">teachers</span>:[</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Sherry&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Mary&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      ]</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="在App-vue中引入上面两个组件"><a href="#在App-vue中引入上面两个组件" class="headerlink" title="在App.vue中引入上面两个组件"></a><strong>在App.vue中引入上面两个组件</strong></h3><p>App.vue</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;currentCom=&#x27;Student&#x27;&quot;</span>&gt;</span>查看学生<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;currentCom=&#x27;Teacher&#x27;&quot;</span>&gt;</span>查看教师<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">component</span> <span class="attr">:is</span>=<span class="string">&quot;currentCom&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&#x27;./components/Student&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> Teacher <span class="keyword">from</span> <span class="string">&#x27;./components/Teacher&#x27;</span></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  data () &#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">currentCom</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;,</span></span><br><span class="line"><span class="javascript">  <span class="attr">components</span>: &#123;</span></span><br><span class="line"><span class="javascript">    Student,</span></span><br><span class="line"><span class="javascript">    Teacher</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210627003748.jpg" alt="img"></strong></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>本实例使用了Element UI，请先安装Element UI：<a href="/203.html">基于vue-cli安装Element UI</a></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>使用路由实现组件切换</title>
    <url>/205.html</url>
    <content><![CDATA[<p>新建项目时选择自动下载vue-router</p>
<h3 id="修改src-main-js"><a href="#修改src-main-js" class="headerlink" title="修改src/main.js"></a><strong>修改src/main.js</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span> <span class="comment">//新添加</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span> <span class="comment">//新添加，避免后期打包样式不同，要放在import App from &#x27;./App&#x27;;之前</span></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">&#x27;./App&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line">Vue.use(ElementUI)<span class="comment">//新添加</span></span><br><span class="line"><span class="comment">/* eslint-disable no-new */</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  router,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">  <span class="attr">components</span>: &#123;App&#125;,</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&#x27;&lt;App/&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="修改src-router-index-js"><a href="#修改src-router-index-js" class="headerlink" title="修改src/router/index.js"></a><strong>修改src/router/index.js</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">//引入组件</span></span><br><span class="line"><span class="keyword">import</span> Student <span class="keyword">from</span> <span class="string">&quot;../components/Student&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> Teacher <span class="keyword">from</span> <span class="string">&quot;../components/Teacher&quot;</span>;</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  <span class="attr">mode</span>: <span class="string">&#x27;history&#x27;</span>,</span><br><span class="line">  <span class="comment">//定义路由地址和组件</span></span><br><span class="line">  <span class="attr">routes</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/Student&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: Student</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/Teacher&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>: Teacher</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="App-vue"><a href="#App-vue" class="headerlink" title="App.vue"></a><strong>App.vue</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/Student&quot;</span>&gt;</span>学生<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/Teacher&quot;</span>&gt;</span>教师<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;App&#x27;</span></span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Student-Vue"><a href="#Student-Vue" class="headerlink" title="Student.Vue"></a><strong>Student.Vue</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 10px&quot;</span>&gt;</span>当前是学生表<span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;students&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 60%;margin-left: 20%;margin-top: 20px&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;编号&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;Student&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">students</span>:[</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;小米&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;小花&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;小明&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;雪莉&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      ]</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Teacher-vue"><a href="#Teacher-vue" class="headerlink" title="Teacher.vue"></a><strong>Teacher.vue</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-tag</span> <span class="attr">type</span>=<span class="string">&quot;warning&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 10px&quot;</span>&gt;</span>当前是教师表<span class="tag">&lt;/<span class="name">el-tag</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">el-table</span> <span class="attr">:data</span>=<span class="string">&quot;teachers&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 60%;margin-left: 20%;margin-top: 20px&quot;</span> <span class="attr">border</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;id&quot;</span> <span class="attr">label</span>=<span class="string">&quot;编号&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;name&quot;</span> <span class="attr">label</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">el-table-column</span> <span class="attr">prop</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">label</span>=<span class="string">&quot;性别&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">el-table-column</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">el-table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  <span class="attr">name</span>: <span class="string">&#x27;Teacher&#x27;</span>,</span></span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="javascript">      <span class="attr">teachers</span>:[</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Tom&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">2</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Sherry&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">3</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Jack&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;,</span></span><br><span class="line"><span class="javascript">        &#123;</span></span><br><span class="line"><span class="javascript">          <span class="attr">id</span>:<span class="number">4</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">name</span>:<span class="string">&#x27;Mary&#x27;</span>,</span></span><br><span class="line"><span class="javascript">          <span class="attr">sex</span>:<span class="string">&#x27;女&#x27;</span></span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">      ]</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript">  &#125;</span></span><br><span class="line"><span class="javascript">&#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210627020527.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Vue.js</category>
      </categories>
      <tags>
        <tag>Vue.js</tag>
      </tags>
  </entry>
  <entry>
    <title>Element UI引入第三方图标</title>
    <url>/206.html</url>
    <content><![CDATA[<p>Element UI自带的图标数量太少了,并不能满足我们的开发需求</p>
<h3 id="第三方图标地址"><a href="#第三方图标地址" class="headerlink" title="第三方图标地址"></a><strong>第三方图标地址</strong></h3><p><a href="https://www.iconfont.cn/">iconfont-阿里巴巴矢量图标库</a></p>
<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a><strong>操作步骤</strong></h3><p>①查找需要的图标,添加入库</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153045.jpg" alt="img"></p>
<p>②点击右上角的购物车图标按钮，添加到项目，没有项目就新建</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153128.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153137.jpg" alt="img"></p>
<p>③修改项目设置</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153346.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153401.jpg" alt="img"></p>
<p>④修改图片（样式、名称等）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153521.jpg" alt="img"></p>
<p>⑤选择Font Class，下载至本地</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153607.jpg" alt="img"></p>
<p>⑥将下载的压缩包解压后，将里面的文件复制到项目中</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210628153740.jpg" alt="img"></p>
<p>⑦在项目中引用</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&#x27;@/assets/myicon/iconfont.css&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>Element UI</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot+Mybatis使用Element UI分页</title>
    <url>/207.html</url>
    <content><![CDATA[<p>前端向后端发送的数据有当前页、每页记录数，后端向前端发送的数据有查询到的数据集合、数据总记录数（满足查询条件的全部数据的总记录数）</p>
<h3 id="前端分页代码"><a href="#前端分页代码" class="headerlink" title="前端分页代码"></a><strong>前端分页代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">el-pagination</span></span></span><br><span class="line"><span class="tag">      <span class="attr">align</span>=<span class="string">&quot;center&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">style</span>=<span class="string">&quot;margin-top: 8px&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">background</span></span></span><br><span class="line"><span class="tag">      <span class="attr">layout</span>=<span class="string">&quot;prev, pager, next&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:current-page.sync</span>=<span class="string">&quot;pagination.page&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:page-size.sync</span>=<span class="string">&quot;pagination.size&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">:total</span>=<span class="string">&quot;pagination.count&quot;</span></span></span><br><span class="line"><span class="tag">      @<span class="attr">current-change</span>=<span class="string">&quot;handleCurrentChange&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">el-pagination</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="分页属性（包括当前页，每页记录数，数据总记录数）"><a href="#分页属性（包括当前页，每页记录数，数据总记录数）" class="headerlink" title="分页属性（包括当前页，每页记录数，数据总记录数）"></a><strong>分页属性（包括当前页，每页记录数，数据总记录数）</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">pagination: &#123;</span><br><span class="line">  <span class="attr">page</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">size</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>更新当前页的值</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//刷新当前页的值</span></span><br><span class="line"><span class="function"><span class="title">handleCurrentChange</span>(<span class="params">page</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.pagination.page = page;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="请求后台"><a href="#请求后台" class="headerlink" title="请求后台"></a><strong>请求后台</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">axios</span><br><span class="line">  .get(<span class="string">&#x27;http://localhost/paper/getListFindByUserId?userId=&#x27;</span> + sessionStorage.getItem(<span class="string">&quot;userId&quot;</span>) + <span class="string">&#x27;&amp;page=&#x27;</span> + <span class="built_in">this</span>.pagination.page + <span class="string">&#x27;&amp;size=&#x27;</span> + <span class="built_in">this</span>.pagination.size)</span><br><span class="line">  .then(<span class="function"><span class="params">response</span> =&gt;</span> (<span class="built_in">this</span>.myPaper = response.data.rows, <span class="built_in">this</span>.pagination.count = response.data.total))</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">	<span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure>

<h3 id="mapper-xml代码"><a href="#mapper-xml代码" class="headerlink" title="mapper.xml代码"></a><strong>mapper.xml代码</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;paperResult&quot;</span>&gt;</span></span><br><span class="line">	select *</span><br><span class="line">	from t_paper</span><br><span class="line">	<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userId != null&quot;</span>&gt;</span></span><br><span class="line">			and userId = #&#123;userId&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">	order by id desc</span><br><span class="line">	<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;start != null and size != null&quot;</span>&gt;</span></span><br><span class="line">		limit #&#123;start&#125;,#&#123;size&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCount&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Long&quot;</span>&gt;</span></span><br><span class="line">	select count(*)</span><br><span class="line">	from t_paper</span><br><span class="line">	<span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;userId != null&quot;</span>&gt;</span></span><br><span class="line">			and userId = #&#123;userId&#125;</span><br><span class="line">		<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="请求的后端方法"><a href="#请求的后端方法" class="headerlink" title="请求的后端方法"></a><strong>请求的后端方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户id获取试卷(分页)</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getListFindByUserId&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map <span class="title">getListFindByUserId</span><span class="params">(Integer userId, <span class="meta">@RequestParam(value = &quot;page&quot;,required = false)</span>Integer page, <span class="meta">@RequestParam(value = &quot;size&quot;,required = false)</span>Integer size)</span> </span>&#123;</span><br><span class="line">	PageBean pageBean = <span class="keyword">new</span> PageBean(page, size);</span><br><span class="line">	Map resultMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">	Map map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">	map.put(<span class="string">&quot;userId&quot;</span>, userId);</span><br><span class="line">	map.put(<span class="string">&quot;start&quot;</span>, pageBean.getStart());</span><br><span class="line">	map.put(<span class="string">&quot;size&quot;</span>, pageBean.getPageSize());</span><br><span class="line">	List&lt;Paper&gt; paperList = paperService.list(map);</span><br><span class="line">	resultMap.put(<span class="string">&quot;total&quot;</span>, paperService.getCount(map));</span><br><span class="line">	resultMap.put(<span class="string">&quot;rows&quot;</span>, paperList);</span><br><span class="line">	<span class="keyword">return</span> resultMap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>分页Model类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页Model类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2020-09-10 21:53</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第几页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> page;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每页记录数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageSize;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 起始页</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> start;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PageBean</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.page = page;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPage</span><span class="params">(<span class="keyword">int</span> page)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.page = page;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (page - <span class="number">1</span>) * pageSize;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210701223215.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
        <tag>MyBatis</tag>
        <tag>Element UI</tag>
      </tags>
  </entry>
  <entry>
    <title>在线考试系统</title>
    <url>/208.html</url>
    <content><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><strong>项目地址</strong></h3><p>GitHub前端代码地址：<a href="https://github.com/a6678696/ExamSystem2">https://github.com/a6678696/ExamSystem2</a></p>
<p>GitHub后端代码地址：<a href="https://github.com/a6678696/ExamSystem">https://github.com/a6678696/ExamSystem</a></p>
<h3 id="使用的技术"><a href="#使用的技术" class="headerlink" title="使用的技术"></a><strong>使用的技术</strong></h3><p>本项目为前后端分离项目，使用的技术有：Spring Boot、Mybatis、MySQL5.6、Vue.js、Element UI</p>
<h3 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a><strong>功能介绍</strong></h3><h4 id="考生功能"><a href="#考生功能" class="headerlink" title="考生功能"></a>考生功能</h4><p>注册、登录、在线考试（交卷、强制交卷、自动交卷）、查看成绩以及试卷详情、修改密码、注销登录</p>
<h4 id="教师功能"><a href="#教师功能" class="headerlink" title="教师功能"></a>教师功能</h4><p>登录、发布试题（单选题和填空题）、查看全部试题（包括其他教师发布的试题）、我的试题管理（增删改查）、查看全部学生成绩、修改密码、注销登录</p>
<h4 id="管理员功能"><a href="#管理员功能" class="headerlink" title="管理员功能"></a>管理员功能</h4><p>和教师的功能一样，但是多了用户管理（添加、修改、查看用户信息）、全部试题管理、科目管理</p>
<h3 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a><strong>图片展示</strong></h3><h4 id="考生"><a href="#考生" class="headerlink" title="考生"></a>考生</h4><h5 id="考生注册"><a href="#考生注册" class="headerlink" title="考生注册"></a>考生注册</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044617.jpg" alt="img"></p>
<h5 id="考生登录"><a href="#考生登录" class="headerlink" title="考生登录"></a>考生登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044629.jpg" alt="img"></p>
<h5 id="考生界面"><a href="#考生界面" class="headerlink" title="考生界面"></a>考生界面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702045121.jpg" alt="img"></p>
<h5 id="选择试题类型"><a href="#选择试题类型" class="headerlink" title="选择试题类型"></a>选择试题类型</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044642.jpg" alt="img"></p>
<h5 id="考生考试"><a href="#考生考试" class="headerlink" title="考生考试"></a>考生考试</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044652.jpg" alt="img"></p>
<h5 id="考生查看成绩"><a href="#考生查看成绩" class="headerlink" title="考生查看成绩"></a>考生查看成绩</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044705.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702045408.jpg" alt="img"></p>
<h5 id="考生修改密码"><a href="#考生修改密码" class="headerlink" title="考生修改密码"></a>考生修改密码</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044718.jpg" alt="img"></p>
<h5 id="考生注销登录"><a href="#考生注销登录" class="headerlink" title="考生注销登录"></a>考生注销登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702044731.jpg" alt="img"></p>
<h4 id="教师"><a href="#教师" class="headerlink" title="教师"></a>教师</h4><h5 id="教师登录"><a href="#教师登录" class="headerlink" title="教师登录"></a>教师登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050134.jpg" alt="img"></p>
<h5 id="教师界面"><a href="#教师界面" class="headerlink" title="教师界面"></a>教师界面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050148.jpg" alt="img"></p>
<h5 id="教师查看学生成绩"><a href="#教师查看学生成绩" class="headerlink" title="教师查看学生成绩"></a>教师查看学生成绩</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050207.jpg" alt="img"></p>
<h5 id="教师添加试题"><a href="#教师添加试题" class="headerlink" title="教师添加试题"></a>教师添加试题</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050225.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050234.jpg" alt="img"></p>
<h5 id="教师查看全部试题"><a href="#教师查看全部试题" class="headerlink" title="教师查看全部试题"></a>教师查看全部试题</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050246.jpg" alt="img"></p>
<h5 id="教师管理我的试题"><a href="#教师管理我的试题" class="headerlink" title="教师管理我的试题"></a>教师管理我的试题</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050255.jpg" alt="img"></p>
<h5 id="教师修改密码"><a href="#教师修改密码" class="headerlink" title="教师修改密码"></a>教师修改密码</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050306.jpg" alt="img"></p>
<h5 id="教师注销登录"><a href="#教师注销登录" class="headerlink" title="教师注销登录"></a>教师注销登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050316.jpg" alt="img"></p>
<h4 id="管理员"><a href="#管理员" class="headerlink" title="管理员"></a>管理员</h4><h5 id="管理员登录"><a href="#管理员登录" class="headerlink" title="管理员登录"></a>管理员登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050658.jpg" alt="img"></p>
<h5 id="管理员界面"><a href="#管理员界面" class="headerlink" title="管理员界面"></a>管理员界面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210703033842.jpg" alt="img"></p>
<h5 id="科目管理"><a href="#科目管理" class="headerlink" title="科目管理"></a>科目管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210703033826.jpg" alt="img"></p>
<h5 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050717.jpg" alt="img"></p>
<h5 id="全部试题管理"><a href="#全部试题管理" class="headerlink" title="全部试题管理"></a>全部试题管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210702050728.jpg" alt="img"></p>]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>个人项目</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中四种循环语句</title>
    <url>/209.html</url>
    <content><![CDATA[<p>Java中循环有while、do…while…，for，增强for</p>
<h3 id="while"><a href="#while" class="headerlink" title="while"></a><strong>while</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">	System.out.println(<span class="string">&quot;请输入一个数字:&quot;</span>);</span><br><span class="line">	<span class="keyword">int</span> n = sc.nextInt();</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (i &lt;= n) &#123;</span><br><span class="line">		System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="do…while…"><a href="#do…while…" class="headerlink" title="do…while…"></a><strong>do…while…</strong></h3><p>即使循环条件不满足，也至少执行一次</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">do</span> &#123;</span><br><span class="line">		System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">		i++;</span><br><span class="line">	&#125; <span class="keyword">while</span> (i &lt; <span class="number">6</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="for"><a href="#for" class="headerlink" title="for"></a><strong>for</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">		System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="增强for"><a href="#增强for" class="headerlink" title="增强for"></a><strong>增强for</strong></h3><p>一般用于遍历数组和集合，数据类型为数组或集合的数据类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span>[] intArr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i : intArr) &#123;</span><br><span class="line">		System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>idea将Spring Boot项目打包成war包</title>
    <url>/21.html</url>
    <content><![CDATA[<h3 id="修改节点"><a href="#修改节点" class="headerlink" title="修改节点"></a>修改节点</h3><p>修改pom.xml的packaging节点改为war</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015115645.jpg" alt="img"></p>
<h3 id="排除Tomcat容器"><a href="#排除Tomcat容器" class="headerlink" title="排除Tomcat容器"></a>排除Tomcat容器</h3><p>排除Spring Boot内置的Tomcat容器</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--移除嵌入式tomcat插件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--移除嵌入式tomcat插件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--servlet-api的依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改finalName节点"><a href="#修改finalName节点" class="headerlink" title="修改finalName节点"></a>修改finalName节点</h3><p>修改打包后的war包名(finalName节点)</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>JXC<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<h3 id="实现configure方法"><a href="#实现configure方法" class="headerlink" title="实现configure方法"></a>实现configure方法</h3><p>主程序继承SpringBootServletInitializer类并实现configure方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.ledao.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyblogApplication</span> <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> SpringApplicationBuilder <span class="title">configure</span><span class="params">(SpringApplicationBuilder application)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> application.sources(MyblogApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyblogApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>用idea打包，点击idea的maven图形界面的package</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201015134809.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>cmd命令运行一个Java文件</title>
    <url>/210.html</url>
    <content><![CDATA[<h3 id="代码如下：（名称为HelloWorld-java）"><a href="#代码如下：（名称为HelloWorld-java）" class="headerlink" title="代码如下：（名称为HelloWorld.java）"></a><strong>代码如下</strong>：（名称为HelloWorld.java）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;Hello World!!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用javac命令"><a href="#使用javac命令" class="headerlink" title="使用javac命令"></a><strong>使用javac命令</strong></h3><p>将.java文件编译成.class字节码文件</p>
<p>javac HelloWorld.java</p>
<h3 id="使用java命令"><a href="#使用java命令" class="headerlink" title="使用java命令"></a><strong>使用java命令</strong></h3><p>运行一个已编译的Java程序，参数是类名</p>
<p>java HelloWorld</p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210707092300.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>Java自定义异常</title>
    <url>/211.html</url>
    <content><![CDATA[<h3 id="选择继承哪个父类"><a href="#选择继承哪个父类" class="headerlink" title="选择继承哪个父类"></a><strong>选择继承哪个父类</strong></h3><p>可以继承的父类有Throwable、Exception、RunTimeException，一般继承后两个，如果不要求调用者一定要处理抛出的异常，就继承RuntimeException</p>
<h3 id="自定义异常类构造方法"><a href="#自定义异常类构造方法" class="headerlink" title="自定义异常类构造方法"></a><strong>自定义异常类构造方法</strong></h3><p>idea可以自动生成，Alt+Insert快捷键，选择构造方法</p>
<h3 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下"></a><strong>代码如下</strong></h3><p>MyException.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-07 10:43</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyException</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String message, Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(Throwable cause)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(cause);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyException</span><span class="params">(String message, Throwable cause, <span class="keyword">boolean</span> enableSuppression, <span class="keyword">boolean</span> writableStackTrace)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(message, cause, enableSuppression, writableStackTrace);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>People.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-07 10:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(String sex)</span> <span class="keyword">throws</span> MyException </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;男&quot;</span>.equals(sex) || <span class="string">&quot;女&quot;</span>.equals(sex)) &#123;</span><br><span class="line">            <span class="keyword">this</span>.sex = sex;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="string">&quot;性别必须是男或女&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Test.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        People people = <span class="keyword">new</span> People();</span><br><span class="line">        people.setSex(<span class="string">&quot;11&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210707105859.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/schangxiang/p/11179314.html">Java自定义异常 - 拭不去の泪痕 - 博客园</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>创建线程的四种方式</title>
    <url>/212.html</url>
    <content><![CDATA[<h3 id="继承Thread类"><a href="#继承Thread类" class="headerlink" title="继承Thread类"></a><strong>继承Thread类</strong></h3><p>通过继承 Thread 类，并重写它的 run 方法，我们就可以创建一个线程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-09 22:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;线程运行&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> MyThread();</span><br><span class="line">        thread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实现-Runnable接口"><a href="#实现-Runnable接口" class="headerlink" title="实现 Runnable接口"></a><strong>实现 Runnable接口</strong></h3><p>通过实现 Runnable ，并实现 run 方法，也可以创建一个线程</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-09 22:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;运行线程&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Thread thread = <span class="keyword">new</span> Thread(<span class="keyword">new</span> MyThread());</span><br><span class="line">        thread.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实现-Callable-接口，并结合-Future-实现"><a href="#实现-Callable-接口，并结合-Future-实现" class="headerlink" title="实现 Callable 接口，并结合 Future 实现"></a><strong>实现 Callable 接口，并结合 Future 实现</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.Callable;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.FutureTask;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-09 22:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Callable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line">        FutureTask task = <span class="keyword">new</span> FutureTask(<span class="keyword">new</span> MyThread());</span><br><span class="line">        <span class="keyword">new</span> Thread(task).start();</span><br><span class="line">        String result = task.get();</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="通过线程池创建线程"><a href="#通过线程池创建线程" class="headerlink" title="通过线程池创建线程"></a><strong>通过线程池创建线程</strong></h3><p>用 JDK 自带的 Executors 来创建线程池对象</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-09 22:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(Thread.currentThread().getName() + <span class="string">&quot;thread run...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ExecutorService executorService = Executors.newCachedThreadPool();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            executorService.execute(<span class="keyword">new</span> MyThread());</span><br><span class="line">        &#125;</span><br><span class="line">        executorService.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://segmentfault.com/a/1190000037589073">https://segmentfault.com/a/1190000037589073</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis使用分页插件PageHelper</title>
    <url>/213.html</url>
    <content><![CDATA[<p>GitHub完整代码地址：<a href="https://github.com/a6678696/MyBatisPageHelperTest">https://github.com/a6678696/MyBatisPageHelperTest</a></p>
<h3 id="pom-xml引入分页插件"><a href="#pom-xml引入分页插件" class="headerlink" title="pom.xml引入分页插件"></a><strong>pom.xml引入分页插件</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a><strong>application.yml配置</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">pagehelper:</span></span><br><span class="line">  <span class="attr">helperDialect:</span> <span class="string">mysql</span></span><br><span class="line">  <span class="attr">reasonable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">supportMethodsArguments:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">params:</span> <span class="string">count=countSql</span></span><br></pre></td></tr></table></figure>

<h3 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a><strong>User.java</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-13 23:36</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>UserMapper.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-13 23:40</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找全部用户</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserMapper-xml"><a href="#UserMapper-xml" class="headerlink" title="UserMapper.xml"></a><strong>UserMapper.xml</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--suppress ALL--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ledao.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;userName&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;nickName&quot;</span> <span class="attr">column</span>=<span class="string">&quot;nickName&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAll&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserResult&quot;</span>&gt;</span></span><br><span class="line">        select * from t_user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="UserService-java"><a href="#UserService-java" class="headerlink" title="UserService.java"></a><strong>UserService.java</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-13 23:37</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查找全部用户</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> page</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> size</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">PageInfo <span class="title">findAll</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> size)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserServiceImpl-java"><a href="#UserServiceImpl-java" class="headerlink" title="UserServiceImpl.java"></a><strong>UserServiceImpl.java</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.ledao.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.ledao.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-13 23:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;userService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo <span class="title">findAll</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        PageHelper.startPage(page, size);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.findAll();</span><br><span class="line">        PageInfo result = <span class="keyword">new</span> PageInfo&lt;&gt;(userList);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="UserController-java"><a href="#UserController-java" class="headerlink" title="UserController.java"></a><strong>UserController.java</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.ledao.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-14 0:10</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/findAll&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PageInfo <span class="title">findAll</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.findAll(page, size);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>结果</strong></p>
</blockquote>
<p>浏览器地址栏输入<a href="http://localhost/user/findAll?page=3&amp;size=4">http://localhost/user/findAll?page=3&amp;size=4</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210714010421.jpg" alt="img"></p>]]></content>
      <categories>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>浏览器格式化JSON数据插件</title>
    <url>/214.html</url>
    <content><![CDATA[<p>插件名称为JSONview</p>
<h3 id="下载和安装"><a href="#下载和安装" class="headerlink" title="下载和安装"></a><strong>下载和安装</strong></h3><p>①Edge直接安装</p>
<p>微软Edge外接程序下载地址：<a href="https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home">https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home</a></p>
<p>搜索JSONview并安装即可</p>
<p>②通过下载插件包安装</p>
<p>下载地址：<a href="https://www.extfans.com/productivity/cgphfnglahpambfhocchajalljaeegef/">https://www.extfans.com/productivity/cgphfnglahpambfhocchajalljaeegef/</a></p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p>直接在浏览器输入<a href="https://www.zoutl.cn/getFruitListJson">https://www.zoutl.cn/getFruitListJson</a> 测试</p>
<p>使用插件前</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210714015811.jpg" alt="img"></p>
<p>使用插件后</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210714015821.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>将 JSON 字符串转为 list</title>
    <url>/215.html</url>
    <content><![CDATA[<h3 id="引入hutool依赖"><a href="#引入hutool依赖" class="headerlink" title="引入hutool依赖"></a><strong>引入hutool依赖</strong></h3><p>使用到该依赖的HTTP请求方法</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>HTTP请求的地址为：<a href="http://www.zoutl.cn/getFruitListJson">http://www.zoutl.cn/getFruitListJson</a> ，返回的结果如下图（下面四种方法只能处理中括号[]以及其中的内容，所以要对HTTP请求返回的结果进行截取处理）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210718040651.jpg" alt="img"></p>
<h3 id="Fruit实体类"><a href="#Fruit实体类" class="headerlink" title="Fruit实体类"></a><strong>Fruit实体类</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-17 22:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Fruit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer num;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNum</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用GSON"><a href="#使用GSON" class="headerlink" title="使用GSON"></a><strong>使用GSON</strong></h3><p>引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.reflect.TypeToken;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//http请求获取json字符串</span></span><br><span class="line">        String str = HttpUtil.get(<span class="string">&quot;https://www.zoutl.cn/getFruitListJson&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> start = str.indexOf(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> end = str.indexOf(<span class="string">&quot;]&quot;</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//截取字符串</span></span><br><span class="line">        str = str.substring(start, end);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        <span class="comment">//转为list</span></span><br><span class="line">        Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">        List&lt;Fruit&gt; fruitList = gson.fromJson(str, <span class="keyword">new</span> TypeToken&lt;List&lt;Fruit&gt;&gt;()&#123;&#125;.getType());</span><br><span class="line">        <span class="keyword">for</span> (Fruit fruit : fruitList) &#123;</span><br><span class="line">            System.out.println(fruit.getId() + <span class="string">&quot;,&quot;</span> + fruit.getName() + <span class="string">&quot;,&quot;</span> + fruit.getNum());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用FastJSON"><a href="#使用FastJSON" class="headerlink" title="使用FastJSON"></a><strong>使用FastJSON</strong></h3><p>引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.75<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//http请求获取json字符串</span></span><br><span class="line">        String str = HttpUtil.get(<span class="string">&quot;https://www.zoutl.cn/getFruitListJson&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> start = str.indexOf(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> end = str.indexOf(<span class="string">&quot;]&quot;</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//截取字符串</span></span><br><span class="line">        str = str.substring(start, end);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        <span class="comment">//转为list</span></span><br><span class="line">        List&lt;Fruit&gt; fruitList = JSON.parseArray(str, Fruit.class);</span><br><span class="line">        <span class="keyword">for</span> (Fruit fruit : fruitList) &#123;</span><br><span class="line">            System.out.println(fruit.getId() + <span class="string">&quot;,&quot;</span> + fruit.getName() + <span class="string">&quot;,&quot;</span> + fruit.getNum());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用JackJSON"><a href="#使用JackJSON" class="headerlink" title="使用JackJSON"></a><strong>使用JackJSON</strong></h3><p>引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.type.TypeReference;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//http请求获取json字符串</span></span><br><span class="line">        String str = HttpUtil.get(<span class="string">&quot;https://www.zoutl.cn/getFruitListJson&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> start = str.indexOf(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> end = str.indexOf(<span class="string">&quot;]&quot;</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//截取字符串</span></span><br><span class="line">        str = str.substring(start, end);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        <span class="comment">//转为list</span></span><br><span class="line">        ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        List&lt;Fruit&gt; fruitList = objectMapper.readValue(str, <span class="keyword">new</span> TypeReference&lt;List&lt;Fruit&gt;&gt;()&#123;&#125;);</span><br><span class="line">        <span class="keyword">for</span> (Fruit fruit : fruitList) &#123;</span><br><span class="line">            System.out.println(fruit.getId() + <span class="string">&quot;,&quot;</span> + fruit.getName() + <span class="string">&quot;,&quot;</span> + fruit.getNum());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="传统方式org-json"><a href="#传统方式org-json" class="headerlink" title="传统方式org.json"></a><strong>传统方式org.json</strong></h3><p>引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>20210307<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cn.hutool.http.HttpUtil;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONArray;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//http请求获取json字符串</span></span><br><span class="line">        String str = HttpUtil.get(<span class="string">&quot;https://www.zoutl.cn/getFruitListJson&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> start = str.indexOf(<span class="string">&quot;[&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> end = str.indexOf(<span class="string">&quot;]&quot;</span>) + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//截取字符串</span></span><br><span class="line">        str = str.substring(start, end);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">        <span class="comment">//先转为jsonArray</span></span><br><span class="line">        JSONArray jsonArray = <span class="keyword">new</span> JSONArray(str);</span><br><span class="line">        <span class="comment">//转为list</span></span><br><span class="line">        List&lt;Fruit&gt; fruitList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Object o : jsonArray) &#123;</span><br><span class="line">            <span class="comment">//将数组的每个元素转为jsonObject</span></span><br><span class="line">            JSONObject jsonObject = <span class="keyword">new</span> JSONObject(o.toString());</span><br><span class="line">            Fruit fruit = <span class="keyword">new</span> Fruit();</span><br><span class="line">            fruit.setId((Integer) jsonObject.get(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">            fruit.setName((String) jsonObject.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">            fruit.setNum((Integer) jsonObject.get(<span class="string">&quot;num&quot;</span>));</span><br><span class="line">            fruitList.add(fruit);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (Fruit fruit : fruitList) &#123;</span><br><span class="line">            System.out.println(fruit.getId() + <span class="string">&quot;,&quot;</span> + fruit.getName() + <span class="string">&quot;,&quot;</span> + fruit.getNum());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210718025513.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>highlight.js实现代码复制</title>
    <url>/216.html</url>
    <content><![CDATA[<h3 id="下载js文件"><a href="#下载js文件" class="headerlink" title="下载js文件"></a><strong>下载js文件</strong></h3><p>阿里云盘链接：<a href="https://www.aliyundrive.com/s/LGzQZBYXYGZ">https://www.aliyundrive.com/s/LGzQZBYXYGZ</a></p>
<h3 id="前端引入样式和js文件"><a href="#前端引入样式和js文件" class="headerlink" title="前端引入样式和js文件"></a><strong>前端引入样式和js文件</strong></h3><p>引入顺序按下面代码所示，顺序不同可能会得不到我们想要的结果</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--代码高亮样式--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>  <span class="attr">href</span>=<span class="string">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/styles/androidstudio.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--行号js文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/highlight.line-numbers.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--代码高亮js文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.5.0/highlight.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--代码复制--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/highlightjs-copy-button.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/js/highlightjs-copy-button.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--初始化--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">	hljs.initHighlightingOnLoad();<span class="comment">//代码高亮</span></span></span><br><span class="line"><span class="javascript">	hljsln.initLineNumbersOnLoad();<span class="comment">//行号</span></span></span><br><span class="line"><span class="javascript">	hljs.initCopyButtonOnLoad();<span class="comment">//代码复制</span></span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改复制代码按钮大小及其样式"><a href="#修改复制代码按钮大小及其样式" class="headerlink" title="修改复制代码按钮大小及其样式"></a><strong>修改复制代码按钮大小及其样式</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.hljs-button</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#0b0b0b</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hljs-button</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#6eb9f1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210718200718.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://github.com/DevCreel/highlightjs-copy-button.js">https://github.com/DevCreel/highlightjs-copy-button.js</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>highlight.js</tag>
      </tags>
  </entry>
  <entry>
    <title>一款免费且好用的SSH连接工具</title>
    <url>/217.html</url>
    <content><![CDATA[<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a><strong>优点</strong></h3><p>免费、简单、有图形界面可以直接操作文件、可以使用网页版无需安装</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a><strong>使用</strong></h3><h4 id="下载与安装"><a href="#下载与安装" class="headerlink" title="下载与安装"></a>下载与安装</h4><p>官网地址：<a href="https://www.terminal.icu/">https://www.terminal.icu/</a></p>
<h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>注册并登录后，添加自己的服务器，输入对应ip及其登录密码开始连接即可</p>
<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>左侧上方是命令行输入终端，下方是图形界面（可以直接操作文件），右侧是系统的一些信息</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210718233808.jpg"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的HTML解析器：jsoup</title>
    <url>/218.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h3><p>jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</p>
<h3 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a><strong>主要功能</strong></h3><p>从一个URL，文件或字符串中解析HTML</p>
<p>使用DOM或CSS选择器来查找、取出数据</p>
<p>可操作HTML元素、属性、文本</p>
<h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a><strong>常用方法</strong></h3><h4 id="Jsoup-connect-url字符串-get"><a href="#Jsoup-connect-url字符串-get" class="headerlink" title="Jsoup.connect(url字符串).get()"></a>Jsoup.connect(url字符串).get()</h4><p>从URL加载HTML</p>
<h4 id="Jsoup-parse-HTML文件路径"><a href="#Jsoup-parse-HTML文件路径" class="headerlink" title="Jsoup.parse(HTML文件路径)"></a>Jsoup.parse(HTML文件路径)</h4><p>从文件加载HTML</p>
<h4 id="Jsoup-parse-HTML字符串"><a href="#Jsoup-parse-HTML字符串" class="headerlink" title="Jsoup.parse(HTML字符串)"></a>Jsoup.parse(HTML字符串)</h4><p>从字符串加载HTML</p>
<h4 id="document-title"><a href="#document-title" class="headerlink" title="document.title()"></a>document.title()</h4><p>获取HTML页面的标题</p>
<h4 id="document-select"><a href="#document-select" class="headerlink" title="document.select()"></a>document.select()</h4><p>获取标签</p>
<h4 id="elements-attr"><a href="#elements-attr" class="headerlink" title="elements.attr()"></a>elements.attr()</h4><p>获取标签的属性</p>
<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a><strong>引入依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a><strong>例子</strong></h3><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h4><h5 id="Link实体类"><a href="#Link实体类" class="headerlink" title="Link实体类"></a>Link实体类</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> entity;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-20 8:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Link</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String linkName;</span><br><span class="line">    <span class="keyword">private</span> String linkUrl;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLinkName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> linkName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLinkName</span><span class="params">(String linkName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.linkName = linkName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getLinkUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> linkUrl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLinkUrl</span><span class="params">(String linkUrl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.linkUrl = linkUrl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> entity.Link;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">        List&lt;Link&gt; linkList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//爬取前3页</span></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">//获取该页面的HTML源代码</span></span><br><span class="line">            Document document = Jsoup.connect(<span class="string">&quot;http://www.zoutl.cn/index?page=&quot;</span> + i).get();</span><br><span class="line">            <span class="comment">//爬取id为div1的链接</span></span><br><span class="line">            Elements links = document.select(<span class="string">&quot;a#div1&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (Element link : links) &#123;</span><br><span class="line">                Link link1 = <span class="keyword">new</span> Link();</span><br><span class="line">                link1.setLinkName(link.text());</span><br><span class="line">                link1.setLinkUrl(<span class="string">&quot;http://www.zoutl.cn&quot;</span> + link.attr(<span class="string">&quot;href&quot;</span>));</span><br><span class="line">                linkList.add(link1);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="keyword">new</span> Date() + <span class="string">&quot;: 完成第&quot;</span> + i + <span class="string">&quot;页的爬取&quot;</span>);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (Link link : linkList) &#123;</span><br><span class="line">            System.out.println(index + <span class="string">&quot;、&quot;</span> + link.getLinkName() + <span class="string">&quot;：&quot;</span> + link.getLinkUrl());</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720222308.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>jsoup</tag>
      </tags>
  </entry>
  <entry>
    <title>线性查找</title>
    <url>/219.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h3><p>线性查找又称顺序查找，是一种最简单的查找方法，它的基本思想是从第一个记录开始，逐个比较记录的关键字，直到和给定的K值相等，则查找成功；若比较结果与文件中n个记录的关键字都不等，则查找失败。</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">3</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">21</span>, <span class="number">34</span>, <span class="number">65</span>, <span class="number">13</span>, <span class="number">67</span>, <span class="number">23</span>, <span class="number">89</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入你要查找的数：&quot;</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> num = sc.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num == arr[i]) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;你要查找的数的数组下标为：&quot;</span> + i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i == arr.length - <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;你要查找的数不存在！！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720225427.jpg" alt="img"> <img src="https://image.zoutl.cn/hexo-blog/blogImage/20210720225213.jpg" alt="img"></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>idea Maven工具栏按钮的作用</title>
    <url>/22.html</url>
    <content><![CDATA[<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201016002833.jpg" alt="img"></p>
<h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a><strong>clean</strong></h3><p>清理，在进行真正的构建之前进行一些清理工作，移除所有上一次构建生成的文件。执行该命令会删除项目路径下的target文件，但是不会删除本地的maven仓库已经生成的jar文件。</p>
<h3 id="validate"><a href="#validate" class="headerlink" title="validate"></a><strong>validate</strong></h3><p>验证，验证工程是否正确，所需的信息是否完整。</p>
<h3 id="compile"><a href="#compile" class="headerlink" title="compile"></a><strong>compile</strong></h3><p>编译源码，编译生成class文件,编译命令，只编译选定的目标，不管之前是否已经编译过，会在你的项目路径下生成一个target目录，在该目录中包含一个classes文件夹，里面全是生成的class文件及字节码文件。</p>
<h3 id="test"><a href="#test" class="headerlink" title="test"></a><strong>test</strong></h3><p>单元测试，测试。</p>
<h3 id="package"><a href="#package" class="headerlink" title="package"></a><strong>package</strong></h3><p>打包，将工程文件打包为指定的格式，例如JAR，WAR等。这个命令会在你的项目路径下一个target目录，并且拥有compile命令的功能进行编译，同时会在target目录下生成项目的jar/war文件。如果a项目依赖于b项目，打包b项目时，只会打包到b项目下target下，编译a项目时就会报错，因为找不到所依赖的b项目，说明a项目在本地仓库是没有找到它所依赖的b项目，这时就用到install命令了</p>
<h3 id="verify"><a href="#verify" class="headerlink" title="verify"></a><strong>verify</strong></h3><p>核实，检查package是否有效、符合标准。</p>
<h3 id="install"><a href="#install" class="headerlink" title="install"></a><strong>install</strong></h3><p>安装至本地仓库，将包安装至本地仓库，以让其它项目依赖。该命令包含了package命令功能，不但会在项目路径下生成class文件和jar包，同时会在你的本地maven仓库生成jar文件，供其他项目使用（如果没有设置过maven本地仓库，一般在用户/.m2目录下。如果a项目依赖于b项目，那么install b项目时，会在本地仓库同时生成pom文件和jar文件，解决了上面打包package出错的问题）</p>
<h3 id="build"><a href="#build" class="headerlink" title="build"></a><strong>build</strong></h3><p>功能类似compile，只是只对整个项目进行编译。</p>
<h3 id="site"><a href="#site" class="headerlink" title="site"></a><strong>site</strong></h3><p>站点，生成项目的站点文档</p>
<h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a><strong>deploy</strong></h3><p>复制到远程仓库</p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Maven</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>二分查找</title>
    <url>/220.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><strong>介绍</strong></h3><p>二分查找也称折半查找（Binary Search），它是一种效率较高的查找方法。但是，折半查找要求线性表必须采用<a href="https://baike.baidu.com/item/%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84/1347176">顺序存储结构</a>，而且表中元素按关键字有序排列。</p>
<h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a><strong>要求</strong></h3><p>1、必须采用顺序存储结构</p>
<p>2、必须按关键字大小有序排列</p>
<h3 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a><strong>基本思想</strong></h3><p>二分查找的基本思想是将n个元素分成大致相等的两部分，取a[n/2]与x做比较，如果x=a[n/2],则找到x,算法中止；如果x&lt;a[n/2],则只要在数组a的左半部分继续搜索x,如果x&gt;a[n/2],则只要在数组a的右半部搜索x</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> result = -<span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入你要查找的数：&quot;</span>);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> num = sc.nextInt();</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>, end = arr.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (start &lt;= end) &#123;</span><br><span class="line">            index++;</span><br><span class="line">            <span class="keyword">int</span> mid = start + (end - start) / <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;第&quot;</span> + index + <span class="string">&quot;次: start=&quot;</span> + start + <span class="string">&quot;,end=&quot;</span> + end + <span class="string">&quot;,mid=&quot;</span> + mid);</span><br><span class="line">            <span class="keyword">if</span> (num &lt; arr[mid]) &#123;</span><br><span class="line">                end = mid - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (arr[mid] &lt; num) &#123;</span><br><span class="line">                start = mid + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result = mid;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你要查找的数不存在！！&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;循环执行了&quot;</span> + index + <span class="string">&quot;次&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;你要查找的数的数组下标为：&quot;</span> + result);</span><br><span class="line">            System.out.println(<span class="string">&quot;循环执行了&quot;</span> + index + <span class="string">&quot;次&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721001613.jpg" alt="img"> <img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721001623.jpg" alt="img"></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>idea Alt+Enter快捷键添加javadoc文档注释被disabled的解决方法</title>
    <url>/221.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a><strong>问题描述</strong></h3><p>Alt+Enter快捷键本来是有添加javadoc文档注释选项的，但是不小心点击disabled后，该选项就没有了</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721030304.jpg" alt="img"></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a><strong>解决方法</strong></h3><p>1、打开配置（快捷键为Ctrl+Shift+S）</p>
<p>2、根据下图提示找到Add Javadoc，勾选后保存即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721030315.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>栈</title>
    <url>/222.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h3><p>栈（stack）又名堆栈，它是一种运算受限的线性表。限定仅在表尾进行插入和删除操作的线性表。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。</p>
<h3 id="栈的操作"><a href="#栈的操作" class="headerlink" title="栈的操作"></a><strong>栈的操作</strong></h3><p>push</p>
<p>将一个新的元素放在栈的最上层</p>
<p>pop</p>
<p>取出栈中最上层元素</p>
<p>top</p>
<p>查看栈的最上层元素</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721095828.jpg" alt="img"></p>
<h3 id="栈的代码实现"><a href="#栈的代码实现" class="headerlink" title="栈的代码实现"></a><strong>栈的代码实现</strong></h3><p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;Integer&gt; linkedList = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="comment">//连续在栈中插入四个元素</span></span><br><span class="line">        push(<span class="number">1</span>, linkedList);</span><br><span class="line">        push(<span class="number">3</span>, linkedList);</span><br><span class="line">        push(<span class="number">4</span>, linkedList);</span><br><span class="line">        push(<span class="number">6</span>, linkedList);</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        System.out.print(<span class="string">&quot;当前所有元素:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : linkedList) &#123;</span><br><span class="line">            System.out.print(integer + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//获取当前最上层元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;当前最上层元素: &quot;</span> + top(linkedList));</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">//取出最上层元素</span></span><br><span class="line">        pop(linkedList);</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        System.out.print(<span class="string">&quot;当前所有元素:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : linkedList) &#123;</span><br><span class="line">            System.out.print(integer + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//获取当前最上层元素</span></span><br><span class="line">        System.out.println(<span class="string">&quot;当前最上层元素: &quot;</span> + top(linkedList));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取出栈中最上层元素</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> linkedList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">(LinkedList&lt;Integer&gt; linkedList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (linkedList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            linkedList.removeLast();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;栈为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将一个新的元素放在栈的最上层</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> linkedList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> a, LinkedList&lt;Integer&gt; linkedList)</span> </span>&#123;</span><br><span class="line">        linkedList.addLast(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查看栈的最上层元素</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> linkedList</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">top</span><span class="params">(LinkedList&lt;Integer&gt; linkedList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (linkedList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> linkedList.getLast();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;栈为空&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721101619.jpg" alt="img"></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>队列</title>
    <url>/223.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h3><p>队列是一种特殊的线性表，特殊之处在于它只允许在表的前端（front）进行删除操作，而在表的后端（rear）进行插入操作，和栈一样，队列是一种操作受限制的线性表。进行插入操作的端称为队尾，进行删除操作的端称为队头。队列中没有元素时，称为空队列。</p>
<p>队列的数据元素又称为队列元素。在队列中插入一个队列元素称为入队，从队列中删除一个队列元素称为出队。因为队列只允许在一端插入，在另一端删除，所以只有最早进入队列的元素才能最先从队列中删除，故队列又称为先进先出（FIFO—first in first out）线性表。</p>
<h3 id="队列的操作"><a href="#队列的操作" class="headerlink" title="队列的操作"></a><strong>队列的操作</strong></h3><p>enqueue</p>
<p>加入队列（在表的后端进行插入操作）</p>
<p>dequeue</p>
<p>离开队列（在表的前端进行删除操作）</p>
<h3 id="队列的实现"><a href="#队列的实现" class="headerlink" title="队列的实现"></a><strong>队列的实现</strong></h3><p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        LinkedList&lt;Integer&gt; linkedList = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="comment">//加入队列</span></span><br><span class="line">        enqueue(<span class="number">1</span>, linkedList);</span><br><span class="line">        enqueue(<span class="number">3</span>, linkedList);</span><br><span class="line">        enqueue(<span class="number">4</span>, linkedList);</span><br><span class="line">        enqueue(<span class="number">6</span>, linkedList);</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        System.out.print(<span class="string">&quot;当前所有元素: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : linkedList) &#123;</span><br><span class="line">            System.out.print(integer + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//离开队列</span></span><br><span class="line">        dequeue(linkedList);</span><br><span class="line">        System.out.print(<span class="string">&quot;当前所有元素: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Integer integer : linkedList) &#123;</span><br><span class="line">            System.out.print(integer + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 离开队列(删除)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> linkedList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dequeue</span><span class="params">(LinkedList&lt;Integer&gt; linkedList)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (linkedList.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            linkedList.removeFirst();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;队列为空&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加入队列(插入)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> a</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> linkedList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(<span class="keyword">int</span> a, LinkedList&lt;Integer&gt; linkedList)</span> </span>&#123;</span><br><span class="line">        linkedList.addLast(a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210721104559.jpg" alt="img"></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot引入MyBatis-Plus</title>
    <url>/224.html</url>
    <content><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a><strong>引入依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="启动类里也需要加一个mapper扫描配置：-MapperScan-“com-ledao-mapper”"><a href="#启动类里也需要加一个mapper扫描配置：-MapperScan-“com-ledao-mapper”" class="headerlink" title="启动类里也需要加一个mapper扫描配置：@MapperScan(“com.ledao.mapper”)"></a><strong>启动类里也需要加一个mapper扫描配置：@MapperScan(“com.ledao.mapper”)</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.ledao.mapper&quot;)</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusDemoApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MyBatisPlusDemoApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h3><h4 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a><strong>表结构</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210722235006.jpg" alt="img"></p>
<h4 id="BlogType实体类"><a href="#BlogType实体类" class="headerlink" title="BlogType实体类"></a><strong>BlogType实体类</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-22 22:14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(value = &quot;t_blogtype&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BlogType</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@TableField(value = &quot;sortNum&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Integer sortNum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="BlogTypeMapper"><a href="#BlogTypeMapper" class="headerlink" title="BlogTypeMapper"></a><strong>BlogTypeMapper</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.BlogType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-22 22:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogTypeMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">BlogType</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.BlogType;</span><br><span class="line"><span class="keyword">import</span> com.ledao.mapper.BlogTypeMapper;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusDemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> BlogTypeMapper blogTypeMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">contextLoads</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;BlogType&gt; blogTypeList = blogTypeMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        <span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">            System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210722235115.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus Mapper CRUD 接口之Insert</title>
    <url>/225.html</url>
    <content><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 插入一条记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">insert</span><span class="params">(T entity)</span></span>;</span><br></pre></td></tr></table></figure>

<p>参数为要插入的实体</p>
<p>该方法返回的是成功插入的数据条数，所以我们可以根据返回的结果是否大于0来判断是否插入成功，大于代表成功，反之则是失败</p>
<h3 id="配置application-yml"><a href="#配置application-yml" class="headerlink" title="配置application.yml"></a><strong>配置application.yml</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">global-config:</span></span><br><span class="line">    <span class="attr">db-config:</span></span><br><span class="line">      <span class="attr">id-type:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure>

<p>目的：让插入的数据的id自增</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h3><p>Java代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	BlogType blogType = <span class="keyword">new</span> BlogType();</span><br><span class="line">	blogType.setName(<span class="string">&quot;222&quot;</span>);</span><br><span class="line">	blogType.setSortNum(<span class="number">22</span>);</span><br><span class="line">	<span class="keyword">int</span> result = blogTypeMapper.insert(blogType);</span><br><span class="line">	<span class="keyword">if</span> (result &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;插入成功&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;插入失败&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210723011628.jpg" alt="img"></p>]]></content>
      <categories>
        <category>MyBatis-Plus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus 条件构造器</title>
    <url>/226.html</url>
    <content><![CDATA[<h3 id="条件构造器层级关系"><a href="#条件构造器层级关系" class="headerlink" title="条件构造器层级关系"></a><strong>条件构造器层级关系</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210723091224.jpg" alt="img"></p>
<p>介绍 ：</p>
<p>1、上图绿色框为抽象类abstract</p>
<p>2、蓝色框为正常class类，可new对象</p>
<p>3、黄色箭头指向为父子类关系，箭头指向为父类</p>
<p>wapper介绍 ：</p>
<p>1、Wrapper ： 条件构造抽象类，最顶端父类，抽象类中提供4个方法西面贴源码展示</p>
<p>2、AbstractWrapper ： 用于查询条件封装，生成 sql 的 where 条件</p>
<p>3、AbstractLambdaWrapper ： Lambda 语法使用 Wrapper统一处理解析 lambda 获取 column。</p>
<p>4、LambdaQueryWrapper ：看名称也能明白就是用于Lambda语法使用的查询Wrapper</p>
<p>5、LambdaUpdateWrapper ： Lambda 更新封装Wrapper</p>
<p>6、QueryWrapper ： Entity 对象封装操作类，不是用lambda语法</p>
<p>7、UpdateWrapper ： Update 条件封装，用于Entity对象更新操作</p>
<h3 id="各函数及其实例"><a href="#各函数及其实例" class="headerlink" title="各函数及其实例"></a><strong>各函数及其实例</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210723091601.jpg" alt="img"></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h3><h4 id="QueryWrapper"><a href="#QueryWrapper" class="headerlink" title="QueryWrapper"></a><strong>QueryWrapper</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queryWrapper</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	<span class="comment">//name中包含tis的数据</span></span><br><span class="line">	blogTypeQueryWrapper.like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;tis&quot;</span>);</span><br><span class="line">	List&lt;BlogType&gt; blogTypeList = blogTypeMapper.selectList(blogTypeQueryWrapper);</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">		System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210723094034.jpg" alt="img"></p>
<h4 id="UpdateWrapper"><a href="#UpdateWrapper" class="headerlink" title="UpdateWrapper"></a><strong>UpdateWrapper</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateWrapper</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	UpdateWrapper&lt;BlogType&gt; blogTypeUpdateWrapper = <span class="keyword">new</span> UpdateWrapper&lt;&gt;();</span><br><span class="line">	<span class="comment">//id是28的数据</span></span><br><span class="line">	blogTypeUpdateWrapper.eq(<span class="string">&quot;id&quot;</span>, <span class="number">28</span>);</span><br><span class="line">	BlogType blogType = <span class="keyword">new</span> BlogType();</span><br><span class="line">	blogType.setName(<span class="string">&quot;spring&quot;</span>);</span><br><span class="line">	blogType.setSortNum(<span class="number">23</span>);</span><br><span class="line">	<span class="comment">//更新成功返回1,失败返回0,可用于判断是否更新成功</span></span><br><span class="line">	<span class="keyword">int</span> result = blogTypeMapper.update(blogType, blogTypeUpdateWrapper);</span><br><span class="line">	<span class="keyword">if</span> (result &gt; <span class="number">0</span>) &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;更新成功!!&quot;</span>);</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		System.out.println(<span class="string">&quot;更新失败!!&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/m0_37034294/article/details/82917234">https://blog.csdn.net/m0_37034294/article/details/82917234</a></p>]]></content>
      <categories>
        <category>MyBatis-Plus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus 自定义SQL</title>
    <url>/227.html</url>
    <content><![CDATA[<h3 id="自定义SQL的方式"><a href="#自定义SQL的方式" class="headerlink" title="自定义SQL的方式"></a><strong>自定义SQL的方式</strong></h3><p>①Annotation注解方式</p>
<p>②XML配置文件方式</p>
<h4 id="Annotation注解方式"><a href="#Annotation注解方式" class="headerlink" title="Annotation注解方式"></a><strong>Annotation注解方式</strong></h4><p>直接先定义接口方法，然后在接口方法上面开发注解即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.BlogType;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-22 22:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogTypeMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找博客类型</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Select(&quot;select * from t_blogtype where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">BlogType <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="XML配置文件方式"><a href="#XML配置文件方式" class="headerlink" title="XML配置文件方式"></a><strong>XML配置文件方式</strong></h4><p>1、修改application.yml配置文件</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="comment"># 如果是放在src/main/java目录下 classpath:/com/*/*/mapper/*Mapper.xml</span></span><br><span class="line">  <span class="comment"># 如果是放在resource目录 classpath:/mapper/**.xml</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:/mapper/**.xml</span></span><br></pre></td></tr></table></figure>

<p>2、自定义接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.BlogType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-22 22:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogTypeMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">BlogType</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据情况获取博客类型列表</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> map</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;BlogType&gt; <span class="title">list</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>3、xml文件实现</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--suppress ALL--&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ledao.mapper.BlogTypeMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BlogResult&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.ledao.entity.BlogType&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;sortNum&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sortNum&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;list&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BlogResult&quot;</span>&gt;</span></span><br><span class="line">        select *</span><br><span class="line">        from t_blogtype</span><br><span class="line">        <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;name != null and name != &#x27;&#x27;&quot;</span>&gt;</span></span><br><span class="line">                and name like #&#123;name&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;start != null and size != null&quot;</span>&gt;</span></span><br><span class="line">            limit #&#123;start&#125;,#&#123;size&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>4、测试代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">list</span><span class="params">()</span></span>&#123;</span><br><span class="line">	Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">	map.put(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;%a%&quot;</span>);</span><br><span class="line">	List&lt;BlogType&gt; blogTypeList = blogTypeMapper.list(map);</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">		System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>5、结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210723101956.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.jianshu.com/p/c0dd01a82fcc">https://www.jianshu.com/p/c0dd01a82fcc</a></p>]]></content>
      <categories>
        <category>MyBatis-Plus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus Mapper CRUD 接口之Delete</title>
    <url>/228.html</url>
    <content><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 entity 条件，删除记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">delete</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; wrapper)</span></span>;</span><br><span class="line"><span class="comment">// 删除（根据ID 批量删除）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span></span>;</span><br><span class="line"><span class="comment">// 根据 ID 删除</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteById</span><span class="params">(Serializable id)</span></span>;</span><br><span class="line"><span class="comment">// 根据 columnMap 条件，删除记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deleteByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h3><h4 id="delete"><a href="#delete" class="headerlink" title="delete"></a><strong>delete</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;spring&quot;</span>);</span><br><span class="line">	blogTypeMapper.delete(blogTypeQueryWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="deleteBatchIds"><a href="#deleteBatchIds" class="headerlink" title="deleteBatchIds"></a><strong>deleteBatchIds</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteBatchIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;Integer&gt; idList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	idList.add(<span class="number">29</span>);</span><br><span class="line">	idList.add(<span class="number">30</span>);</span><br><span class="line">	idList.add(<span class="number">31</span>);</span><br><span class="line">	<span class="keyword">int</span> result = blogTypeMapper.deleteBatchIds(idList);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="deleteById"><a href="#deleteById" class="headerlink" title="deleteById"></a><strong>deleteById</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> result = blogTypeMapper.deleteById(<span class="number">32</span>);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="deleteByMap"><a href="#deleteByMap" class="headerlink" title="deleteByMap"></a><strong>deleteByMap</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteByMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">	map.put(<span class="string">&quot;name&quot;</span>, <span class="number">1</span>);</span><br><span class="line">	map.put(<span class="string">&quot;sortNum&quot;</span>, <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">int</span> result = blogTypeMapper.deleteByMap(map);</span><br><span class="line">	System.out.println(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MyBatis-Plus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus Mapper CRUD 接口之Update</title>
    <url>/229.html</url>
    <content><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 whereWrapper 条件，更新记录</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">update</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T updateEntity, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; whereWrapper)</span></span>;</span><br><span class="line"><span class="comment">// 根据 ID 修改</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">updateById</span><span class="params">(<span class="meta">@Param(Constants.ENTITY)</span> T entity)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h3><h4 id="update"><a href="#update" class="headerlink" title="update"></a><strong>update</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	UpdateWrapper&lt;BlogType&gt; blogTypeUpdateWrapper = <span class="keyword">new</span> UpdateWrapper&lt;&gt;();</span><br><span class="line">	blogTypeUpdateWrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;spring&quot;</span>);</span><br><span class="line">	BlogType blogType = <span class="keyword">new</span> BlogType();</span><br><span class="line">	blogType.setSortNum(<span class="number">111</span>);</span><br><span class="line">	blogTypeMapper.update(blogType, blogTypeUpdateWrapper);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="updateById"><a href="#updateById" class="headerlink" title="updateById"></a><strong>updateById</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	BlogType blogType = <span class="keyword">new</span> BlogType();</span><br><span class="line">	blogType.setId(<span class="number">34</span>);</span><br><span class="line">	blogType.setName(<span class="string">&quot;222&quot;</span>);</span><br><span class="line">	blogType.setSortNum(<span class="number">222</span>);</span><br><span class="line">	blogTypeMapper.updateById(blogType);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MyBatis-Plus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>宠物医院管理系统</title>
    <url>/23.html</url>
    <content><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><strong>项目地址</strong></h3><p>GitHub地址:<a href="https://github.com/a6678696/PetHospital">https://github.com/a6678696/PetHospital</a></p>
<h3 id="使用的技术"><a href="#使用的技术" class="headerlink" title="使用的技术"></a><strong>使用的技术</strong></h3><p>本项目核心技术采用Spring Boot+mybatis；开发工具idea；数据库mysql5.6；模版引擎采用的是thymeleaf；安全框架采用Shiro，实现了完整权限系统，Controller方法采用shiro注解来实现有效的权限控制；前台界面采用了Bootstrap技术；后台界面采用了Easyui技术；</p>
<h3 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a><strong>功能介绍</strong></h3><p>本系统前台面向的用户是客户，客户可以进行预约、浏览医院发布的文章、进入医院商城为宠物购物、如有疑问可以向官方留言、还可以查看关于自己的所有记录信息，如：看病记录、预约记录、疫苗注射记录等。后台面向的用户是医院人员，系统管理员拥有最高权限，可以对所有数据进行管理，为所有的角色分配权限以及创建角色；业务管理员的权限主要是对一些常用数据的维护；医生可以接受客户发布的预约医生的预约单以及处理属于自己的预约单，回答客户的问诊；美容师可以接受客户发布的预约美容的预约单以及处理属于自己的预约单。</p>
<p>本系统的详细功能需求如下所示。</p>
<h4 id="未注册用户"><a href="#未注册用户" class="headerlink" title="未注册用户"></a>未注册用户</h4><p>非注册用户（即游客身份）进入医院官网首页，可以浏览关于医院的宣传以及医院发布的文章，进入医院商城浏览正在发售的商品，搜索已发布的文章和商品，注册以及登录。</p>
<h4 id="已注册用户"><a href="#已注册用户" class="headerlink" title="已注册用户"></a>已注册用户</h4><p>注册用户可以修改个人信息和宠物信息，发布预约单（预约医生和美容师），在医院的商城购物，收藏商品，给官方留言，查看与自己相关的记录信息，如：病例记录、预约记录、问诊记录、订单记录等，注销退出系统。</p>
<h4 id="医生"><a href="#医生" class="headerlink" title="医生"></a>医生</h4><p>医生可以查看并接受客户发布的未被处理的预约医生的预约单，结束属于自己的预约单，回复客户的网上问诊以及查看自己回复的问诊记录，修改个人密码，安全退出系统。</p>
<h4 id="美容师"><a href="#美容师" class="headerlink" title="美容师"></a>美容师</h4><p>美容师可以查看并接受客户发布的未被处理的预约美容师的预约单，结束属于自己的预约单。</p>
<h4 id="业务管理员"><a href="#业务管理员" class="headerlink" title="业务管理员"></a>业务管理员</h4><p>业务管理员具有进货管理（包括进货入库、退货出库、进货单据查询、退货单据查询以及当前库存查询）、销售管理（包括销售出库、客户退货入库、销售单据查询、退货单据查询）、库存管理（包括商品报损、商品报溢、库存报警、报损报溢记录查询）、查看统计数据（供应商进退货单统计、客户进退货单统计、按日统计销售利润、按月统计销售利润）、供应商管理、客户管理、商品管理、期初库存管理、前台轮播图管理、设备类型管理、设备管理、设备使用管理、设备使用记录管理、文章类型管理、文章管理、客户留言管理、医院用品管理、医院用品出入库管理、医院用品出入库记录管理、客户消息管理、客户订单处理、客户预约单管理、客户问诊记录管理、病历单管理、化验记录管理、疫苗注射记录管理、客户回访记录管理、寄养记录管理、修改密码、安全退出系统。</p>
<h4 id="系统管理员"><a href="#系统管理员" class="headerlink" title="系统管理员"></a>系统管理员</h4><p>系统管理员除了具备业务管理员的所有权限外，还有创建角色并赋予角色权限的功能，还可以查看系统操作日志。</p>
<h4 id="系统自身"><a href="#系统自身" class="headerlink" title="系统自身"></a>系统自身</h4><p>系统每天0点自动创建明天的分别属于各个医生或美容师各个时间段的空预约单（未被客户接受的预约单）、每分钟自动筛选出5分钟后过期的空预约单并从数据库删除、每分钟自动筛选和取消客户提交的超过一天未支付的订单并释放库存、每天凌晨1点自动将发布日期超过3个月的商品的”新品”标签去掉、医院上班后（8点）系统自动给当天有预约的客户发送提醒消息</p>
<h3 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a><strong>图片展示</strong></h3><h4 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h4><h5 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001151.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001236.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001310.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001352.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001428.jpg" alt="img"></p>
<h5 id="客户登录界面"><a href="#客户登录界面" class="headerlink" title="客户登录界面"></a>客户登录界面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001525.jpg" alt="img"></p>
<h5 id="客户注册页面"><a href="#客户注册页面" class="headerlink" title="客户注册页面"></a>客户注册页面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001613.jpg" alt="img"></p>
<h5 id="医院商城首页"><a href="#医院商城首页" class="headerlink" title="医院商城首页"></a>医院商城首页</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001654.jpg" alt="img"></p>
<h5 id="查看商品详情"><a href="#查看商品详情" class="headerlink" title="查看商品详情"></a>查看商品详情</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001744.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001853.jpg" alt="img"></p>
<h5 id="查看已收货客户评论"><a href="#查看已收货客户评论" class="headerlink" title="查看已收货客户评论"></a>查看已收货客户评论</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001927.jpg" alt="img"></p>
<h5 id="商品推荐和浏览记录"><a href="#商品推荐和浏览记录" class="headerlink" title="商品推荐和浏览记录"></a>商品推荐和浏览记录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017001959.jpg" alt="img"></p>
<h5 id="购物车"><a href="#购物车" class="headerlink" title="购物车"></a>购物车</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002119.jpg" alt="img"></p>
<h5 id="订单成功提交"><a href="#订单成功提交" class="headerlink" title="订单成功提交"></a>订单成功提交</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002200.jpg" alt="img"></p>
<h5 id="支付订单"><a href="#支付订单" class="headerlink" title="支付订单"></a>支付订单</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002233.jpg" alt="img"></p>
<h5 id="查看订单详情"><a href="#查看订单详情" class="headerlink" title="查看订单详情"></a>查看订单详情</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002317.jpg" alt="img"></p>
<h5 id="查看全部订单"><a href="#查看全部订单" class="headerlink" title="查看全部订单"></a>查看全部订单</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002357.jpg" alt="img"></p>
<h5 id="查看已收藏商品"><a href="#查看已收藏商品" class="headerlink" title="查看已收藏商品"></a>查看已收藏商品</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002442.jpg" alt="img"></p>
<h5 id="个人中心功能列表"><a href="#个人中心功能列表" class="headerlink" title="个人中心功能列表"></a>个人中心功能列表</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002526.jpg" alt="img"></p>
<h5 id="查看可预约医生"><a href="#查看可预约医生" class="headerlink" title="查看可预约医生"></a>查看可预约医生</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002628.jpg" alt="img"></p>
<h5 id="预约医生"><a href="#预约医生" class="headerlink" title="预约医生"></a>预约医生</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002654.jpg" alt="img"></p>
<h5 id="按类别查看文章"><a href="#按类别查看文章" class="headerlink" title="按类别查看文章"></a>按类别查看文章</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002735.jpg" alt="img"></p>
<h5 id="查看文章详情"><a href="#查看文章详情" class="headerlink" title="查看文章详情"></a>查看文章详情</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002807.jpg" alt="img"></p>
<h5 id="客户留言"><a href="#客户留言" class="headerlink" title="客户留言"></a>客户留言</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017002905.jpg" alt="img"></p>
<h4 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h4><h5 id="后台登录"><a href="#后台登录" class="headerlink" title="后台登录"></a>后台登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017003134.jpg" alt="img"></p>
<h5 id="管理员功能介绍"><a href="#管理员功能介绍" class="headerlink" title="管理员功能介绍"></a>管理员功能介绍</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017003233.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017003317.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017003349.jpg" alt="img"></p>]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>个人项目</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis-Plus Mapper CRUD 接口之Select</title>
    <url>/230.html</url>
    <content><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 根据 ID 查询</span></span><br><span class="line"><span class="function">T <span class="title">selectById</span><span class="params">(Serializable id)</span></span>;</span><br><span class="line"><span class="comment">// 根据 entity 条件，查询一条记录</span></span><br><span class="line"><span class="function">T <span class="title">selectOne</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询（根据ID 批量查询）</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">selectBatchIds</span><span class="params">(<span class="meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span></span>;</span><br><span class="line"><span class="comment">// 根据 entity 条件，查询全部记录</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">selectList</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class="line"><span class="comment">// 查询（根据 columnMap 条件）</span></span><br><span class="line"><span class="function">List&lt;T&gt; <span class="title">selectByMap</span><span class="params">(<span class="meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span></span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录</span></span><br><span class="line">List&lt;Map&lt;String, Object&gt;&gt; selectMaps(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录。注意： 只返回第一个字段的值</span></span><br><span class="line"><span class="function">List&lt;Object&gt; <span class="title">selectObjs</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据 entity 条件，查询全部记录（并翻页）</span></span><br><span class="line"><span class="function">IPage&lt;T&gt; <span class="title">selectPage</span><span class="params">(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询全部记录（并翻页）</span></span><br><span class="line">IPage&lt;Map&lt;String, Object&gt;&gt; selectMapsPage(IPage&lt;T&gt; page, <span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper);</span><br><span class="line"><span class="comment">// 根据 Wrapper 条件，查询总记录数</span></span><br><span class="line"><span class="function">Integer <span class="title">selectCount</span><span class="params">(<span class="meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span></span>;</span><br></pre></td></tr></table></figure>

<h3 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a><strong>测试代码</strong></h3><h4 id="selectById"><a href="#selectById" class="headerlink" title="selectById"></a><strong>selectById</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	BlogType blogType = blogTypeMapper.selectById(<span class="number">1</span>);</span><br><span class="line">	System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectOne"><a href="#selectOne" class="headerlink" title="selectOne"></a><strong>selectOne</strong></h4><p>如果查到的数据不是1条时会报错</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectOne</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.eq(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;MyBatis&quot;</span>);</span><br><span class="line">	BlogType blogType = blogTypeMapper.selectOne(blogTypeQueryWrapper);</span><br><span class="line">	System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectBatchIds"><a href="#selectBatchIds" class="headerlink" title="selectBatchIds"></a><strong>selectBatchIds</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectBatchIds</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	List&lt;Integer&gt; idList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">	idList.add(<span class="number">1</span>);</span><br><span class="line">	idList.add(<span class="number">5</span>);</span><br><span class="line">	idList.add(<span class="number">6</span>);</span><br><span class="line">	idList.add(<span class="number">7</span>);</span><br><span class="line">	List&lt;BlogType&gt; blogTypeList = blogTypeMapper.selectBatchIds(idList);</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">		System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectList"><a href="#selectList" class="headerlink" title="selectList"></a><strong>selectList</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//参数为空时查询所有</span></span><br><span class="line">	List&lt;BlogType&gt; blogTypeList = blogTypeMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">		System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;------------------------&quot;</span>);</span><br><span class="line">	<span class="comment">//根据条件查询</span></span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">	List&lt;BlogType&gt; blogTypeList1 = blogTypeMapper.selectList(blogTypeQueryWrapper);</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList1) &#123;</span><br><span class="line">		System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectByMap"><a href="#selectByMap" class="headerlink" title="selectByMap"></a><strong>selectByMap</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectByMap</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">	map.put(<span class="string">&quot;sortNum&quot;</span>, <span class="number">81</span>);</span><br><span class="line">	List&lt;BlogType&gt; blogTypeList = blogTypeMapper.selectByMap(map);</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">		System.out.println(blogType.getId() + <span class="string">&quot;,&quot;</span> + blogType.getName() + <span class="string">&quot;,&quot;</span> + blogType.getSortNum());</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectMaps"><a href="#selectMaps" class="headerlink" title="selectMaps"></a><strong>selectMaps</strong></h4><p>查询到的数据以键值对的方式存储在map中</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectMaps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.gt(<span class="string">&quot;id&quot;</span>, <span class="number">5</span>).like(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">	List&lt;Map&lt;String, Object&gt;&gt; mapList = blogTypeMapper.selectMaps(blogTypeQueryWrapper);</span><br><span class="line">	<span class="keyword">for</span> (Map&lt;String, Object&gt; map : mapList) &#123;</span><br><span class="line">		System.out.println(map.get(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot;,&quot;</span>+map.get(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot;,&quot;</span>+map.get(<span class="string">&quot;sortNum&quot;</span>));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectObjs"><a href="#selectObjs" class="headerlink" title="selectObjs"></a><strong>selectObjs</strong></h4><p>只返回一个字段</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectObjs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	<span class="comment">//选择要查询的字段,不选择就返回第一个字段(一般是id)</span></span><br><span class="line">	blogTypeQueryWrapper.select(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">	<span class="comment">//查询条件</span></span><br><span class="line">	blogTypeQueryWrapper.gt(<span class="string">&quot;id&quot;</span>, <span class="number">5</span>);</span><br><span class="line">	List&lt;Object&gt; objectList = blogTypeMapper.selectObjs(blogTypeQueryWrapper);</span><br><span class="line">	System.out.println(objectList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectPage"><a href="#selectPage" class="headerlink" title="selectPage"></a><strong>selectPage</strong></h4><p>先配置分页插件</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.pagination.optimize.JsqlParserCountOptimize;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.EnableTransactionManagement;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-23 14:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">        <span class="comment">// 设置请求的页面大于最大页后操作， true调回到首页，false 继续请求  默认false</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setOverflow(false);</span></span><br><span class="line">        <span class="comment">// 设置最大单页限制数量，默认 500 条，-1 不受限制</span></span><br><span class="line">        <span class="comment">// paginationInterceptor.setLimit(500);</span></span><br><span class="line">        <span class="comment">// 开启 count 的 join 优化,只针对部分 left join</span></span><br><span class="line">        paginationInterceptor.setCountSqlParser(<span class="keyword">new</span> JsqlParserCountOptimize(<span class="keyword">true</span>));</span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//设置查询条件</span></span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.gt(<span class="string">&quot;id&quot;</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="comment">//设置当前页以及每页记录数</span></span><br><span class="line">	Page&lt;BlogType&gt; page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">	<span class="comment">//获取记录</span></span><br><span class="line">	Page&lt;BlogType&gt; blogTypePage = blogTypeMapper.selectPage(page, blogTypeQueryWrapper);</span><br><span class="line">	List&lt;BlogType&gt; blogTypeList = blogTypePage.getRecords();</span><br><span class="line">	<span class="keyword">for</span> (BlogType blogType : blogTypeList) &#123;</span><br><span class="line">		System.out.println(blogType);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectMapsPage"><a href="#selectMapsPage" class="headerlink" title="selectMapsPage"></a><strong>selectMapsPage</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectMapsPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//设置查询条件</span></span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.gt(<span class="string">&quot;id&quot;</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="comment">//设置当前页以及每页记录数</span></span><br><span class="line">	Page page = <span class="keyword">new</span> Page&lt;&gt;(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">	IPage&lt;Map&lt;String, Object&gt;&gt; mapIPage = blogTypeMapper.selectMapsPage(page, blogTypeQueryWrapper);</span><br><span class="line">	<span class="keyword">for</span> (Map&lt;String, Object&gt; record : mapIPage.getRecords()) &#123;</span><br><span class="line">		System.out.println(record);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="selectCount"><a href="#selectCount" class="headerlink" title="selectCount"></a><strong>selectCount</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	QueryWrapper&lt;BlogType&gt; blogTypeQueryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">	blogTypeQueryWrapper.gt(<span class="string">&quot;id&quot;</span>, <span class="number">7</span>);</span><br><span class="line">	<span class="keyword">int</span> count = blogTypeMapper.selectCount(blogTypeQueryWrapper);</span><br><span class="line">	System.out.println(count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MyBatis-Plus</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>MyBatis-Plus</tag>
      </tags>
  </entry>
  <entry>
    <title>Java将一个数组复制给另一个数组</title>
    <url>/231.html</url>
    <content><![CDATA[<h3 id="for循环赋值"><a href="#for循环赋值" class="headerlink" title="for循环赋值"></a><strong>for循环赋值</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr1.length];</span><br><span class="line">        <span class="comment">//复制</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr1.length; i++) &#123;</span><br><span class="line">            arr2[i] = arr1[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j : arr2) &#123;</span><br><span class="line">            System.out.print(j + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用System-ararycopy方法"><a href="#使用System-ararycopy方法" class="headerlink" title="使用System.ararycopy方法"></a><strong>使用System.ararycopy方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = <span class="keyword">new</span> <span class="keyword">int</span>[arr1.length];</span><br><span class="line">        <span class="comment">//复制</span></span><br><span class="line">        System.arraycopy(arr1, <span class="number">0</span>, arr2, <span class="number">0</span>, arr1.length);</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j : arr2) &#123;</span><br><span class="line">            System.out.print(j + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="如果数组等长，而且对应copy，使用int-B-A-clone"><a href="#如果数组等长，而且对应copy，使用int-B-A-clone" class="headerlink" title="如果数组等长，而且对应copy，使用int[] B= A.clone()"></a><strong>如果数组等长，而且对应copy，使用int[] B= A.clone()</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr1 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] arr2 = arr1.clone();</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j : arr2) &#123;</span><br><span class="line">            System.out.print(j + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java跳出多重循环</title>
    <url>/232.html</url>
    <content><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><p>给for循环添加一个标记</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        here:</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;外层第&quot;</span> + (i + <span class="number">1</span>) + <span class="string">&quot;次循环&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i1 = <span class="number">0</span>; i1 &lt; <span class="number">3</span>; i1++) &#123;</span><br><span class="line">                System.out.print(i1 + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (i1 == <span class="number">1</span> &amp;&amp; i == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span> here;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p>可以看到外层的第3次循环不执行了</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210724110315.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Gson获取JSON字符串的值</title>
    <url>/233.html</url>
    <content><![CDATA[<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a><strong>引入依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="使用的方法"><a href="#使用的方法" class="headerlink" title="使用的方法"></a><strong>使用的方法</strong></h3><h4 id="JsonParser-parse-“字符串”"><a href="#JsonParser-parse-“字符串”" class="headerlink" title="JsonParser.parse(“字符串”)"></a>JsonParser.parse(“字符串”)</h4><p>解析json字符串为JsonElement</p>
<h4 id="JsonElement-getAsJsonObject"><a href="#JsonElement-getAsJsonObject" class="headerlink" title="JsonElement.getAsJsonObject()"></a>JsonElement.getAsJsonObject()</h4><p>解析为JsonObject</p>
<h4 id="JsonObject-getAsJsonObject-“对象名”"><a href="#JsonObject-getAsJsonObject-“对象名”" class="headerlink" title="JsonObject.getAsJsonObject(“对象名”)"></a>JsonObject.getAsJsonObject(“对象名”)</h4><p>获取对象</p>
<h4 id="JsonObject-get-“属性名称”-getAsString"><a href="#JsonObject-get-“属性名称”-getAsString" class="headerlink" title="JsonObject.get(“属性名称”).getAsString()"></a>JsonObject.get(“属性名称”).getAsString()</h4><p>获取属性值</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a><strong>测试</strong></h3><h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> com.google.gson.JsonElement;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonObject;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.JsonParser;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String json = <span class="string">&quot;&#123;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;code\&quot;: 2000,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;msg\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    \&quot;data\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;uuid\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;username\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;nickname\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;avatar\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;blog\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;company\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;location\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;email\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;remark\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;gender\&quot;: \&quot;UNKNOWN\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;source\&quot;: \&quot;GITHUB\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        \&quot;token\&quot;: &#123;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;accessToken\&quot;: \&quot;gho_V7z5mRl3zrZAclRnSdhmczkYW2jvx\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;expireIn\&quot;: 0,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;refreshToken\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;uid\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;openId\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;accessCode\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;unionId\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;scope\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;tokenType\&quot;: \&quot;bearer\&quot;,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;idToken\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;macAlgorithm\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;macKey\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;code\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;oauthToken\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;oauthTokenSecret\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;userId\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;screenName\&quot;: null,\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;            \&quot;oauthCallbackConfirmed\&quot;: null\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;        &#125;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;    &#125;\n&quot;</span> +</span><br><span class="line">                <span class="string">&quot;&#125;&quot;</span>;</span><br><span class="line">        JsonParser jsonParser = <span class="keyword">new</span> JsonParser();</span><br><span class="line">        <span class="comment">//解析json字符串为JsonElement</span></span><br><span class="line">        JsonElement jsonElement = jsonParser.parse(json);</span><br><span class="line">        <span class="comment">//解析为JsonObject</span></span><br><span class="line">        JsonObject root = jsonElement.getAsJsonObject();</span><br><span class="line">        <span class="comment">//获取data对象</span></span><br><span class="line">        JsonObject data = root.getAsJsonObject(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">        <span class="comment">//获取token对象</span></span><br><span class="line">        JsonObject token = data.getAsJsonObject(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">        <span class="comment">//获取token对象的accessToken属性的值</span></span><br><span class="line">        String accessToken = token.get(<span class="string">&quot;accessToken&quot;</span>).getAsString();</span><br><span class="line">        System.out.println(accessToken);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728061802.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub创建第三方应用</title>
    <url>/234.html</url>
    <content><![CDATA[<blockquote>
<p>点击右上角头像选择Settings进入设置</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728075055.jpg" alt="img"></p>
<blockquote>
<p>左侧菜单选择Developer settings</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728075108.jpg" alt="img"></p>
<blockquote>
<p>左侧菜单选择OAuth Apps，点击右边的New OAuth App按钮</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728075122.jpg" alt="img"></p>
<blockquote>
<p>填写信息后，点击下方绿色的Register applaction按钮创建应用</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728075131.jpg" alt="img"></p>
<p>Application name 一般填写自己的网站名称即可</p>
<p>Application description 一般填写自己的应用描述即可</p>
<p>Homepage URL 填写自己的网站首页地址</p>
<p>Authorization callback URL 重点，该地址为用户授权后需要跳转到的自己网站的地址，默认携带一个code参数以上信息输入完成后</p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>JustAuth实现GitHub登录</title>
    <url>/235.html</url>
    <content><![CDATA[<h3 id="GitHub创建第三方应用"><a href="#GitHub创建第三方应用" class="headerlink" title="GitHub创建第三方应用"></a><strong>GitHub创建第三方应用</strong></h3><p>具体步骤查看博客：<a href="/234.html">GitHub创建第三方应用</a></p>
<p>copy以下三个信息：Client ID、Client Secret和Authorization callback URL</p>
<h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a><strong>application.yml配置</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">tomcat:</span></span><br><span class="line">    <span class="attr">uri-encoding:</span> <span class="string">utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">session:</span></span><br><span class="line">    <span class="attr">store-type:</span> <span class="string">none</span></span><br></pre></td></tr></table></figure>

<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a><strong>引入依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>me.zhyd.oauth<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>JustAuth<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.16.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="创建Request"><a href="#创建Request" class="headerlink" title="创建Request"></a><strong>创建Request</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">AuthRequest authRequest = <span class="keyword">new</span> AuthGithubRequest(AuthConfig.builder()</span><br><span class="line">                .clientId(<span class="string">&quot;Client ID&quot;</span>)</span><br><span class="line">                .clientSecret(<span class="string">&quot;Client Secret&quot;</span>)</span><br><span class="line">                .redirectUri(<span class="string">&quot;应用回调地址&quot;</span>)</span><br><span class="line">                .build());</span><br></pre></td></tr></table></figure>

<h3 id="生成授权地址"><a href="#生成授权地址" class="headerlink" title="生成授权地址"></a><strong>生成授权地址</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String authorizeUrl = authRequest.authorize(AuthStateUtils.createState());</span><br></pre></td></tr></table></figure>

<h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a><strong>完整代码</strong></h3><p><strong>IndexController</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-28 0:05</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;h2 style=&#x27;text-align: center&#x27;&gt;&lt;a href=&#x27;/oauth/login/github&#x27;&gt;github登录&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href=&#x27;/oauth/login/gitee&#x27;&gt;gitee登录&lt;/a&gt;&lt;/span&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/home&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;h1&gt;主页&lt;/h1&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>JustAuthController</strong></p>
<p>Client ID、Client Secret和Authorization callback URL更换为自己的,下面代码中的是错误的</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.config.AuthConfig;</span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.model.AuthCallback;</span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.model.AuthResponse;</span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.request.AuthGiteeRequest;</span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.request.AuthGithubRequest;</span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.request.AuthRequest;</span><br><span class="line"><span class="keyword">import</span> me.zhyd.oauth.utils.AuthStateUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-28 0:12</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/oauth&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JustAuthController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 重定向</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login/&#123;type&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">login</span><span class="params">(<span class="meta">@PathVariable</span> String type, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//创建request</span></span><br><span class="line">        AuthRequest authRequest = getAuthRequest(type);</span><br><span class="line">        <span class="comment">//重定向到授权链接</span></span><br><span class="line">        response.sendRedirect(authRequest.authorize(AuthStateUtils.createState()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登录后回调</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> callback</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/callback/&#123;type&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AuthResponse <span class="title">callback</span><span class="params">(<span class="meta">@PathVariable</span> String type, AuthCallback callback)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建request</span></span><br><span class="line">        AuthRequest authRequest = getAuthRequest(type);</span><br><span class="line">        <span class="comment">//登录(获取用户信息)</span></span><br><span class="line">        AuthResponse authResponse = authRequest.login(callback);</span><br><span class="line">        <span class="keyword">return</span> authResponse;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 授权平台创建响应的request</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> AuthRequest <span class="title">getAuthRequest</span><span class="params">(String type)</span> </span>&#123;</span><br><span class="line">        AuthRequest authRequest = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="comment">//github平台</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;github&quot;</span>:</span><br><span class="line">                authRequest = <span class="keyword">new</span> AuthGithubRequest(AuthConfig.builder()</span><br><span class="line">                        .clientId(<span class="string">&quot;803de7712b9908181&quot;</span>)</span><br><span class="line">                        .clientSecret(<span class="string">&quot;e863222b3de13fe5ca91224e4651c0316e&quot;</span>)</span><br><span class="line">                        .redirectUri(<span class="string">&quot;http://localhost:80/oauth/callback/github&quot;</span>)</span><br><span class="line">                        .build());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//gitee平台</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;gitee&quot;</span>:</span><br><span class="line">                authRequest = <span class="keyword">new</span> AuthGiteeRequest(AuthConfig.builder()</span><br><span class="line">                        .clientId(<span class="string">&quot;e7c5c4c0cadb936b728b5d87af2ae1f2958c0a2cb24af4daa6f29a5f7&quot;</span>)</span><br><span class="line">                        .clientSecret(<span class="string">&quot;823a0fd650add2468a8e31ac684b7c614b1783331c73b32bb29040&quot;</span>)</span><br><span class="line">                        .redirectUri(<span class="string">&quot;http://localhost:80/oauth/callback/gitee&quot;</span>)</span><br><span class="line">                        .build());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> authRequest;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><strong>浏览器地址栏输入：<a href="http://localhost/">http://localhost</a></strong></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728135421.jpg" alt="img"></p>
<p><strong>GitHub登录返回的结果</strong></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728135430.jpg" alt="img"></p>
<p><strong>Gitee登录返回的结果</strong></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210728135442.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>代码中包含了Gitee登录</p>
<p>GitHub完整代码地址：<a href="https://github.com/a6678696/JustAuthDemo">https://github.com/a6678696/JustAuthDemo</a></p>
<p>更多第三方登录教程查看：<a href="https://justauth.wiki/">https://justauth.wiki/</a></p>
<p>如果需要获取返回的用户信息，callback方法返回的数据类型修改为AuthResponse&lt;AuthUser&gt;，完整代码如下：（可直接覆盖上面代码）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录后回调</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> callback</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/callback/&#123;type&#125;&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> AuthResponse&lt;AuthUser&gt; <span class="title">callback</span><span class="params">(<span class="meta">@PathVariable</span> String type, AuthCallback callback)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//创建request</span></span><br><span class="line">	AuthRequest authRequest = getAuthRequest(type);</span><br><span class="line">	<span class="comment">//登录(获取用户信息)</span></span><br><span class="line">	AuthResponse&lt;AuthUser&gt; authResponse = authRequest.login(callback);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//打印授权回传代码（2000 表示成功，可以用来判断用户登录是否成功）</span></span><br><span class="line">	System.out.println(<span class="string">&quot;状态码：&quot;</span> + authResponse.getCode());</span><br><span class="line"></span><br><span class="line">	<span class="comment">//打印用户的昵称、ID、头像</span></span><br><span class="line">	System.out.println(<span class="string">&quot;用户的uuid：&quot;</span> + authResponse.getData().getUuid());</span><br><span class="line">	System.out.println(<span class="string">&quot;用户的昵称：&quot;</span> + authResponse.getData().getNickname());</span><br><span class="line">	System.out.println(<span class="string">&quot;用户的头像：&quot;</span> + authResponse.getData().getAvatar());</span><br><span class="line"></span><br><span class="line">	<span class="comment">//打印用户的Token中的access_token</span></span><br><span class="line">	System.out.println(<span class="string">&quot;access_token：&quot;</span> + authResponse.getData().getToken().getAccessToken());</span><br><span class="line">	<span class="keyword">return</span> authResponse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>GitHub</tag>
        <tag>JustAuth</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub配置SSH Key</title>
    <url>/236.html</url>
    <content><![CDATA[<h3 id="配置SSH-Keys的好处"><a href="#配置SSH-Keys的好处" class="headerlink" title="配置SSH Keys的好处"></a><strong>配置SSH Keys的好处</strong></h3><p>在管理Git项目上，很多时候都是直接使用https url克隆到本地，当然也有有些人使用SSH url克隆到本地。</p>
<p>这两种方式的主要区别在于：使用https url克隆对初学者来说会比较方便，复制https url然后到git Bash里面直接用clone命令克隆到本地就好了，但是每次fetch和push代码都需要输入账号和密码，这也是https方式的麻烦之处。而使用SSH url克隆却需要在克隆之前先配置和添加好SSH key，因此，如果你想要使用SSH url克隆的话，你必须是这个项目的拥有者。否则你是无法添加SSH key的，另外ssh默认是每次fetch和push代码都不需要输入账号和密码，如果你想要每次都输入账号密码才能进行fetch和push也可以另外进行设置。</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a><strong>步骤</strong></h3><h4 id="桌面上右键鼠标选择-git-bash-here-打开-git"><a href="#桌面上右键鼠标选择-git-bash-here-打开-git" class="headerlink" title="桌面上右键鼠标选择 git bash here 打开 git"></a><strong>桌面上右键鼠标选择 git bash here 打开 git</strong></h4><h4 id="检查本机已存在的ssh密匙"><a href="#检查本机已存在的ssh密匙" class="headerlink" title="检查本机已存在的ssh密匙"></a><strong>检查本机已存在的ssh密匙</strong></h4><p>输入命令： cd ~/.ssh</p>
<p>出现 No such file or directory 说明本机没有ssh密匙，否则继续输入ls查看.ssh文件夹内的文件</p>
<p>$ ls<br>id_rsa  id_rsa.pub</p>
<p>如果有上面两个文件，说明本机有ssh密匙</p>
<h4 id="创建本机的ssh密匙（本机有ssh密匙则跳过本步骤）"><a href="#创建本机的ssh密匙（本机有ssh密匙则跳过本步骤）" class="headerlink" title="创建本机的ssh密匙（本机有ssh密匙则跳过本步骤）"></a><strong>创建本机的ssh密匙（本机有ssh密匙则跳过本步骤）</strong></h4><p>输入命令：</p>
<p>ssh-keygen -t rsa -C “注册Github账户时用的邮箱”</p>
<p>连续按下回车键三次，至此本机的ssh密匙创建完成，该密钥一般存放在C盘的用户文件夹的.ssh文件夹中（我的是C:\Users\LeDao.ssh）</p>
<h4 id="配置Github的SSH-Key"><a href="#配置Github的SSH-Key" class="headerlink" title="配置Github的SSH Key"></a><strong>配置Github的SSH Key</strong></h4><p>进入Github首页，点击右上角的头像选择Settings，选择左侧菜单的SSH and GPG keys，然后点击右侧的New SSH key按钮，打开上面第三步的本地密钥id_rsa.pub文件（用记事本打开并复制其内容），复制到GitHub的key文本框中，title可以随意设置</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210729123108.jpg" alt="img"></p>
<h4 id="输入-ssh-T-x67-105-x74-x40-103-x69-x74-104-x75-98-x2e-x63-x6f-x6d-测试是否配置成功"><a href="#输入-ssh-T-x67-105-x74-x40-103-x69-x74-104-x75-98-x2e-x63-x6f-x6d-测试是否配置成功" class="headerlink" title="输入 ssh -T &#x67;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d; 测试是否配置成功"></a><strong>输入 ssh -T <a href="mailto:&#x67;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;">&#x67;&#105;&#x74;&#x40;&#103;&#x69;&#x74;&#104;&#x75;&#98;&#x2e;&#x63;&#x6f;&#x6d;</a> 测试是否配置成功</strong></h4><p>出现：Are you sure you want to continue connecting (yes/no/[fingerprint])?</p>
<p>输入yes</p>
<p>看到 Hi a6678696! You’ve successfully authenticated, but GitHub does not provide shell access.</p>
<p>说明配置成功</p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>Git上传本地代码到GitHub</title>
    <url>/237.html</url>
    <content><![CDATA[<h3 id="初始化仓库"><a href="#初始化仓库" class="headerlink" title="初始化仓库"></a><strong>初始化仓库</strong></h3><p>初始化一个 Git 仓库，Git 仓库会生成一个 .git 目录，该目录包含了资源的所有元数据，其他的项目目录保持不变（需要进入要初始化的文件夹内部，右键点击选择Git Bash Here）</p>
<p>输入初始化命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>输入命令查看当前状态：<mark class="hl-label blue">git status</mark> ，文件名颜色为红色</p>
<h3 id="将项目的所有文件添加到仓库中"><a href="#将项目的所有文件添加到仓库中" class="headerlink" title="将项目的所有文件添加到仓库中"></a><strong>将项目的所有文件添加到仓库中</strong></h3><p>输入添加命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>

<p>输入命令查看当前状态：<mark class="hl-label blue">git status</mark> ，文件名颜色为绿色</p>
<h3 id="将add的文件commit到仓库"><a href="#将add的文件commit到仓库" class="headerlink" title="将add的文件commit到仓库"></a><strong>将add的文件commit到仓库</strong></h3><p>输入提交命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交备注&quot;</span></span><br></pre></td></tr></table></figure>

<p>输入命令查看当前状态：<mark class="hl-label blue">git status</mark> ，发现没有东西可以提交</p>
<h3 id="复制Github项目的SSH地址"><a href="#复制Github项目的SSH地址" class="headerlink" title="复制Github项目的SSH地址"></a><strong>复制Github项目的SSH地址</strong></h3><p>记得先配置GitHub的SSH Key，如何配置查看博客：<a href="/236.html">GitHub配置SSH Key</a></p>
<h3 id="将本地的仓库关联到GitHub上"><a href="#将本地的仓库关联到GitHub上" class="headerlink" title="将本地的仓库关联到GitHub上"></a><strong>将本地的仓库关联到GitHub上</strong></h3><p>把上一步复制的地址放到origin后，如果已经关联过则省略本步骤</p>
<p>输入关联命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote add origin SSH地址</span><br></pre></td></tr></table></figure>

<h3 id="上传GitHub之前，要先pull一下"><a href="#上传GitHub之前，要先pull一下" class="headerlink" title="上传GitHub之前，要先pull一下"></a><strong>上传GitHub之前，要先pull一下</strong></h3><mark class="hl-label red">如果仓库为空的话，直接push就可以了</mark> 

<p>输入拉取命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>

<h3 id="上传代码到GitHub远程仓库"><a href="#上传代码到GitHub远程仓库" class="headerlink" title="上传代码到GitHub远程仓库"></a><strong>上传代码到GitHub远程仓库</strong></h3><p>输入推送命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<h3 id="去GitHub查看结果"><a href="#去GitHub查看结果" class="headerlink" title="去GitHub查看结果"></a><strong>去GitHub查看结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210729132853.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub连接报 &quot;ssh :connect to host github.com port :22 Connection timed out&quot; 错误</title>
    <url>/238.html</url>
    <content><![CDATA[<h3 id="新建config文本"><a href="#新建config文本" class="headerlink" title="新建config文本"></a><strong>新建config文本</strong></h3><p>在存放公钥私钥（id_rsa 和 id_rsa.pub）的文件夹里，新建config文本，内容如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User 注册GitHub的邮箱</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port <span class="number">443</span></span><br></pre></td></tr></table></figure>

<h3 id="测试连接是否成功"><a href="#测试连接是否成功" class="headerlink" title="测试连接是否成功"></a><strong>测试连接是否成功</strong></h3><p>再次执行 ssh -T <a href="mailto:&#103;&#x69;&#x74;&#x40;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#46;&#x63;&#111;&#x6d;">&#103;&#x69;&#x74;&#x40;&#103;&#x69;&#116;&#x68;&#x75;&#98;&#46;&#x63;&#111;&#x6d;</a> 时，会出现提示如下，回车”yes”即可。</p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub Pages绑定自定义域名</title>
    <url>/239.html</url>
    <content><![CDATA[<h3 id="修改对应域名的主机记录"><a href="#修改对应域名的主机记录" class="headerlink" title="修改对应域名的主机记录"></a>修改对应域名的主机记录</h3><p>下图是阿里云的修改界面，主机记录为绑定的完整域名</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-02%20013054.png"></p>
<h4 id="修改记录类型"><a href="#修改记录类型" class="headerlink" title="修改记录类型"></a>修改记录类型</h4><p>记录类型选CNAME</p>
<h4 id="修改记录值"><a href="#修改记录值" class="headerlink" title="修改记录值"></a>修改记录值</h4><p>记录值填GitHub Pages的访问地址（你的GitHub用户名.github.io）</p>
<h3 id="新建CNAME文件"><a href="#新建CNAME文件" class="headerlink" title="新建CNAME文件"></a>新建CNAME文件</h3><h4 id="GitHub仓库中新建"><a href="#GitHub仓库中新建" class="headerlink" title="GitHub仓库中新建"></a>GitHub仓库中新建</h4><p>文件内容为你要绑定的域名</p>
<h4 id="取消GitHub-Pages的强制HTTPS"><a href="#取消GitHub-Pages的强制HTTPS" class="headerlink" title="取消GitHub Pages的强制HTTPS"></a>取消GitHub Pages的强制HTTPS</h4><p>取消下图的Enforce HTTPS的勾选即可，（进入该仓库的Settings，点击左侧菜单的Pages进入下面界面）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-02%20014616.png"></p>
<h4 id="hexo的根目录的source文件夹中新建"><a href="#hexo的根目录的source文件夹中新建" class="headerlink" title="hexo的根目录的source文件夹中新建"></a>hexo的根目录的source文件夹中新建</h4><p>最好也在hexo的根目录的source文件夹中也新建相同的文件，内容也是你要绑定的域名</p>
<p>这样做的原因：如果根目录没有这个文件，通过hexo d命令更新仓库时会删除掉仓库中的CNAME文件，那就又需要在仓库中新建CNAME文件</p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>稍后即可通过绑定的域名访问GitHub  Pages了</p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>cmd命令操作MySQL数据库</title>
    <url>/24.html</url>
    <content><![CDATA[<h3 id="cmd进入数据库步骤"><a href="#cmd进入数据库步骤" class="headerlink" title="cmd进入数据库步骤"></a><strong>cmd进入数据库步骤</strong></h3><p>先进入数据库安装的盘符（如果要进入C盘则连续敲两下命令cd ..）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">d:</span><br></pre></td></tr></table></figure>

<p>然后进入数据库安装目录的bin文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> QQ\mysql_5.6.24_winx64\mysql-5.6.24-winx64\bin</span><br></pre></td></tr></table></figure>

<p>输入命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<p>输入MySQL密码即可操作数据库</p>
<h3 id="查看已有数据库"><a href="#查看已有数据库" class="headerlink" title="查看已有数据库"></a><strong>查看已有数据库</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHOW DATABASES;</span><br></pre></td></tr></table></figure>

<h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a><strong>创建数据库</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE DATABASE 数据库名；</span><br></pre></td></tr></table></figure>

<h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a><strong>删除数据库</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">DROP DATABASE 数据库名；</span><br></pre></td></tr></table></figure>

<h3 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a><strong>使用数据库</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">USE 数据库名;</span><br></pre></td></tr></table></figure>

<h3 id="查看已有的表"><a href="#查看已有的表" class="headerlink" title="查看已有的表"></a><strong>查看已有的表</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SHOW TABLES;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next安装黑暗模式</title>
    <url>/240.html</url>
    <content><![CDATA[<h3 id="next自带的黑暗模式"><a href="#next自带的黑暗模式" class="headerlink" title="next自带的黑暗模式"></a>next自带的黑暗模式</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>配置十分简单</p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>缺少切换按钮，默认是根据系统偏好（系统是否处于暗黑模式）来决定是否启用</p>
<h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><p>修改next的主题配置文件_config.yml的darkmode对应的值为true</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Dark Mode</span></span><br><span class="line"><span class="attr">darkmode:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="自己安装"><a href="#自己安装" class="headerlink" title="自己安装"></a>自己安装</h3><h4 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h4><p>插件名称：hexo-next-darkmode，安装前先关闭自带的黑暗模式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-next-darkmode --save</span><br></pre></td></tr></table></figure>

<h4 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h4><p>在next的主题配置文件_config.yml中添加下面内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Darkmode JS</span></span><br><span class="line"><span class="comment"># For more information: https://github.com/rqh656418510/hexo-next-darkmode, https://github.com/sandoche/Darkmode.js</span></span><br><span class="line"><span class="attr">darkmode_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">bottom:</span> <span class="string">&#x27;64px&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">right:</span> <span class="string">&#x27;unset&#x27;</span> <span class="comment"># default: &#x27;32px&#x27;</span></span><br><span class="line">  <span class="attr">left:</span> <span class="string">&#x27;32px&#x27;</span> <span class="comment"># default: &#x27;unset&#x27;</span></span><br><span class="line">  <span class="attr">time:</span> <span class="string">&#x27;0.5s&#x27;</span> <span class="comment"># default: &#x27;0.3s&#x27;</span></span><br><span class="line">  <span class="attr">mixColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">backgroundColor:</span> <span class="string">&#x27;transparent&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorDark:</span> <span class="string">&#x27;#100f2c&#x27;</span> <span class="comment"># default: &#x27;#100f2c&#x27;</span></span><br><span class="line">  <span class="attr">buttonColorLight:</span> <span class="string">&#x27;#fff&#x27;</span> <span class="comment"># default: &#x27;#fff&#x27;</span></span><br><span class="line">  <span class="attr">isActivated:</span> <span class="literal">true</span> <span class="comment"># default false</span></span><br><span class="line">  <span class="attr">saveInCookies:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">label:</span> <span class="string">&#x27;🌓&#x27;</span> <span class="comment"># default: &#x27;&#x27;</span></span><br><span class="line">  <span class="attr">autoMatchOsTheme:</span> <span class="literal">true</span> <span class="comment"># default: true</span></span><br><span class="line">  <span class="attr">libUrl:</span> <span class="comment"># Set custom library cdn url for Darkmode.js</span></span><br></pre></td></tr></table></figure>

<p>至此，黑暗模式安装完成，点击左下角的按钮即可切换黑暗模式</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-02%20101911.png"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="https://www.techgrow.cn/posts/abf4aee1.html">Hexo Next 8.x 主题添加可切换的暗黑模式</a></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next开启本地搜索</title>
    <url>/241.html</url>
    <content><![CDATA[<h3 id="安装本地搜索插件"><a href="#安装本地搜索插件" class="headerlink" title="安装本地搜索插件"></a>安装本地搜索插件</h3><p>插件名称为：hexo-generator-search</p>
<p>安装命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>

<h3 id="修改next主题配置-config-yml"><a href="#修改next主题配置-config-yml" class="headerlink" title="修改next主题配置_config.yml"></a>修改next主题配置_config.yml</h3><p>修改local_search的enable为true，代表启用本地搜索</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">6</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="在根目录的-config-yml中添加以下内容"><a href="#在根目录的-config-yml中添加以下内容" class="headerlink" title="在根目录的_config.yml中添加以下内容"></a>在根目录的_config.yml中添加以下内容</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#本地搜索</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<p>重新部署网站后就可以使用本地搜索功能了</p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo常用命令</title>
    <url>/242.html</url>
    <content><![CDATA[<h3 id="hexo-clean"><a href="#hexo-clean" class="headerlink" title="hexo clean"></a>hexo clean</h3><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)</p>
<p>在某些情况（尤其是更换主题后），如果对站点的更改无论如何也不生效，就运行该命令。</p>
<h3 id="hexo-g"><a href="#hexo-g" class="headerlink" title="hexo g"></a>hexo g</h3><p>生成静态文件</p>
<p>是hexo generate的简写</p>
<h3 id="hexo-d"><a href="#hexo-d" class="headerlink" title="hexo d"></a>hexo d</h3><p>部署网站，同时将网站的改动提交到GitHub仓库</p>
<p>是hexo deploy的简写</p>
<h3 id="hexo-g-d"><a href="#hexo-g-d" class="headerlink" title="hexo g -d"></a>hexo g -d</h3><p>相当于先执行hexo g，再执行hexo d</p>
<h3 id="hexo-s"><a href="#hexo-s" class="headerlink" title="hexo s"></a>hexo s</h3><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/">http://localhost:4000/</a></p>
<p>是hexo server的简写</p>
<h3 id="hexo-v"><a href="#hexo-v" class="headerlink" title="hexo v"></a>hexo v</h3><p>显示hexo的版本</p>
<p>是hexo version的简写</p>
<h3 id="hexo-new-“文章名称”"><a href="#hexo-new-“文章名称”" class="headerlink" title="hexo new “文章名称”"></a>hexo new “文章名称”</h3><p>新建一个<font color="#dd0000">文章名称.md</font>，该文件在站点根目录的<font color="#dd0000">source/_post/</font>中</p>
<h3 id="hexo-new-page-“名称”"><a href="#hexo-new-page-“名称”" class="headerlink" title="hexo new page “名称”"></a>hexo new page “名称”</h3><p>新建一个页面，这个页面在站点根目录的<font color="#dd0000">source/名称/</font>中（名为index.md），可以通过<font color="#dd0000">/名称/</font>访问这个页面</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>以上都是我常用的命令，更多命令及详情查看：<a href="https://hexo.io/zh-cn/docs/commands">https://hexo.io/zh-cn/docs/commands</a></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next创建标签页</title>
    <url>/243.html</url>
    <content><![CDATA[<h3 id="创建命令"><a href="#创建命令" class="headerlink" title="创建命令"></a>创建命令</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;tags&quot;</span></span><br></pre></td></tr></table></figure>

<p>在站点根目录下的source文件夹中会新建一个名为tags的文件夹，文件夹中有一个<font color="#dd0000">index.md</font>文件</p>
<h3 id="修改index-md文件"><a href="#修改index-md文件" class="headerlink" title="修改index.md文件"></a>修改index.md文件</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: </span><br><span class="line">date: 2021-07-29 15:03:57</span><br><span class="line">comments: false</span><br><span class="line">type: &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<p>title为该页面的标题</p>
<p>date为创建时间</p>
<p>comments: false代表该页面不能评论（没有评论模块）</p>
<p>type: “tags”代表对应文章的tags</p>
<h3 id="指定文章的tags变量"><a href="#指定文章的tags变量" class="headerlink" title="指定文章的tags变量"></a>指定文章的tags变量</h3><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-03%20131829.png"></p>
<p>文章的Front-matter添加tags变量，例如：（tags变量填标签名）</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">title: hexo next创建标签页</span><br><span class="line">date: 2021-08-03 12:59:53</span><br><span class="line">tags: hexo</span><br></pre></td></tr></table></figure>

<h3 id="修改主题的配置文件-config-yml"><a href="#修改主题的配置文件-config-yml" class="headerlink" title="修改主题的配置文件_config.yml"></a>修改主题的配置文件_config.yml</h3><p>在memu中添加tags，加#号会注释掉不显示</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="string">主页:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="string">标签:</span> <span class="string">/tags</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="comment">#日期: /time/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<h3 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a>结果截图</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-03%20132524.png"></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitalk显示：未找到相关的 Issues 进行评论</title>
    <url>/244.html</url>
    <content><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>已经正确安装Gitalk</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="GitHub网站登录"><a href="#GitHub网站登录" class="headerlink" title="GitHub网站登录"></a>GitHub网站登录</h4><p>进入GitHub网站，登录Gitalk评论仓库的所有者账号</p>
<h4 id="Gitalk评论登录GitHub账号"><a href="#Gitalk评论登录GitHub账号" class="headerlink" title="Gitalk评论登录GitHub账号"></a>Gitalk评论登录GitHub账号</h4><p>进入显示<font color="#dd0000">未找到相关的 Issues 进行评论</font>的网页，点击<font color="#dd0000">使用GitHub登录</font>按钮，Gitalk评论仓库将自动创建一个当前网页的 Issues ，然后每进入一个显示<font color="#dd0000">未找到相关的 Issues 进行评论</font>的网页，将会自动创建 Issues</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-03%20134819.png"></p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-03%20140545.png"></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo next添加页脚网站运行时间</title>
    <url>/245.html</url>
    <content><![CDATA[<h3 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;sitetime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">javascript</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">	<span class="function"><span class="keyword">function</span> <span class="title">siteTime</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">		<span class="built_in">window</span>.setTimeout(<span class="string">&quot;siteTime()&quot;</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> seconds = <span class="number">1000</span>;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> minutes = seconds * <span class="number">60</span>;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> hours = minutes * <span class="number">60</span>;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> days = hours * <span class="number">24</span>;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> years = days * <span class="number">365</span>;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> todayYear = today.getFullYear();</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> todayMonth = today.getMonth()+<span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> todayDate = today.getDate();</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> todayHour = today.getHours();</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> todayMinute = today.getMinutes();</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> todaySecond = today.getSeconds();</span></span><br><span class="line"><span class="javascript">		<span class="comment">/* </span></span></span><br><span class="line"><span class="comment"><span class="javascript">		Date.UTC() -- 返回date对象距世界标准时间(UTC)1970年1月1日午夜之间的毫秒数(时间戳)</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		year - 作为date对象的年份，为4位年份值</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		month - 0-11之间的整数，做为date对象的月份</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		day - 1-31之间的整数，做为date对象的天数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		hours - 0(午夜24点)-23之间的整数，做为date对象的小时数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		minutes - 0-59之间的整数，做为date对象的分钟数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		seconds - 0-59之间的整数，做为date对象的秒数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">		microseconds - 0-999之间的整数，做为date对象的毫秒数</span></span></span><br><span class="line"><span class="comment"><span class="javascript">        */</span></span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> t1 = <span class="built_in">Date</span>.UTC(<span class="number">2020</span>,<span class="number">02</span>,<span class="number">13</span>,<span class="number">15</span>,<span class="number">00</span>,<span class="number">00</span>); <span class="comment">//北京时间2018-2-13 00:00:00</span></span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> t2 = <span class="built_in">Date</span>.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> diff = t2-t1;</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> diffYears = <span class="built_in">Math</span>.floor(diff/years);</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> diffDays = <span class="built_in">Math</span>.floor((diff/days)-diffYears*<span class="number">365</span>);</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> diffHours = <span class="built_in">Math</span>.floor((diff-(diffYears*<span class="number">365</span>+diffDays)*days)/hours);</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> diffMinutes = <span class="built_in">Math</span>.floor((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours)/minutes);</span></span><br><span class="line"><span class="javascript">		<span class="keyword">var</span> diffSeconds = <span class="built_in">Math</span>.floor((diff-(diffYears*<span class="number">365</span>+diffDays)*days-diffHours*hours-diffMinutes*minutes)/seconds);</span></span><br><span class="line"><span class="javascript">		<span class="built_in">document</span>.getElementById(<span class="string">&quot;sitetime&quot;</span>).innerHTML=<span class="string">&quot; 已运行&quot;</span>+<span class="comment">/*diffYears+&quot; 年 &quot;+*/</span>diffDays+<span class="string">&quot; 天 &quot;</span>+diffHours+<span class="string">&quot; 小时 &quot;</span>+diffMinutes+<span class="string">&quot; 分钟 &quot;</span>+diffSeconds+<span class="string">&quot; 秒&quot;</span>;</span></span><br><span class="line"><span class="javascript">	&#125;</span></span><br><span class="line"><span class="javascript">	siteTime();</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="在页脚文件添加"><a href="#在页脚文件添加" class="headerlink" title="在页脚文件添加"></a>在页脚文件添加</h3><p>文件名称为：<font color="#dd0000">footer.swig</font>，文件路径：<font color="#dd0000">themes/next/layout/_partials/footer.swig</font></p>
<p>在哪里添加根据自己的需求而定</p>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-03%20214348.png"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="https://blog.csdn.net/qq_39720594/article/details/105411030">https://blog.csdn.net/qq_39720594/article/details/105411030</a></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Java获取随机数</title>
    <url>/246.html</url>
    <content><![CDATA[<h3 id="System-currentTimeMillis"><a href="#System-currentTimeMillis" class="headerlink" title="System.currentTimeMillis()"></a>System.currentTimeMillis()</h3><p>通过System.currentTimeMillis()来获取随机数，实际上是获取当前时间毫秒数，它是long类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> l = System.currentTimeMillis();</span><br><span class="line">        System.out.println(l);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Math-random"><a href="#Math-random" class="headerlink" title="Math.random()"></a>Math.random()</h3><p>它返回的是0(包含)到1(不包含)之间的double值，如果要返回[0,100]的int整数，只需要将获得的结果乘以100再转换为int类型即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//[0,1)</span></span><br><span class="line">        <span class="keyword">double</span> d = Math.random();</span><br><span class="line">        System.out.println(d);</span><br><span class="line">        <span class="comment">//[0,100]</span></span><br><span class="line">        <span class="keyword">int</span> i = (<span class="keyword">int</span>) (d * <span class="number">100</span>);</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Random-nextInt-int-bound"><a href="#Random-nextInt-int-bound" class="headerlink" title="Random.nextInt(int bound)"></a>Random.nextInt(int bound)</h3><p>获取[0,bound-1]的int整数</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-06-21 12:38</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="comment">//[0,99]</span></span><br><span class="line">        <span class="keyword">int</span> i = random.nextInt(<span class="number">100</span>);</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>修改hexo新建博客的模板</title>
    <url>/247.html</url>
    <content><![CDATA[<p>通过<font color="#dd0000">hexo new “博客名称”</font>命令新建博客时，默认使用的模板是<font color="#dd0000">post.md</font>，该文件在站点根目录的<font color="#dd0000">scaffolds</font>文件夹中，修改hexo新建博客的模板一共有两种方法：①直接修改post.md ②新建自己的模板。以添加categories（分类）为例：</p>
<h3 id="直接修改post-md"><a href="#直接修改post-md" class="headerlink" title="直接修改post.md"></a>直接修改post.md</h3><p>在文章属性Front-matter中添加categories</p>
<p><strong>添加前（markdown源码）</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line"><span class="section">tags:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p><strong>添加后（markdown源码）</strong></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line"><span class="section">categories:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h3 id="新建自己的模板"><a href="#新建自己的模板" class="headerlink" title="新建自己的模板"></a>新建自己的模板</h3><p>新建一个名为<font color="#dd0000">blog.md</font>的模板（名称可以根据自己的需求随便取，但是不可以与当前的文件夹中的文件重名，也不可以命名为page.md，因为<font color="#dd0000">hexo new page “名称”</font>命令是新建一个页面）,添加以下内容（markdown源码）：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags:</span><br><span class="line"><span class="section">categories:</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p>如果要新建博客，通过<font color="#dd0000">hexo new blog “博客名称”</font>命令新建，该命令中的<font color="#dd0000">blog</font>字段说明使用的是名为<font color="#dd0000">blog.md</font>的模板</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>推荐直接修改post.md</p>
<p>详情查看hexo官网：<a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud Config整合Eureka</title>
    <url>/248.html</url>
    <content><![CDATA[<h3 id="上传配置文件到GitHub"><a href="#上传配置文件到GitHub" class="headerlink" title="上传配置文件到GitHub"></a>上传配置文件到GitHub</h3><p>配置文件名为：eureka_config.yml，上传到GitHub的microservice-config库中，内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span>  <span class="comment">#当前使用的是dev配置</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2004</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">eureka:</span> </span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span> </span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false 由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span> </span><br><span class="line">       <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span>       <span class="comment">#设置与Eureka注册中心交互的地址，查询服务和注册服务用到       #设置与Eureka注册中心交互的地址，查询服务和注册服务用到</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2004</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span>  </span><br><span class="line"><span class="attr">eureka:</span> </span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span> </span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false 由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span> </span><br><span class="line">       <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span>       <span class="comment">#设置与Eureka注册中心交互的地址，查询服务和注册服务用到       #设置与Eureka注册中心交互的地址，查询服务和注册服务用到</span></span><br></pre></td></tr></table></figure>

<h3 id="整合过程"><a href="#整合过程" class="headerlink" title="整合过程"></a>整合过程</h3><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Spring Cloud Client--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--Eureka服务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修改后立即生效，热部署 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-eureka-server-config</span></span><br></pre></td></tr></table></figure>

<h4 id="bootstrap-yml配置"><a href="#bootstrap-yml配置" class="headerlink" title="bootstrap.yml配置"></a>bootstrap.yml配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-eureka-server-config</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">eureka_config</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://configserver.ledao.com:4001</span>  <span class="comment"># 配置configserver地址</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span>  <span class="comment"># 级别</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span>  <span class="comment"># 分支git中 默认master</span></span><br></pre></td></tr></table></figure>

<h4 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Config整合Eureka启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-18 23:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaApplication_2004</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaApplication_2004.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加本地域名映射"><a href="#添加本地域名映射" class="headerlink" title="添加本地域名映射"></a>添加本地域名映射</h4><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  eureka2004.ledao.com</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动项目：microservice-config-server-4001和microservice-eureka-server-config-2004</p>
<p>地址栏输入：<a href="http://eureka2004.ledao.com:2004/">http://eureka2004.ledao.com:2004/</a> ，如果配置成功会看到Eureka界面</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>整合提供者服务和消费者服务的过程也基本相似</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo隐藏文章</title>
    <url>/249.html</url>
    <content><![CDATA[<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>安装命令如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-hide-posts --save</span><br></pre></td></tr></table></figure>

<h3 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># hexo-hide-posts</span></span><br><span class="line"><span class="attr">hide_posts:</span></span><br><span class="line">  <span class="comment"># 可以改成其他你喜欢的名字</span></span><br><span class="line">  <span class="attr">filter:</span> <span class="string">hidden</span></span><br><span class="line">  <span class="comment"># 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span></span><br><span class="line">  <span class="comment"># 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span></span><br><span class="line">  <span class="comment"># 留空则默认全部隐藏</span></span><br><span class="line">  <span class="attr">public_generators:</span> []</span><br><span class="line">  <span class="comment"># 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span></span><br><span class="line">  <span class="attr">noindex:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="隐藏文章"><a href="#隐藏文章" class="headerlink" title="隐藏文章"></a>隐藏文章</h3><p>在文章属性Front-matter中添加<font color="#dd0000">hidden: true</font>，如下：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo隐藏文章</span><br><span class="line">tags: hexo</span><br><span class="line">categories: hexo</span><br><span class="line">abbrlink: 49410</span><br><span class="line">date: 2021-08-06 10:15:05</span><br><span class="line"><span class="section">hidden: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>隐藏后可通过该文章的链接访问，可以通过 <font color="#dd0000">hexo hidden:list </font>查看已隐藏的文章</p>
<p>如果不想让人通过该文章的链接访问，那么我们可以加密文章，如何加密文章查看：<a href="/250.html">hexo加密文章</a></p>
<p>来源：<a href="https://blog.garryde.com/archives/37712.html">https://blog.garryde.com/archives/37712.html</a></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL创建表语句</title>
    <url>/25.html</url>
    <content><![CDATA[<h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a><strong>创建表</strong></h3><p>//主键：primary key 自增：auto_increment</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_bookType(</span><br><span class="line"> </span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line"> </span><br><span class="line">bookTypeName <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line"> </span><br><span class="line">bookTypeDesc <span class="type">VARCHAR</span>(<span class="number">200</span>)</span><br><span class="line"> </span><br><span class="line">); </span><br></pre></td></tr></table></figure>

<p>//外键约束：constraint <code>fk</code> foreign key (<code>bookTypeId</code>) references <code>t_bookType</code>(<code>id</code>)</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_book(</span><br><span class="line"> </span><br><span class="line">id <span class="type">INT</span> <span class="keyword">PRIMARY</span> KEY AUTO_INCREMENT,</span><br><span class="line"> </span><br><span class="line">bookName <span class="type">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line"> </span><br><span class="line">author <span class="type">VARCHAR</span>(<span class="number">10</span>),</span><br><span class="line"> </span><br><span class="line">price <span class="type">DECIMAL</span>(<span class="number">6</span>,<span class="number">2</span>),</span><br><span class="line"> </span><br><span class="line">bookTypeId <span class="type">INT</span>,</span><br><span class="line"> </span><br><span class="line"><span class="keyword">CONSTRAINT</span> `fk` <span class="keyword">FOREIGN</span> KEY (`bookTypeId`) <span class="keyword">REFERENCES</span> `t_bookType`(`id`)</span><br><span class="line"> </span><br><span class="line">); </span><br></pre></td></tr></table></figure>

<h3 id="查看表结构"><a href="#查看表结构" class="headerlink" title="查看表结构"></a>查看表结构</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DESC</span> 表名; </span><br></pre></td></tr></table></figure>

<h3 id="查看表的创建语句"><a href="#查看表的创建语句" class="headerlink" title="查看表的创建语句"></a><strong>查看表的创建语句</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名; </span><br></pre></td></tr></table></figure>

<h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_book RENAME t_book2; </span><br></pre></td></tr></table></figure>

<h3 id="修改字段"><a href="#修改字段" class="headerlink" title="修改字段"></a><strong>修改字段</strong></h3><p>更改后的名字 数据类型（长度）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_book CHANGE bookName bookName2 <span class="type">VARCHAR</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure>

<h3 id="在第一行添加字段"><a href="#在第一行添加字段" class="headerlink" title="在第一行添加字段"></a><strong>在第一行添加字段</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_book <span class="keyword">ADD</span> test <span class="type">INT</span> <span class="keyword">FIRST</span>;</span><br></pre></td></tr></table></figure>

<h3 id="在某个字段后添加字段"><a href="#在某个字段后添加字段" class="headerlink" title="在某个字段后添加字段"></a><strong>在某个字段后添加字段</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_book <span class="keyword">ADD</span> test1 <span class="type">INT</span> after author;</span><br></pre></td></tr></table></figure>

<h3 id="删除字段"><a href="#删除字段" class="headerlink" title="删除字段"></a><strong>删除字段</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> t_book <span class="keyword">DROP</span> test;</span><br></pre></td></tr></table></figure>

<h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><p>（有外键约束的要先删除完子表，才能删除主表）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> t_book;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo加密文章</title>
    <url>/250.html</url>
    <content><![CDATA[<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>安装命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure>

<h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><p>将 “password” 字段添加到文章信息头</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2016-03-30 21:18:02</span><br><span class="line"><span class="section">password: hello</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure>

<p>执行命令：hexo clean，hexo g，hexo s</p>
<p>然后可以在本地预览加密的文章</p>
<h3 id="高级配置"><a href="#高级配置" class="headerlink" title="高级配置"></a>高级配置</h3><p>可以中文化提示信息以及更多配置（也可以不配置）</p>
<p>在站点根目录的_config.yml文件中添加下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 加密文章</span></span><br><span class="line"><span class="attr">encrypt:</span> <span class="comment"># hexo-blog-encrypt</span></span><br><span class="line">  <span class="attr">abstract:</span> <span class="string">有东西被加密了,</span> <span class="string">请输入密码查看.</span></span><br><span class="line">  <span class="attr">message:</span> <span class="string">您好,</span> <span class="string">这里需要密码.</span></span><br><span class="line">  <span class="attr">theme:</span> <span class="string">xray</span></span><br><span class="line">  <span class="attr">wrong_pass_message:</span> <span class="string">抱歉,</span> <span class="string">这个密码看着不太对,</span> <span class="string">请再试试.</span></span><br><span class="line">  <span class="attr">wrong_hash_message:</span> <span class="string">抱歉,</span> <span class="string">这个文章不能被校验,</span> <span class="string">不过您还是能看看解密后的内容.</span></span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a></p>]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10安装ZooKeeper</title>
    <url>/251.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>进入ZooKeeper主页：<a href="https://zookeeper.apache.org/index.html">https://zookeeper.apache.org/index.html</a> ，点击Download进入下载页面</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20175632.png"></p>
<p>根据自己的需求下载对应的版本，下载第一个</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20175138.png"></p>
<p>点击HTTP下的下载链接</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20175221.png"></p>
<p>下载完的文件名中包含bin字段（从版本3.5.5开始，带有bin名称的包才是我们想要的下载可以直接使用的里面有编译后的二进制的包，而之前的普通的tar.gz的包里面是只是源码的包无法直接使用）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20175857.png"></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>将下载好的文件解压，再解压，如果出现替换文件提示，选择全否</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20180005.png"></p>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>点击bin文件夹中的zkServer.cmd运行，如果出现一个cmd窗口马上就关闭，说明启动失败自动关闭窗口，这时我们需要查看错误信息，修改zkServer.cmd（在文件的最后新建一行，加上pause）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20184217.png"></p>
<p>再次运行查看错误信息，从下图可以看到conf文件夹中没有zoo.cfg这个文件</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20180147.png"></p>
<p>将conf文件夹的zoo_sample.cfg这个文件重命名为zoo.cfg</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20180220.png"></p>
<p>再次启动，如果看到端口号：2181，说明启动成功</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20180256.png"></p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
        <tag>ZooKeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装ZooKeeper</title>
    <url>/252.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>创建一个文件夹存放ZooKeeper，进入该文件夹后使用swet命令下载apache-zookeeper-3.7.0-bin.tar.gz（<font color="#dd0000">我的阿里云CentOS7服务器中使用wge命令</font>）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://downloads.apache.org/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf apache-zookeeper-3.7.0-bin.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>进入conf文件夹</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/zookeeper/apache-zookeeper-3.7.0-bin/conf/</span><br></pre></td></tr></table></figure>

<p>复制zoo_sample.cfg到当前目录，并命令为zoo.cfg</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp zoo_sample.cfg zoo.cfg</span><br></pre></td></tr></table></figure>

<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>进入解压后的文件夹apache-zookeeper-3.7.0-bin</p>
<h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/zkServer.sh start</span><br></pre></td></tr></table></figure>

<h4 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h4><p>查看当前状态，看到下图说明启动成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/zkServer.sh status</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20211050.png"></p>
<p>也进入客户端查看运行状态，看到 <font color="#dd0000">Welcome to Zookeeper!</font>说明启动成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/zkCli.sh -server localhost:2181</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20210924.png"></p>
<h4 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./bin/zkServer.sh stop</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>ZooKeeper</tag>
      </tags>
  </entry>
  <entry>
    <title>idea创建Maven项目</title>
    <url>/253.html</url>
    <content><![CDATA[<p>选择Maven项目、JDK版本、Maven Archetype（选maven-archetype-webapp）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20220412.png"></p>
<p>取名以及选择项目路径</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20220536.png"></p>
<p>选择本机的Maven安装路径、配置文件、仓库路径</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20220708.png"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Maven</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Dubbo Admin控制台</title>
    <url>/254.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>阿里云盘链接：<a href="https://www.aliyundrive.com/s/nZaiPAfGKnq">https://www.aliyundrive.com/s/nZaiPAfGKnq</a></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>安装一个Tomcat7，平时不使用，专门用来运行Dubbo Admin控制台，安装步骤 ：<a href="/147.html">安装Tomcat</a></p>
<p>删除Tomcat7的安装目录webapp/ROOT文件夹中的全部文件（该ROOT文件夹为直接输入端口号时显示的Tomcat主页）</p>
<p>解压下载的dubbo-admin-2.6.0.war，复制解压后的所有文件到webapp/ROOT文件夹中</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20234017.png"></p>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>必须先启动Zookeeper，如何启动查看：<a href="/251.html#%E8%BF%90%E8%A1%8C">Windows10安装ZooKeeper</a></p>
<p>双击Tomcat7的安装目录bin文件夹中的startup.bat运行Tomcat7，在浏览器地址栏输入localhost:8080，输入用户名和密码，默认用户名和密码都是root</p>
<p>如果输入localhost:8080后出现下面图片所示的界面，说明8080端口被占用了，那么直接修改Tomcat7的默认端口，去修改Tomcat7的配置文件server.xml（在conf文件夹中）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20235223.png"></p>
<p>修改前：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改后：（我修改为8888）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8888&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>在地址栏中输入localhost:8888，输入用户名和密码，即可进入Dubbo Admin控制台</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-09%20235847.png"></p>]]></content>
      <categories>
        <category>Dubbo</category>
      </categories>
      <tags>
        <tag>ZooKeeper</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>发布Dubbo服务</title>
    <url>/255.html</url>
    <content><![CDATA[<h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>新建一个Maven项目名称为DubboDemo，在该项目下新建一个子模块项目名称为Provider</p>
<p>创建java和resources文件夹</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20000838.png"></p>
<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.101tec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.35.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><p>服务提供者接口DemoProviderService.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-09 22:20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DemoProviderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">sayHello</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>服务提供者接口实现类DemoProviderServiceImpl.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> service.DemoProviderService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者接口实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-10 2:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoProviderServiceImpl</span> <span class="keyword">implements</span> <span class="title">DemoProviderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;服务员（端口：20880）&quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="新建dubbo-demo-provider-xml文件"><a href="#新建dubbo-demo-provider-xml文件" class="headerlink" title="新建dubbo-demo-provider.xml文件"></a>新建dubbo-demo-provider.xml文件</h3><p>在resources文件夹中新建，代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://code.alibabatech.com/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--提供方应用名称, 用于计算依赖关系--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;demo-provider&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用zookeeper注册中心暴露服务地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://localhost:2181&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用dubbo协议在20880端口暴露服务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">&quot;dubbo&quot;</span> <span class="attr">port</span>=<span class="string">&quot;20880&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--service实现类作为本地的一个bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;demoProviderService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;service.impl.DemoProviderServiceImpl&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明需要暴露的服务接口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:service</span> <span class="attr">interface</span>=<span class="string">&quot;service.DemoProviderService&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;demoProviderService&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-10 2:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProviderTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;dubbo-demo-provider.xml&quot;</span>);</span><br><span class="line">        context.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;服务提供者注册成功（端口：20880）&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.in.read();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        context.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>在Dubbo Admin控制台中查看服务，如何使用Dubbo Admin控制台查看博客：<a href="/254.html">使用Dubbo Admin控制台</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20001746.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20022214.png"></p>]]></content>
      <categories>
        <category>Dubbo</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>消费Dubbo服务</title>
    <url>/256.html</url>
    <content><![CDATA[<p>新建一个子模块项目名称为Consumer</p>
<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.101tec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.35.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="新建dubbo-demo-consumer-xml"><a href="#新建dubbo-demo-consumer-xml" class="headerlink" title="新建dubbo-demo-consumer.xml"></a>新建dubbo-demo-consumer.xml</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://code.alibabatech.com/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;demo-consumer&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--使用zookeeper注册中心暴露服务地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://localhost:2181&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--生成远程服务代理，可以和本地bean一样使用demoProviderService  check属性，启动的时候是否检查 一般设置为false 启动的时候不检查--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:reference</span> <span class="attr">id</span>=<span class="string">&quot;demoProviderService&quot;</span> <span class="attr">check</span>=<span class="string">&quot;false&quot;</span> <span class="attr">interface</span>=<span class="string">&quot;service.DemoProviderService&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><h4 id="DemoProviderService-java"><a href="#DemoProviderService-java" class="headerlink" title="DemoProviderService.java"></a>DemoProviderService.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-10 2:02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DemoProviderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试接口</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">sayHello</span><span class="params">(String name)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"><span class="keyword">import</span> service.DemoProviderService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-10 2:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;dubbo-demo-consumer.xml&quot;</span>);</span><br><span class="line">        context.start();</span><br><span class="line">        DemoProviderService demoProviderService = (DemoProviderService) context.getBean(<span class="string">&quot;demoProviderService&quot;</span>);</span><br><span class="line">        String result = demoProviderService.sayHello(<span class="string">&quot;小米&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;远程调用的结果：&quot;</span> + result);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.in.read();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        context.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>Consumer子模块项目没有服务提供者接口的实现类，但是调用了Provider子模块项目的服务提供者接口的实现类，从而实现消费Dubbo服务</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20022051.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20022200.png"></p>]]></content>
      <categories>
        <category>Dubbo</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>idea创建Maven多模块项目</title>
    <url>/257.html</url>
    <content><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>已经创建好一个Maven项目（在创建这个项目时不需要勾选Create from archetype），可以直接删除它的src文件夹，我们把该项目称为父模块</p>
<h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>鼠标右击该父模块，选择New  &gt;&gt; Module，然后像新建项目那样操作即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20122822.png"></p>
<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20122255.png"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Maven</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven使用parent统一管理依赖版本</title>
    <url>/258.html</url>
    <content><![CDATA[<h3 id="新建子模块"><a href="#新建子模块" class="headerlink" title="新建子模块"></a>新建子模块</h3><p>新建一个Maven子模块并命名为Parent，不需要勾选Create from archetype，删除src文件夹</p>
<h3 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h3><p>添加一个dependencyManagement节点，在dependencyManagement节点内添加dependencies节点，并在dependencies节点内添加依赖</p>
<p>使用dependencyManagement可以统一管理项目的版本号，确保应用的各个项目的依赖和版本一致，不用每个模块项目都弄一个版本号，不利于管理，当需要变更版本号的时候只需要在父类容器里更新，不需要任何一个子项目的修改；如果某个子项目需要另外一个特殊的版本号时，只需要在自己的模块dependencies中声明一个版本号即可。子类就会使用子类声明的版本号，不继承于父类版本号。</p>
<p>pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Parent Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.101tec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.46<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.35.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="统一管理版本"><a href="#统一管理版本" class="headerlink" title="统一管理版本"></a>统一管理版本</h3><p>在properties节点内管理依赖版本，修改后的pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Parent Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--依赖版本管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Api.version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">Api.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dubbo.version</span>&gt;</span>2.6.0<span class="tag">&lt;/<span class="name">dubbo.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">zkclient.version</span>&gt;</span>0.10<span class="tag">&lt;/<span class="name">zkclient.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">curator-framework.version</span>&gt;</span>4.0.1<span class="tag">&lt;/<span class="name">curator-framework.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">fastjson.version</span>&gt;</span>1.2.46<span class="tag">&lt;/<span class="name">fastjson.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">slf4j-api.version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">slf4j-api.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commons-lang3.version</span>&gt;</span>3.4<span class="tag">&lt;/<span class="name">commons-lang3.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">netty-all.version</span>&gt;</span>4.0.35.Final<span class="tag">&lt;/<span class="name">netty-all.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--依赖管理--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;Api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;dubbo.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.101tec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;zkclient.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;curator-framework.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;fastjson.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;slf4j-api.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;commons-lang3.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;netty-all.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="其它模块继承"><a href="#其它模块继承" class="headerlink" title="其它模块继承"></a>其它模块继承</h3><p>使用parent节点继承，节点内填要继承的模块依赖引用路径，Parent模块的引用路径如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>完整parent节点及其代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>继承的模块也需要引入依赖，但是不需要引入版本号，版本号由继承得到，完整pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Provider<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Provider Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.101tec<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zkclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.curator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>curator-framework<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.netty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>netty-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven出现错误：&quot;Parent, please verify your project structure&quot;</title>
    <url>/259.html</url>
    <content><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>该错误出现在使用parent节点继承其它模块的依赖版本号时</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在parent节点加入&lt;relativePath/&gt;，完整parent节点如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Maven</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL对表数据进行增删改查</title>
    <url>/26.html</url>
    <content><![CDATA[<h3 id="插入表数据"><a href="#插入表数据" class="headerlink" title="插入表数据"></a><strong>插入表数据</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `db_student`.`t_student` (`id`, `stuName`, `age`, `sex`, `gradeName`)<span class="keyword">VALUES</span>(<span class="string">&#x27;15&#x27;</span>,<span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;22&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;大四&#x27;</span>); </span><br></pre></td></tr></table></figure>

<h3 id="删除表数据（根据id）"><a href="#删除表数据（根据id）" class="headerlink" title="删除表数据（根据id）"></a><strong>删除表数据（根据id）</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `db_student`.`t_student` <span class="keyword">WHERE</span> `id`<span class="operator">=</span><span class="string">&#x27;16&#x27;</span>; </span><br></pre></td></tr></table></figure>

<h3 id="修改并更新表数据（根据id）"><a href="#修改并更新表数据（根据id）" class="headerlink" title="修改并更新表数据（根据id）"></a><strong>修改并更新表数据（根据id）</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">UPDATE `db_student`.`t_student` <span class="keyword">SET</span> `sex`<span class="operator">=</span><span class="string">&#x27;男&#x27;</span>,`gradeName`<span class="operator">=</span><span class="string">&#x27;大四&#x27;</span> <span class="keyword">WHERE</span> `id`<span class="operator">=</span><span class="string">&#x27;16&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="查找表数据（根据id）"><a href="#查找表数据（根据id）" class="headerlink" title="查找表数据（根据id）"></a><strong>查找表数据（根据id）</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `db_student`.`t_student` <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo抽取服务提供者和消费者的共同接口</title>
    <url>/260.html</url>
    <content><![CDATA[<h3 id="抽取原因"><a href="#抽取原因" class="headerlink" title="抽取原因"></a>抽取原因</h3><p>抽取前需要在服务提供者以及消费者模块中分别定义一次接口，抽取后只需要定义一次即可，可以提高开发的效率</p>
<h3 id="新建模块"><a href="#新建模块" class="headerlink" title="新建模块"></a>新建模块</h3><p>新建一个子模块项目存放接口，我命令为Api</p>
<h3 id="新建接口"><a href="#新建接口" class="headerlink" title="新建接口"></a>新建接口</h3><p>在java文件夹中新建service文件夹，再创建一个接口，该接口和服务提供者以及消费者的接口路径、名称要一样</p>
<h3 id="删除接口"><a href="#删除接口" class="headerlink" title="删除接口"></a>删除接口</h3><p>然后删除掉服务提供者和消费者的接口，删除后服务提供者以及消费者会报错</p>
<h3 id="引入存放接口模块的依赖"><a href="#引入存放接口模块的依赖" class="headerlink" title="引入存放接口模块的依赖"></a>引入存放接口模块的依赖</h3><p>引入的依赖路径在Api模块的pom.xml，如下图：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20143533.png"></p>
<p>在服务提供者以及消费者pom.xml的dependencies节点中引入依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>Api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>至此，共同接口抽取完成</p>]]></content>
      <categories>
        <category>Dubbo</category>
      </categories>
      <tags>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Dubbo服务集群实现负载均衡</title>
    <url>/261.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>当某个服务并发量特别大的时候，一个服务延迟太高，我们就需要进行服务集群，例如某个项目一天注册量10万，这个注册功能就必须要进行集群了，否则一个服务无法应付这么大的并发量</p>
<p>企业级项目多个服务集群，每个服务都放不同机器，不仅能实现负载均衡，也能进行容错；就算一个机器挂了，其他机器可以继续服务</p>
<p>多个服务也提供权重设置，来动态设置请求分发量</p>
<h3 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h3><p>dubbo的服务集群很简单，只需要配置文件里改个端口即可，其他代码不需要动</p>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><p>在之前Provider子模块项目的基础上，直接修改dubbo-demo-provider.xml的端口号即可（端口号只要不被占用即可，不需要和本文章的端口号一样）</p>
<p>修改前：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用dubbo协议在20880端口暴露服务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">&quot;dubbo&quot;</span> <span class="attr">port</span>=<span class="string">&quot;20880&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改后：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用dubbo协议在20881端口暴露服务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">&quot;dubbo&quot;</span> <span class="attr">port</span>=<span class="string">&quot;20881&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">上面的教程已经实现了服务集群，下面的教程只是为了可以更直观看到结果</font></p>
<p>为了可以更直观看到结果，我不直接修改dubbo-demo-provider.xml的端口号，而是新建三个文件：DemoProviderServiceImpl2.java、dubbo-demo-provider2.xml、ProviderTest2.java（路径和原来的文件一样），执行ProviderTest.java和ProviderTest2.java会分别发布两个Dubbo服务：一个端口为20880，另一个端口为20881，三个文件的代码如下：</p>
<p><strong>dubbo-demo-provider2.xml</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:dubbo</span>=<span class="string">&quot;http://code.alibabatech.com/schema/dubbo&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--提供方应用名称, 用于计算依赖关系--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:application</span> <span class="attr">name</span>=<span class="string">&quot;demo-provider&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用zookeeper注册中心暴露服务地址--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:registry</span> <span class="attr">address</span>=<span class="string">&quot;zookeeper://localhost:2181&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--使用dubbo协议在20881端口暴露服务--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:protocol</span> <span class="attr">name</span>=<span class="string">&quot;dubbo&quot;</span> <span class="attr">port</span>=<span class="string">&quot;20881&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--service实现类作为本地的一个bean--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;demoProviderService&quot;</span> <span class="attr">class</span>=<span class="string">&quot;service.impl.DemoProviderServiceImpl2&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--声明需要暴露的服务接口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dubbo:service</span> <span class="attr">interface</span>=<span class="string">&quot;service.DemoProviderService&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;demoProviderService&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>DemoProviderServiceImpl2.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> service.DemoProviderService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者接口实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-10 2:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoProviderServiceImpl2</span> <span class="keyword">implements</span> <span class="title">DemoProviderService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;服务员（端口：20881）&quot;</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>ProviderTest2.java</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-10 2:55</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProviderTest2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;dubbo-demo-provider2.xml&quot;</span>);</span><br><span class="line">        context.start();</span><br><span class="line">        System.out.println(<span class="string">&quot;服务提供者注册成功（端口：20881）&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            System.in.read();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        context.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>分别执行ProviderTest.java和ProviderTest2.java后</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20212025.png"></p>
<p>执行Consumer子模块的ConsumerTest.java后，会有两个结果（因为有两个提供者的服务，消费某个服务的概率为<font color="#dd0000">该服务的权重/所有服务的总权重</font>，所以要提高某个服务被消费的概率就提高该服务的权重即可）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20212606.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-10%20212630.png"></p>]]></content>
      <categories>
        <category>Dubbo</category>
      </categories>
      <tags>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud搭建父项目</title>
    <url>/262.html</url>
    <content><![CDATA[<h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>新建一个名称为SpringCloud普通项目，删除src文件夹</p>
<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><h4 id="Module-概述"><a href="#Module-概述" class="headerlink" title="Module 概述"></a>Module 概述</h4><p>在SpringCloud下新建一个Module Maven项目，名称为microservice，删除src文件夹，用于管理依赖版本，pom.xml文件的packaging节点修改为pom</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h4><p>引入Spring Cloud、Spring Boot、连接池依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>microservice Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid.version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">druid.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Spring Cloud--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Edgware.SR4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--Spring Boot--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--连接池--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud搭建公共模块项目</title>
    <url>/263.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>存放一些其他项目公用的东西，比如实体类，工具类等</p>
<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>该Module为Maven项目，命名为microservice-common</p>
<h4 id="继承依赖"><a href="#继承依赖" class="headerlink" title="继承依赖"></a>继承依赖</h4><p>在pom.xml文件中加入：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>引入 jpa 和 mysql 驱动包依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>microservice-common Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="新建Student实体类"><a href="#新建Student实体类" class="headerlink" title="新建Student实体类"></a>新建Student实体类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.persistence.*;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生实体类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 13:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="meta">@Table(name = &quot;t_student&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Id</span></span><br><span class="line">    <span class="meta">@GeneratedValue</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 名字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Column(length = 50)</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 年纪</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Column(length = 50)</span></span><br><span class="line">    <span class="keyword">private</span> String grade;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGrade</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> grade;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGrade</span><span class="params">(String grade)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.grade = grade;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="新建数据库"><a href="#新建数据库" class="headerlink" title="新建数据库"></a>新建数据库</h4><p>新建一个名为db_springcloud的数据库，不需要添加表，jpa会根据实体类自动生成</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud搭建服务提供者项目</title>
    <url>/264.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>用于提供服务</p>
<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>该Module为Maven项目，命名为microservice-student-provider-1001</p>
<h4 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-student-provider-1001<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>microservice-student-provider-1001 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入microservice-common依赖,引入后可以使用microservice-common的实体类,工具类等--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 修改后立即生效，热部署 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>在resources中新建application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">1001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_springcloud?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="学生Repository接口"><a href="#学生Repository接口" class="headerlink" title="学生Repository接口"></a>学生Repository接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaSpecificationExecutor;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生Repository接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 13:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">Student</span>, <span class="title">Integer</span>&gt;, <span class="title">JpaSpecificationExecutor</span>&lt;<span class="title">Student</span>&gt; </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="学生信息Service接口"><a href="#学生信息Service接口" class="headerlink" title="学生信息Service接口"></a>学生信息Service接口</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生信息Service接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 13:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加或者修改学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> student</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(Student student)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查找学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">Student <span class="title">findById</span><span class="params">(Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">List&lt;Student&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="学生信息Service实现类"><a href="#学生信息Service实现类" class="headerlink" title="学生信息Service实现类"></a>学生信息Service实现类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.repository.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> com.ledao.service.StudentService;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 学生信息Service实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 13:52</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;studentService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentServiceImpl</span> <span class="keyword">implements</span> <span class="title">StudentService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StudentRepository studentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        studentRepository.save(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findOne(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        studentRepository.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务提供者-学生信息控制器"><a href="#服务提供者-学生信息控制器" class="headerlink" title="服务提供者-学生信息控制器"></a>服务提供者-学生信息控制器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.service.StudentService;</span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者-学生信息控制器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 13:54</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/student&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentProviderController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StudentService studentService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加或者修改学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> student</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">save</span><span class="params">(<span class="meta">@RequestBody</span> Student student)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            studentService.save(student);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentService.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentService.findById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            studentService.delete(id);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务提供者启动类"><a href="#服务提供者启动类" class="headerlink" title="服务提供者启动类"></a>服务提供者启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.domain.EntityScan;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 14:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EntityScan(&quot;com/ledao/entity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentProviderApplication_1001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(StudentProviderApplication_1001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>运行服务提供者启动类后，在浏览器地址栏输入对应URL可以进行增删查改操作，端口为1001</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Cloud搭建服务消费者项目</title>
    <url>/265.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>用于消费服务</p>
<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>该Module为Maven项目，命名为microservice-student-consumer-80</p>
<h4 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-student-consumer-80<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>microservice-student-consumer-80 Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project&#x27;s website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入microservice-common依赖,引入后可以使用microservice-common的实体类,工具类等--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 修改后立即生效，热部署 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>在resources中新建application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>

<h4 id="SpringCloud相关配置"><a href="#SpringCloud相关配置" class="headerlink" title="SpringCloud相关配置"></a>SpringCloud相关配置</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SpringCloud相关配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 14:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用服务模版</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务消费者-学生信息控制器"><a href="#服务消费者-学生信息控制器" class="headerlink" title="服务消费者-学生信息控制器"></a>服务消费者-学生信息控制器</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestClientException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务消费者-学生信息控制器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 14:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/student&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConsumerController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PRE_HOST = <span class="string">&quot;http://localhost:1001&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加或者修改学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> student</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">save</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.postForObject(PRE_HOST + <span class="string">&quot;/student/save&quot;</span>, student, Boolean.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(PRE_HOST + <span class="string">&quot;/student/list&quot;</span>, List.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(PRE_HOST + <span class="string">&quot;/student/get/&quot;</span> + id, Student.class);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            restTemplate.getForObject(PRE_HOST + <span class="string">&quot;/student/delete/&quot;</span> + id, Boolean.class);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RestClientException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="服务消费者启动类"><a href="#服务消费者启动类" class="headerlink" title="服务消费者启动类"></a>服务消费者启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务消费者启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 15:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConsumerApplication_80</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(StudentConsumerApplication_80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>运行服务消费者启动类后，在浏览器地址栏输入对应URL可以进行增删查改操作，端口为80，通过端口80调用端口1001的方法</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建Eureka服务注册中心</title>
    <url>/266.html</url>
    <content><![CDATA[<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>该Module为Maven项目，命名为microservice-eureka-server-2001</p>
<h4 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>microservice-eureka-server-2001<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-eureka-server-2001<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Eureka服务--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 修改后立即生效，热部署 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>在resources中新建application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span> <span class="comment">#eureka注册中心实例名称</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false 由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span>       <span class="comment">#设置与Eureka注册中心交互的地址，查询服务和注册服务用到</span></span><br></pre></td></tr></table></figure>

<h4 id="Eureka服务启动类"><a href="#Eureka服务启动类" class="headerlink" title="Eureka服务启动类"></a>Eureka服务启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Eureka服务启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 16:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaApplication_2001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaApplication_2001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>运行Eureka服务启动类后，在浏览器地址栏输入：<a href="http://localhost:2001/">http://localhost:2001/</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-11%20180544.png"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>服务提供者注册到Eureka</title>
    <url>/267.html</url>
    <content><![CDATA[<p>在microservice-student-provider-1001子模块项目的基础上修改</p>
<h3 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h3><p>加上eureka客户端依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--eureka客户端依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="修改application-yml"><a href="#修改application-yml" class="headerlink" title="修改application.yml"></a>修改application.yml</h3><p>直接添加下面代码</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span>  <span class="comment">#eureka客户端主机实例名称</span></span><br><span class="line">    <span class="attr">appname:</span> <span class="string">microservice-student</span>  <span class="comment">#客户端服务名</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">microservice-student:1001</span> <span class="comment">#客户端实例名称</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#显示IP</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:2001/eureka</span>   <span class="comment">#把服务注册到eureka注册中心</span></span><br></pre></td></tr></table></figure>

<p>在启动类加上@EnableEurekaClient注解</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.domain.EntityScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.EnableEurekaClient;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 服务提供者启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 14:01</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EntityScan(&quot;com/ledao/entity&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentProviderApplication_1001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(StudentProviderApplication_1001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>分别启动microservice-student-provider-1001和microservice-eureka-server-2001子模块项目</p>
<p>浏览器地址栏输入 <a href="http://localhost:2001/">http://localhost:2001/</a> ，Eureka服务注册中心出现了划红线处的服务</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-11%20200124.png"></p>
<h3 id="配置info信息"><a href="#配置info信息" class="headerlink" title="配置info信息"></a>配置info信息</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>点击上图的划红线处的链接可以查看一些信息，比如：该服务的groupId、artifactId、version，继承的artifactId、该服务的负责人和电话</p>
<h4 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h4><p>在服务提供者项目pom.xml里加入actuator监控依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- actuator监控引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在父项目pom.xml里的build节点加入：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在服务提供者项目application.yml加上info配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">info:</span></span><br><span class="line">  <span class="attr">current.groupId:</span> <span class="string">@project.groupId@</span></span><br><span class="line">  <span class="attr">current.artifactId:</span> <span class="string">@project.artifactId@</span></span><br><span class="line">  <span class="attr">current.version:</span> <span class="string">@project.version@</span></span><br><span class="line">  <span class="attr">parent.artifactId:</span> <span class="string">@project.parent.artifactId@</span></span><br><span class="line">  <span class="string">负责人:</span> <span class="string">张三</span></span><br><span class="line">  <span class="string">联系电话:</span> <span class="number">110</span></span><br></pre></td></tr></table></figure>

<p>结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-11%20210834.png"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>Eureka注册中心高可用集群配置</title>
    <url>/268.html</url>
    <content><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>当注册中心扛不住高并发时，就需要集群了</p>
<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>新建两个Module，一个名称为：microservice-eureka-server-2002，另一个名称为：microservice-eureka-server-2003</p>
<h3 id="继承依赖"><a href="#继承依赖" class="headerlink" title="继承依赖"></a>继承依赖</h3><p>在新建的两个Module的pom.xml中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><p>在新建的两个Module的pom.xml中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Eureka服务--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 修改后立即生效，热部署 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h3><p>在新建的两个Module都添加启动类，名称分别为：EurekaServerApplication_2002和EurekaServerApplication_2003，可以直接复制EurekaServerApplication_2001.java的内容然后修改名称即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Eureka服务启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 16:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaApplication_2001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(EurekaApplication_2001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="配置本机host"><a href="#配置本机host" class="headerlink" title="配置本机host"></a>配置本机host</h3><p>前面单机的时候 eureka注册中心实例名称 是localhost，现在是集群，不能三个实例都是localhost，这里复杂的办法是搞三个虚拟机，比较麻烦，这里有简单办法，直接配置本机hosts，来实现本机域名映射；</p>
<p>找到 C:\Windows\System32\drivers\etc 打开hosts，加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  eureka2001.ledao.com</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  eureka2002.ledao.com</span><br><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  eureka2003.ledao.com</span><br></pre></td></tr></table></figure>

<h3 id="修改application-yml"><a href="#修改application-yml" class="headerlink" title="修改application.yml"></a>修改application.yml</h3><p>修改三个项目的application.yml文件，主要是修改 hostname和defaultZone</p>
<p>microservice-eureka-server-<strong>2001</strong>的application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># hostname: localhost #eureka注册中心实例名称 单机</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka2001.ledao.com</span> <span class="comment"># 集群</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false 由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2002.ledao.com:2002/eureka/,http://eureka2003.ledao.com:2003/eureka/</span> <span class="comment"># 集群</span></span><br><span class="line">      <span class="comment">#单机defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/       #设置与Eureka注册中心交互的地址，查询服务和注册服务用到</span></span><br></pre></td></tr></table></figure>

<p>microservice-eureka-server-<strong>2002</strong>的application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2002</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># hostname: localhost #eureka注册中心实例名称 单机</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka2002.ledao.com</span> <span class="comment"># 集群</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false 由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2001.ledao.com:2001/eureka/,http://eureka2003.ledao.com:2003/eureka/</span> <span class="comment"># 集群</span></span><br><span class="line">      <span class="comment">#单机defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/       #设置与Eureka注册中心交互的地址，查询服务和注册服务用到</span></span><br></pre></td></tr></table></figure>

<p>microservice-eureka-server-<strong>2003</strong>的application.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2003</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># hostname: localhost #eureka注册中心实例名称 单机</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka2003.ledao.com</span> <span class="comment"># 集群</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span>     <span class="comment">#false 由于该应用为注册中心，所以设置为false,代表不向注册中心注册自己。</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span>     <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2002.ledao.com:2002/eureka/,http://eureka2003.ledao.com:2003/eureka/</span> <span class="comment"># 集群</span></span><br><span class="line">      <span class="comment">#单机defaultZone: http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/       #设置与Eureka注册中心交互的地址，查询服务和注册服务用到</span></span><br></pre></td></tr></table></figure>

<p>服务提供者项目microservice-student-provider-1001的application.yml，主要修改eureka.client.service-url.defaultZone</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">1001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_springcloud?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span>  <span class="comment">#eureka客户端主机实例名称</span></span><br><span class="line">    <span class="attr">appname:</span> <span class="string">microservice-student</span>  <span class="comment">#客户端服务名</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">microservice-student:1001</span> <span class="comment">#客户端实例名称</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#显示IP</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment"># defaultZone: http://localhost:2001/eureka   #把服务注册到eureka注册中心 #单机</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2001.ledao.com:2001/eureka/,http://eureka2002.ledao.com:2002/eureka/,http://eureka2003.ledao.com:2003/eureka/</span> <span class="comment"># 集群</span></span><br><span class="line"><span class="attr">info:</span></span><br><span class="line">  <span class="attr">current.groupId:</span> <span class="string">@project.groupId@</span></span><br><span class="line">  <span class="attr">current.artifactId:</span> <span class="string">@project.artifactId@</span></span><br><span class="line">  <span class="attr">current.version:</span> <span class="string">@project.version@</span></span><br><span class="line">  <span class="attr">parent.artifactId:</span> <span class="string">@project.parent.artifactId@</span></span><br><span class="line">  <span class="string">负责人:</span> <span class="string">张三</span></span><br><span class="line">  <span class="string">联系电话:</span> <span class="number">110</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>运行microservice-eureka-server-2001、microservice-eureka-server-2002、microservice-eureka-server-2003和microservice-student-provider-1001四个项目后开始测试</p>
<p>下面三个链接都可以测试</p>
<p><a href="http://eureka2001.ledao.com:2001/">http://eureka2001.ledao.com:2001/</a></p>
<p><a href="http://eureka2002.ledao.com:2002/">http://eureka2002.ledao.com:2002/</a></p>
<p><a href="http://eureka2003.ledao.com:2003/">http://eureka2003.ledao.com:2003/</a></p>
<p>结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-11%20222023.png"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Eureka</tag>
      </tags>
  </entry>
  <entry>
    <title>Ribbon调用服务</title>
    <url>/269.html</url>
    <content><![CDATA[<h3 id="Ribbon简介"><a href="#Ribbon简介" class="headerlink" title="Ribbon简介"></a>Ribbon简介</h3><p>Ribbon是Netflix发布的负载均衡器，它有助于控制HTTP和TCP的客户端的行为。为Ribbon配置服务提供者地址后，Ribbon就可基于某种负载均衡算法，自动地帮助服务消费者去请求。Ribbon默认为我们提供了很多负载均衡算法，例如轮询、随机等。当然，我们也可为Ribbon实现自定义的负载均衡算法。</p>
<p>在Spring Cloud中，当Ribbon与Eureka配合使用时，Ribbon可自动从Eureka Server获取服务提供者地址列表，并基于负载均衡算法，请求其中一个服务提供者实例。下图展示了Ribbon与Eureka配合使用时的架构。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-11%20222222.jpg"></p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>我们修改microservice-student-consumer-80子模块项目</p>
<h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-ribbon<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="修改application-yml"><a href="#修改application-yml" class="headerlink" title="修改application.yml"></a>修改application.yml</h4><p>添加下面内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span> <span class="comment">#false 由于注册中心的职责就是维护服务实例，它并不需要去检索服务，所以也设置为false</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2001.ledao.com:2001/eureka/,http://eureka2002.ledao.com:2002/eureka/,http://eureka2003.ledao.com:2003/eureka/</span></span><br></pre></td></tr></table></figure>

<h4 id="添加-LoadBalanced注解"><a href="#添加-LoadBalanced注解" class="headerlink" title="添加@LoadBalanced注解"></a>添加@LoadBalanced注解</h4><p>SpringCloudConfig.java的getRestTemplate()方法上添加@LoadBalanced注解（负载均衡配置）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * SpringCloud相关配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 14:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringCloudConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调用服务模版</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">getRestTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加注解-EnableEurekaClient"><a href="#添加注解-EnableEurekaClient" class="headerlink" title="添加注解@EnableEurekaClient"></a>添加注解@EnableEurekaClient</h4><p>因为和eureka整合，所以启动类StudentConsumerApplication_80 加个注解 @EnableEurekaClient</p>
<h4 id="指定应用名称"><a href="#指定应用名称" class="headerlink" title="指定应用名称"></a>指定应用名称</h4><p>在服务提供者microservice-student-provider-1001的application.yml以下配置（microservice-student为微服务应用名称）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">application:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">microservice-student</span></span><br></pre></td></tr></table></figure>

<p>在spring配置下添加，完整spring配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-student</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_springcloud?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="修改PRE-HOST"><a href="#修改PRE-HOST" class="headerlink" title="修改PRE_HOST"></a>修改PRE_HOST</h4><p>修改服务消费者子模块项目的StudentConsumerController.java中的PRE_HOST为 <a href="http://microservice-student/">http://MICROSERVICE-STUDENT</a></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String PRE_HOST = <span class="string">&quot;http://MICROSERVICE-STUDENT&quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>依次运行microservice-eureka-server-2001、microservice-eureka-server-2002、microservice-eureka-server-2003、microservice-student-provider-1001、microservice-student-consumer-80子模块项目</p>
<p>浏览器地址栏输入：<a href="http://localhost/student/list">http://localhost/student/list</a> ，出现下面结果说明调用服务成功（下面是格式化过的JSON串）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-11%20232700.png"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Eureka</tag>
        <tag>Ribbon</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL单表查询</title>
    <url>/27.html</url>
    <content><![CDATA[<h3 id="查询全部表数据"><a href="#查询全部表数据" class="headerlink" title="查询全部表数据"></a><strong>查询全部表数据</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> id,stuName,age,sex,gradeName <span class="keyword">FROM</span> t_student;</span><br></pre></td></tr></table></figure>

<p>//可以不按顺序</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028012504.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student; </span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028012504.jpg" alt="img"></p>
<h3 id="查询指定表数据"><a href="#查询指定表数据" class="headerlink" title="查询指定表数据"></a><strong>查询指定表数据</strong></h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> stuName,gradeName <span class="keyword">FROM</span> t_student; </span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028012620.jpg" alt="img"></p>
<p>查询表数据语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span>; </span><br></pre></td></tr></table></figure>

<p>//id为1</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017011751.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">&gt;</span><span class="number">24</span>; </span><br></pre></td></tr></table></figure>

<p>//年龄大于24</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028012858.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">IN</span>(<span class="number">21</span>,<span class="number">23</span>,<span class="number">24</span>); </span><br></pre></td></tr></table></figure>

<p>//年龄是21，23，24的</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028013330.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">NOT</span> <span class="keyword">IN</span>(<span class="number">21</span>,<span class="number">23</span>,<span class="number">24</span>);</span><br></pre></td></tr></table></figure>

<p>//年龄不是21，23，24的</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028013828.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">21</span> <span class="keyword">AND</span> <span class="number">24</span>;</span><br></pre></td></tr></table></figure>

<p>//年龄在21和24之间的，包括</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028014000.jpg" alt="img"></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">NOT</span> <span class="keyword">BETWEEN</span> <span class="number">21</span> <span class="keyword">AND</span> <span class="number">24</span>;</span><br></pre></td></tr></table></figure>

<p>//年龄不在21和24之间的，包括</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201028014339.jpg" alt="img"></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Ribbon负载均衡</title>
    <url>/270.html</url>
    <content><![CDATA[<h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>新建两个Module，一个名称为：microservice-student-provider-1002，另一个名称为：microservice-student-provider-1003，通过三个服务提供者实现集群，然后才能演示负载均衡，以及负载均衡策略</p>
<h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><p>pom.xml，application.yml，以及java类都复制一份，启动类名称对应Module的名称的数字进行修改</p>
<p>yml配置文件有两处要修改：port端口和服务实例名称对应Module的名称的数字进行修改</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20021214.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20021239.png"></p>
<h3 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a>修改代码</h3><p>为了方便查看具体执行了哪个服务提供者，在三个服务提供者的StudentProviderController的list方法中添加一条打印语句，打印语句的数字对应Module的名称的数字进行修改</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20021619.png"></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>先启动三个eureka集群，再启动三个服务提供者集群</p>
<p>测试服务提供者：</p>
<p><a href="http://localhost:1001/student/list">http://localhost:1001/student/list</a></p>
<p><a href="http://localhost:1002/student/list">http://localhost:1002/student/list</a></p>
<p><a href="http://localhost:1003/student/list">http://localhost:1003/student/list</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20032238.png"></p>
<p>测试下Eureka：</p>
<p><a href="http://eureka2001.ledao.com:2001/">http://eureka2001.ledao.com:2001/</a></p>
<p><a href="http://eureka2002.ledao.com:2002/">http://eureka2002.ledao.com:2002/</a></p>
<p><a href="http://eureka2003.ledao.com:2003/">http://eureka2003.ledao.com:2003/</a></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20032132.png"></p>
<p>启动服务消费者：</p>
<p><a href="http://localhost/student/list">http://localhost/student/list</a></p>
<p>每刷新一次页面，就消费一次服务，消费了哪个服务就在该服务的控制台打印下面语句</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20032830.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20032843.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20032855.png"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Ribbon</tag>
      </tags>
  </entry>
  <entry>
    <title>Ribbon策略</title>
    <url>/271.html</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>Ribbon默认的策略是轮询策略，这种默认的轮询策略肯定是不能满足实际需求的，比如有3个服务提供者，突然挂了一个，这样的话，默认轮询 ，总有1/3的概率访问失败，会出现下面的错误，所以需要选择合适的策略</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-12%20033945.png"></p>
<h3 id="策略大全"><a href="#策略大全" class="headerlink" title="策略大全"></a>策略大全</h3><table>
<thead>
<tr>
<th align="left">策略名</th>
<th>策略声明</th>
<th>策略描述</th>
<th>实现说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">BestAvailableRule</td>
<td>public class BestAvailableRule extends ClientConfigEnabledRoundRobinRule</td>
<td>选择一个最小的并发请求的server</td>
<td>逐个考察Server，如果Server被tripped了，则忽略，在选择其中ActiveRequestsCount最小的server</td>
</tr>
<tr>
<td align="left">AvailabilityFilteringRule</td>
<td>public class AvailabilityFilteringRule extends PredicateBasedRule</td>
<td>过滤掉那些因为一直连接失败的被标记为circuit tripped的后端server，并过滤掉那些高并发的的后端server（active connections 超过配置的阈值）</td>
<td>使用一个AvailabilityPredicate来包含过滤server的逻辑，其实就就是检查status里记录的各个server的运行状态</td>
</tr>
<tr>
<td align="left">WeightedResponseTimeRule</td>
<td>public class WeightedResponseTimeRule extends RoundRobinRule</td>
<td>根据响应时间分配一个weight，响应时间越长，weight越小，被选中的可能性越低。</td>
<td>一个后台线程定期的从status里面读取评价响应时间，为每个server计算一个weight。Weight的计算也比较简单responsetime 减去每个server自己平均的responsetime是server的权重。当刚开始运行，没有形成status时，使用roubine策略选择server。</td>
</tr>
<tr>
<td align="left">RetryRule</td>
<td>public class RetryRule extends AbstractLoadBalancerRule</td>
<td>对选定的负载均衡策略机上重试机制。</td>
<td>在一个配置时间段内当选择server不成功，则一直尝试使用subRule的方式选择一个可用的server</td>
</tr>
<tr>
<td align="left">RoundRobinRule</td>
<td>public class RoundRobinRule extends AbstractLoadBalancerRule</td>
<td>roundRobin方式轮询选择server</td>
<td>轮询index，选择index对应位置的server</td>
</tr>
<tr>
<td align="left">RandomRule</td>
<td>public class RandomRule extends AbstractLoadBalancerRule</td>
<td>随机选择一个server</td>
<td>在index上随机，选择index对应位置的server</td>
</tr>
<tr>
<td align="left">ZoneAvoidanceRule</td>
<td>public class ZoneAvoidanceRule extends PredicateBasedRule</td>
<td>复合判断server所在区域的性能和server的可用性选择server</td>
<td>使用ZoneAvoidancePredicate和AvailabilityPredicate来判断是否选择某个server，前一个判断判定一个zone的运行性能是否可用，剔除不可用的zone（的所有server），AvailabilityPredicate用于过滤掉连接数过多的Server。</td>
</tr>
</tbody></table>
<h3 id="使用策略"><a href="#使用策略" class="headerlink" title="使用策略"></a>使用策略</h3><p>在服务消费端 SpringCloudConfig 配置类自定义策略，用IRule实现，以实现RetryRule策略为例：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义轮询算法</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> IRule <span class="title">myRule</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> RetryRule();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Ribbon</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Feign</title>
    <url>/272.html</url>
    <content><![CDATA[<h3 id="Feign简介"><a href="#Feign简介" class="headerlink" title="Feign简介"></a>Feign简介</h3><p>Feign是一个声明式的Web Service客户端，它使得编写Web Serivce客户端变得更加简单。我们只需要使用Feign来创建一个接口并用注解来配置它既可完成。它具备可插拔的注解支持，包括Feign注解和JAX-RS注解。Feign也支持可插拔的编码器和解码器。Spring Cloud为Feign增加了对Spring MVC注解的支持，还整合了Ribbon和Eureka来提供均衡负载的HTTP客户端实现。</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="修改公共模块项目"><a href="#修改公共模块项目" class="headerlink" title="修改公共模块项目"></a>修改公共模块项目</h4><p>公共模块项目名称为： microservice-common </p>
<p>pom.xml引入Feign依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建StudentClientService接口（新建一个service包并存放在里面），加入<font color="#dd0000">@FeignClient(value = “MICROSERVICE-STUDENT”)</font>注解定义FeignClient并指定调用的服务名称MICROSERVICE-STUDENT</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.feign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Student Feign接口客户端</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-13 3:13</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;MICROSERVICE-STUDENT&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentClientService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/student/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">Student <span class="title">get</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/student/list&quot;)</span></span><br><span class="line">    <span class="function">List&lt;Student&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加或者修改学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> student</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/student/save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">save</span><span class="params">(Student student)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/student/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="新建Feign消费者项目"><a href="#新建Feign消费者项目" class="headerlink" title="新建Feign消费者项目"></a>新建Feign消费者项目</h4><p>新建一个Module，命名为：microservice-student-consumer-feign-80</p>
<p>将microservice-student-consumer-80消费者项目的文件都复制到新建的Feign消费者项目，将pom.xml引入的依赖也全部复制过去并引入feign依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-feign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改启动类</p>
<p>启动类如果也复制了过来，就重命名为：StudentConsumerFeignApplication_80，并添加注解：<font color="#dd0000">@EnableFeignClients</font></p>
<p>修改Controller</p>
<p>因为现在用Fiegn，所以把restTemplate去掉，改成注入service，调用service方法来实现服务的调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.ledao.service.StudentClientService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestClientException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Feign服务消费者-学生信息控制器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-11 14:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/student&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConsumerFeignController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> StudentClientService studentClientService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加或者修改学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> student</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;save&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">save</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentClientService.save(student);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询所有学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/list&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentClientService.list();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id查询学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> studentClientService.get(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据id删除学生信息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/delete/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            studentClientService.delete(id);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (RestClientException e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>启动三个Eureka服务注册中心和三个提供者服务，在启动上面新建的Feign消费者项目，然后地址栏输入：<a href="http://localhost/student/list">http://localhost/student/list</a> ，如果看到返回的学生列表说明Feign配置成功</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Feign</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Hystrix断路器</title>
    <url>/274.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>hystrix对应的中文名字是“豪猪”，豪猪周身长满了刺，能保护自己不受天敌的伤害，代表了一种防御机制，这与hystrix本身的功能不谋而合，因此Netflix团队将该框架命名为Hystrix，并使用了对应的卡通形象做作为logo。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-14%20033811.jpg" alt="img"></p>
<p>在一个分布式系统里，许多依赖不可避免的会调用失败，比如超时、异常等，如何能够保证在一个依赖出问题的情况下，不会导致整体服务失败，这个就是Hystrix需要做的事情。Hystrix提供了熔断、隔离、Fallback、cache、监控等功能，能够在一个、或多个依赖同时出现问题时保证系统依然可用。</p>
<h3 id="服务雪崩效应"><a href="#服务雪崩效应" class="headerlink" title="服务雪崩效应"></a><strong>服务雪崩效应</strong></h3><p>当一个请求依赖多个服务的时候：</p>
<p>正常情况下的访问</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-14%20034111.jpg" alt="img"></p>
<p>但是，当请求的服务中出现无法访问、异常、超时等问题时（图中的I），那么用户的请求将会被阻塞</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-14%20034116.jpg" alt="img"></p>
<p>如果多个用户的请求中，都存在无法访问的服务，那么他们都将陷入阻塞的状态中</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-14%20034122.jpg" alt="img"></p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>Hystrix断路器可以通过服务熔断和服务降级来解决上述的服务雪崩效应</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>熔断机制是应对雪崩效应的一种微服务链路保护机制，当某个服务不可用或者响应时间超时，会进行服务降级，进而熔断该节点的服务调用，快速返回自定义的错误影响页面信息</p>
<h4 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h4><p>命名为microservice-student-provider-hystrix-1004，把microservice-student-provider-1001的配置和代码都复制一份到新建的Module中</p>
<h4 id="修改pom-xml"><a href="#修改pom-xml" class="headerlink" title="修改pom.xml"></a>修改pom.xml</h4><p>引入Hystrix断路器依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--Hystrix断路器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="修改application-yml"><a href="#修改application-yml" class="headerlink" title="修改application.yml"></a>修改application.yml</h4><p>修改server.port为1004，eureka.instance.instance-id为microservice-student-hystrix:1004</p>
<h4 id="修改启动类"><a href="#修改启动类" class="headerlink" title="修改启动类"></a>修改启动类</h4><p>如果是复制过来的，重命名为StudentProviderHystrixApplication_1004，并添加@EnableCircuitBreaker注解支持Hystrix断路器</p>
<h4 id="修改消费者Controller"><a href="#修改消费者Controller" class="headerlink" title="修改消费者Controller"></a>修改消费者Controller</h4><p>StudentConsumerController.java在microservice-student-consumer-80项目中</p>
<p>添加getInfo方法，用于调用服务的getInfo方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getInfo&quot;)</span></span><br><span class="line"><span class="meta">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> restTemplate.getForObject(PRE_HOST + <span class="string">&quot;/student/getInfo&quot;</span>, Map.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改提供者Controller"><a href="#修改提供者Controller" class="headerlink" title="修改提供者Controller"></a>修改提供者Controller</h4><p>StudentProviderController.java在microservice-student-provider-hystrix-1004项目中</p>
<p>添加两个方法：getInfo方法和getInfoFallback方法</p>
<p>在hystrix中默认1秒算超时，使用Thread.sleep(2000)模拟请求超时（@HystrixCommand注解定义了请求超时的时候就请求getInfoFallback方法，返回500 系统出错，稍后重试），不使用就不会超时（执行完getInfo方法，返回200 业务数据）。由于请求超时的时候进行服务降级，进而熔断该节点的服务调用，快速返回自定义的错误影响页面信息，所以可以有效地解决雪崩效应</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getInfo&quot;)</span></span><br><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;getInfoFallback&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="number">200</span>);</span><br><span class="line">    map.put(<span class="string">&quot;info&quot;</span>, <span class="string">&quot;业务数据&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求超时就请求我</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfoFallback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="number">500</span>);</span><br><span class="line">    map.put(<span class="string">&quot;info&quot;</span>, <span class="string">&quot;系统出错，稍后重试&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>先启动三个eureka，再启动带hystrix的provider，最后启动普通的consumer</p>
<p>浏览器地址输入：<a href="http://localhost/student/getInfo">http://localhost/student/getInfo</a></p>
<p>使用Thread.sleep(2000)时会超时，返回500 系统出错，稍后重试，如下图：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-14%20043656.png" alt="img"></p>
<p>注释掉Thread.sleep(2000)时不会超时，返回200 业务数据，如下图：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-14%20043727.png" alt="img"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Hystrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Hystrix修改默认超时时间</title>
    <url>/275.html</url>
    <content><![CDATA[<p>Hystrix的默认超时时间是1秒，有时候正常请求响应的时间就超过了1秒，所以1秒钟并不能满足日常的开发需求，需要根据实际情况设置超时时间</p>
<h3 id="源码位置"><a href="#源码位置" class="headerlink" title="源码位置"></a>源码位置</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer default_executionTimeoutInMilliseconds = <span class="number">1000</span>;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-15%20005052.png" alt="img"></p>
<h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><p>在application.yml中添加下面配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">hystrix:</span> </span><br><span class="line">  <span class="attr">command:</span> </span><br><span class="line">    <span class="attr">default:</span> </span><br><span class="line">      <span class="attr">execution:</span> </span><br><span class="line">        <span class="attr">isolation:</span> </span><br><span class="line">          <span class="attr">thread:</span> </span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure>

<p>数值的单位为毫秒，1000毫秒==1秒</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>先启动三个eureka，再启动带hystrix的provider，最后启动普通的consumer</p>
<p>浏览器地址输入：<a href="http://localhost/student/getInfo">http://localhost/student/getInfo</a></p>
<p>上面配置已经将Hystrix的默认超时时间修改为3秒，使用Thread.sleep(2000)让程序睡眠两秒也不会超时</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Hystrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Hystrix使用服务监控</title>
    <url>/276.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hystrix提供了 准实时的服务调用监控项目Dashboard，能够实时记录通过Hystrix发起的请求执行情况，可以通过图表的形式展现给用户看。</p>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h4><p>该Module为Maven项目，命名为：microservice-student-consumer-hystrix-dashboard-90</p>
<h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>记得先继承父项目的依赖版本</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">90</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>

<h4 id="启动类"><a href="#启动类" class="headerlink" title="启动类"></a>启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hystrix服务监控90启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-15 17:46</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConsumerDashBoardApplication_90</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(StudentConsumerDashBoardApplication_90.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><p>在浏览器地址栏输入：<a href="http://localhost:90/hystrix">http://localhost:90/hystrix</a> ，出现下面界面说明配置成功</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-15%20181605.png" alt="img"></p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>先启动三个eureka，然后再启动microservice-student-provider-hystrix-1004</p>
<h4 id="开始监控"><a href="#开始监控" class="headerlink" title="开始监控"></a>开始监控</h4><p>输入：<a href="http://localhost:1004/hystrix.stream">http://localhost:1004/hystrix.stream</a> ，一直是ping，然后data返回数据</p>
<p>如果要使用图形界面监控，浏览器地址栏输入：<a href="http://localhost:90/hystrix">http://localhost:90/hystrix</a> ，出现上图，在第一个输入框输入：<a href="http://localhost:1004/hystrix.stream">http://localhost:1004/hystrix.stream</a> ，然后点击Monitor Stream按钮即可，会出现下面界面</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-15%20182527.png" alt="img"></p>
<h4 id="指标含义"><a href="#指标含义" class="headerlink" title="指标含义"></a>指标含义</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-15%20182601.png" alt="img"></p>
<h4 id="各种情况"><a href="#各种情况" class="headerlink" title="各种情况"></a>各种情况</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-15%20182633.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Hystrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Hystrix集群监控turbine</title>
    <url>/277.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hystrix集群监控使用的是turbine，而turbine是基于Dashboard的</p>
<h3 id="组建Hystrix集群"><a href="#组建Hystrix集群" class="headerlink" title="组建Hystrix集群"></a>组建Hystrix集群</h3><p>新建一个Module，该Module为Maven项目，命名为：microservice-student-provider-hystrix-1005，把microservice-student-provider-hystrix-1004的所有文件都复制一份过来，修改几个地方：</p>
<h4 id="修改application-yml"><a href="#修改application-yml" class="headerlink" title="修改application.yml"></a>修改application.yml</h4><p>server.port修改为：1005，eureka.instance.instance-id: microservice-student-hystrix修改为：1005</p>
<h4 id="修改启动类"><a href="#修改启动类" class="headerlink" title="修改启动类"></a>修改启动类</h4><p>如果启动类是复制过来的，重命名为：StudentProviderHystrixApplication_1005</p>
<h3 id="新建集群监控项目"><a href="#新建集群监控项目" class="headerlink" title="新建集群监控项目"></a>新建集群监控项目</h3><p>新建一个Module，命名为：microservice-student-consumer-hystrix-turbine-91</p>
<h4 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-turbine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>继承父项目的依赖版本</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">91</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2001.ledao.com:2001/eureka/,http://eureka2002.ledao.com:2002/eureka/,http://eureka2003.ledao.com:2003/eureka/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">turbine:</span></span><br><span class="line">  <span class="attr">app-config:</span> <span class="string">microservice-student</span>   <span class="comment"># 指定要监控的应用名称</span></span><br><span class="line">  <span class="attr">clusterNameExpression:</span> <span class="string">&quot;&#x27;default&#x27;&quot;</span> <span class="comment">#表示集群的名字为default</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">turbine</span></span><br></pre></td></tr></table></figure>

<h4 id="新建启动类"><a href="#新建启动类" class="headerlink" title="新建启动类"></a>新建启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.turbine.EnableTurbine;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Hystrix集群监控启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-16 1:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableTurbine</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentConsumerTurbineApplication_91</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(StudentConsumerTurbineApplication_91.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="启动以下项目"><a href="#启动以下项目" class="headerlink" title="启动以下项目"></a>启动以下项目</h4><p>microservice-eureka-server-2001</p>
<p>microservice-eureka-server-2002</p>
<p>microservice-eureka-server-2003</p>
<p>microservice-student-provider-hystrix-1004</p>
<p>microservice-student-provider-hystrix-1005</p>
<p>microservice-student-consumer-80</p>
<p>microservice-student-consumer-hystrix-dashboard-90</p>
<p>microservice-student-consumer-hystrix-turbine-91</p>
<h4 id="调用服务集群"><a href="#调用服务集群" class="headerlink" title="调用服务集群"></a>调用服务集群</h4><p>浏览器地址栏输入：<a href="http://localhost/student/getInfo">http://localhost/student/getInfo</a></p>
<h4 id="监控数据"><a href="#监控数据" class="headerlink" title="监控数据"></a>监控数据</h4><p>浏览器地址栏输入：<a href="http://localhost:91/turbine.stream">http://localhost:91/turbine.stream</a></p>
<p>如果使用图形界面监控，则先输入：<a href="http://localhost:90/hystrix">http://localhost:90/hystrix</a> 打开图形监控界面，在第一个输入框输入：<a href="http://localhost:91/turbine.stream">http://localhost:91/turbine.stream</a> ，再点击按钮即可</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Hystrix</tag>
      </tags>
  </entry>
  <entry>
    <title>整合Feign和Hystrix实现服务熔断服务降级彻底解耦</title>
    <url>/278.html</url>
    <content><![CDATA[<h3 id="解耦原因"><a href="#解耦原因" class="headerlink" title="解耦原因"></a>解耦原因</h3><p>下面代码使用<font color="#dd0000">@HystrixCommand(fallbackMethod = “getInfoFallback”)</font>业务代码耦合度太高，不利于维护，所以需要整合Feign和Hystrix进行解耦</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getInfo&quot;)</span></span><br><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;getInfoFallback&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    Thread.sleep(<span class="number">100</span>);</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="number">200</span>);</span><br><span class="line">    map.put(<span class="string">&quot;info&quot;</span>, <span class="string">&quot;业务数据1004&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求超时就请求我</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfoFallback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="number">500</span>);</span><br><span class="line">    map.put(<span class="string">&quot;info&quot;</span>, <span class="string">&quot;系统出错，稍后重试&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="修改Hystrix服务提供者项目"><a href="#修改Hystrix服务提供者项目" class="headerlink" title="修改Hystrix服务提供者项目"></a>修改Hystrix服务提供者项目</h4><p>项目名为：microservice-student-provider-hystrix-1004和microservice-student-provider-hystrix-1005</p>
<p>在StudentService.java中添加新的接口：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">Map&lt;String,Object&gt; <span class="title">getInfo</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<p>在StudentServiceImpl.java中实现上面的接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">    map.put(<span class="string">&quot;code&quot;</span>, <span class="number">200</span>);</span><br><span class="line">    map.put(<span class="string">&quot;info&quot;</span>, <span class="string">&quot;业务数据1004&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在StudentProviderController.java中调用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> InterruptedException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getInfo&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    Thread.sleep(<span class="number">500</span>);</span><br><span class="line">    <span class="keyword">return</span> studentService.getInfo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改公共项目"><a href="#修改公共项目" class="headerlink" title="修改公共项目"></a>修改公共项目</h4><p>项目名为：microservice-common</p>
<p>在StudentClientService.java中添加getInfo接口方法，并修改@FeignClient注解为：@FeignClient(value = “MICROSERVICE-STUDENT”, fallbackFactory = StudentClientFallbackFactory.class)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/student/getInfo&quot;)</span></span><br><span class="line"><span class="function">Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

<p>新建StudentClientFallbackFactory.java，实现FallbackFactory&lt;StudentClientService&gt;接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> feign.hystrix.FallbackFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-16 2:18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentClientFallbackFactory</span> <span class="keyword">implements</span> <span class="title">FallbackFactory</span>&lt;<span class="title">StudentClientService</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StudentClientService <span class="title">create</span><span class="params">(Throwable throwable)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> StudentClientService() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Student <span class="title">get</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> List&lt;Student&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">save</span><span class="params">(Student student)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">delete</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">                map.put(<span class="string">&quot;code&quot;</span>, <span class="number">500</span>);</span><br><span class="line">                map.put(<span class="string">&quot;info&quot;</span>, <span class="string">&quot;系统出错，稍后重试&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> map;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改Feign消费者项目"><a href="#修改Feign消费者项目" class="headerlink" title="修改Feign消费者项目"></a>修改Feign消费者项目</h4><p>项目名为：microservice-student-consumer-feign-80</p>
<p>在StudentConsumerFeignController.java中添加调用方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getInfo&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> studentClientService.getInfo();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>application.yml加上hystrix支持</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="配置超时时间"><a href="#配置超时时间" class="headerlink" title="配置超时时间"></a>配置超时时间</h4><p>因为整合了Feign和Hystrix，原来服务提供者的Hystrix超时时间配置没用了，如何配置查看：<a href="/281.html">Feign和Hystrix整合后配置超时时间</a></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动以下项目：</p>
<p>microservice-eureka-server-2001</p>
<p>microservice-eureka-server-2002</p>
<p>microservice-eureka-server-2003</p>
<p>microservice-student-provider-hystrix-1004</p>
<p>microservice-student-provider-hystrix-1005</p>
<p>microservice-student-consumer-feign-80</p>
<p>如果超时的情况返回错误信息（<font color="#dd0000">500  系统出错，稍后重试</font>），说明配置成功</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Feign</tag>
        <tag>Hystrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Git恢复之前的版本</title>
    <url>/279.html</url>
    <content><![CDATA[<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>回退（reset）、反做（revert）</p>
<h3 id="回退（reset）"><a href="#回退（reset）" class="headerlink" title="回退（reset）"></a>回退（reset）</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>git reset的作用是修改HEAD的位置，即将HEAD指向的位置改变为之前存在的某个版本，如下图所示，假设我们要回退到版本一</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20041222.png"></p>
<h4 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h4><p>如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法</p>
<h4 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h4><p>先查看当前库有哪些版本号，查看方法有两种：</p>
<p>①Git命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span></span><br></pre></td></tr></table></figure>

<p>commit后的黄色字符串就是版本号</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20042055.png"></p>
<p>②在GitHub中查看</p>
<p>点击下图的提交数</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20041534.png"></p>
<p>点击下图的复制按钮即可复制完整版本号</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20041538.png"></p>
<p>使用下面命令将版本回退</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset --hard 目标版本号</span><br></pre></td></tr></table></figure>

<p>使用下面命令提交更改，-f代表强制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push -f</span><br></pre></td></tr></table></figure>

<h3 id="反做（revert）"><a href="#反做（revert）" class="headerlink" title="反做（revert）"></a>反做（revert）</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>git revert是用于“反做”某一个版本，以达到撤销该版本的修改的目的。比如，我们commit了三个版本（版本一、版本二、 版本三），突然发现版本二不行（如：有bug），想要撤销版本二，但又不想影响撤销版本三的提交，就可以用 git revert 命令来反做版本二，生成新的版本四，这个版本四里会保留版本三的东西，但撤销了版本二的东西<br><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20041230.png"></p>
<h4 id="适用场景-1"><a href="#适用场景-1" class="headerlink" title="适用场景"></a>适用场景</h4><p>如果我们想撤销之前的某一版本，但是又想保留该目标版本后面的版本，记录下这整个版本变动流程，就可以用这种方法</p>
<h4 id="具体操作-1"><a href="#具体操作-1" class="headerlink" title="具体操作"></a>具体操作</h4><p>查看版本号，上面有具体操作</p>
<p>使用下面命令反做，这里可能会出现冲突，那么需要手动修改冲突的文件，而且要git add 文件名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git revert -n 版本号</span><br></pre></td></tr></table></figure>

<p>使用下面命令提交</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交备注信息&quot;</span></span><br></pre></td></tr></table></figure>

<p>使用下面命令提交更改到远程库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="https://blog.csdn.net/yxlshk/article/details/79944535">https://blog.csdn.net/yxlshk/article/details/79944535</a></p>]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>idea创建Spring Boot项目</title>
    <url>/28.html</url>
    <content><![CDATA[<h3 id="选择项目的类别"><a href="#选择项目的类别" class="headerlink" title="选择项目的类别"></a><strong>选择项目的类别</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017235309.jpg" alt="img"></p>
<h3 id="选择环境"><a href="#选择环境" class="headerlink" title="选择环境"></a>选择环境</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017235941.jpg" alt="img"></p>
<h3 id="选择技术"><a href="#选择技术" class="headerlink" title="选择技术"></a>选择技术</h3><p>选择项目开发需要用到的技术</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201017235822.jpg" alt="img"></p>
<h3 id="填写项目的名称"><a href="#填写项目的名称" class="headerlink" title="填写项目的名称"></a>填写项目的名称</h3><p>填写项目的名称以及项目路径,即可完成Spring Boot项目的创建</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018000110.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10输入法获取当前时间</title>
    <url>/280.html</url>
    <content><![CDATA[<h3 id="打开输入法设置"><a href="#打开输入法设置" class="headerlink" title="打开输入法设置"></a>打开输入法设置</h3><p><strong>右击单击右下角的输入法选项，选择设置</strong></p>
<img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20045135.png" style="zoom:67%;" />

<h3 id="选择词库和自学习"><a href="#选择词库和自学习" class="headerlink" title="选择词库和自学习"></a><strong>选择词库和自学习</strong></h3><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20045223.png" style="zoom:67%;" />

<h3 id="点击添加或编辑自定义短语"><a href="#点击添加或编辑自定义短语" class="headerlink" title="点击添加或编辑自定义短语"></a><strong>点击添加或编辑自定义短语</strong></h3><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20045244.png" style="zoom:67%;" />

<h3 id="添加短语"><a href="#添加短语" class="headerlink" title="添加短语"></a>添加短语</h3><p>添加短语：<font color="#dd0000">%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%</font></p>
<img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20045457.png" style="zoom:67%;" />

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a><strong>使用</strong></h3><p>在中文模式下输入sj即可获取当前时间</p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>Feign和Hystrix整合后配置超时时间</title>
    <url>/281.html</url>
    <content><![CDATA[<p>Feign和Hystrix整合后,原来服务提供者的Hystrix超时时间配置没用了</p>
<p>把microservice-student-provider-hystrix-1004和microservice-student-provider-hystrix-1005的超时时间配置删除，添加到带Feign的服务消费项目的application.yml中（项目名为：microservice-student-consumer-feign-80）</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure>

<p>虽然添加了超时时间配置，但是还是无效，无效原因为：feign 也有一个超时时间的设置，feign底层是ribbon的封装，所以直接配置ribbon，ribbon默认超时也是1秒。所以这里都是强制要求，ribbon的超时时间要大于hystrix的超时时间，否则 hystrix自定义的超时时间毫无意义</p>
<p>所以还得加个 ribbon超时时间设置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">ReadTimeout:</span> <span class="number">10000</span></span><br><span class="line">  <span class="attr">ConnectTimeout:</span> <span class="number">9000</span></span><br></pre></td></tr></table></figure>

<p>到此，超时时间配置完成，新的超时时间已经生效</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Feign</tag>
        <tag>Hystrix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zuul路由配置</title>
    <url>/282.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20224912.jpg"></p>
<p>上图的API路由网关服务由Zuul实现，主要就是对外提供服务接口的时候，起到了请求的路由和过滤作用，也因此能够隐藏内部服务的接口细节，从来有利于保护系统的安全性</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h4><p>该Module为Maven项目，命名为：microservice-zuul-3001</p>
<h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>引入zuul路由网关依赖</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- zuul路由网关 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>完整pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-zuul-3001<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- zuul路由网关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zuul<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入microservice-common依赖,引入后可以使用microservice-common的实体类,工具类等--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- actuator监控 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- hystrix容错 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 修改后立即生效，热部署 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springloaded<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-zuul</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">microservice-zuul:3001</span> <span class="comment">#客户端实例名称</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#显示IP</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka2001.ledao.com:2001/eureka/,http://eureka2002.ledao.com:2002/eureka/,http://eureka2003.ledao.com:2003/eureka/</span> <span class="comment"># 集群</span></span><br><span class="line"></span><br><span class="line"><span class="attr">info:</span></span><br><span class="line">  <span class="attr">groupId:</span> <span class="string">@project.groupId@</span></span><br><span class="line">  <span class="attr">artifactId:</span> <span class="string">@project.artifactId@</span></span><br><span class="line">  <span class="attr">version:</span> <span class="string">@project.version@</span></span><br><span class="line">  <span class="string">负责人:</span> <span class="string">王五</span></span><br><span class="line">  <span class="string">联系电话:</span> <span class="number">110</span></span><br></pre></td></tr></table></figure>

<h4 id="修改hosts"><a href="#修改hosts" class="headerlink" title="修改hosts"></a>修改hosts</h4><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  zuul.ledao.com</span><br></pre></td></tr></table></figure>

<h4 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.zuul.EnableZuulProxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-17 22:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZuulApplication_3001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ZuulApplication_3001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>启动以下项目：</p>
<p>microservice-eureka-server-2001</p>
<p>microservice-eureka-server-2002</p>
<p>microservice-eureka-server-2003</p>
<p>microservice-student-provider-hystrix-1004</p>
<p>microservice-zuul-3001</p>
<p>microservice-student-consumer-feign-80</p>
<p>eureka注册中心有两个服务：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-17%20232447.png"></p>
<h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>①直接访问</p>
<p>直接通过 <a href="http://localhost/student/list">http://localhost/student/list</a> 访问</p>
<p>②通过zuul路由</p>
<p>通过 <a href="http://zuul.ledao.com:3001/microservice-student/student/list">http://zuul.ledao.com:3001/microservice-student/student/list</a> 访问</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Zuul</tag>
      </tags>
  </entry>
  <entry>
    <title>Zuul路由映射规则配置</title>
    <url>/283.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>默认路由请求地址，很容易暴露接口细节，可以通过配置映射规则来提高服务的安全性</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><p>在application.yml中添加以下配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">studentServer.serviceId:</span> <span class="string">microservice-student</span> <span class="comment">#服务名称</span></span><br><span class="line">    <span class="attr">studentServer.path:</span> <span class="string">/studentServer/**</span> <span class="comment">#替代服务的路径</span></span><br></pre></td></tr></table></figure>

<p>现在可以通过 <a href="http://zuul.ledao.com:3001/studentServer/student/list">http://zuul.ledao.com:3001/studentServer/student/list</a> 访问了</p>
<p>但是也可以通过 <a href="http://zuul.ledao.com:3001/microservice-student/student/list">http://zuul.ledao.com:3001/microservice-student/student/list</a> 访问，这样是不安全的，如果要忽略microservice-student服务就添加配置：ignored-services: “microservice-student”，如果要忽略所有的服务名称则修改为：ignored-services: “*”，完整配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">studentServer.serviceId:</span> <span class="string">microservice-student</span> <span class="comment">#服务名称</span></span><br><span class="line">    <span class="attr">studentServer.path:</span> <span class="string">/studentServer/**</span> <span class="comment">#替代服务的路径</span></span><br><span class="line">  <span class="attr">ignored-services:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure>

<p>如果添加请求前缀，就添加配置：prefix: /ledao，<font color="#dd0000"><strong>最终配置</strong></font>如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Zuul路由配置</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">studentServer.serviceId:</span> <span class="string">microservice-student</span> <span class="comment">#服务名称</span></span><br><span class="line">    <span class="attr">studentServer.path:</span> <span class="string">/studentServer/**</span> <span class="comment">#替代服务的路径</span></span><br><span class="line">  <span class="attr">ignored-services:</span> <span class="string">&quot;*&quot;</span> <span class="comment">#忽略的服务</span></span><br><span class="line">  <span class="attr">prefix:</span> <span class="string">/ledao</span> <span class="comment">#前缀</span></span><br></pre></td></tr></table></figure>

<p>现在只能通过 <a href="http://zuul.ledao.com:3001/ledao/studentServer/student/list">http://zuul.ledao.com:3001/ledao/studentServer/student/list</a> 访问，其它请求方式的结果都是404</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Zuul</tag>
      </tags>
  </entry>
  <entry>
    <title>Zuul请求过滤配置</title>
    <url>/284.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>有时候系统的功能并不对外开放，所以在请求服务时可以过滤掉非法请求。Zuul通过ZuulFilter过滤器实现，每次经过Zuul服务网关，我们都对带来的token进行有效性验证，验证不通过就无法请求成功</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="定义过滤类"><a href="#定义过滤类" class="headerlink" title="定义过滤类"></a>定义过滤类</h4><p>命名为：AccessFilter.java，继承ZuulFilter</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.ZuulFilter;</span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.context.RequestContext;</span><br><span class="line"><span class="keyword">import</span> com.netflix.zuul.exception.ZuulException;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-18 0:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccessFilter</span> <span class="keyword">extends</span> <span class="title">ZuulFilter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    Logger logger = LoggerFactory.getLogger(AccessFilter.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器的类型 这里用pre，代表会再请求被路由之前执行</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">filterType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;pre&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器的执行顺序</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">filterOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断该过滤器是否要被执行,返回true则执行过滤器</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤器的具体执行逻辑</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ZuulException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">run</span><span class="params">()</span> <span class="keyword">throws</span> ZuulException </span>&#123;</span><br><span class="line">        RequestContext requestContext = RequestContext.getCurrentContext();</span><br><span class="line">        HttpServletRequest request = requestContext.getRequest();</span><br><span class="line">        String parameter = request.getParameter(<span class="string">&quot;accessToken&quot;</span>);</span><br><span class="line">        logger.info(request.getRequestURI() + <span class="string">&quot;请求访问&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (parameter == <span class="keyword">null</span>) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;accessToken为空!&quot;</span>);</span><br><span class="line">            requestContext.setSendZuulResponse(<span class="keyword">false</span>);</span><br><span class="line">            requestContext.setResponseStatusCode(<span class="number">401</span>);</span><br><span class="line">            requestContext.setResponseBody(<span class="string">&quot;&#123;\&quot;result\&quot;:\&quot;accessToken is empty!\&quot;&#125;&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(request.getRequestURI() + <span class="string">&quot;请求成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="开启Filter配置"><a href="#开启Filter配置" class="headerlink" title="开启Filter配置"></a>开启Filter配置</h4><p>新建一个类，命名为：ZuulConfig.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.filter.AccessFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Zuul配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-18 0:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZuulConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> AccessFilter <span class="title">accessFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AccessFilter();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>直接输入：<a href="http://zuul.ledao.com:3001/ledao/studentServer/student/list">http://zuul.ledao.com:3001/ledao/studentServer/student/list</a> ，请求失败，返回错误信息：<font color="#dd0000">{“result”: “accessToken is empty!”}</font></p>
<p>加上<font color="#dd0000">?accessToken=111</font>，即：<a href="http://zuul.ledao.com:3001/ledao/studentServer/student/list?accessToken=111">http://zuul.ledao.com:3001/ledao/studentServer/student/list?accessToken=111</a> ，请求成功，返回正确的数据</p>
<p>本文主要是实现过滤配置，上面只是模拟了有accessToken</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
        <tag>Zuul</tag>
      </tags>
  </entry>
  <entry>
    <title>Git查看远程库地址</title>
    <url>/285.html</url>
    <content><![CDATA[<p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-18%20182819.png"></p>]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Config Server</title>
    <url>/286.html</url>
    <content><![CDATA[<h3 id="GitHub新建仓库"><a href="#GitHub新建仓库" class="headerlink" title="GitHub新建仓库"></a>GitHub新建仓库</h3><p>GitHub新建一个仓库，命名为：microservice-config</p>
<p>在本地新建一个文件夹，也命名为：microservice-config，在文件夹内新建三个文件：application.yml、application-v1.yml和application-v2.yml，主要用于访问</p>
<p>application.yml内容为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">profile:</span> <span class="string">hello</span></span><br></pre></td></tr></table></figure>

<p>application-v1.yml内容为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">profile:</span> <span class="string">hello111</span></span><br></pre></td></tr></table></figure>

<p>application-v2.yml内容为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">profile:</span> <span class="string">hello222</span></span><br></pre></td></tr></table></figure>

<p>把文件夹内的所有文件都上传到刚刚新建的GitHub仓库中</p>
<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><h4 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h4><p>在idea中新建一个Module，为Maven项目，命名为：microservice-config-server-4001</p>
<h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>引入依赖config server依赖，我的完整pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--继承microservice依赖版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-config-server-4001<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入microservice-common依赖,引入后可以使用microservice-common的实体类,工具类等--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>microservice-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>uri为GitHub仓库的http地址，但是去掉了后缀<mark class="hl-label red">.git</mark> </p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">4001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-config</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://github.com/a6678696/microservice-config</span></span><br></pre></td></tr></table></figure>

<h4 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 配置服务启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-18 18:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigServerApplication_4001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConfigServerApplication_4001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加本地域名映射"><a href="#添加本地域名映射" class="headerlink" title="添加本地域名映射"></a>添加本地域名映射</h4><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  configserver.ledao.com</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动microservice-config-server-4001项目</p>
<p>地址栏输入：<a href="http://configserver.ledao.com:4001/application-v1.yml">http://configserver.ledao.com:4001/application-v1.yml</a> 可以返回application-v1.yml的内容</p>
<p>地址栏输入：<a href="http://configserver.ledao.com:4001/application-v2.yml">http://configserver.ledao.com:4001/application-v2.yml</a> 可以返回application-v2.yml的内容</p>
<p>地址栏输入：<a href="http://configserver.ledao.com:4001/application-v3.yml">http://configserver.ledao.com:4001/application-v3.yml</a> 会返回application.yml的内容，其实GitHub仓库中并没有application-v3.yml这个文件，但是却访问了它，最终会返回根文件application.yml的内容</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>请求路径匹配规则如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">/&#123;application&#125;/&#123;profile&#125;[/&#123;label&#125;]</span><br><span class="line">/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.yml</span><br><span class="line">/&#123;application&#125;-&#123;profile&#125;.properties</span><br><span class="line">/&#123;label&#125;/&#123;application&#125;-&#123;profile&#125;.properties</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot启动报错：Cannot determine embedded database driver class for database type NONE</title>
    <url>/287.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>Spring Boot项目启动时报错：Cannot determine embedded database driver class for database type NONE</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-18%20201505.png"></p>
<h3 id="报错原因"><a href="#报错原因" class="headerlink" title="报错原因"></a>报错原因</h3><p>这是因为spring boot默认会加载org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration类，DataSourceAutoConfiguration类使用了@Configuration注解向spring注入了dataSource bean。因为工程中没有关于dataSource相关的配置信息，所以当spring创建dataSource bean因缺少相关的信息就会报错</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>解决办法有两种：一种是修改启动类注解，另一种是配置数据源</p>
<h4 id="修改注解"><a href="#修改注解" class="headerlink" title="修改注解"></a>修改注解</h4><p>在启动类中修改注解@SpringBootApplication为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br></pre></td></tr></table></figure>

<h4 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h4><p>在application.yml中配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 数据源配置</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-student</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db_springcloud?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">  <span class="attr">jpa:</span></span><br><span class="line">    <span class="attr">hibernate:</span></span><br><span class="line">      <span class="attr">ddl-auto:</span> <span class="string">update</span></span><br><span class="line">    <span class="attr">show-sql:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="http://wuwenliang.net/2018/07/15/springboot%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E4%B9%8B%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99Cannot-determine-embedded-database/">springboot常见问题之启动报错Cannot determine embedded database</a></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Config Client</title>
    <url>/288.html</url>
    <content><![CDATA[<h3 id="上传文件到GitHub"><a href="#上传文件到GitHub" class="headerlink" title="上传文件到GitHub"></a>上传文件到GitHub</h3><p>把之前上传到GitHub的microservice-config库中的文件都删除掉，再新建三个文件：application.yml、crm-dev.yml、crm-test.yml，然后上传到GitHub的microservice-config库中</p>
<p>application.yml内容为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">111</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">222</span></span><br></pre></td></tr></table></figure>

<p>crm-dev.yml内容为：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">port:</span> <span class="number">7777</span></span><br></pre></td></tr></table></figure>

<p>crm-test.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">port:</span> <span class="number">88888</span></span><br></pre></td></tr></table></figure>

<h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><h4 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h4><p>在idea中新建一个Module，为Maven项目，命名为：microservice-config-client-5001</p>
<h4 id="加入依赖"><a href="#加入依赖" class="headerlink" title="加入依赖"></a>加入依赖</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>

<h4 id="bootstrap-yml配置"><a href="#bootstrap-yml配置" class="headerlink" title="bootstrap.yml配置"></a>bootstrap.yml配置</h4><p>新建一个配置文件，命名为：bootstrap.yml，优先级比application.yml高</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">application-dev</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">crm</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://configserver.ledao.com:4001</span>  <span class="comment"># 配置configserver地址</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span> <span class="comment">#级别</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="comment">#分支git中,默认master</span></span><br><span class="line">      <span class="attr">fail-fast:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="添加启动类"><a href="#添加启动类" class="headerlink" title="添加启动类"></a>添加启动类</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Config Server启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-18 21:22</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication(exclude = &#123;DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigClientApplication_5001</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConfigClientApplication_5001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加ConfigClientController类"><a href="#添加ConfigClientController类" class="headerlink" title="添加ConfigClientController类"></a>添加ConfigClientController类</h4><p>主要用于提供测试接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试Controller</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-18 21:25</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigClientController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getPort&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> port;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPort</span><span class="params">(String port)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.port = port;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加本地域名映射"><a href="#添加本地域名映射" class="headerlink" title="添加本地域名映射"></a>添加本地域名映射</h4><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span>  client-config.ledao.com</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>地址栏输入：<a href="http://client-config.ledao.com:5001/getPort">http://client-config.ledao.com:5001/getPort</a> ，根据bootstrap.yml的配置获取不同文件的port</p>
<p>①当spring.cloud.config.name=application，spring.cloud.config.profile=dev时</p>
<p>返回<mark class="hl-label blue">111</mark> ，此时返回的是application.yml的dev端口</p>
<p>②当spring.cloud.config.name=application，spring.cloud.config.profile=test时</p>
<p>返回<mark class="hl-label blue">222</mark> ，此时返回的是application.yml的test端口</p>
<p>③当spring.cloud.config.name=crm，spring.cloud.config.profile=dev时</p>
<p>返回<mark class="hl-label blue">7777</mark> ，此时返回的是crm-dev.yml的端口</p>
<p>④当spring.cloud.config.name=crm，spring.cloud.config.profile=test时</p>
<p>返回<mark class="hl-label blue">88888</mark> ，此时返回的是crm-test.yml的端口</p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Config配置搜索路径</title>
    <url>/289.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>当配置文件一多，如果配置文件只放在根目录下，后期会不好管理，所以根据项目分类配置文件是很有必要的</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><p>在microservice-config-server-4001项目的application.yml文件中配置search-paths</p>
<p>完整application.yml如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">4001</span></span><br><span class="line">  <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">microservice-config</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://github.com/a6678696/microservice-config</span></span><br><span class="line">          <span class="attr">search-paths:</span> <span class="comment">#后面接文件夹名称,没有配置的文件夹里的配置文件是访问不到的</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">aa</span> <span class="comment">#文件夹名称</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">bb</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>新建三个文件夹：aa、bb、cc，文件夹中分别放3个配置文件 nns.yml，nns2.yml，nns3.yml，上传这三个配置文件到GitHub的microservice-config库中，文件内容如下：</p>
<mark class="hl-label blue">nns.yml</mark> 

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">aaadev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">aaatest</span></span><br></pre></td></tr></table></figure>

<mark class="hl-label blue">nns2.yml</mark> 

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">bbbdev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">bbbtest</span></span><br></pre></td></tr></table></figure>

<mark class="hl-label blue">nns3.yml</mark> 

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">dev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">dev</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">cccdev</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">ccctest</span></span><br></pre></td></tr></table></figure>

<p>地址栏输入：<a href="http://configserver.ledao.com:4001/nns-dev.yml">http://configserver.ledao.com:4001/nns-dev.yml</a> ，访问到了，有name属性</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-19%20011929.png"></p>
<p>地址栏输入：<a href="http://configserver.ledao.com:4001/nns3-dev.yml">http://configserver.ledao.com:4001/nns3-dev.yml</a> ，没有访问到了，没有name属性</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-19%20011947.png"></p>]]></content>
      <categories>
        <category>Spring Cloud</category>
      </categories>
      <tags>
        <tag>Spring Cloud</tag>
      </tags>
  </entry>
  <entry>
    <title>idea连接MySQL数据库</title>
    <url>/29.html</url>
    <content><![CDATA[<h3 id="选择使用的数据库类型"><a href="#选择使用的数据库类型" class="headerlink" title="选择使用的数据库类型"></a><strong>选择使用的数据库类型</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018003753.jpg" alt="img"></p>
<h3 id="填写配置信息"><a href="#填写配置信息" class="headerlink" title="填写配置信息"></a><strong>填写配置信息</strong></h3><p>jdbc:mysql://localhost:3306/db_myblog?serverTimezone=UTC</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018004005.jpg" alt="img"></p>
<h3 id="测试是否连接成功"><a href="#测试是否连接成功" class="headerlink" title="测试是否连接成功"></a><strong>测试是否连接成功</strong></h3><p>点击上图的Test Connection测试是否可以成功连接,成功后点击OK即可</p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装Docker</title>
    <url>/290.html</url>
    <content><![CDATA[<h3 id="登录身份"><a href="#登录身份" class="headerlink" title="登录身份"></a>登录身份</h3><p>使用root身份登录，一般默认都是用root身份</p>
<h3 id="查看系统内核"><a href="#查看系统内核" class="headerlink" title="查看系统内核"></a>查看系统内核</h3><p>Docker要求CentOS系统的内核版本高于3.10，安装前先查看自己的CentOS系统能否安装Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure>

<h3 id="更新yum包"><a href="#更新yum包" class="headerlink" title="更新yum包"></a>更新yum包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure>

<h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><p>如果安装过旧版本的话，没有就跳过此步骤</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum remove docker  docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure>

<h3 id="安装软件包"><a href="#安装软件包" class="headerlink" title="安装软件包"></a>安装软件包</h3><p>安装需要的软件包，yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure>

<h3 id="设置yum源"><a href="#设置yum源" class="headerlink" title="设置yum源"></a>设置yum源</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>

<h3 id="安装新版本"><a href="#安装新版本" class="headerlink" title="安装新版本"></a>安装新版本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>

<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>看到版本号说明安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="安装hello-world镜像"><a href="#安装hello-world镜像" class="headerlink" title="安装hello-world镜像"></a>安装hello-world镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull hello-world</span><br></pre></td></tr></table></figure>

<h4 id="创建hello-world的一个容器并启动"><a href="#创建hello-world的一个容器并启动" class="headerlink" title="创建hello-world的一个容器并启动"></a>创建hello-world的一个容器并启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>

<p>看到<font color="#dd0000">Hello from Docker!</font>，说明容器启动成功</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker配置阿里云镜像仓库</title>
    <url>/291.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>Docker默认远程仓库是 <a href="https://hub.docker.com/">https://hub.docker.com/</a> ，下载速度会很慢，所以要配置一下国内镜像</p>
<h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><h4 id="获取镜像地址"><a href="#获取镜像地址" class="headerlink" title="获取镜像地址"></a>获取镜像地址</h4><p>进入阿里云容器镜像服务地址：<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">点这里快速进入</a>，登录后复制镜像仓库地址</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-19%20200741.png"></p>
<h4 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h4><p>在/etc/docker文件夹下新建一个名为 <mark class="hl-label blue">daemon.json</mark>  的配置文件，内容如下：（链接填自己的）</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://*********.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="重启daemon"><a href="#重启daemon" class="headerlink" title="重启daemon"></a>重启daemon</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<h4 id="重启docker服务"><a href="#重启docker服务" class="headerlink" title="重启docker服务"></a>重启docker服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>下载一个tomcat，命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull tomcat</span><br></pre></td></tr></table></figure>

<p>发现速度快了很多</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker使用pull命令时报错</title>
    <url>/292.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>使用pull命令安装容器时报错：Error response from daemon: Get “<a href="https://registry-1.docker.io/v2/&quot;">https://registry-1.docker.io/v2/&quot;</a>: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="配置国内镜像"><a href="#配置国内镜像" class="headerlink" title="配置国内镜像"></a>配置国内镜像</h4><p>查看博客：<a href="/291.html">Docker配置阿里云镜像仓库</a></p>
<h4 id="添加DNS地址"><a href="#添加DNS地址" class="headerlink" title="添加DNS地址"></a>添加DNS地址</h4><p>如果配置了国内镜像地址还是报错，就添加DNS地址，在/etc/resolv.conf中添加两行代码：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">nameserver <span class="number">8.8</span>.<span class="number">8.8</span></span><br><span class="line">nameserver <span class="number">8.8</span>.<span class="number">4.4</span></span><br></pre></td></tr></table></figure>

<p>重启一下Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker常用命令</title>
    <url>/293.html</url>
    <content><![CDATA[<h3 id="Docker命令"><a href="#Docker命令" class="headerlink" title="Docker命令"></a>Docker命令</h3><h4 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<h4 id="停止Docker"><a href="#停止Docker" class="headerlink" title="停止Docker"></a>停止Docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>

<h4 id="重启Docker"><a href="#重启Docker" class="headerlink" title="重启Docker"></a>重启Docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h4 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure>

<h4 id="查看Docker概要信息"><a href="#查看Docker概要信息" class="headerlink" title="查看Docker概要信息"></a>查看Docker概要信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker info	</span><br></pre></td></tr></table></figure>

<h4 id="查看Docker帮助文档"><a href="#查看Docker帮助文档" class="headerlink" title="查看Docker帮助文档"></a>查看Docker帮助文档</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker --<span class="built_in">help</span></span><br></pre></td></tr></table></figure>

<h4 id="查看Docker版本信息"><a href="#查看Docker版本信息" class="headerlink" title="查看Docker版本信息"></a>查看Docker版本信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure>

<h3 id="镜像命令"><a href="#镜像命令" class="headerlink" title="镜像命令"></a>镜像命令</h3><h4 id="查看所有镜像"><a href="#查看所有镜像" class="headerlink" title="查看所有镜像"></a>查看所有镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-19%20211328.png"></p>
<table>
<thead>
<tr>
<th>目录名称</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>REPOSITORY</td>
<td>镜像的仓库源</td>
</tr>
<tr>
<td>TAG</td>
<td>镜像的标签（版本）同一个仓库有多个TAG的镜像，多个版本；我们用REPOSITORY:TAG来定义不同的镜像；</td>
</tr>
<tr>
<td>IMAGE ID</td>
<td>镜像ID，镜像的唯一标识</td>
</tr>
<tr>
<td>CREATE</td>
<td>镜像创建时间</td>
</tr>
<tr>
<td>SIZE</td>
<td>镜像大小</td>
</tr>
</tbody></table>
<h4 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker search 镜像名称</span><br></pre></td></tr></table></figure>

<h4 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h4><p>下载最新版</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 镜像名称</span><br></pre></td></tr></table></figure>

<p>下载指定版本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 镜像名称:版本号</span><br></pre></td></tr></table></figure>

<h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><p>不加版本号就删除最新版</p>
<p>普通删除，如果镜像正在运行就无法删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi 镜像名称:版本号</span><br></pre></td></tr></table></figure>

<p>强制删除，即使镜像正在运行也可以删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rmi -f 镜像名称:版本号</span><br></pre></td></tr></table></figure>

<h4 id="查看元数据"><a href="#查看元数据" class="headerlink" title="查看元数据"></a>查看元数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect 镜像id</span><br></pre></td></tr></table></figure>

<h3 id="容器命令"><a href="#容器命令" class="headerlink" title="容器命令"></a>容器命令</h3><h4 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h4><p>普通方式创建容器：创建容器（容器为<font color="#dd0000">停止</font>状态）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义名称 镜像id</span><br></pre></td></tr></table></figure>

<p>交互式创建容器：创建并进入该容器（容器为<font color="#00dd00">运行</font>状态）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --name 自定义名称 镜像id</span><br></pre></td></tr></table></figure>

<p>守护方式创建容器：创建容器但是不进入（容器为<font color="#00dd00">运行</font>状态）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -di --name 自定义名称 镜像id</span><br></pre></td></tr></table></figure>

<p>端口映射，可以通过：<a href="http://192.168.0.140:8888/">http://192.168.0.140:8888/</a> 访问</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义名称 -d -p 8888:8080 镜像id</span><br></pre></td></tr></table></figure>

<p>参数：</p>
<ul>
<li><strong>-a stdin:</strong> 指定标准输入输出内容类型，可选 STDIN/STDOUT/STDERR 三项；</li>
<li><strong>-d:</strong> 后台运行容器，并返回容器ID；</li>
<li><strong>-i:</strong> 以交互模式运行容器，通常与 -t 同时使用；</li>
<li><strong>-P:</strong> 随机端口映射，容器内部端口<strong>随机</strong>映射到主机的端口</li>
<li><strong>-p:</strong> 指定端口映射，格式为：<strong>主机(宿主)端口:容器端口</strong></li>
<li><strong>-t:</strong> 为容器重新分配一个伪输入终端，通常与 -i 同时使用；</li>
<li><strong>–name=”nginx-lb”:</strong> 为容器指定一个名称；</li>
<li><strong>–dns 8.8.8.8:</strong> 指定容器使用的DNS服务器，默认和宿主一致；</li>
<li><strong>–dns-search example.com:</strong> 指定容器DNS搜索域名，默认和宿主一致；</li>
<li><strong>-h “mars”:</strong> 指定容器的hostname；</li>
<li><strong>-e username=”ritchie”:</strong> 设置环境变量；</li>
<li><strong>–env-file=[]:</strong> 从指定文件读入环境变量；</li>
<li><strong>–cpuset=”0-2” or –cpuset=”0,1,2”:</strong> 绑定容器到指定CPU运行；</li>
<li>**-m :**设置容器使用内存最大值；</li>
<li><strong>–net=”bridge”:</strong> 指定容器的网络连接类型，支持 bridge/host/none/container: 四种类型；</li>
<li><strong>–link=[]:</strong> 添加链接到另一个容器；</li>
<li><strong>–expose=[]:</strong> 开放一个端口或一组端口；</li>
<li><strong>–volume , -v:</strong> 绑定一个卷</li>
</ul>
<h4 id="退出容器"><a href="#退出容器" class="headerlink" title="退出容器"></a>退出容器</h4><p>容器停止并退出，命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>

<p>容器不停止退出，按键组合为：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">CTRL+P+Q</span><br></pre></td></tr></table></figure>

<h4 id="列出容器"><a href="#列出容器" class="headerlink" title="列出容器"></a>列出容器</h4><p>查看正在运行的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>

<p>查看所有容器，包括已经停止的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure>

<p>显示最近创建的2个容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -n 2</span><br></pre></td></tr></table></figure>

<p>查看停止的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker ps -f status=exited</span><br></pre></td></tr></table></figure>

<p>所有选项说明：</p>
<p>-a ：显示所有的容器，包括未运行的</p>
<p>-f ：根据条件过滤显示的内容</p>
<p>–format ：指定返回值的模板文件</p>
<p>-l ：显示最近创建的容器</p>
<p>-n ：列出最近创建的n个容器</p>
<p>–no-trunc ：不截断输出</p>
<p>-q ：静默模式，只显示容器编号</p>
<p>-s ：显示总的文件大小</p>
<h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><p>进入正在运行的容器，参数可以是容器id也可以是容器名称，<font color="#dd0000">建议使用容器id</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker attach 容器id或者容器名称</span><br></pre></td></tr></table></figure>

<h4 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h4><p>启动已经停止的容器，参数可以是容器id也可以是容器名称，<font color="#dd0000">建议使用容器id</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start 容器id或者容器名称</span><br></pre></td></tr></table></figure>

<h4 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h4><p>重启正在运行的容器，参数可以是容器id也可以是容器名称，<font color="#dd0000">建议使用容器id</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker restart 容器id或者容器名称</span><br></pre></td></tr></table></figure>

<h4 id="停止容器"><a href="#停止容器" class="headerlink" title="停止容器"></a>停止容器</h4><p>停止正在运行的容器，参数可以是容器id也可以是容器名称，<font color="#dd0000">建议使用容器id</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker stop 容器id或者容器名称</span><br></pre></td></tr></table></figure>

<p>暴力删除，直接杀掉进程，参数可以是容器id也可以是容器名称，<font color="#dd0000">建议使用容器id，不推荐此方法</font></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">kill</span> 容器id或者容器名称</span><br></pre></td></tr></table></figure>

<h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><p>删除已经停止的容器，正在运行的容器要先停止再删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rm 容器id</span><br></pre></td></tr></table></figure>

<p>强制删除正在运行的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rm -f 容器id</span><br></pre></td></tr></table></figure>

<p>删除多个容器，多个容器id用空格隔开</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rm -f 容器id1 容器id2</span><br></pre></td></tr></table></figure>

<p>删除所有容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rm -f $(docker ps -qa)</span><br></pre></td></tr></table></figure>

<p>参数：</p>
<ul>
<li>**-f :**通过 SIGKILL 信号强制删除一个运行中的容器。</li>
<li>**-l :**移除容器间的网络连接，而非容器本身。</li>
<li>**-v :**删除与容器关联的卷。</li>
</ul>
<h4 id="执行容器命令"><a href="#执行容器命令" class="headerlink" title="执行容器命令"></a>执行容器命令</h4><p>不进入容器并执行容器的命令，例子：<font color="#dd0000">docker exec 0f4c269bb2cf ls -l /sys/</font>，本例子的容器为CentOS系统</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 容器id 容器的可执行命令</span><br></pre></td></tr></table></figure>

<h4 id="查看容器日志"><a href="#查看容器日志" class="headerlink" title="查看容器日志"></a>查看容器日志</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker logs 容器id</span><br></pre></td></tr></table></figure>

<p>某容器的日志文件位置为：在<font color="#dd0000">/var/lib/docker/containers</font>下找到对应容器的文件夹，打开文件夹后后一个.log后缀的文件，这就是日志文件了,如果时间久了日志文件变得很大，就直接操作该文件即可</p>
<h4 id="查看容器进程"><a href="#查看容器进程" class="headerlink" title="查看容器进程"></a>查看容器进程</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker top 容器id</span><br></pre></td></tr></table></figure>

<h4 id="文件拷贝"><a href="#文件拷贝" class="headerlink" title="文件拷贝"></a>文件拷贝</h4><p>宿主机（当前系统：VM虚拟机正在运行的系统）文件或者目录拷贝到容器内</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 需要拷贝的文件或者目录 容器名称:容器目录</span><br></pre></td></tr></table></figure>

<p>容器文件或者目录拷贝到宿主机内</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 容器名称:容器文件或者目录 宿主机目录</span><br></pre></td></tr></table></figure>

<h4 id="查看元数据-1"><a href="#查看元数据-1" class="headerlink" title="查看元数据"></a>查看元数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect 容器id</span><br></pre></td></tr></table></figure>

<h4 id="重命名容器"><a href="#重命名容器" class="headerlink" title="重命名容器"></a>重命名容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker rename 原容器名 新容器名</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker启动Tomcat成功后外部却无法访问</title>
    <url>/294.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在创建Docker的Tomcat容器时使用了端口映射，外部无法通过 <font color="#dd0000">http://虚拟机IP:映射的端口号</font> 来访问</p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>Docker某些Tomcat版本的webapps是空的，直接访问是访问不到的，但是这些Tomcat有一个webapps.dist目录，这个目录就是原来的webapps目录</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><h4 id="第一种办法"><a href="#第一种办法" class="headerlink" title="第一种办法"></a>第一种办法</h4><p>使用webapps目录不为空的Tomcat版本，webapps目录不为空的Tomcat版本有：8.0.52、8.5.28，直接使用这两个版本即可</p>
<h4 id="第二种办法"><a href="#第二种办法" class="headerlink" title="第二种办法"></a>第二种办法</h4><p>使用webapps目录不为空的Tomcat版本，删除掉webapps空目录，再将webapps.dist目录命名为webapps</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker映射端口6666时无法访问</title>
    <url>/295.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在创建Docker的Tomcat容器时使用了端口映射，我映射的端口号是6666，外部使用谷歌浏览器却无法访问</p>
<h3 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h3><p>6666端口使用谷歌浏览器、火狐浏览器、新版Edge浏览器是无法访问的，被我们遗忘的IE浏览器却可以访问！！</p>
<p>上述浏览器我都亲自验证过，其它浏览器不清楚情况</p>
<p>更多无法访问的端口号如下：</p>
<table>
<thead>
<tr>
<th align="left">端口</th>
<th align="left">原因</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1</td>
<td align="left">tcpmux</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left">echo</td>
</tr>
<tr>
<td align="left">9</td>
<td align="left">discard</td>
</tr>
<tr>
<td align="left">11</td>
<td align="left">systat</td>
</tr>
<tr>
<td align="left">13</td>
<td align="left">daytime</td>
</tr>
<tr>
<td align="left">15</td>
<td align="left">netstat</td>
</tr>
<tr>
<td align="left">17</td>
<td align="left">qotd</td>
</tr>
<tr>
<td align="left">19</td>
<td align="left">chargen</td>
</tr>
<tr>
<td align="left">20</td>
<td align="left">ftp data</td>
</tr>
<tr>
<td align="left">21</td>
<td align="left">ftp access</td>
</tr>
<tr>
<td align="left">22</td>
<td align="left">ssh</td>
</tr>
<tr>
<td align="left">23</td>
<td align="left">telnet</td>
</tr>
<tr>
<td align="left">25</td>
<td align="left">smtp</td>
</tr>
<tr>
<td align="left">37</td>
<td align="left">time</td>
</tr>
<tr>
<td align="left">42</td>
<td align="left">name</td>
</tr>
<tr>
<td align="left">43</td>
<td align="left">nicname</td>
</tr>
<tr>
<td align="left">53</td>
<td align="left">domain</td>
</tr>
<tr>
<td align="left">77</td>
<td align="left">priv-rjs</td>
</tr>
<tr>
<td align="left">79</td>
<td align="left">finger</td>
</tr>
<tr>
<td align="left">87</td>
<td align="left">ttylink</td>
</tr>
<tr>
<td align="left">95</td>
<td align="left">supdup</td>
</tr>
<tr>
<td align="left">101</td>
<td align="left">hostriame</td>
</tr>
<tr>
<td align="left">102</td>
<td align="left">iso-tsap</td>
</tr>
<tr>
<td align="left">103</td>
<td align="left">gppitnp</td>
</tr>
<tr>
<td align="left">104</td>
<td align="left">acr-nema</td>
</tr>
<tr>
<td align="left">109</td>
<td align="left">pop2</td>
</tr>
<tr>
<td align="left">110</td>
<td align="left">pop3</td>
</tr>
<tr>
<td align="left">111</td>
<td align="left">sunrpc</td>
</tr>
<tr>
<td align="left">113</td>
<td align="left">auth</td>
</tr>
<tr>
<td align="left">115</td>
<td align="left">sftp</td>
</tr>
<tr>
<td align="left">117</td>
<td align="left">uucp-path</td>
</tr>
<tr>
<td align="left">119</td>
<td align="left">nntp</td>
</tr>
<tr>
<td align="left">123</td>
<td align="left">NTP</td>
</tr>
<tr>
<td align="left">135</td>
<td align="left">loc-srv /epmap</td>
</tr>
<tr>
<td align="left">139</td>
<td align="left">netbios</td>
</tr>
<tr>
<td align="left">143</td>
<td align="left">imap2</td>
</tr>
<tr>
<td align="left">179</td>
<td align="left">BGP</td>
</tr>
<tr>
<td align="left">389</td>
<td align="left">ldap</td>
</tr>
<tr>
<td align="left">465</td>
<td align="left">smtp+ssl</td>
</tr>
<tr>
<td align="left">512</td>
<td align="left">print / exec</td>
</tr>
<tr>
<td align="left">513</td>
<td align="left">login</td>
</tr>
<tr>
<td align="left">514</td>
<td align="left">shell</td>
</tr>
<tr>
<td align="left">515</td>
<td align="left">printer</td>
</tr>
<tr>
<td align="left">526</td>
<td align="left">tempo</td>
</tr>
<tr>
<td align="left">530</td>
<td align="left">courier</td>
</tr>
<tr>
<td align="left">531</td>
<td align="left">chat</td>
</tr>
<tr>
<td align="left">532</td>
<td align="left">netnews</td>
</tr>
<tr>
<td align="left">540</td>
<td align="left">uucp</td>
</tr>
<tr>
<td align="left">556</td>
<td align="left">remotefs</td>
</tr>
<tr>
<td align="left">563</td>
<td align="left">nntp+ssl</td>
</tr>
<tr>
<td align="left">587</td>
<td align="left">stmp?</td>
</tr>
<tr>
<td align="left">601</td>
<td align="left">??</td>
</tr>
<tr>
<td align="left">636</td>
<td align="left">ldap+ssl</td>
</tr>
<tr>
<td align="left">993</td>
<td align="left">ldap+ssl</td>
</tr>
<tr>
<td align="left">995</td>
<td align="left">pop3+ssl</td>
</tr>
<tr>
<td align="left">2049</td>
<td align="left">nfs</td>
</tr>
<tr>
<td align="left">3659</td>
<td align="left">apple-sasl / PasswordServer</td>
</tr>
<tr>
<td align="left">4045</td>
<td align="left">lockd</td>
</tr>
<tr>
<td align="left">6000</td>
<td align="left">X11</td>
</tr>
<tr>
<td align="left">6665</td>
<td align="left">Alternate IRC [Apple addition]</td>
</tr>
<tr>
<td align="left">6666</td>
<td align="left">Alternate IRC [Apple addition]</td>
</tr>
<tr>
<td align="left">6667</td>
<td align="left">Standard IRC [Apple addition]</td>
</tr>
<tr>
<td align="left">6668</td>
<td align="left">Alternate IRC [Apple addition]</td>
</tr>
<tr>
<td align="left">6669</td>
<td align="left">Alternate IRC [Apple addition]</td>
</tr>
</tbody></table>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>修改端口号，避免使用上表的端口号</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker提交运行时容器为镜像</title>
    <url>/296.html</url>
    <content><![CDATA[<p>命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit -a=<span class="string">&#x27;作者&#x27;</span> -m=<span class="string">&#x27;备注&#x27;</span> 运行时容器ID Docker用户名/新镜像名称:版本号</span><br></pre></td></tr></table></figure>

<p>下图中划红线的镜像就是刚刚提交的镜像</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20150855.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker推送镜像到hub服务器</title>
    <url>/297.html</url>
    <content><![CDATA[<h3 id="注册Docker账号"><a href="#注册Docker账号" class="headerlink" title="注册Docker账号"></a>注册Docker账号</h3><p>在Docker的hub官网注册，官网地址为：<a href="https://hub.docker.com/">https://hub.docker.com/</a> ，注册后记住用户名和密码</p>
<h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>输入登录命令，在输入自己的用户名和密码即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure>

<h3 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h3><p>推送命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push Docker用户名/新镜像名称:版本号</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20211111.jpg"></p>
<h3 id="查看"><a href="#查看" class="headerlink" title="查看"></a>查看</h3><p>在Docker的hub官网登录后即可看到刚刚推送的镜像</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20212908.jpg"></p>
<h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><p>查看镜像时有个拉取命令,如下图所示</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20002354.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker推送镜像到阿里云</title>
    <url>/298.html</url>
    <content><![CDATA[<h3 id="进入阿里云镜像控制台"><a href="#进入阿里云镜像控制台" class="headerlink" title="进入阿里云镜像控制台"></a>进入阿里云镜像控制台</h3><p>控制台地址：<a href="https://cr.console.aliyun.com/">https://cr.console.aliyun.com</a> ，登录</p>
<h3 id="创建命令空间"><a href="#创建命令空间" class="headerlink" title="创建命令空间"></a>创建命令空间</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20232121.jpg"></p>
<h3 id="创建镜像仓库"><a href="#创建镜像仓库" class="headerlink" title="创建镜像仓库"></a>创建镜像仓库</h3><h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20232151.jpg"></p>
<h4 id="填写仓库信息"><a href="#填写仓库信息" class="headerlink" title="填写仓库信息"></a>填写仓库信息</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20232215.jpg"></p>
<h4 id="选择本地仓库"><a href="#选择本地仓库" class="headerlink" title="选择本地仓库"></a>选择本地仓库</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20232235.jpg"></p>
<h4 id="阿里云提供的命令"><a href="#阿里云提供的命令" class="headerlink" title="阿里云提供的命令"></a>阿里云提供的命令</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-20%20232417.jpg"></p>
<h3 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h3><p>登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker login --username=用户名 registry.cn-hangzhou.aliyuncs.com</span><br></pre></td></tr></table></figure>

<p>创建一个阿里云专用镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker tag 要推送的镜像id registry.cn-hangzhou.aliyuncs.com/ledao/tomcat:[镜像版本号]</span><br></pre></td></tr></table></figure>

<p>下图中版本号为1.1的就是刚刚创建的</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20001143.jpg"></p>
<p>推送</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push registry.cn-hangzhou.aliyuncs.com/ledao/tomcat:[镜像版本号]</span><br></pre></td></tr></table></figure>

<p>查看阿里云的镜像仓库中成功推送的镜像</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20001002.jpg"></p>
<h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/ledao/tomcat:[阿里云的镜像版本号]</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20001943.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker创建容器时目录挂载</title>
    <url>/299.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>在创建容器的时候，将宿主机的目录与容器内的目录进行映射，这样我们就可以实现宿主机和容器目录的双向自动同步</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>Docker可以使用cp命令来实现数据传递，这种方式非常麻烦，通过容器目录挂载，能够轻松实现代码上传，配置修改，日志同步等需求</p>
<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><h4 id="单个目录"><a href="#单个目录" class="headerlink" title="单个目录"></a>单个目录</h4><p>拥有全部权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -v  /宿主机目录:/容器目录 镜像名</span><br></pre></td></tr></table></figure>

<p>挂载目录只读</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -v  /宿主机目录:/容器目录:ro 镜像名</span><br></pre></td></tr></table></figure>

<h4 id="多个目录"><a href="#多个目录" class="headerlink" title="多个目录"></a>多个目录</h4><p>拥有全部权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -v /宿主机目录:/容器目录 -v /宿主机目录2:/容器目录2  镜像名</span><br></pre></td></tr></table></figure>

<p>挂载目录只读</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it -v /宿主机目录:/容器目录:ro -v /宿主机目录2:/容器目录2:ro  镜像名</span><br></pre></td></tr></table></figure>

<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>同步的是多级目录，可能会出现权限不足的提示，这是因为Centos7中的安全模块selinux把权限禁掉了，我们需要在命令的后面添加<mark class="hl-label red">--privileged=true</mark> 来解决挂载的目录没有权限的问题</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>一般来说，都是创建容器时进行目录挂载，对于已经创建好的容器如果忘了挂载目录但是又想挂载目录，方法有两种：①提交这个容器为新的镜像，然后创建这个新镜像的容器同时进行目录挂载（此方式较简单）②修改这个容器的配置文件</p>
<p>具体步骤查看博客：<a href="/300.html">Docker修改已创建容器的挂载目录</a></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>第一个Java程序:HelloWorld</title>
    <url>/3.html</url>
    <content><![CDATA[<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010130141.jpg"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>idea彻底删除一个项目</title>
    <url>/30.html</url>
    <content><![CDATA[<h3 id="删除Module"><a href="#删除Module" class="headerlink" title="删除Module"></a>删除Module</h3><p>在idea的project栏中右键点击项目,选择Remove Module</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018010656.jpg" alt="img"></p>
<p>在确认框中点击Remove，删除后项目文件还会有残余</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018010910.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018011035.jpg" alt="img"></p>
<h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a><strong>删除文件</strong></h3><p>右键点击pom.xml，然后选择Show in Explorer（为了快速找到项目文件的文件夹），把文件夹中的文件都删除掉即可（在手动删除文件之前，先选择 IDEA 的 File 菜单，选择Close Project关闭项目,然后项目所在路径删除项目的文件夹）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018011449.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018011406.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker修改已创建容器的挂载目录</title>
    <url>/300.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>一般来说，都是创建容器时进行目录挂载，对于已经创建好的容器如果忘了挂载目录但是又想挂载目录</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>①提交这个容器为新的镜像，然后创建这个新镜像的容器同时进行目录挂载（此方式较简单）②修改这个容器的配置文件</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="提交新镜像再创建容器"><a href="#提交新镜像再创建容器" class="headerlink" title="提交新镜像再创建容器"></a>提交新镜像再创建容器</h4><p>查看下面两篇博客即可实现修改已创建容器的挂载目录</p>
<p>① <a href="/296.html">Docker提交运行时容器为镜像</a> ，将要挂载目录的已创建容器提交为本地新镜像</p>
<p>② <a href="/299.html">Docker创建容器时目录挂载 </a>，创建容器时使用新镜像的镜像id顺便挂载目录</p>
<h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>停止Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure>

<p>配置文件路径</p>
<p>/var/lib/docker/containers/[容器id]</p>
<p>修改配置文件hostconfig.json，在”Binds”节点中增加挂载目录的关系，前面的<font color="#dd0000">/home/hData/</font>是宿主机目录，后面的<font color="#dd0000">/cData</font>是容器目录，如果是多个用英文逗号隔开</p>
<p>单个目录例子：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Binds&quot;</span>:[<span class="string">&quot;/home/hData/:/cData&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>多个目录例子：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;Binds&quot;</span>:[<span class="string">&quot;/home/hData:/cData&quot;</span>,<span class="string">&quot;/home/hData2:/cData2&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>修改配置文件config.v2.json，在”MountPoints” 节点中增加挂载目录</p>
<p>单个目录例子：（第一段代码是原始的，第二段代码是格式化过的，格式化后更好修改）</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;MountPoints&quot;</span>:&#123;<span class="attr">&quot;/cData&quot;</span>:&#123;<span class="attr">&quot;Source&quot;</span>:<span class="string">&quot;/home/hData&quot;</span>,<span class="attr">&quot;Destination&quot;</span>:<span class="string">&quot;/cData&quot;</span>,<span class="attr">&quot;RW&quot;</span>:<span class="literal">true</span>,<span class="attr">&quot;Name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="attr">&quot;Driver&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="attr">&quot;Type&quot;</span>:<span class="string">&quot;bind&quot;</span>,<span class="attr">&quot;Propagation&quot;</span>:<span class="string">&quot;rprivate&quot;</span>,<span class="attr">&quot;Spec&quot;</span>:&#123;<span class="attr">&quot;Type&quot;</span>:<span class="string">&quot;bind&quot;</span>,<span class="attr">&quot;Source&quot;</span>:<span class="string">&quot;/home/hData/&quot;</span>,<span class="attr">&quot;Target&quot;</span>:<span class="string">&quot;/cData&quot;</span>&#125;,<span class="attr">&quot;SkipMountpointCreation&quot;</span>:<span class="literal">false</span>&#125;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;MountPoints&quot;</span>: &#123;</span><br><span class="line">	<span class="attr">&quot;/cData&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;Source&quot;</span>: <span class="string">&quot;/home/hData&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Destination&quot;</span>: <span class="string">&quot;/cData&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">		<span class="attr">&quot;Name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Driver&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Spec&quot;</span>: &#123;</span><br><span class="line">			<span class="attr">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;Source&quot;</span>: <span class="string">&quot;/home/hData/&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;Target&quot;</span>: <span class="string">&quot;/cData&quot;</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">&quot;SkipMountpointCreation&quot;</span>: <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>多个目录例子：（第一段代码是原始的，第二段代码是格式化过的，格式化后更好修改）</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;MountPoints&quot;</span>:&#123;<span class="attr">&quot;/cData&quot;</span>:&#123;<span class="attr">&quot;Source&quot;</span>:<span class="string">&quot;/home/hData&quot;</span>,<span class="attr">&quot;Destination&quot;</span>:<span class="string">&quot;/cData&quot;</span>,<span class="attr">&quot;RW&quot;</span>:<span class="literal">true</span>,<span class="attr">&quot;Name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="attr">&quot;Driver&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="attr">&quot;Type&quot;</span>:<span class="string">&quot;bind&quot;</span>,<span class="attr">&quot;Propagation&quot;</span>:<span class="string">&quot;rprivate&quot;</span>,<span class="attr">&quot;Spec&quot;</span>:&#123;<span class="attr">&quot;Type&quot;</span>:<span class="string">&quot;bind&quot;</span>,<span class="attr">&quot;Source&quot;</span>:<span class="string">&quot;/home/hData&quot;</span>,<span class="attr">&quot;Target&quot;</span>:<span class="string">&quot;/cData&quot;</span>&#125;,<span class="attr">&quot;SkipMountpointCreation&quot;</span>:<span class="literal">false</span>&#125;,<span class="attr">&quot;/cData2&quot;</span>:&#123;<span class="attr">&quot;Source&quot;</span>:<span class="string">&quot;/home/hData2&quot;</span>,<span class="attr">&quot;Destination&quot;</span>:<span class="string">&quot;/cData2&quot;</span>,<span class="attr">&quot;RW&quot;</span>:<span class="literal">true</span>,<span class="attr">&quot;Name&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="attr">&quot;Driver&quot;</span>:<span class="string">&quot;&quot;</span>,<span class="attr">&quot;Type&quot;</span>:<span class="string">&quot;bind&quot;</span>,<span class="attr">&quot;Propagation&quot;</span>:<span class="string">&quot;rprivate&quot;</span>,<span class="attr">&quot;Spec&quot;</span>:&#123;<span class="attr">&quot;Type&quot;</span>:<span class="string">&quot;bind&quot;</span>,<span class="attr">&quot;Source&quot;</span>:<span class="string">&quot;/home/hData2&quot;</span>,<span class="attr">&quot;Target&quot;</span>:<span class="string">&quot;/cData2&quot;</span>&#125;,<span class="attr">&quot;SkipMountpointCreation&quot;</span>:<span class="literal">false</span>&#125;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;MountPoints&quot;</span>: &#123;</span><br><span class="line">	<span class="attr">&quot;/cData&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;Source&quot;</span>: <span class="string">&quot;/home/hData&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Destination&quot;</span>: <span class="string">&quot;/cData&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">		<span class="attr">&quot;Name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Driver&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Spec&quot;</span>: &#123;</span><br><span class="line">			<span class="attr">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;Source&quot;</span>: <span class="string">&quot;/home/hData&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;Target&quot;</span>: <span class="string">&quot;/cData&quot;</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">&quot;SkipMountpointCreation&quot;</span>: <span class="literal">false</span></span><br><span class="line">	&#125;,</span><br><span class="line">	<span class="attr">&quot;/cData2&quot;</span>: &#123;</span><br><span class="line">		<span class="attr">&quot;Source&quot;</span>: <span class="string">&quot;/home/hData2&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Destination&quot;</span>: <span class="string">&quot;/cData2&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;RW&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">		<span class="attr">&quot;Name&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Driver&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Propagation&quot;</span>: <span class="string">&quot;rprivate&quot;</span>,</span><br><span class="line">		<span class="attr">&quot;Spec&quot;</span>: &#123;</span><br><span class="line">			<span class="attr">&quot;Type&quot;</span>: <span class="string">&quot;bind&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;Source&quot;</span>: <span class="string">&quot;/home/hData2&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;Target&quot;</span>: <span class="string">&quot;/cData2&quot;</span></span><br><span class="line">		&#125;,</span><br><span class="line">		<span class="attr">&quot;SkipMountpointCreation&quot;</span>: <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动Docker</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<p>启动刚刚修改的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start 容器id</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装和配置Tomcat容器并部署Java项目</title>
    <url>/301.html</url>
    <content><![CDATA[<h3 id="创建Tomcat容器"><a href="#创建Tomcat容器" class="headerlink" title="创建Tomcat容器"></a>创建Tomcat容器</h3><p>创建的这个容器只是用来获取文件路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义名称 -di -p 8080:8080 Tomcat镜像id</span><br></pre></td></tr></table></figure>

<h3 id="获取文件路径"><a href="#获取文件路径" class="headerlink" title="获取文件路径"></a>获取文件路径</h3><p>进入容器的文件夹中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it Tomcat容器id /bin/bash</span><br></pre></td></tr></table></figure>

<p>获取三个文件夹<font color="#dd0000">conf、webapps、logs</font>的文件路径</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20095054.jpg"></p>
<h3 id="复制文件到宿主机"><a href="#复制文件到宿主机" class="headerlink" title="复制文件到宿主机"></a>复制文件到宿主机</h3><p>在宿主机的 home 目录下新建 tomcat 目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /home/tomcat</span><br></pre></td></tr></table></figure>

<p>复制容器里的 <font color="#dd0000">/usr/local/tomcat/conf、/usr/local/tomcat/webapps</font> 到宿主机/home/tomcat/</p>
<p>复制 /usr/local/tomcat/conf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 容器id:/usr/<span class="built_in">local</span>/tomcat/conf /home/tomcat/</span><br></pre></td></tr></table></figure>

<p>复制 /usr/local/tomcat/webapps</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp r:/usr/<span class="built_in">local</span>/tomcat/webapps /home/tomcat/</span><br></pre></td></tr></table></figure>

<h3 id="创建新的Tomcat容器"><a href="#创建新的Tomcat容器" class="headerlink" title="创建新的Tomcat容器"></a>创建新的Tomcat容器</h3><p>这个容器是用来部署Java项目的，创建时挂载 <font color="#dd0000">/home/tomcat/conf、/home/tomcat/webapps、home/tomcat/logs</font></p>
<p>创建容器并挂载目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义名称 -di -p 80:8080 -v /home/tomcat/conf:/usr/<span class="built_in">local</span>/tomcat/conf -v /home/tomcat/webapps:/usr/<span class="built_in">local</span>/tomcat/webapps -v /home/tomcat/logs:/usr/<span class="built_in">local</span>/tomcat/logs Tomcat镜像id</span><br></pre></td></tr></table></figure>

<h3 id="上传Java项目"><a href="#上传Java项目" class="headerlink" title="上传Java项目"></a>上传Java项目</h3><p>上传到 <font color="#dd0000">/home/tomcat/webapps</font> 目录下，我上传的文件名为：WebTest.war，Docker 的 Tomcat 是热部署的所以会自动部署Java项目，过了一会儿就可以访问这个项目了，访问路径为：<font color="#dd0000">http://虚拟机的ip/WebTest</font></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>修改宿主机的 <font color="#dd0000">/home/tomcat/conf</font> 目录下的 <font color="#dd0000">server.xml</font>，添加以下代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;/usr/local/tomcat/webapps/WebTest&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;0&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>添加位置如下图：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20102700.png"></p>
<p>重启新创建的Tomcat容器，即部署Java项目的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker restart 容器id</span><br></pre></td></tr></table></figure>

<p>然后访问项目可以不加项目名了，访问路径为：<font color="#dd0000">http://虚拟机的ip</font></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Java</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装和配置MySQL容器</title>
    <url>/302.html</url>
    <content><![CDATA[<h3 id="创建MySQL容器"><a href="#创建MySQL容器" class="headerlink" title="创建MySQL容器"></a>创建MySQL容器</h3><p>创建的这个容器只是用来获取文件路径</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义名称 -di -p 3305:3306 -e MYSQL_ROOT_PASSWORD=123456 MySQL镜像id</span><br></pre></td></tr></table></figure>

<h3 id="获取文件路径"><a href="#获取文件路径" class="headerlink" title="获取文件路径"></a>获取文件路径</h3><p>进入容器的文件夹中</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 容器id /bin/bash</span><br></pre></td></tr></table></figure>

<p>获取conf.d、log、mysql的文件路径，分别如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/mysql/conf.d</span><br><span class="line">/var/<span class="built_in">log</span></span><br><span class="line">/var/lib/mysql</span><br></pre></td></tr></table></figure>

<h3 id="复制文件到宿主机"><a href="#复制文件到宿主机" class="headerlink" title="复制文件到宿主机"></a>复制文件到宿主机</h3><p>在宿主机的 home 目录下新建 mysql 目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /home/mysql</span><br></pre></td></tr></table></figure>

<p>复制容器里的 /etc/mysql/conf.d、/var/log、/var/lib/mysql到宿主机/home/mysql</p>
<p>复制/etc/mysql/conf.d</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 容器id:/etc/mysql/conf.d /home/mysql/</span><br></pre></td></tr></table></figure>

<p>复制/var/log</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 容器id:/var/<span class="built_in">log</span> /home/mysql/</span><br></pre></td></tr></table></figure>

<p>复制/var/lib/mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp 容器id:/var/lib/mysql /home/mysql/</span><br></pre></td></tr></table></figure>

<h3 id="创建新的MySQL容器"><a href="#创建新的MySQL容器" class="headerlink" title="创建新的MySQL容器"></a>创建新的MySQL容器</h3><p>创建时挂载 /etc/mysql/conf.d、/var/log、/var/lib/mysql</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -di --name 自定义名称 -p 3303:3306 -v /etc/mysql/conf.d:/home/mysql/conf -v /var/<span class="built_in">log</span>:/home/mysql/<span class="built_in">log</span> -v /var/lib/mysql:/home/mysql/mysql -e MYSQL_ROOT_PASSWORD=123456 MySQL镜像id</span><br></pre></td></tr></table></figure>

<p>重启新的MySQL容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker restart 容器id</span><br></pre></td></tr></table></figure>

<h3 id="SQLyog连接数据库"><a href="#SQLyog连接数据库" class="headerlink" title="SQLyog连接数据库"></a>SQLyog连接数据库</h3><p>连接数据库，主机地址填虚拟机IP，端口和密码填创建容器时设置的，用户名是root</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20112355.png"></p>
<p>执行sql脚本导入数据</p>
<p>然后就可以操作mysql容器的数据库了，Java项目连接数据库的基本信息也是填上面的</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker备份和恢复镜像</title>
    <url>/303.html</url>
    <content><![CDATA[<h3 id="备份镜像"><a href="#备份镜像" class="headerlink" title="备份镜像"></a>备份镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker save -o 备份镜像的名称  源镜像名称:tag版本</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20211044.jpg"></p>
<h3 id="恢复镜像"><a href="#恢复镜像" class="headerlink" title="恢复镜像"></a>恢复镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker load -i 镜像文件</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20211126.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile常用指令</title>
    <url>/304.html</url>
    <content><![CDATA[<h3 id="DockerFile简介"><a href="#DockerFile简介" class="headerlink" title="DockerFile简介"></a>DockerFile简介</h3><p>dockerfile用于快速有序且直观地完成对镜像的定制</p>
<p>Dockerfile 是一个文本文件，其内包含了一条条的指令(Instruction)，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建</p>
<h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><h4 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h4><p>FROM指令是整个Dockerfile的入口，必须是第一条指令。其代表新制作镜像的基础镜像。基础镜像可以自己制作，也可以从开源的仓库pull，例如dockerhub或是国内阿里云的免费仓库。</p>
<p>Docker中存在一种特殊的情况，就是不以任何基础镜像为基准，此时可以第一句话使用：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FROM scratch</span><br></pre></td></tr></table></figure>

<p>来表示以空白镜像为基础，也就是直接将可执行文件复制进镜像。例如swarm、coreos/etcd等。</p>
<h4 id="RUN指令"><a href="#RUN指令" class="headerlink" title="RUN指令"></a>RUN指令</h4><p>是dockerfile中最常用的指令之一。用来执行命令行上的命令。RUN的格式分为两种：</p>
<p>第一种：<br>shell格式：<code>RUN&lt;命令&gt;</code>，类似于直接在终端输入命令。例如：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">RUN echo <span class="string">&#x27;&lt;h1&gt;Hello, Docker!&lt;/h1&gt;&#x27;</span> &gt; <span class="regexp">/usr/share</span><span class="regexp">/tomcat/welcome</span>.html</span><br></pre></td></tr></table></figure>

<p>第二种：<br>exec格式：<code>RUN [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;]</code>。<br>RUN既然可以像在命令行那样工作，那么就也可以实现传参来运行指令：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">FROM ubuntu:<span class="number">14.04</span></span><br><span class="line"></span><br><span class="line">RUN apt-get update</span><br><span class="line">RUN apt-get install -y gcc libc6-dev <span class="built_in">make</span></span><br><span class="line">RUN wget -O redis.tar.gz <span class="string">&quot;http://download.redis.io/releases/redis-3.2.5.tar.gz&quot;</span></span><br><span class="line">RUN mkdir -p /usr/src/redis</span><br><span class="line">RUN tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=<span class="number">1</span></span><br><span class="line">RUN <span class="built_in">make</span> -C /usr/src/redis</span><br><span class="line">RUN <span class="built_in">make</span> -C /usr/src/redis install</span><br></pre></td></tr></table></figure>

<p>RUN一次就代表Dockerfile中的一层。而docker镜像的构建就是不断去完善每一层需要做的事情。而dockerfi对一个file中层数是有限制的，最大不超过127层。因此，RUN提供命令的串联功能，也就是允许每一层可包含多种操作，他们会按照书写顺序来依次执行。那么上面的例子可以变为：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">FROM ubuntu:<span class="number">14.04</span></span><br><span class="line">RUN buildDeps=<span class="string">&#x27;gcc libc6-dev make&#x27;</span> \</span><br><span class="line">    &amp;&amp; apt-<span class="keyword">get</span> update \</span><br><span class="line">    &amp;&amp; apt-<span class="keyword">get</span> install -y $buildDeps \</span><br><span class="line">    &amp;&amp; wget -O redis.tar.gz <span class="string">&quot;http://download.redis.io/releases/redis-3.2.5.tar.gz&quot;</span> \</span><br><span class="line">    &amp;&amp; mkdir -p /usr/src/redis \</span><br><span class="line">    &amp;&amp; tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=<span class="number">1</span> \</span><br><span class="line">    &amp;&amp; make -C /usr/src/redis \</span><br><span class="line">    &amp;&amp; make -C /usr/src/redis install \</span><br><span class="line">    &amp;&amp; rm -rf /<span class="keyword">var</span>/lib/apt/lists<span class="comment">/* \</span></span><br><span class="line"><span class="comment">    &amp;&amp; rm redis.tar.gz \</span></span><br><span class="line"><span class="comment">    &amp;&amp; rm -r /usr/src/redis \</span></span><br><span class="line"><span class="comment">    &amp;&amp; apt-get purge -y --auto-remove $buildDeps</span></span><br></pre></td></tr></table></figure>

<p>换行用 \ ，注释用 # ，平时书写注意缩进来保证文件的可读性。上述例子中的最后一句还进行了无关文件的清理，进一步保证每一层的最优和最小</p>
<p>注意事项：<br>镜像的初衷是进行功能的模块化，也是尽可能让每个容器干最少的事情，那么我们在书写dockerfile的时候要注意这个问题，每一层的东西确保是必须的，否则就不要进行安装或是拷贝。</p>
<h4 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a>MAINTAINER</h4><p>指定作者<br>句法：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">MAINTAINER <span class="tag">&lt;<span class="name">name</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="LABEL"><a href="#LABEL" class="headerlink" title="LABEL"></a>LABEL</h4><p>该指令是为镜像添加标签<br>句法：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">LABEL <span class="tag">&lt;<span class="name">key</span>&gt;</span>=<span class="tag">&lt;<span class="name">value</span>&gt;</span> <span class="tag">&lt;<span class="name">key</span>&gt;</span>=<span class="tag">&lt;<span class="name">value</span>&gt;</span> <span class="tag">&lt;<span class="name">key</span>&gt;</span>=<span class="tag">&lt;<span class="name">value</span>&gt;</span> ...</span><br></pre></td></tr></table></figure>

<p>一个Dockerfile种可以有多个LABEL，如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LABEL multi.label1=<span class="string">&quot;value1&quot;</span> \</span><br><span class="line">multi.label2=<span class="string">&quot;value2&quot;</span> \</span><br><span class="line">other=<span class="string">&quot;value3&quot;</span></span><br></pre></td></tr></table></figure>

<p>说明：LABEL会继承基础镜像种的LABEL，如遇到key相同，则值覆盖</p>
<h4 id="COPY指令"><a href="#COPY指令" class="headerlink" title="COPY指令"></a>COPY指令</h4><p>该指令用于将宿主机文件拷贝至镜像内的指定路径<br>格式：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">COPY &lt;源路径&gt;... &lt;目标路径&gt;</span><br><span class="line">或</span><br><span class="line">COPY [&quot;&lt;源路径1&gt;&quot;,... &quot;&lt;目标路径&gt;&quot;]</span><br></pre></td></tr></table></figure>

<p>也就是说，原路径可以有多个，而目标路径唯一<br>注意事项：</p>
<p>1、可以使用符合GO规范的通配符，例如：<code>COPY hom* /mydir/</code><br>2、目的路径可以是镜像内的绝对路径，也可以是相对于当前工作目录的相对路径<br>3、COPY过来的文件权限与原始权限相同。如需更改，请用传统Liunx的chmod命令进行修改即可</p>
<h4 id="ADD高级复制"><a href="#ADD高级复制" class="headerlink" title="ADD高级复制"></a>ADD高级复制</h4><p>ADD的本质作用类似于COPY，但是其更复杂：</p>
<p>1、ADD过来的压缩包可以自动在目标路径下进行解压<br>2、原始路径可以是一个连接，ADD过程会尝试从该链接下载所需的文件到目的路径<br>3、一般情况下，建议使用COPY而不是ADD，因为COPY过来的文件可以配合使用RUN来进行解压或是其他操作，搭配使用更灵活，且单条语句所负担的功能唯一</p>
<h4 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h4><p>该指令用于指定Dockerfile中该指令下面的操作所在的工作目录<br>类似于 cd 命令</p>
<h4 id="CMD-服务启动指令"><a href="#CMD-服务启动指令" class="headerlink" title="CMD 服务启动指令"></a>CMD 服务启动指令</h4><p>Docker不是虚拟机而是一个进程，作为进程，当然可以制定启动镜像时的具体参数。说白了就是制定一些你想自动启动的服务<br>格式：</p>
<figure class="highlight objectivec"><table><tr><td class="code"><pre><span class="line">shell 格式：<span class="built_in">CMD</span> &lt;命令&gt;</span><br><span class="line">exec 格式：<span class="built_in">CMD</span> [<span class="string">&quot;可执行文件&quot;</span>, <span class="string">&quot;参数1&quot;</span>, <span class="string">&quot;参数2&quot;</span>...]</span><br><span class="line">参数列表格式：<span class="built_in">CMD</span> [<span class="string">&quot;参数1&quot;</span>, <span class="string">&quot;参数2&quot;</span>...]。在指定了 ENTRYPOINT 指令后，用 <span class="built_in">CMD</span> 指定具体的参数。</span><br></pre></td></tr></table></figure>

<p>注意事项：</p>
<p>1、CMD中的启动参数可以被更新覆盖。例如：<br>Dockerfile中若是用CMD指定启动镜像时执行/bin/bash，那么在启动镜像时输入<code>docker run -it ubuntu ./test.sh</code> 则会用./test.sh命令来覆盖/bin/bash命令<br>2、推荐使用exec格式的CMD书写。这类格式在解析时会被解析为 JSON 数组，因此一定要使用双引号 “，而不要使用单引号<br>3、如果使用 shell 格式的话，实际的命令会被包装为 sh -c 的参数的形式进行执行。比如：<code>CMD echo /java</code><br>在实际执行中，会将其变更为：<br><code>CMD [ &quot;sh&quot;, &quot;-c&quot;, &quot;echo /java&quot; ]</code></p>
<h4 id="ENV设置环境变量"><a href="#ENV设置环境变量" class="headerlink" title="ENV设置环境变量"></a>ENV设置环境变量</h4><p>说是环境变量还不说是一个全局变量。在前面定义，后面可以通过 $ 取值进行使用<br>格式：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">ENV <span class="tag">&lt;<span class="name">key</span>&gt;</span> <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">ENV <span class="tag">&lt;<span class="name">key1</span>&gt;</span>=<span class="tag">&lt;<span class="name">value1</span>&gt;</span> <span class="tag">&lt;<span class="name">key2</span>&gt;</span>=<span class="tag">&lt;<span class="name">value2</span>&gt;</span>...</span><br></pre></td></tr></table></figure>

<p>例如可以指定一些包的版本号，这样更新镜像很方便，或是保存一些密码（该功能慎用，自己玩还是可以的）</p>
<h4 id="ARG-构建参数"><a href="#ARG-构建参数" class="headerlink" title="ARG 构建参数"></a>ARG 构建参数</h4><p>语法形式: <code>ARG &lt;name&gt;[=&lt;default value&gt;]</code><br>ARG和ENV效果类似，都是用来设置观景变量的。唯一 不同的是dockerfile中的ARG编译好后是不会出现在打开的容器内的</p>
<p>ARG在dockerfile中创建一个全局参数，参数可以给定一个默认值，在编译时可以传参对其进行覆盖。如果ARG指令有默认值并且在构建期间没有接收到参数、则使用默认值。一个dockerfile中可以包含多个ARG参数</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">docker build --build-arg <span class="tag">&lt;<span class="name">varname</span>&gt;</span>=<span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以使用ARG或ENV指令来指定RUN指令可用的变量，如果ARG和ENV同时指定了一个相同名称的变量、则ENV设置的变量会覆盖ARG设置的变量。如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 FROM ubuntu</span><br><span class="line">2 ARG CONT_IMG_VER</span><br><span class="line">3 ENV CONT_IMG_VER v1.0.0</span><br><span class="line">4 RUN <span class="built_in">echo</span> <span class="variable">$CONT_IMG_VER</span></span><br></pre></td></tr></table></figure>

<p>使用   <code>docker build --build-arg CONT_IMG_VER=v2.0.1 .</code> 最终输出v1.0.0 </p>
<p>一个ARG指令的有效范围在其定义的构建阶段内、如果要在多个阶段中都有效、则必须在每个阶段都使用ARG指令；<strong>与ARG不同  ENV设置参数的有效期为整个构建期内</strong></p>
<h4 id="VOLUME-挂在共享卷"><a href="#VOLUME-挂在共享卷" class="headerlink" title="VOLUME 挂在共享卷"></a>VOLUME 挂在共享卷</h4><p>格式为：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">VOLUME [&quot;&lt;路径1&gt;&quot;, &quot;&lt;路径2&gt;&quot;...]</span><br><span class="line">VOLUME &lt;路径&gt;</span><br></pre></td></tr></table></figure>

<p>Docker的使用原则除了每个容器干尽量少的事情外，还尽可能要求容器运行时应该尽量保持容器存储层不发生写操作，对于数据库类需要保存动态数据的应用，其数据库文件应该保存于卷(volume)中，也就是将本地磁盘的某一个目录挂载至容器内。同时这样的共享目录可以被多个不同的容器所使用</p>
<p>除了可以在dockerfile中指定这一参数外，在运行启动容器时也可以附带这一参数来指定共享卷：</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">docker run -it --name container-test -h CONTAINER -v /<span class="keyword">data</span> debian /bin/bash</span><br></pre></td></tr></table></figure>

<p>上述命令也可以覆盖dockerfile中的目录设定。</p>
<h4 id="USER指定用户"><a href="#USER指定用户" class="headerlink" title="USER指定用户"></a>USER指定用户</h4><p>在书写dockerfile时，某些层的操作若想切换用户名，可以使用该参数指定某些层的用户，并且是存在的用户名。<br> 格式：<code>USER &lt;用户名&gt;</code></p>
<p>如果以 <code>root</code> 执行的脚本，在执行期间希望改变身份，比如希望以某个已经建立好的用户来运行某个服务进程，不要使用 <code>su</code> 或者 <code>sudo</code>，这些都需要比较麻烦的配置，而且在 TTY 缺失的环境下经常出错。建议使用 <code>gosu</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 建立 redis 用户，并使用 gosu 换另一个用户执行命令</span></span><br><span class="line">RUN groupadd -r redis &amp;&amp; useradd -r -g redis redis</span><br><span class="line"><span class="comment"># 下载 gosu</span></span><br><span class="line">RUN wget -O /usr/<span class="built_in">local</span>/bin/gosu <span class="string">&quot;https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64&quot;</span> \</span><br><span class="line">    &amp;&amp; chmod +x /usr/<span class="built_in">local</span>/bin/gosu \</span><br><span class="line">    &amp;&amp; gosu nobody <span class="literal">true</span></span><br><span class="line"><span class="comment"># 设置 CMD，并以另外的用户执行</span></span><br><span class="line">CMD [ <span class="string">&quot;exec&quot;</span>, <span class="string">&quot;gosu&quot;</span>, <span class="string">&quot;redis&quot;</span>, <span class="string">&quot;redis-server&quot;</span> ]</span><br></pre></td></tr></table></figure>

<h4 id="EXPOSE暴漏端口"><a href="#EXPOSE暴漏端口" class="headerlink" title="EXPOSE暴漏端口"></a>EXPOSE暴漏端口</h4><p>句法：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">EXPOSE &lt;端口1&gt; [&lt;端口2&gt;...]</span><br></pre></td></tr></table></figure>

<p><code>EXPOSE</code> 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 <code>docker run -P</code> 时，会自动随机映射 <code>EXPOSE</code> 的端口</p>
<p>要将 EXPOSE 和在运行时使用 <code>-p &lt;宿主端口&gt;:&lt;容器端口&gt;</code> 区分开来。<code>-p</code>，是映射宿主端口和容器端口，换句话说，就是将容器的对应端口服务公开给外界访问，而 EXPOSE 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>来源：<a href="https://www.jianshu.com/p/2a90fc6ee383">https://www.jianshu.com/p/2a90fc6ee383</a></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile构建自定义CentOS</title>
    <url>/305.html</url>
    <content><![CDATA[<h3 id="编写DockerFile"><a href="#编写DockerFile" class="headerlink" title="编写DockerFile"></a>编写DockerFile</h3><p>新建一个文件，命名为：mycentosDockerFile，没有后缀名，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">MAINTAINER ledao&lt;f1203007469@gmail.com&gt;</span><br><span class="line"></span><br><span class="line">LABEL name=<span class="string">&quot;LeDao CentOS Image&quot;</span> \</span><br><span class="line">	build-date=<span class="string">&quot;2021-08-21&quot;</span></span><br><span class="line"></span><br><span class="line">ENV WORKPATH /home/</span><br><span class="line">WORKDIR <span class="variable">$WORKPATH</span></span><br><span class="line"></span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line">RUN yum -y install vim</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD /bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h3><p>命令的最后面有个英文句号.（少了句号不行）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f /home/dockerfile/mycentosDockerFile -t a6678696/mycentos:1.1 .</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20232745.png"></p>
<h3 id="查看镜像构建历史"><a href="#查看镜像构建历史" class="headerlink" title="查看镜像构建历史"></a>查看镜像构建历史</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">history</span> 镜像id</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-21%20233507.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile构建自定义Tomcat</title>
    <url>/306.html</url>
    <content><![CDATA[<h3 id="编写DockerFile"><a href="#编写DockerFile" class="headerlink" title="编写DockerFile"></a>编写DockerFile</h3><p>新建一个文件，命名为：mytomcatdockerfile，没有后缀名，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">MAINTAINER LeDao&lt;f1203007469@gmail.com&gt;</span><br><span class="line"> </span><br><span class="line">LABEL name=<span class="string">&quot;LeDao Tomcat Image&quot;</span> \</span><br><span class="line">    build-date=<span class="string">&quot;2021-08-22 00:16:53&quot;</span></span><br><span class="line">    </span><br><span class="line">COPY  copyright.txt /home/copyright.txt</span><br><span class="line">ADD server-jre-8u151-linux-x64.tar.gz /home/</span><br><span class="line">ADD apache-tomcat-8.5.37.tar.gz /home/</span><br><span class="line"> </span><br><span class="line">ENV WORKPATH /home/apache-tomcat-8.5.37/</span><br><span class="line">WORKDIR <span class="variable">$WORKPATH</span></span><br><span class="line"> </span><br><span class="line">ENV JAVA_HOME /home/jdk1.8.0_151</span><br><span class="line">ENV CLASSPATH <span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span><br><span class="line">ENV CATALINA_HOME /home/apache-tomcat-8.5.37/</span><br><span class="line">ENV CATALINA_BASE /home/apache-tomcat-8.5.37/</span><br><span class="line">ENV PATH <span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$CATALINA_HOME</span>/lib:<span class="variable">$CATALINA_HOME</span>/bin</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">EXPOSE 8080</span><br><span class="line">CMD [<span class="string">&quot;/home/apache-tomcat-8.5.37/bin/catalina.sh&quot;</span>,<span class="string">&quot;run&quot;</span>]</span><br></pre></td></tr></table></figure>

<h3 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h3><p>创建/home/dockerfile目录，把mytomcatdockerfile、copyright.txt、server-jre-8u151-linux-x64.tar.gz、apache-tomcat-8.5.37.tar.gz复制到该目录下，并进入该目录</p>
<p>四个文件的百度网盘链接：</p>
<blockquote>
<p>链接：<a href="https://pan.baidu.com/s/1ldCQGNay95IvVlOzeMQdXg">https://pan.baidu.com/s/1ldCQGNay95IvVlOzeMQdXg</a> </p>
<p>提取码：62h2</p>
</blockquote>
<h3 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h3><p>命令的最后面有个英文句号.（少了句号不行）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f mytomcatdockerfile -t a6678696/mytomcat:1.2 .</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-22%20010340.jpg"></p>
<h3 id="查看镜像构造历史"><a href="#查看镜像构造历史" class="headerlink" title="查看镜像构造历史"></a>查看镜像构造历史</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-22%20010515.png"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile创建镜像时报错：file not found in build context or excluded by</title>
    <url>/307.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>DockerFile创建镜像时使用COPY和ADD指令时，检测到源文件不存在就会报错</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>DockerFile文件和源文件放在同一目录下，并且先进入这个目录再执行创建镜像命令</p>
<p>例如我的DockerFile文件和源文件都在/home/dockerfile目录中（如下图所示），那么我就要进入/home/dockerfile目录，然后执行DockerFile创建镜像的命令</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-22%20013057.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile通过VOLUME指令创建容器卷来实现容器的目录挂载</title>
    <url>/308.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>DockerFile创建镜像时通过VOLUME指令创建几个容器卷，然后创建这个镜像的容器时，这个容器就有了这几个容器卷目录，并与宿主机自动创建的对应目录实现了挂载</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">VOLUME[<span class="string">&#x27;目录1&#x27;</span>,<span class="string">&#x27;目录2&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h4 id="编写DockerFile"><a href="#编写DockerFile" class="headerlink" title="编写DockerFile"></a>编写DockerFile</h4><p>新建一个文件，命名为：myVolumeDockerFile，没有后缀名，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">VOLUME [<span class="string">&quot;/home/v1&quot;</span>,<span class="string">&quot;/home/v2&quot;</span>]</span><br><span class="line"></span><br><span class="line">CMD /bin/bash</span><br></pre></td></tr></table></figure>

<h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f myVolumeDockerFile -t a6678696/mycentos:1.2 .</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-22%20040035.jpg"></p>
<h4 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it 9123279cfb4f</span><br></pre></td></tr></table></figure>

<h4 id="找到挂载的目录"><a href="#找到挂载的目录" class="headerlink" title="找到挂载的目录"></a>找到挂载的目录</h4><p>①找到容器挂载的容器卷v1，v2</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-22%20040322.jpg"></p>
<p>②找到宿主机挂载的容器卷</p>
<p>通过inspect命令获取容器的元数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect 容器id</span><br></pre></td></tr></table></figure>

<p>找到Mounts节点，Source为宿主机的目录，Destination为容器的目录，两个目录是挂载的</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-22%20040846.jpg"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>docker run -v 命令创建挂载目录更好，可以自定义宿主机目录</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile的CMD, ENTRYPOINT指令</title>
    <url>/309.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>CMD，ENTRYPOINT都是容器启动的时候，执行执行命令，都支持exec和shell方式</p>
<p>一般用法有两种：①单独一个CMD②先使用ENTRYPOINT（用于执行命令），然后结合CMD使用（用于追加参数）</p>
<p>有多个CMD时，只有最后一个CMD生效</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>一般开发和Docker官方都建议用 exec格式</p>
<h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>第一种用法：运行一个可执行的文件并提供参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD [<span class="string">&quot;executable&quot;</span>,<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>第二种用法：为ENTRYPOINT指定参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD [<span class="string">&quot;param1&quot;</span>,<span class="string">&quot;param2&quot;</span>] </span><br></pre></td></tr></table></figure>

<p>第三种用法(shell格式)：是以”/bin/sh -c”的方法执行的命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CMD <span class="built_in">command</span> param1 param2</span><br></pre></td></tr></table></figure>

<h4 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h4><p> exec 格式, 推荐</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTRYPOINT [“executable”, “param1”, “param2”]</span><br></pre></td></tr></table></figure>

<p> shell 格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ENTRYPOINT <span class="built_in">command</span> param1 param2</span><br></pre></td></tr></table></figure>

<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="单个CMD"><a href="#单个CMD" class="headerlink" title="单个CMD"></a>单个CMD</h4><p>编写DockerFile，命名为df1，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">CMD <span class="built_in">echo</span> <span class="string">&quot;第一个CMD&quot;</span></span><br></pre></td></tr></table></figure>

<p>构建镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f df1 -t a6678696/df:1.1 .</span><br></pre></td></tr></table></figure>

<p>创建和运行该镜像的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run 镜像id</span><br></pre></td></tr></table></figure>

<p>结果如下图</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-23%20000826.jpg"></p>
<h4 id="多个CMD"><a href="#多个CMD" class="headerlink" title="多个CMD"></a>多个CMD</h4><p>编写DockerFile，命名为df2，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">CMD <span class="built_in">echo</span> <span class="string">&quot;第一个CMD&quot;</span></span><br><span class="line">CMD <span class="built_in">echo</span> <span class="string">&quot;第二个CMD&quot;</span></span><br></pre></td></tr></table></figure>

<p>构建镜像</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">docker</span> build -f df<span class="number">2</span> -t a<span class="number">6678696</span>/df:<span class="number">1</span>.<span class="number">2</span> .</span><br></pre></td></tr></table></figure>

<p>创建和运行该镜像的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run 镜像id</span><br></pre></td></tr></table></figure>

<p>结果如下图，第一个CMD命令没有生效，生效的是最后一个CMD</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-23%20000929.jpg"></p>
<h4 id="先ENTRYPOINT后CMD"><a href="#先ENTRYPOINT后CMD" class="headerlink" title="先ENTRYPOINT后CMD"></a>先ENTRYPOINT后CMD</h4><p>编写DockerFile，命名为df3，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">ENTRYPOINT [<span class="string">&quot;ls&quot;</span>]</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">&quot;-l&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>构建镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f df3 -t a6678696/df:1.3 .</span><br></pre></td></tr></table></figure>

<p>创建和运行该镜像的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run 镜像id</span><br></pre></td></tr></table></figure>

<p>结果如下图，以ls -l格式查看文件</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-23%20001442.png"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>idea中git版本回退</title>
    <url>/31.html</url>
    <content><![CDATA[<h3 id="查看历史版本"><a href="#查看历史版本" class="headerlink" title="查看历史版本"></a>查看历史版本</h3><p>右键点击项目，选择Git的Show History</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018015701.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018015828.jpg" alt="img"></p>
<h3 id="选择目标版本"><a href="#选择目标版本" class="headerlink" title="选择目标版本"></a>选择目标版本</h3><p>右键点击要回退的目标代码版本，选择Copy Revision Number（复制代码版本的版本号）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018020137.jpg" alt="img"></p>
<p>目标版本代码的版本号：<font color="#00dd00">a9431f9ccc6eceb67693ad0f706877dd54347bde</font></p>
<p>当前版本代码的版本号：<font color="#dd0000">573161acd112e954813933bccee221ca3e6f5aec</font></p>
<h3 id="开始回退"><a href="#开始回退" class="headerlink" title="开始回退"></a>开始回退</h3><p>右键点击项目，依次选中Git-&gt;Repository-&gt;Reset HEAD</p>
<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018020738.jpg" alt="img"></strong></p>
<p>Reset Type选择Hard，To Commit输入要回退的目标版本号，然后点击Reset即可回退到目标代码版本</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201018021257.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>DockerFile的ONBUILD指令</title>
    <url>/310.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>父镜像在被子镜像继承后父镜像的ONBUILD被触发，可以把ONBUID理解为一个触发器。编写Dockerfile的时候，其他命令都是为了自身镜像服务的，只有ONBUILD是为了子镜像服务</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><h4 id="构建父镜像"><a href="#构建父镜像" class="headerlink" title="构建父镜像"></a>构建父镜像</h4><p>编写父镜像DockerFile，命名为：parent_df，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line"></span><br><span class="line">ONBUILD RUN yum -y install vim</span><br><span class="line"></span><br><span class="line">CMD /bin/bash</span><br></pre></td></tr></table></figure>

<p>构建父镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f parent_df -t parent .</span><br></pre></td></tr></table></figure>

<h4 id="构建子镜像"><a href="#构建子镜像" class="headerlink" title="构建子镜像"></a>构建子镜像</h4><p>编写子镜像DockerFile，命名为：son_df，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FROM parent</span><br></pre></td></tr></table></figure>

<p>构建子镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> docker build -f son_df -t son .</span><br></pre></td></tr></table></figure>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p>当构建子镜像的时候，父镜像的ONBUILD会触发，子镜像直接安装vim，父镜像是没有安装vim的。所以使用父镜像创建的容器使用vim命令会报错，而用子镜像创建的容器可以使用vim命令</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>DockerFile</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker搭建私有仓库</title>
    <url>/311.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Docker私有仓库程序本身就是一个镜像，主要是企业内部用来存放镜像的仓库，相对官方仓库以及阿里云仓库，具有更高的保密安全级别</p>
<h3 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h3><h4 id="拉取私有仓库镜像"><a href="#拉取私有仓库镜像" class="headerlink" title="拉取私有仓库镜像"></a>拉取私有仓库镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull registry</span><br></pre></td></tr></table></figure>

<h4 id="创建并启动容器"><a href="#创建并启动容器" class="headerlink" title="创建并启动容器"></a>创建并启动容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -di --name=myRegistry -p 5000:5000 registry</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>浏览器地址栏输入：<font color="#dd0000">http://虚拟机id:5000/v2/_catalog</font>，看到下图说明搭建成功</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-23%20024525.jpg"></p>
<h4 id="修改daemon-json"><a href="#修改daemon-json" class="headerlink" title="修改daemon.json"></a>修改daemon.json</h4><p>该文件在 <font color="#dd0000">/etc/docker</font> 目录下，添加以下代码让Docker信任私有仓库</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;虚拟机id:5000&quot;</span>]</span><br></pre></td></tr></table></figure>

<h4 id="重启Docker"><a href="#重启Docker" class="headerlink" title="重启Docker"></a>重启Docker</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure>

<h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><h4 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h4><p>标记要上传到私有仓库的镜像为私有仓库的镜像（标记只是引用，镜像id还是被标记的镜像的id）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker tag 镜像id 虚拟机id:5000/自定义名称</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-23%20033246.png"></p>
<p>推送镜像到私有仓库，推送前先启动私有仓库的容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker push 上图划红线的镜像名称</span><br></pre></td></tr></table></figure>

<p>查看结果</p>
<p>浏览器地址栏输入：<font color="#dd0000">http://虚拟机id:5000/v2/_catalog</font>，从下图可以看到镜像上传成功</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-23%20033447.jpg"></p>
<h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><p>先删除刚刚上传的本地镜像，然后再从私有仓库拉取镜像</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull 虚拟机id:5000/上图的镜像名称</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker私有仓库删除镜像</title>
    <url>/312.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>对于私有仓库的镜像，Docker是没有命令对其进行删除的</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>进入私有仓库的容器内，找到镜像文件，然后手动删除即可</p>
<h3 id="删除过程"><a href="#删除过程" class="headerlink" title="删除过程"></a>删除过程</h3><h4 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h4><p>先运行对应私有仓库的容器，然后进入容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it 私有仓库容器id sh</span><br></pre></td></tr></table></figure>

<h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>该配置文件在 /etc/docker/registry 目录下，名称为：config.yml ，在storage节点添加以下代码：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">delete:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>完整config.yml代码如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="number">0.1</span></span><br><span class="line"><span class="attr">log:</span></span><br><span class="line">  <span class="attr">fields:</span></span><br><span class="line">    <span class="attr">service:</span> <span class="string">registry</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">cache:</span></span><br><span class="line">    <span class="attr">blobdescriptor:</span> <span class="string">inmemory</span></span><br><span class="line">  <span class="attr">filesystem:</span></span><br><span class="line">    <span class="attr">rootdirectory:</span> <span class="string">/var/lib/registry</span></span><br><span class="line">  <span class="attr">delete:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http:</span></span><br><span class="line">  <span class="attr">addr:</span> <span class="string">:5000</span></span><br><span class="line">  <span class="attr">headers:</span></span><br><span class="line">    <span class="attr">X-Content-Type-Options:</span> [<span class="string">nosniff</span>]</span><br><span class="line"><span class="attr">health:</span></span><br><span class="line">  <span class="attr">storagedriver:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">interval:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>

<h4 id="找到镜像文件"><a href="#找到镜像文件" class="headerlink" title="找到镜像文件"></a>找到镜像文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">find / -name <span class="string">&quot;*要删除镜像名称*&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><p>进入上一步找到的镜像文件的路径，然后开始删除，该镜像文件是文件夹所以删除时追加参数-r</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rm -r 镜像名称</span><br></pre></td></tr></table></figure>

<h4 id="同步配置文件"><a href="#同步配置文件" class="headerlink" title="同步配置文件"></a>同步配置文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">registry garbage-collect /etc/docker/registry/config.yml</span><br></pre></td></tr></table></figure>

<h4 id="查看结果"><a href="#查看结果" class="headerlink" title="查看结果"></a>查看结果</h4><p>浏览器地址栏输入：<font color="#dd0000">http://虚拟机id:5000/v2/_catalog</font>，可以看到对应的镜像已经没了</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>EasyUI标签页右键单击事件添加</title>
    <url>/32.html</url>
    <content><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码:"></a>代码:</h3><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码:"></a>HTML代码:</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;menu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;easyui-menu&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mm-tabrefresh&quot;</span> <span class="attr">data-options</span>=<span class="string">&quot;name:&#x27;1&#x27;,iconCls:&#x27;icon-refresh&#x27;&quot;</span>&gt;</span> 刷新当前标签页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;menu-sep&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mm-tabclose&quot;</span> <span class="attr">data-options</span>=<span class="string">&quot;name:&#x27;2&#x27;,iconCls:&#x27;icon-closetab&#x27;&quot;</span>&gt;</span>关闭当前标签页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mm-tabcloseall&quot;</span> <span class="attr">data-options</span>=<span class="string">&quot;name:&#x27;3&#x27;,iconCls:&#x27;icon-closealltab&#x27;&quot;</span>&gt;</span>关闭全部标签页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mm-tabcloseother&quot;</span> <span class="attr">data-options</span>=<span class="string">&quot;name:&#x27;4&#x27;,iconCls:&#x27;icon-closeothertab&#x27;&quot;</span>&gt;</span>关闭其他标签页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mm-tabcloseright&quot;</span> <span class="attr">data-options</span>=<span class="string">&quot;name:&#x27;5&#x27;,iconCls:&#x27;icon-closerighttab&#x27;&quot;</span>&gt;</span>关闭右侧标签页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mm-tabcloseleft&quot;</span> <span class="attr">data-options</span>=<span class="string">&quot;name:&#x27;6&#x27;,iconCls:&#x27;icon-closelefttab&#x27;&quot;</span>&gt;</span>关闭左侧标签页<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码:"></a>JavaScript代码:</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 监听右键事件，创建右键菜单</span></span><br><span class="line">    $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(&#123;</span><br><span class="line">        <span class="attr">onContextMenu</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e, title, index</span>) </span>&#123;</span><br><span class="line">            e.preventDefault();</span><br><span class="line">            <span class="keyword">if</span> (index &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                $(<span class="string">&#x27;#menu&#x27;</span>).menu(<span class="string">&#x27;show&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">left</span>: e.pageX,</span><br><span class="line">                    <span class="attr">top</span>: e.pageY</span><br><span class="line">                &#125;).data(<span class="string">&quot;tabTitle&quot;</span>, title);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 右键菜单click</span></span><br><span class="line">    $(<span class="string">&quot;#menu&quot;</span>).menu(&#123;</span><br><span class="line">        <span class="attr">onClick</span>: <span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">            closeTab(<span class="built_in">this</span>, item.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">closeTab</span>(<span class="params">menu, type</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> allTabs = $(<span class="string">&quot;#tabs&quot;</span>).tabs(<span class="string">&#x27;tabs&#x27;</span>);</span><br><span class="line">        <span class="keyword">var</span> allTabtitle = [];</span><br><span class="line">        $.each(allTabs, <span class="function"><span class="keyword">function</span> (<span class="params">i, n</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> opt = $(n).panel(<span class="string">&#x27;options&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (opt.closable)</span><br><span class="line">                allTabtitle.push(opt.title);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> curTabTitle = $(menu).data(<span class="string">&quot;tabTitle&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> curTabIndex = $(<span class="string">&quot;#tabs&quot;</span>).tabs(<span class="string">&quot;getTabIndex&quot;</span>, $(<span class="string">&quot;#tabs&quot;</span>).tabs(<span class="string">&quot;getTab&quot;</span>, curTabTitle));</span><br><span class="line">        <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;1&quot;</span>: <span class="comment">// 刷新当前标签页</span></span><br><span class="line">                <span class="keyword">var</span> currentTab = $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;getSelected&#x27;</span>);</span><br><span class="line">                <span class="keyword">var</span> url = $(currentTab.panel(<span class="string">&#x27;options&#x27;</span>)).attr(<span class="string">&#x27;href&#x27;</span>);</span><br><span class="line">                $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;update&#x27;</span>, &#123;</span><br><span class="line">                    <span class="attr">tab</span>: currentTab,</span><br><span class="line">                    <span class="attr">options</span>: &#123;</span><br><span class="line">                        <span class="attr">href</span>: url</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                currentTab.panel(<span class="string">&#x27;refresh&#x27;</span>);</span><br><span class="line">                <span class="comment">// var panel = $(&quot;#tabs&quot;).tabs(&quot;getTab&quot;, curTabTitle).panel(&quot;refresh&quot;);</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;2&quot;</span>: <span class="comment">// 关闭当前标签页</span></span><br><span class="line">                $(<span class="string">&quot;#tabs&quot;</span>).tabs(<span class="string">&quot;close&quot;</span>, curTabIndex);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;3&quot;</span>: <span class="comment">// 关闭全部标签页</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allTabtitle.length; i++) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;close&#x27;</span>, allTabtitle[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;4&quot;</span>: <span class="comment">// 关闭其他标签页</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; allTabtitle.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (curTabTitle != allTabtitle[i])</span><br><span class="line">                        $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;close&#x27;</span>, allTabtitle[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;select&#x27;</span>, curTabTitle);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;5&quot;</span>: <span class="comment">// 关闭右侧标签页</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = curTabIndex; i &lt; allTabtitle.length; i++) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;close&#x27;</span>, allTabtitle[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;select&#x27;</span>, curTabTitle);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;6&quot;</span>: <span class="comment">// 关闭左侧标签页</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; curTabIndex - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                    $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;close&#x27;</span>, allTabtitle[i]);</span><br><span class="line">                &#125;</span><br><span class="line">                $(<span class="string">&#x27;#tabs&#x27;</span>).tabs(<span class="string">&#x27;select&#x27;</span>, curTabTitle);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="结果截图"><a href="#结果截图" class="headerlink" title="结果截图"></a><strong>结果截图</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201019131852.jpg" alt="img"></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>EasyUI</tag>
      </tags>
  </entry>
  <entry>
    <title>基本数据类型</title>
    <url>/33.html</url>
    <content><![CDATA[<p>在Java中一共有八种基本数据类型，他们分别是 byte、short、int、long、float、double、char、boolean</p>
<h3 id="整型"><a href="#整型" class="headerlink" title="整型"></a><strong>整型</strong></h3><p>其中byte、short、int、long都是表示整数的，只不过他们的取值范围不一样</p>
<p>byte的取值范围为-128~127，占用1个字节（-2的7次方到2的7次方-1）</p>
<p>short的取值范围为-32768~32767，占用2个字节（-2的15次方到2的15次方-1）</p>
<p>int的取值范围为（-2147483648~2147483647），占用4个字节（-2的31次方到2的31次方-1）</p>
<p>long的取值范围为（-9223372036854774808~9223372036854774807），占用8个字节（-2的63次方到2的63次方-1）</p>
<h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a><strong>浮点型</strong></h3><p>float和double是表示浮点型的数据类型，他们之间的区别在于他们的精确度不同</p>
<p>float 3.402823e+38 ~ 1.401298e-45（e+38表示是乘以10的38次方，同样，e-45表示乘以10的负45次方）占用4个字节</p>
<p>double 1.797693e+308~ 4.9000000e-324 占用8个字节</p>
<p>double型比float型存储范围更大，精度更高，所以通常的浮点型的数据在不声明的情况下都是double型的，如果要表示一个数据是float型的，可以在数据后面加上“F”。</p>
<p>浮点型的数据是不能完全精确的，所以有的时候在计算的时候可能会在小数点最后几位出现浮动，这是正常的。</p>
<h3 id="boolean型（布尔型）"><a href="#boolean型（布尔型）" class="headerlink" title="boolean型（布尔型）"></a><strong>boolean型（布尔型）</strong></h3><p>这个类型只有两个值，true和false（真和非真）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">boolean</span> t = <span class="keyword">true</span>；</span><br><span class="line"><span class="keyword">boolean</span> f = <span class="keyword">false</span>；</span><br></pre></td></tr></table></figure>

<h3 id="char型（文本型）"><a href="#char型（文本型）" class="headerlink" title="char型（文本型）"></a><strong>char型（文本型）</strong></h3><p>用于存放字符的数据类型，占用2个字节，采用unicode编码，它的前128字节编码与ASCII兼容</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201020142626.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>基本数据类型之间的转换（显式转换和隐式转换）</title>
    <url>/34.html</url>
    <content><![CDATA[<h3 id="隐式转换"><a href="#隐式转换" class="headerlink" title="隐式转换"></a><strong>隐式转换</strong></h3><p>从表示范围小的类型转换为表示范围大的类型，可以直接转换，称为隐式转换。隐式类型转换又可以称为自动类型转换，就是由系统自动完成的类型转换。</p>
<p>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//数据类型转换之隐式转换（小的赋值给大的）</span></span><br><span class="line">        <span class="comment">//4个字节，占4个8位，int类型转换成byte时，去掉前3个8位（3个字节）</span></span><br><span class="line">        <span class="keyword">int</span> x=<span class="number">3</span>;</span><br><span class="line">        <span class="comment">//1个字节，占1个8位，byte类型转换成int时，在前面添加3个8位（3个字节）</span></span><br><span class="line">        <span class="keyword">byte</span> b=<span class="number">4</span>;</span><br><span class="line">        <span class="comment">/*小的数据类型和大的数据类型转换时，会将小的数据类型转换成大的数据类型，</span></span><br><span class="line"><span class="comment">        然后再进行运算，本程序中将byte类型转换成int类型,最终结果是int类型*/</span></span><br><span class="line">        x=x+b;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//控制台输出7</span></span><br><span class="line">        System.out.println(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="显式转换"><a href="#显式转换" class="headerlink" title="显式转换"></a><strong>显式转换</strong></h3><p>从表示范围大的类型转换为表示范围小的类型，需要强制转换，称为显式转换。强制类型转换的语法格式就是加一个括号，然后给出想要转换的目标类型。</p>
<p>例如：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//int类型300转换成2进制为00000000 00000000 00000001 00101100</span></span><br><span class="line">        <span class="comment">//转换成byte去掉前3个8位：00101100</span></span><br><span class="line">        <span class="comment">//32+8+4=44</span></span><br><span class="line">        <span class="keyword">byte</span> b1=(<span class="keyword">byte</span>)<span class="number">300</span>;</span><br><span class="line">        <span class="comment">//控制台输出44</span></span><br><span class="line">        System.out.println(b1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>自动类型转换规则：<a href="http://www.zoutl.cn/blog/106">二元运算符连接两个值</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>短路与&amp;&amp;和逻辑与&amp;、短路或||和逻辑或|的区别</title>
    <url>/35.html</url>
    <content><![CDATA[<h3 id="短路-amp-amp-和逻辑-amp"><a href="#短路-amp-amp-和逻辑-amp" class="headerlink" title="短路&amp;&amp;和逻辑&amp;"></a><strong>短路&amp;&amp;和逻辑&amp;</strong></h3><p>相同点：</p>
<p>有假则为假，全真则为真（有假必假，全真为真）</p>
<p>区别：</p>
<p>逻辑与&amp;的判断方式是：从左到右依次判断，直到结尾（逻辑全程运算）</p>
<p>短路与&amp;&amp;的判断方式是：从左到右依次判断，直到出现false为止将不再判断，直接得到结果为false（短路遇false就停）</p>
<p>示例：</p>
<p>逻辑与&amp;</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201020162940.jpg" alt="img"></p>
<p>短路与&amp;&amp;</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201020163050.jpg" alt="img"></p>
<h3 id="短路-和逻辑"><a href="#短路-和逻辑" class="headerlink" title="短路||和逻辑|"></a><strong>短路||和逻辑|</strong></h3><p>共同点：</p>
<p>有真则为真，全假则为假（有真必真，全假为假）</p>
<p>区别：</p>
<p>逻辑或|的判断方式是：从左到右依次判断，直到结尾</p>
<p>短路或||的判断方式是：从左到右依次判断，直到出现true为止将不再判断，直接得到结果为true（短路遇true就停止）</p>
<p>示例：</p>
<p>逻辑或|</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201020165415.jpg" alt="img"></p>
<p>短路或||</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201020165551.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>开发的时候用短路与&amp;&amp;和短路或||，可以减少程序运行时间</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法</title>
    <url>/36.html</url>
    <content><![CDATA[<h3 id="算法分类"><a href="#算法分类" class="headerlink" title="算法分类"></a><strong>算法分类</strong></h3><p>十种常见排序算法可以分为两大类：</p>
<p>比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此也称为非线性时间比较类排序。</p>
<p>非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此也称为线性时间非比较类排序。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022022724.jpg" alt="img"></p>
<h3 id="算法复杂度"><a href="#算法复杂度" class="headerlink" title="算法复杂度"></a><strong>算法复杂度</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022022943.jpg" alt="img"></p>
<h3 id="相关概念"><a href="#相关概念" class="headerlink" title="相关概念"></a><strong>相关概念</strong></h3><p>稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。</p>
<p>不稳定：如果a原本在b的前面，而a=b，排序之后 a 可能会出现在 b 的后面。</p>
<p>时间复杂度：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。</p>
<p>空间复杂度：是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。 </p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>博客搬运地址：<a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之冒泡排序</title>
    <url>/37.html</url>
    <content><![CDATA[<p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 </p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>*比较相邻的元素。如果第一个比第二个大，就交换它们两个；</p>
<p>*对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</p>
<p>*针对所有的元素重复以上的步骤，除了最后一个；</p>
<p>*重复步骤1~3，直到排序完成。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022115015.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 冒泡排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">11</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line">        BubbleSort(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//临时变量,用于交换两个数</span></span><br><span class="line">        <span class="keyword">int</span> temp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022120719.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之选择排序</title>
    <url>/38.html</url>
    <content><![CDATA[<p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小(大)元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小(大)元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。 </p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>n个记录的直接选择排序可经过n-1趟直接选择排序得到有序结果。具体算法描述如下：</p>
<p>*初始状态：无序区为R[1..n]，有序区为空；</p>
<p>*第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R(i..n）。该趟排序从当前无序区中选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1..i]和R[i+1..n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；</p>
<p>*n-1趟结束，数组有序化了。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022124602.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 选择排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;交换之前：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : arr) &#123;</span><br><span class="line">            System.out.print(num + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 做第i趟排序</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> k = i;</span><br><span class="line">            <span class="comment">// 选最小的记录</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = k + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &lt; arr[k]) &#123;</span><br><span class="line">                    <span class="comment">//记下目前找到的最小值所在的位置</span></span><br><span class="line">                    k = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//在内层循环结束，也就是找到本轮循环的最小的数以后，再进行交换</span></span><br><span class="line">            <span class="comment">//交换a[i]和a[k]</span></span><br><span class="line">            <span class="keyword">if</span> (i != k) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                arr[i] = arr[k];</span><br><span class="line">                arr[k] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;交换后：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : arr) &#123;</span><br><span class="line">            System.out.print(num + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022125440.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>表现最稳定的排序算法之一，因为无论什么数据进去都是O(n2)的时间复杂度，所以用到它的时候，数据规模越小越好。唯一的好处可能就是不占用额外的内存空间了吧。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之插入排序</title>
    <url>/39.html</url>
    <content><![CDATA[<p>插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>一般来说，插入排序都采用in-place在数组上实现。具体算法描述如下：</p>
<p>*从第一个元素开始，该元素可以认为已经被排序；</p>
<p>*取出下一个元素，在已经排序的元素序列中从后向前扫描；</p>
<p>*如果该元素（已排序）大于新元素，将该元素移到下一位置；</p>
<p>*重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；</p>
<p>*将新元素插入到该位置后；</p>
<p>*重复步骤2~5。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022132343.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] number = &#123;<span class="number">11</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line">    System.out.println(<span class="string">&quot;排序前：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : number) &#123;</span><br><span class="line">        System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> temp, j;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; number.length; i++) &#123;</span><br><span class="line">        temp = number[i];</span><br><span class="line">        <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; number[j] &gt; temp; j--) &#123;</span><br><span class="line">            number[j + <span class="number">1</span>] = number[j];</span><br><span class="line">        &#125;</span><br><span class="line">        number[j + <span class="number">1</span>] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;\n排序后：&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i : number) &#123;</span><br><span class="line">        System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022132757.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>插入排序在实现上，通常采用in-place排序（即只需用到O(1)的额外空间的排序），因而在从后向前扫描过程中，需要反复把已排序元素逐步向后挪位，为最新元素提供插入空间。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>常用cron表达式</title>
    <url>/4.html</url>
    <content><![CDATA[<p>（1）<strong>0 0 2 1 * ? *</strong>  表示在每月的1日的凌晨2点调整任务</p>
<p>（2）<strong>0 15 10 ? * MON-FRI</strong>  表示周一到周五每天上午10:15执行作业</p>
<p>（3）<strong>0 15 10 ? 6L 2002-2006</strong>  表示2002-2006年的每个月的最后一个星期五上午10:15执行作</p>
<p>（4）<strong>0 0 10,14,16 * * ?</strong>  每天上午10点，下午2点，4点 </p>
<p>（5）<strong>0 0/30 9-17 * * ?</strong>  朝九晚五工作时间内每半小时 </p>
<p>（6）<strong>0 0 12 ? * WED</strong>   表示每个星期三中午12点 </p>
<span id="more"></span>

<p>（7）<strong>0 0 12 * * ?</strong>  每天中午12点触发 </p>
<p>（8）<strong>0 15 10 ? * *</strong>   每天上午10:15触发 </p>
<p>（9）<strong>0 15 10 * * ?</strong>   每天上午10:15触发 </p>
<p>（10）<strong>0 15 10 * * ? *</strong>   每天上午10:15触发 </p>
<p>（11）<strong>0 15 10 * * ? 2005</strong>   2005年的每天上午10:15触发 </p>
<p>（12）<strong>0 * 14 * * ?</strong>   在每天下午2点到下午2:59期间的每1分钟触发 </p>
<p>（13）<strong>0 0/5 14 * * ?</strong>   在每天下午2点到下午2:55期间的每5分钟触发 </p>
<p>（14）<strong>0 0/5 14,18 * * ?</strong>   在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 </p>
<p>（15）<strong>0 0-5 14 * * ?</strong>   在每天下午2点到下午2:05期间的每1分钟触发 </p>
<p>（16）<strong>0 10,44 14 ? 3 WED</strong>   每年三月的星期三的下午2:10和2:44触发 </p>
<p>（17）<strong>0 15 10 ? * MON-FRI</strong>   周一至周五的上午10:15触发 </p>
<p>（18）<strong>0 15 10 15 * ?</strong>   每月15日上午10:15触发 </p>
<p>（19）<strong>0 15 10 L * ?</strong>   每月最后一日的上午10:15触发 </p>
<p>（20）<strong>0 15 10 ? * 6L</strong>   每月的最后一个星期五上午10:15触发 </p>
<p>（21）<strong>0 15 10 ? * 6L 2002-2005</strong>  2002年至2005年的每月的最后一个星期五上午10:15触发 </p>
<p>（22）<strong>0 15 10 ? * 6#3</strong>  每月的第三个星期五上午10:15触发</p>
<p>（23）***/5 * * * * ?** 每5秒触发</p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>cron</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之希尔排序</title>
    <url>/40.html</url>
    <content><![CDATA[<p>1959年Shell发明，第一个突破O(n2)的排序算法，是简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫缩小增量排序。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：</p>
<p>*选择一个增量序列t1，t2，…，tk，其中ti&gt;tj，tk=1；</p>
<p>*按增量序列个数k，对序列进行k 趟排序；</p>
<p>*每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022204438.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 希尔排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">11</span>, <span class="number">3</span>, <span class="number">45</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">7</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;排序前:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        shellSort(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> step = arr.length / <span class="number">2</span>; step &gt; <span class="number">0</span>; step /= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = step; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[j];</span><br><span class="line">                <span class="keyword">while</span> (j - step &gt;= <span class="number">0</span> &amp;&amp; arr[j - step] &gt; temp) &#123;</span><br><span class="line">                    arr[j] = arr[j - step];</span><br><span class="line">                    j = j - step;</span><br><span class="line">                &#125;</span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022205809.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>希尔排序的核心在于间隔序列的设定。既可以提前设定好间隔序列，也可以动态的定义间隔序列。动态定义间隔序列的算法是《算法（第4版）》的合著者Robert Sedgewick提出的。　</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之归并排序</title>
    <url>/41.html</url>
    <content><![CDATA[<p>归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。 </p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>*把长度为n的输入序列分成两个长度为n/2的子序列；</p>
<p>*对这两个子序列分别采用归并排序；</p>
<p>*将两个排序好的子序列合并成一个最终的排序序列。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022214845.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 归并排序</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">11</span>,<span class="number">44</span>,<span class="number">23</span>,<span class="number">67</span>,<span class="number">88</span>,<span class="number">65</span>,<span class="number">34</span>,<span class="number">48</span>,<span class="number">9</span>,<span class="number">12</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;排序前:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        <span class="comment">//新建一个临时数组存放</span></span><br><span class="line">        <span class="keyword">int</span>[] tmp = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        mergeSort(arr,<span class="number">0</span>,arr.length-<span class="number">1</span>,tmp);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> low,<span class="keyword">int</span> mid,<span class="keyword">int</span> high,<span class="keyword">int</span>[] tmp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//左边序列和右边序列起始索引</span></span><br><span class="line">        <span class="keyword">int</span> j = low,k = mid+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(j &lt;= mid &amp;&amp; k &lt;= high)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[j] &lt; arr[k])&#123;</span><br><span class="line">                tmp[i++] = arr[j++];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                tmp[i++] = arr[k++];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若左边序列还有剩余，则将其全部拷贝进tmp[]中</span></span><br><span class="line">        <span class="keyword">while</span>(j &lt;= mid)&#123;</span><br><span class="line">            tmp[i++] = arr[j++];</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">while</span>(k &lt;= high)&#123;</span><br><span class="line">            tmp[i++] = arr[k++];</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;i;t++)&#123;</span><br><span class="line">            arr[low+t] = tmp[t];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> low,<span class="keyword">int</span> high,<span class="keyword">int</span>[] tmp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(low&lt;high)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (low+high)/<span class="number">2</span>;</span><br><span class="line">            <span class="comment">//对左边序列进行归并排序</span></span><br><span class="line">            mergeSort(arr,low,mid,tmp);</span><br><span class="line">            <span class="comment">//对右边序列进行归并排序</span></span><br><span class="line">            mergeSort(arr,mid+<span class="number">1</span>,high,tmp);</span><br><span class="line">            <span class="comment">//合并两个有序序列</span></span><br><span class="line">            merge(arr,low,mid,high,tmp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022215330.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>归并排序是一种稳定的排序方法。和选择排序一样，归并排序的性能不受输入数据的影响，但表现比选择排序好的多，因为始终都是O(nlogn）的时间复杂度。代价是需要额外的内存空间。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之快速排序</title>
    <url>/42.html</url>
    <content><![CDATA[<p>快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：</p>
<p>*从数列中挑出一个元素，称为 “基准”（pivot）；</p>
<p>*重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</p>
<p>*递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022220112.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 快速排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">10</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">7</span>,<span class="number">62</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">19</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;排序前:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        quickSort(arr, <span class="number">0</span>, arr.length-<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> low,<span class="keyword">int</span> high)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i,j,temp,t;</span><br><span class="line">        <span class="keyword">if</span>(low&gt;high)&#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i=low;</span><br><span class="line">        j=high;</span><br><span class="line">        <span class="comment">//temp就是基准位</span></span><br><span class="line">        temp = arr[low];</span><br><span class="line">        <span class="keyword">while</span> (i&lt;j) &#123;</span><br><span class="line">            <span class="comment">//先看右边，依次往左递减</span></span><br><span class="line">            <span class="keyword">while</span> (temp&lt;=arr[j]&amp;&amp;i&lt;j) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//再看左边，依次往右递增</span></span><br><span class="line">            <span class="keyword">while</span> (temp&gt;=arr[i]&amp;&amp;i&lt;j) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//如果满足条件则交换</span></span><br><span class="line">            <span class="keyword">if</span> (i&lt;j) &#123;</span><br><span class="line">                t = arr[j];</span><br><span class="line">                arr[j] = arr[i];</span><br><span class="line">                arr[i] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//最后将基准为与i和j相等位置的数字交换</span></span><br><span class="line">        arr[low] = arr[i];</span><br><span class="line">        arr[i] = temp;</span><br><span class="line">        <span class="comment">//递归调用左半数组</span></span><br><span class="line">        quickSort(arr, low, j-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//递归调用右半数组</span></span><br><span class="line">        quickSort(arr, j+<span class="number">1</span>, high);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022220552.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之堆排序</title>
    <url>/43.html</url>
    <content><![CDATA[<p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>*将初始待排序关键字序列(R1,R2….Rn)构建成大顶堆，此堆为初始的无序区；</p>
<p>*将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,……Rn-1)和新的有序区(Rn),且满足R[1,2…n-1]&lt;=R[n]；</p>
<p>*由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,……Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2….Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022222434.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 堆排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">16</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">20</span>, <span class="number">17</span>, <span class="number">8</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;排序前:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        heapSort(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建堆</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr 待排序列</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">heapSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建堆</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = (arr.length - <span class="number">1</span>) / <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="comment">//从第一个非叶子结点从下至上，从右至左调整结构</span></span><br><span class="line">            adjustHeap(arr, i, arr.length);</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//调整堆结构+交换堆顶元素与末尾元素</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="comment">//将堆顶元素与末尾元素进行交换</span></span><br><span class="line">            <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">            arr[i] = arr[<span class="number">0</span>];</span><br><span class="line">            arr[<span class="number">0</span>] = temp;</span><br><span class="line">            <span class="comment">//重新对堆进行调整</span></span><br><span class="line">            adjustHeap(arr, <span class="number">0</span>, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 调整堆</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr    待排序列</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parent 父节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> length 待排序列尾元素索引</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">adjustHeap</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> parent, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//将temp作为父节点</span></span><br><span class="line">        <span class="keyword">int</span> temp = arr[parent];</span><br><span class="line">        <span class="comment">//左孩子</span></span><br><span class="line">        <span class="keyword">int</span> lChild = <span class="number">2</span> * parent + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (lChild &lt; length) &#123;</span><br><span class="line">            <span class="comment">//右孩子</span></span><br><span class="line">            <span class="keyword">int</span> rChild = lChild + <span class="number">1</span>;</span><br><span class="line">            <span class="comment">// 如果有右孩子结点，并且右孩子结点的值大于左孩子结点，则选取右孩子结点</span></span><br><span class="line">            <span class="keyword">if</span> (rChild &lt; length &amp;&amp; arr[lChild] &lt; arr[rChild]) &#123;</span><br><span class="line">                lChild++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 如果父结点的值已经大于孩子结点的值，则直接结束</span></span><br><span class="line">            <span class="keyword">if</span> (temp &gt;= arr[lChild]) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 把孩子结点的值赋给父结点</span></span><br><span class="line">            arr[parent] = arr[lChild];</span><br><span class="line">            <span class="comment">//选取孩子结点的左孩子结点,继续向下筛选</span></span><br><span class="line">            parent = lChild;</span><br><span class="line">            lChild = <span class="number">2</span> * lChild + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[parent] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022222839.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之计数排序</title>
    <url>/44.html</url>
    <content><![CDATA[<p>计数排序不是基于比较的排序算法，其核心在于将输入的数据值转化为键存储在额外开辟的数组空间中。 作为一种线性时间复杂度的排序，计数排序要求输入的数据必须是有确定范围的整数。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>*找出待排序的数组中最大和最小的元素；</p>
<p>*统计数组中每个值为i的元素出现的次数，存入数组C的第i项；</p>
<p>*对所有的计数累加（从C中的第一个元素开始，每一项和前一项相加）；</p>
<p>*反向填充目标数组：将每个元素i放在新数组的第C(i)项，每放一个元素就将C(i)减去1。</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022223525.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计数排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] A=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">2</span>,<span class="number">5</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">3</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span>[] B=countSort(A, <span class="number">5</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序前:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : A) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : B) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] countSort(<span class="keyword">int</span>[] array,<span class="keyword">int</span> k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//构造C数组</span></span><br><span class="line">        <span class="keyword">int</span>[] C=<span class="keyword">new</span> <span class="keyword">int</span>[k+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">//获取A数组大小用于构造B数组</span></span><br><span class="line">        <span class="keyword">int</span> length=array.length,sum=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//构造B数组</span></span><br><span class="line">        <span class="keyword">int</span>[] B=<span class="keyword">new</span> <span class="keyword">int</span>[length];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i=<span class="number">0</span>;i--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//将A中该元素放到排序后数组B中指定的位置</span></span><br><span class="line">            B[C[array[i]]-<span class="number">1</span>]=array[i];</span><br><span class="line">            <span class="comment">//将C中该元素-1，方便存放下一个同样大小的元素</span></span><br><span class="line">            C[array[i]]--;</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将排序好的数组返回，完成排序</span></span><br><span class="line">        <span class="keyword">return</span> B;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022224055.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>计数排序是一个稳定的排序算法。当输入的元素是 n 个 0到 k 之间的整数时，时间复杂度是O(n+k)，空间复杂度也是O(n+k)，其排序速度快于任何比较排序算法。当k不是很大并且序列比较集中时，计数排序是一个很有效的排序算法。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之桶排序</title>
    <url>/45.html</url>
    <content><![CDATA[<p>桶排序是计数排序的升级版。它利用了函数的映射关系，高效与否的关键就在于这个映射函数的确定。桶排序 (Bucket sort)的工作的原理：假设输入数据服从均匀分布，将数据分到有限数量的桶里，每个桶再分别排序（有可能再使用别的排序算法或是以递归方式继续使用桶排序进行排）。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>*设置一个定量的数组当作空桶；</p>
<p>*遍历输入数据，并且把数据一个一个放到对应的桶里去；</p>
<p>*对每个不是空的桶进行排序；</p>
<p>*从不是空的桶里把排好序的数据拼接起来。 </p>
<h3 id="图片演示"><a href="#图片演示" class="headerlink" title="图片演示"></a><strong>图片演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022225009.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 桶排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 输入元素均在 [0, 10) 这个区间内</span></span><br><span class="line">        <span class="keyword">float</span>[] arr = <span class="keyword">new</span> <span class="keyword">float</span>[]&#123;<span class="number">0.12f</span>, <span class="number">2.2f</span>, <span class="number">8.8f</span>, <span class="number">7.6f</span>, <span class="number">7.2f</span>, <span class="number">6.3f</span>, <span class="number">9.0f</span>, <span class="number">1.6f</span>, <span class="number">5.6f</span>, <span class="number">2.4f</span>&#125;;</span><br><span class="line">        bucketSort(arr);</span><br><span class="line">        printArray(arr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bucketSort</span><span class="params">(<span class="keyword">float</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 新建一个桶的集合</span></span><br><span class="line">        ArrayList&lt;LinkedList&lt;Float&gt;&gt; buckets = <span class="keyword">new</span> ArrayList&lt;LinkedList&lt;Float&gt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="comment">// 新建一个桶，并将其添加到桶的集合中去。</span></span><br><span class="line">            <span class="comment">// 由于桶内元素会频繁的插入，所以选择 LinkedList 作为桶的数据结构</span></span><br><span class="line">            buckets.add(<span class="keyword">new</span> LinkedList&lt;Float&gt;());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将输入数据全部放入桶中并完成排序</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">float</span> data : arr) &#123;</span><br><span class="line">            <span class="keyword">int</span> index = getBucketIndex(data);</span><br><span class="line">            insertSort(buckets.get(index), data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 将桶中元素全部取出来并放入 arr 中输出</span></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (LinkedList&lt;Float&gt; bucket : buckets) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Float data : bucket) &#123;</span><br><span class="line">                arr[index++] = data;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 计算得到输入元素应该放到哪个桶内</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getBucketIndex</span><span class="params">(<span class="keyword">float</span> data)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 这里例子写的比较简单，仅使用浮点数的整数部分作为其桶的索引值</span></span><br><span class="line">        <span class="comment">// 实际开发中需要根据场景具体设计</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 我们选择插入排序作为桶内元素排序的方法 每当有一个新元素到来时，我们都调用该方法将其插入到恰当的位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(List&lt;Float&gt; bucket, <span class="keyword">float</span> data)</span> </span>&#123;</span><br><span class="line">        ListIterator&lt;Float&gt; it = bucket.listIterator();</span><br><span class="line">        <span class="keyword">boolean</span> insertFlag = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (data &lt;= it.next()) &#123;</span><br><span class="line">                it.previous(); <span class="comment">// 把迭代器的位置偏移回上一个位置</span></span><br><span class="line">                it.add(data); <span class="comment">// 把数据插入到迭代器的当前位置</span></span><br><span class="line">                insertFlag = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (insertFlag) &#123;</span><br><span class="line">            bucket.add(data); <span class="comment">// 否则把数据插入到链表末端</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printArray</span><span class="params">(<span class="keyword">float</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            System.out.print(arr[i] + <span class="string">&quot;, &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022225259.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>桶排序最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决与对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。 </p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>十大经典排序算法之基数排序</title>
    <url>/46.html</url>
    <content><![CDATA[<p>基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。有时候有些属性是有优先级顺序的，先按低优先级排序，再按高优先级排序。最后的次序就是高优先级高的在前，高优先级相同的低优先级高的在前。</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a><strong>算法描述</strong></h3><p>*取得数组中的最大数，并取得位数；</p>
<p>*arr为原始数组，从最低位开始取每个位组成radix数组；</p>
<p>*对radix进行计数排序（利用计数排序适用于小范围数的特点）；</p>
<h3 id="动图演示"><a href="#动图演示" class="headerlink" title="动图演示"></a><strong>动图演示</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022233420.jpg" alt="img"></p>
<h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a><strong>算法实现</strong></h3><p>Java代码:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基数排序</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">63</span>, <span class="number">157</span>, <span class="number">189</span>, <span class="number">51</span>, <span class="number">101</span>, <span class="number">47</span>, <span class="number">141</span>, <span class="number">121</span>, <span class="number">157</span>, <span class="number">156</span>,<span class="number">194</span>, <span class="number">117</span>, <span class="number">98</span>, <span class="number">139</span>, <span class="number">67</span>, <span class="number">133</span>, <span class="number">181</span>, <span class="number">12</span>, <span class="number">28</span>, <span class="number">0</span>, <span class="number">109</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">&quot;排序前:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        radixSort(arr);</span><br><span class="line">        System.out.println(<span class="string">&quot;排序后:&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr) &#123;</span><br><span class="line">            System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 高位优先法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> arr 待排序列，必须为自然数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">radixSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//待排序列最大值</span></span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="comment">//指数</span></span><br><span class="line">        <span class="keyword">int</span> exp;</span><br><span class="line">        <span class="comment">//计算最大值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> anArr : arr) &#123;</span><br><span class="line">            <span class="keyword">if</span> (anArr &gt; max) &#123;</span><br><span class="line">                max = anArr;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//从个位开始，对数组进行排序</span></span><br><span class="line">        <span class="keyword">for</span> (exp = <span class="number">1</span>; max / exp &gt; <span class="number">0</span>; exp *= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="comment">//存储待排元素的临时数组</span></span><br><span class="line">            <span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">            <span class="comment">//分桶个数</span></span><br><span class="line">            <span class="keyword">int</span>[] buckets = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">            <span class="comment">//将数据出现的次数存储在buckets中</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> value : arr) &#123;</span><br><span class="line">                <span class="comment">//(value / exp) % 10 :value的最底位(个位)</span></span><br><span class="line">                buckets[(value / exp) % <span class="number">10</span>]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//更改buckets[i]</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                buckets[i] += buckets[i - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将数据存储到临时数组temp中</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">                temp[buckets[(arr[i] / exp) % <span class="number">10</span>] - <span class="number">1</span>] = arr[i];</span><br><span class="line">                buckets[(arr[i] / exp) % <span class="number">10</span>]--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//将有序元素temp赋给arr</span></span><br><span class="line">            System.arraycopy(temp, <span class="number">0</span>, arr, <span class="number">0</span>, arr.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>运行结果:</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201022233844.jpg" alt="img"></p>
<h3 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a><strong>算法分析</strong></h3><p>基数排序基于分别排序，分别收集，所以是稳定的。但基数排序的性能比桶排序要略差，每一次关键字的桶分配都需要O(n)的时间复杂度，而且分配之后得到新的关键字序列又需要O(n)的时间复杂度。假如待排数据可以分为d个关键字，则基数排序的时间复杂度将是O(d*2n) ，当然d要远远小于n，因此基本上还是线性级别的。基数排序的空间复杂度为O(n+k)，其中k为桶的数量。一般来说n&gt;&gt;k，因此额外空间需要大概n个左右。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址: <a href="https://www.cnblogs.com/onepixel/p/7674659.html">十大经典排序算法（动图演示） - 一像素 - 博客园 (cnblogs.com)</a></p>]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>==和equals的区别</title>
    <url>/47.html</url>
    <content><![CDATA[<h3 id=""><a href="#" class="headerlink" title="=="></a><strong>==</strong></h3><p>基本类型：比较的就是值是否相同</p>
<p>引用类型：比较的就是地址值是否相同</p>
<h3 id="equals"><a href="#equals" class="headerlink" title="equals"></a><strong>equals</strong></h3><p>引用类型：默认情况下，比较的是地址值，重写该方法后比较对象的成员变量值是否相同</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>基本类型：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201025174931.jpg" alt="img"></p>
<p>引用类型：</p>
<p>除掉这四类八种基本类型，其它的都是对象，也就是引用类型，包括数组。</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java跳转语句</title>
    <url>/48.html</url>
    <content><![CDATA[<p>Java语言中，有三种跳转语句：break、continue和return</p>
<h3 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a><strong>break语句</strong></h3><p>用于终止循环的操作，break语句在for、while、do…while循环语句中用于强制退出当前循环</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">4</span>)&#123;</span><br><span class="line">            <span class="comment">//直接结束，后面的不执行</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201103124742.jpg" alt="img"></p>
<h3 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a><strong>continue语句</strong></h3><p>continue也可以放在循环语句中，它与break语句具有相反的效果，它的作用是用于执行下依次循环（跳过满足条件的当次循环），而不是退出当前循环</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">4</span>)&#123;</span><br><span class="line">            <span class="comment">//跳出本次循环，后面的继续循环</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201103125230.jpg" alt="img"></p>
<h3 id="return语句"><a href="#return语句" class="headerlink" title="return语句"></a><strong>return语句</strong></h3><p>return语句可以从一个方法返回，并把控制权交给调用它的语句</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i==<span class="number">4</span>)&#123;</span><br><span class="line">            <span class="comment">//结束方法（main方法）</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(i+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//该语句不执行</span></span><br><span class="line">    System.out.println(<span class="string">&quot;111111111111&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201103125457.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>ASCII码</title>
    <url>/49.html</url>
    <content><![CDATA[<h3 id="ASCII码的组成"><a href="#ASCII码的组成" class="headerlink" title="ASCII码的组成"></a>ASCII码的组成</h3><p>第一部分是：ASCII非打印控制字符</p>
<p>第二部分是：ASCII打印字符</p>
<p>第三部分是：扩展ASCII打印字符</p>
<h3 id="各组成部分"><a href="#各组成部分" class="headerlink" title="各组成部分"></a>各组成部分</h3><h4 id="ASCII非打印控制字符"><a href="#ASCII非打印控制字符" class="headerlink" title="ASCII非打印控制字符"></a>ASCII非打印控制字符</h4><p>ASCII表上的数字0–31分配给了控制字符，用于控制像打印机等一些外围设备。例如，12代表换页/新页功能。此命令指示打印机跳到下一页的开头。（参详ASCII码表中0-31）</p>
<h4 id="ASCII打印字符"><a href="#ASCII打印字符" class="headerlink" title="ASCII打印字符"></a>ASCII打印字符</h4><table>
<thead>
<tr>
<th>Bin</th>
<th>Dec</th>
<th>缩写/字符</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>00000000</td>
<td>0</td>
<td>NUL(null)</td>
<td>空字符</td>
</tr>
<tr>
<td>00000001</td>
<td>1</td>
<td>SOH(start of headling)</td>
<td>标题开始</td>
</tr>
<tr>
<td>00000010</td>
<td>2</td>
<td>STX (start of text)</td>
<td>正文开始</td>
</tr>
<tr>
<td>00000011</td>
<td>3</td>
<td>ETX (end of text)</td>
<td>正文结束</td>
</tr>
<tr>
<td>00000100</td>
<td>4</td>
<td>EOT (end of transmission)</td>
<td>传输结束</td>
</tr>
<tr>
<td>00000101</td>
<td>5</td>
<td>ENQ (enquiry)</td>
<td>请求</td>
</tr>
<tr>
<td>00000110</td>
<td>6</td>
<td>ACK (acknowledge)</td>
<td>收到通知</td>
</tr>
<tr>
<td>00000111</td>
<td>7</td>
<td>BEL (bell)</td>
<td>响铃</td>
</tr>
<tr>
<td>00001000</td>
<td>8</td>
<td>BS (backspace)</td>
<td>退格</td>
</tr>
<tr>
<td>00001001</td>
<td>9</td>
<td>HT (horizontal tab)</td>
<td>水平制表符</td>
</tr>
<tr>
<td>00001010</td>
<td>10</td>
<td>LF (NL line feed, new line)</td>
<td>换行键</td>
</tr>
<tr>
<td>00001011</td>
<td>11</td>
<td>VT (vertical tab)</td>
<td>垂直制表符</td>
</tr>
<tr>
<td>00001100</td>
<td>12</td>
<td>FF (NP form feed, new page)</td>
<td>换页键</td>
</tr>
<tr>
<td>00001101</td>
<td>13</td>
<td>CR (carriage return)</td>
<td>回车键</td>
</tr>
<tr>
<td>00001110</td>
<td>14</td>
<td>SO (shift out)</td>
<td>不用切换</td>
</tr>
<tr>
<td>00001111</td>
<td>15</td>
<td>SI (shift in)</td>
<td>启用切换</td>
</tr>
<tr>
<td>00010000</td>
<td>16</td>
<td>DLE (data link escape)</td>
<td>数据链路转义</td>
</tr>
<tr>
<td>00010001</td>
<td>17</td>
<td>DC1 (device control 1)</td>
<td>设备控制1</td>
</tr>
<tr>
<td>00010010</td>
<td>18</td>
<td>DC2 (device control 2)</td>
<td>设备控制2</td>
</tr>
<tr>
<td>00010011</td>
<td>19</td>
<td>DC3 (device control 3)</td>
<td>设备控制3</td>
</tr>
<tr>
<td>00010100</td>
<td>20</td>
<td>DC4 (device control 4)</td>
<td>设备控制4</td>
</tr>
<tr>
<td>00010101</td>
<td>21</td>
<td>NAK (negative acknowledge)</td>
<td>拒绝接收</td>
</tr>
<tr>
<td>00010110</td>
<td>22</td>
<td>SYN (synchronous idle)</td>
<td>同步空闲</td>
</tr>
<tr>
<td>00010111</td>
<td>23</td>
<td>ETB (end of trans. block)</td>
<td>传输块结束</td>
</tr>
<tr>
<td>00011000</td>
<td>24</td>
<td>CAN (cancel)</td>
<td>取消</td>
</tr>
<tr>
<td>00011001</td>
<td>25</td>
<td>EM (end of medium)</td>
<td>介质中断</td>
</tr>
<tr>
<td>00011010</td>
<td>26</td>
<td>SUB (substitute)</td>
<td>替补</td>
</tr>
<tr>
<td>00011011</td>
<td>27</td>
<td>ESC (escape)</td>
<td>溢出</td>
</tr>
<tr>
<td>00011100</td>
<td>28</td>
<td>FS (file separator)</td>
<td>文件分割符</td>
</tr>
<tr>
<td>00011101</td>
<td>29</td>
<td>GS (group separator)</td>
<td>分组符</td>
</tr>
<tr>
<td>00011110</td>
<td>30</td>
<td>RS (record separator)</td>
<td>记录分离符</td>
</tr>
<tr>
<td>00011111</td>
<td>31</td>
<td>US (unit separator)</td>
<td>单元分隔符</td>
</tr>
<tr>
<td>00100000</td>
<td>32</td>
<td>(space)</td>
<td>空格</td>
</tr>
<tr>
<td>00100001</td>
<td>33</td>
<td>!</td>
<td></td>
</tr>
<tr>
<td>00100010</td>
<td>34</td>
<td>“</td>
<td></td>
</tr>
<tr>
<td>00100011</td>
<td>35</td>
<td>#</td>
<td></td>
</tr>
<tr>
<td>00100100</td>
<td>36</td>
<td>$</td>
<td></td>
</tr>
<tr>
<td>00100101</td>
<td>37</td>
<td>%</td>
<td></td>
</tr>
<tr>
<td>00100110</td>
<td>38</td>
<td>&amp;</td>
<td></td>
</tr>
<tr>
<td>00100111</td>
<td>39</td>
<td>‘</td>
<td></td>
</tr>
<tr>
<td>00101000</td>
<td>40</td>
<td>(</td>
<td></td>
</tr>
<tr>
<td>00101001</td>
<td>41</td>
<td>)</td>
<td></td>
</tr>
<tr>
<td>00101010</td>
<td>42</td>
<td>*</td>
<td></td>
</tr>
<tr>
<td>00101011</td>
<td>43</td>
<td>+</td>
<td></td>
</tr>
<tr>
<td>00101100</td>
<td>44</td>
<td>,</td>
<td></td>
</tr>
<tr>
<td>00101101</td>
<td>45</td>
<td>-</td>
<td></td>
</tr>
<tr>
<td>00101110</td>
<td>46</td>
<td>.</td>
<td></td>
</tr>
<tr>
<td>00101111</td>
<td>47</td>
<td>/</td>
<td></td>
</tr>
<tr>
<td>00110000</td>
<td>48</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>00110001</td>
<td>49</td>
<td>1</td>
<td></td>
</tr>
<tr>
<td>00110010</td>
<td>50</td>
<td>2</td>
<td></td>
</tr>
<tr>
<td>00110011</td>
<td>51</td>
<td>3</td>
<td></td>
</tr>
<tr>
<td>00110100</td>
<td>52</td>
<td>4</td>
<td></td>
</tr>
<tr>
<td>00110101</td>
<td>53</td>
<td>5</td>
<td></td>
</tr>
<tr>
<td>00110110</td>
<td>54</td>
<td>6</td>
<td></td>
</tr>
<tr>
<td>00110111</td>
<td>55</td>
<td>7</td>
<td></td>
</tr>
<tr>
<td>00111000</td>
<td>56</td>
<td>8</td>
<td></td>
</tr>
<tr>
<td>00111001</td>
<td>57</td>
<td>9</td>
<td></td>
</tr>
<tr>
<td>00111010</td>
<td>58</td>
<td>:</td>
<td></td>
</tr>
<tr>
<td>00111011</td>
<td>59</td>
<td>;</td>
<td></td>
</tr>
<tr>
<td>00111100</td>
<td>60</td>
<td>&lt;</td>
<td></td>
</tr>
<tr>
<td>00111101</td>
<td>61</td>
<td>=</td>
<td></td>
</tr>
<tr>
<td>00111110</td>
<td>62</td>
<td>&gt;</td>
<td></td>
</tr>
<tr>
<td>00111111</td>
<td>63</td>
<td>?</td>
<td></td>
</tr>
<tr>
<td>01000000</td>
<td>64</td>
<td>@</td>
<td></td>
</tr>
<tr>
<td>01000001</td>
<td>65</td>
<td>A</td>
<td></td>
</tr>
<tr>
<td>01000010</td>
<td>66</td>
<td>B</td>
<td></td>
</tr>
<tr>
<td>01000011</td>
<td>67</td>
<td>C</td>
<td></td>
</tr>
<tr>
<td>01000100</td>
<td>68</td>
<td>D</td>
<td></td>
</tr>
<tr>
<td>01000101</td>
<td>69</td>
<td>E</td>
<td></td>
</tr>
<tr>
<td>01000110</td>
<td>70</td>
<td>F</td>
<td></td>
</tr>
<tr>
<td>01000111</td>
<td>71</td>
<td>G</td>
<td></td>
</tr>
<tr>
<td>01001000</td>
<td>72</td>
<td>H</td>
<td></td>
</tr>
<tr>
<td>01001001</td>
<td>73</td>
<td>I</td>
<td></td>
</tr>
<tr>
<td>01001010</td>
<td>74</td>
<td>J</td>
<td></td>
</tr>
<tr>
<td>01001011</td>
<td>75</td>
<td>K</td>
<td></td>
</tr>
<tr>
<td>01001100</td>
<td>76</td>
<td>L</td>
<td></td>
</tr>
<tr>
<td>01001101</td>
<td>77</td>
<td>M</td>
<td></td>
</tr>
<tr>
<td>01001110</td>
<td>78</td>
<td>N</td>
<td></td>
</tr>
<tr>
<td>01001111</td>
<td>79</td>
<td>O</td>
<td></td>
</tr>
<tr>
<td>01010000</td>
<td>80</td>
<td>P</td>
<td></td>
</tr>
<tr>
<td>01010001</td>
<td>81</td>
<td>Q</td>
<td></td>
</tr>
<tr>
<td>01010010</td>
<td>82</td>
<td>R</td>
<td></td>
</tr>
<tr>
<td>01010011</td>
<td>83</td>
<td>S</td>
<td></td>
</tr>
<tr>
<td>01010100</td>
<td>84</td>
<td>T</td>
<td></td>
</tr>
<tr>
<td>01010101</td>
<td>85</td>
<td>U</td>
<td></td>
</tr>
<tr>
<td>01010110</td>
<td>86</td>
<td>V</td>
<td></td>
</tr>
<tr>
<td>01010111</td>
<td>87</td>
<td>W</td>
<td></td>
</tr>
<tr>
<td>01011000</td>
<td>88</td>
<td>X</td>
<td></td>
</tr>
<tr>
<td>01011001</td>
<td>89</td>
<td>Y</td>
<td></td>
</tr>
<tr>
<td>01011010</td>
<td>90</td>
<td>Z</td>
<td></td>
</tr>
<tr>
<td>01011011</td>
<td>91</td>
<td>[</td>
<td></td>
</tr>
<tr>
<td>01011100</td>
<td>92</td>
<td>\</td>
<td></td>
</tr>
<tr>
<td>01011101</td>
<td>93</td>
<td>]</td>
<td></td>
</tr>
<tr>
<td>01011110</td>
<td>94</td>
<td>^</td>
<td></td>
</tr>
<tr>
<td>01011111</td>
<td>95</td>
<td>_</td>
<td></td>
</tr>
<tr>
<td>01100000</td>
<td>96</td>
<td>`</td>
<td></td>
</tr>
<tr>
<td>01100001</td>
<td>97</td>
<td>a</td>
<td></td>
</tr>
<tr>
<td>01100010</td>
<td>98</td>
<td>b</td>
<td></td>
</tr>
<tr>
<td>01100011</td>
<td>99</td>
<td>c</td>
<td></td>
</tr>
<tr>
<td>01100100</td>
<td>100</td>
<td>d</td>
<td></td>
</tr>
<tr>
<td>01100101</td>
<td>101</td>
<td>e</td>
<td></td>
</tr>
<tr>
<td>01100110</td>
<td>102</td>
<td>f</td>
<td></td>
</tr>
<tr>
<td>01100111</td>
<td>103</td>
<td>g</td>
<td></td>
</tr>
<tr>
<td>01101000</td>
<td>104</td>
<td>h</td>
<td></td>
</tr>
<tr>
<td>01101001</td>
<td>105</td>
<td>i</td>
<td></td>
</tr>
<tr>
<td>01101010</td>
<td>106</td>
<td>j</td>
<td></td>
</tr>
<tr>
<td>01101011</td>
<td>107</td>
<td>k</td>
<td></td>
</tr>
<tr>
<td>01101100</td>
<td>108</td>
<td>l</td>
<td></td>
</tr>
<tr>
<td>01101101</td>
<td>109</td>
<td>m</td>
<td></td>
</tr>
<tr>
<td>01101110</td>
<td>110</td>
<td>n</td>
<td></td>
</tr>
<tr>
<td>01101111</td>
<td>111</td>
<td>o</td>
<td></td>
</tr>
<tr>
<td>01110000</td>
<td>112</td>
<td>p</td>
<td></td>
</tr>
<tr>
<td>01110001</td>
<td>113</td>
<td>q</td>
<td></td>
</tr>
<tr>
<td>01110010</td>
<td>114</td>
<td>r</td>
<td></td>
</tr>
<tr>
<td>01110011</td>
<td>115</td>
<td>s</td>
<td></td>
</tr>
<tr>
<td>01110100</td>
<td>116</td>
<td>t</td>
<td></td>
</tr>
<tr>
<td>01110101</td>
<td>117</td>
<td>u</td>
<td></td>
</tr>
<tr>
<td>01110110</td>
<td>118</td>
<td>v</td>
<td></td>
</tr>
<tr>
<td>01110111</td>
<td>119</td>
<td>w</td>
<td></td>
</tr>
<tr>
<td>01111000</td>
<td>120</td>
<td>x</td>
<td></td>
</tr>
<tr>
<td>01111001</td>
<td>121</td>
<td>y</td>
<td></td>
</tr>
<tr>
<td>01111010</td>
<td>122</td>
<td>z</td>
<td></td>
</tr>
<tr>
<td>01111011</td>
<td>123</td>
<td>{</td>
<td></td>
</tr>
<tr>
<td>01111100</td>
<td>124</td>
<td>|</td>
<td></td>
</tr>
<tr>
<td>01111101</td>
<td>125</td>
<td>}</td>
<td></td>
</tr>
<tr>
<td>01111110</td>
<td>126</td>
<td>~</td>
<td></td>
</tr>
<tr>
<td>01111111</td>
<td>127</td>
<td>DEL (delete)</td>
<td>删除</td>
</tr>
</tbody></table>
<h4 id="扩展ASCII打印字符"><a href="#扩展ASCII打印字符" class="headerlink" title="扩展ASCII打印字符"></a>扩展ASCII打印字符</h4><p>扩展的ASCII字符满足了对更多字符的需求。扩展的ASCII包含ASCII中已有的128个字符（数字0–32显示在</p>
<p>下图中），又增加了128个字符，总共是256个。即使有了这些更多的字符，许多语言还是包含无法压缩到</p>
<p>256个字符中的符号。因此，出现了一些ASCII的变体来囊括地区性字符和符号。例如，许多软件程序把</p>
<p>ASCII表（又称作ISO8859-1）用于北美、西欧、澳大利亚和非洲的语言。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201112132431.jpg" alt="img"></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA 连接数据库报错及解决！</title>
    <url>/5.html</url>
    <content><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>使用JDBC连接MySql时出现：The server time zone value ‘�й���׼ʱ��’ is unrecognizedor representsmore than one timezone. You must configure either the server or JDBC driver(via the serverTimezone configuration后来查阅资料发现这都是因为安装mysql的时候时区设置的不正确 mysql默认的是美国的时区，而我们中国大陆要比他们迟8小时，采用+8:00格式。使用的数据库是MySQL，在你没有指定MySQL驱动版本的情况下它自动依赖的驱动是8.0.12很高的版本，这是由于数据库和系统时区差异所造成的，在jdbc连接的url后面加上serverTimezone=GMT即可解决问题，如果需要使用gmt+8时区，需要写成GMT%2B8，否则会被解析为空。再一个解决办法就是使用低版本的MySQL jdbc驱动，5.1.28不会存在时区的问题。</p>
<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>在连接字符串后面加上?serverTimezone=UTC，其中UTC是统一标准世界时间。完整的连接字符串示例：<font color="#dd0000">jdbc:mysql://localhost:3306/test?serverTimezone=UTC</font>或者还有另一种选择：<font color="#dd0000">jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8</font>，这个是解决中文乱码输入问题，当然也可以和上面的一起结合：</p>
<p><font color="#dd0000">jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC</font></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010133723.jpg"></p>
<p>另一种情况改成：jdbc:mysql://localhost:3306/test?serverTimezone=GMT 之后才行。jdbc是mysql-connector-java-8.0.11.jar，设置过时区 set time_zone = ‘+8:00’</p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>大小写转换</title>
    <url>/50.html</url>
    <content><![CDATA[<h3 id="字符"><a href="#字符" class="headerlink" title="字符"></a><strong>字符</strong></h3><p>小写转大写:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">c1=Character.toUpperCase(c1);</span><br></pre></td></tr></table></figure>

<p>大写转小写:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">char</span> c2 = <span class="string">&#x27;B&#x27;</span>; </span><br><span class="line">c2 = Character.toLowerCase(c2); </span><br></pre></td></tr></table></figure>

<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a><strong>字符串</strong></h3><p>全部转换成小写:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">&quot;aBcD&quot;</span>;</span><br><span class="line">str=str.toLowerCase();</span><br></pre></td></tr></table></figure>

<p>全部转换成大写:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String str = <span class="string">&quot;aBcD&quot;</span>;</span><br><span class="line">str=str.toUpperCase();</span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c1 = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">	<span class="keyword">char</span> c2 = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">	System.out.println(<span class="string">&quot;字符大小写转换:&quot;</span>);</span><br><span class="line">	System.out.println(<span class="string">&quot;转换前:c1=&quot;</span>+c1);</span><br><span class="line">	c1=Character.toUpperCase(c1);</span><br><span class="line">	System.out.println(<span class="string">&quot;转换后:c1=&quot;</span>+c1);</span><br><span class="line">	System.out.println(<span class="string">&quot;转换前:c2=&quot;</span>+c2);</span><br><span class="line">	c2 = Character.toLowerCase(c2);</span><br><span class="line">	System.out.println(<span class="string">&quot;转换后:c2=&quot;</span>+c2);</span><br><span class="line">	System.out.println(<span class="string">&quot;字符串全部转换成大写或小写&quot;</span>);</span><br><span class="line">	String str = <span class="string">&quot;aBcD&quot;</span>;</span><br><span class="line">	System.out.println(<span class="string">&quot;转换前:&quot;</span> + str);</span><br><span class="line">	System.out.println(<span class="string">&quot;转换后:&quot;</span>);</span><br><span class="line">	System.out.println(<span class="string">&quot;全部转换成小写:&quot;</span>+str.toLowerCase());</span><br><span class="line">	System.out.println(<span class="string">&quot;全部转换成大写:&quot;</span>+str.toUpperCase());</span><br><span class="line">	System.out.println(<span class="string">&quot;字符串大写变小写,小写变大写:&quot;</span>);</span><br><span class="line">	StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer(str);</span><br><span class="line">	System.out.println(<span class="string">&quot;转换前:&quot;</span>+stringBuffer);</span><br><span class="line">	<span class="keyword">char</span>[] arr = <span class="keyword">new</span> <span class="keyword">char</span>[stringBuffer.length()];</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">		arr[i] = stringBuffer.charAt(i);</span><br><span class="line">		<span class="keyword">if</span> (<span class="number">65</span>&lt;=arr[i]&amp;&amp;arr[i]&lt;=<span class="number">90</span>) &#123;</span><br><span class="line">			arr[i] = Character.toLowerCase(arr[i]);</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">97</span>&lt;=arr[i]&amp;&amp;arr[i]&lt;=<span class="number">122</span>) &#123;</span><br><span class="line">			arr[i] = Character.toUpperCase(arr[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	stringBuffer.delete(<span class="number">0</span>, stringBuffer.length());</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">		stringBuffer.append(arr[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.println(<span class="string">&quot;转换后:&quot;</span>+stringBuffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a><strong>运行结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201112140931.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10获取锁屏壁纸</title>
    <url>/51.html</url>
    <content><![CDATA[<h3 id="找到壁纸文件"><a href="#找到壁纸文件" class="headerlink" title="找到壁纸文件"></a><strong>找到壁纸文件</strong></h3><p>首先打开“文件资源管理器”，或者随便打开一个文件夹，在地址栏输入下面的路径后回车</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\Users\%username%\AppData\Local\Packages\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\LocalState\Assets </span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201113005633.jpg" alt="img"></p>
<h3 id="修改扩展名"><a href="#修改扩展名" class="headerlink" title="修改扩展名"></a>修改扩展名</h3><p>这个文件夹就是锁屏壁纸的存放文件夹了。不过系统去掉了这些文件的扩展名，所以看到的全都是不能打开的文件，也不能设置为桌面背景。我们要修改这些文件的扩展名为png或jpg，让它们变成图片文件，才能设为壁纸。我们首先将这个文件夹Assets复制到桌面，然后点击开始菜单，输入cmd，打开“命令提示符”,输入下面的命令:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Ren C:\Users\%username%\Desktop\Assets\*.* *.png</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201113013308.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201113013349.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>自加（++）自减（--）运算</title>
    <url>/52.html</url>
    <content><![CDATA[<h3 id="单独使用时"><a href="#单独使用时" class="headerlink" title="单独使用时"></a><strong>单独使用时</strong></h3><p>放在操作数的前面和后面效果一样。(这种用法是我们比较常见的)</p>
<h3 id="参与运算使用时"><a href="#参与运算使用时" class="headerlink" title="参与运算使用时"></a><strong>参与运算使用时</strong></h3><p>放在操作数的前面，先自增或者自减，然后再参与运算。</p>
<p>放在操作数的后面，先参与运算，再自增或者自减。</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> b=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> c=<span class="number">10</span>;</span><br><span class="line">    a=b++;<span class="comment">//a=10,b=11</span></span><br><span class="line">    c=--a;<span class="comment">//c=9,a=9</span></span><br><span class="line">    b=++a;<span class="comment">//b=10,a=10</span></span><br><span class="line">    a=c--;<span class="comment">//a=9,c=8</span></span><br><span class="line">    System.out.println(<span class="string">&quot;a=&quot;</span>+a);</span><br><span class="line">    System.out.println(<span class="string">&quot;b=&quot;</span>+b);</span><br><span class="line">    System.out.println(<span class="string">&quot;c=&quot;</span>+c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a><strong>运行结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201204103853.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制位运算---左移(&lt;&lt;)右移(&gt;&gt;)</title>
    <url>/53.html</url>
    <content><![CDATA[<h3 id="左移（-lt-lt-）"><a href="#左移（-lt-lt-）" class="headerlink" title="左移（&lt;&lt;）"></a><strong>左移（&lt;&lt;）</strong></h3><p>一般来说，向左移动几位就乘以2的几次幂；但是，如果要左移的数化成二进制后的最高位不是0而是1时，前面的结论就不成立了，就要化成二进制后再运算了（去掉最高位的1，最低位补0）</p>
<h3 id="右移（-gt-gt-）"><a href="#右移（-gt-gt-）" class="headerlink" title="右移（&gt;&gt;）"></a><strong>右移（&gt;&gt;）</strong></h3><p>一般来说，向右移动几位就除以2的几次幂；但是，如果要右移的数化成二进制后的最低位不是0而是1时，前面的结论就不成立了，就要化成二进制后再运算了（去掉最低位的1，最高位补0）</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//向左移动几位就乘以2的几次幂</span></span><br><span class="line">    <span class="comment">/*去掉最高位,最低位补零,左边为二进制，右边为十进制</span></span><br><span class="line"><span class="comment">    1100=12</span></span><br><span class="line"><span class="comment">    12&lt;&lt;1的结果:11000=24</span></span><br><span class="line"><span class="comment">    12&lt;&lt;2的结果:110000=48</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="number">12</span> &lt;&lt; <span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="number">12</span> &lt;&lt; <span class="number">2</span>);</span><br><span class="line">    <span class="comment">//向右移动几位就除以2的几次幂</span></span><br><span class="line">    <span class="comment">/*去掉最低位,最高位补零,左边为二进制，右边为十进制</span></span><br><span class="line"><span class="comment">    1100=12</span></span><br><span class="line"><span class="comment">    12&gt;&gt;1的结果:110=6</span></span><br><span class="line"><span class="comment">    12&gt;&gt;2的结果:11=3</span></span><br><span class="line"><span class="comment">    12&gt;&gt;3的结果:1=1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    System.out.println(<span class="number">12</span> &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    System.out.println(<span class="number">12</span> &gt;&gt; <span class="number">2</span>);</span><br><span class="line">    System.out.println(<span class="number">12</span> &gt;&gt; <span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a><strong>运行结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201204110226.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>重写与重载的区别</title>
    <url>/54.html</url>
    <content><![CDATA[<h3 id="重写-Override"><a href="#重写-Override" class="headerlink" title="重写(Override)"></a><strong>重写(Override)</strong></h3><p>从字面上看，重写就是 重新写一遍的意思。其实就是在子类中把父类本身有的方法重新写一遍。子类继承了父类原有的方法，但有时子类并不想原封不动的继承父类中的某个方法，所以在方法名，参数列表，返回类型(除过子类中方法的返回值是父类中方法返回值的子类时)都相同的情况下， 对方法体进行修改或重写，这就是重写。但要注意子类函数的访问修饰权限不能少于父类的。</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        Son s = <span class="keyword">new</span> Son();</span><br><span class="line">        s.sayHello();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        System.out.println(<span class="string">&quot;hello by &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>总结：</p>
<p>1.发生在父类与子类之间</p>
<p>2.方法名，参数列表，返回类型（除过子类中方法的返回类型是父类中返回类型的子类）必须相同</p>
<p>3.访问修饰符的限制一定要大于被重写方法的访问修饰符（public&gt;protected&gt;default&gt;private)</p>
<p>4.重写方法一定不能抛出新的检查异常或者比被重写方法申明更加宽泛的检查型异常</p>
<h3 id="重载-Overload"><a href="#重载-Overload" class="headerlink" title="重载(Overload)"></a><strong>重载(Overload)</strong></h3><p>在一个类中，同名的方法如果有不同的参数列表（参数类型不同、参数个数不同甚至是参数顺序不同）则视为重载。同时，重载对返回类型没有要求，可以相同也可以不同，但不能通过返回类型是否相同来判断重载。</p>
<p>Java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        Father s = <span class="keyword">new</span> Father();</span><br><span class="line">        s.sayHello();</span><br><span class="line">        s.sayHello(<span class="string">&quot;wintershii&quot;</span>);</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello&quot;</span> + <span class="string">&quot; &quot;</span> + name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h3><p>1.重载Overload是一个类中多态性的一种表现</p>
<p>2.重载要求同名方法的参数列表不同(参数类型，参数个数甚至是参数顺序)</p>
<p>3.重载的时候，返回值类型可以相同也可以不相同。无法以返回型别作为重载函数的区分标准</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>搬运地址：<a href="https://blog.csdn.net/wintershii/article/details/80558739">Java—重写与重载的区别_wintershii的博客-CSDN博客_重载和重写的区别</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>QuickLook不能预览office的解决方法</title>
    <url>/55.html</url>
    <content><![CDATA[<h3 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a><strong>下载插件</strong></h3><p>下载地址:<a href="https://github.com/QL-Win/QuickLook.Plugin.OfficeViewer/releases">https://github.com/QL-Win/QuickLook.Plugin.OfficeViewer/releases</a></p>
<p>点击划红线的链接</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201205150903.jpg" alt="img"></p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a><strong>安装插件</strong></h3><p>找到下载好的插件,鼠标左键单击选中该插件文件，再按下空格键，点击安装，重启QuickLook即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201205151557.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>QuickLook</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML去掉a标签的下划线</title>
    <url>/56.html</url>
    <content><![CDATA[<p>给该标签添加行内样式（使用属性style进行定义）:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">text-decoration: none</span><br></pre></td></tr></table></figure>

<p>例如:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">&quot;http://www.zoutl.cn&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration: none&quot;</span>&gt;</span>LeDao的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Scanner的hasNext()方法</title>
    <url>/57.html</url>
    <content><![CDATA[<p>这个方法用来检查用户是否键入内容</p>
<h3 id="连续输入"><a href="#连续输入" class="headerlink" title="连续输入"></a><strong>连续输入</strong></h3><p>当我们想键入多个内容时，就可以使用这个方法和while循环(连续输入，不会终止)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">while</span>(sc.hasNext())&#123;</span><br><span class="line">        <span class="keyword">int</span> mouth=sc.nextInt();</span><br><span class="line">        System.out.println(mouth);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="停止输入"><a href="#停止输入" class="headerlink" title="停止输入"></a><strong>停止输入</strong></h3><p>当我们想停止输入时，可在该方法的括号内加入用来终止的字符(键入这个字符，按下回车就会终止)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="comment">//当用户没有输入#号时，可以连续输入</span></span><br><span class="line">    <span class="keyword">while</span>(!sc.hasNext(<span class="string">&quot;#&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">int</span> mouth=sc.nextInt();</span><br><span class="line">        System.out.println(mouth);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>idea创建自己的xml模板</title>
    <url>/58.html</url>
    <content><![CDATA[<h3 id="打开对应设置"><a href="#打开对应设置" class="headerlink" title="打开对应设置"></a>打开对应设置</h3><p>打开设置，并找到Live Templates（File-&gt;Settings或者快捷键Ctrl+Alt+S）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102004549.jpg" alt="img"></p>
<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p>找到文件和代码模板设置，并点击+号添加，如下图</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102005350.jpg" alt="img"></p>
<p>Name处填模板的名称，Extension处填类型，被圈住的地方填内容，最后点击下方的OK键即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102010244.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>idea创建自己的Live Templates</title>
    <url>/59.html</url>
    <content><![CDATA[<h3 id="打开对应设置"><a href="#打开对应设置" class="headerlink" title="打开对应设置"></a>打开对应设置</h3><p>打开设置，并找到Live Templates（File-&gt;Settings或者快捷键Ctrl+Alt+S）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102010846.jpg" alt="img"></p>
<h3 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h3><p>点击右侧的+号并选择第二个选项</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102011001.jpg" alt="img"></p>
<p>选择刚刚创建的组，再次点击右侧的+号，选择第一项开始添加</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102011230.jpg" alt="img"></p>
<p>Abbreviation处填关键字（比如我填pi，那么我在敲代码时键入pi时就会出现提示），Description处填提示描述，Template text填自动补全的代码内容</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102011938.jpg" alt="img"></p>
<p>选中Java，然后点击OK键即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102011607.jpg" alt="img"></p>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102012642.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>CKEditor上传图片</title>
    <url>/6.html</url>
    <content><![CDATA[<h3 id="引入commons-io依赖"><a href="#引入commons-io依赖" class="headerlink" title="引入commons-io依赖"></a><strong>引入commons-io依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br></pre></td></tr></table></figure>

<h3 id="修改config-js文件"><a href="#修改config-js文件" class="headerlink" title="修改config.js文件"></a><strong>修改config.js文件</strong></h3><p>在ckeditor文件夹中找到config.js文件,参考代码如下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">CKEDITOR.editorConfig = <span class="function"><span class="keyword">function</span> (<span class="params">config</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Define changes to default configuration here. For example:</span></span><br><span class="line">    <span class="comment">// config.language = &#x27;fr&#x27;;</span></span><br><span class="line">    <span class="comment">//编辑器颜色</span></span><br><span class="line">    config.uiColor = <span class="string">&#x27;#daeef5&#x27;</span>;</span><br><span class="line">    <span class="comment">//上传图片路径</span></span><br><span class="line">    config.filebrowserUploadUrl = <span class="string">&quot;/admin/blog/ckeditorUpload&quot;</span>;</span><br><span class="line">&#125;;  </span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ckeditor上传图片</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> CKEditorFuncNum</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/ckeditorUpload&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">ckeditorUpload</span><span class="params">(<span class="meta">@RequestParam(&quot;upload&quot;)</span> MultipartFile file, String CKEditorFuncNum)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">	<span class="comment">// 获取文件名</span></span><br><span class="line">	String fileName = file.getOriginalFilename();</span><br><span class="line">	<span class="comment">// 获取文件的后缀</span></span><br><span class="line">	String suffixName = fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">	<span class="comment">//拼接新的文件名</span></span><br><span class="line">	String newFileName = DateUtil.getCurrentDateStr2() + <span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">	FileUtils.copyInputStreamToFile(file.getInputStream(), <span class="keyword">new</span> File(blogImageFilePath + newFileName));</span><br><span class="line">	StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">	sb.append(<span class="string">&quot;&quot;</span>);</span><br><span class="line">	<span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="上传步骤"><a href="#上传步骤" class="headerlink" title="上传步骤"></a><strong>上传步骤</strong></h3><p>①在ckeditor编辑器工具栏找到图像按钮并点击</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210227090339.jpg"></p>
<p>②选择上传标签页，选择文件并上传到服务器</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210227090442.jpg"></p>
<p>③选择图片要显示的尺寸，并点击确定即可完成图片上传</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210227090625.jpg" alt="20210227090442.jpg"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>CKEditor</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub新建仓库</title>
    <url>/60.html</url>
    <content><![CDATA[<blockquote>
<p>来到GitHub首页,点击左侧的NEW按钮</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102023342.jpg" alt="img"></p>
<blockquote>
<p>输入名称、描述、选择仓库类型（公开或私有）</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102023800.jpg" alt="img"></p>
<blockquote>
<p>点击最下方的创建按钮即可创建成功</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102024029.jpg" alt="img"></p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub生成token</title>
    <url>/61.html</url>
    <content><![CDATA[<blockquote>
<p>进入GitHub首页，点击右上角的个人头像，然后再点击Settings</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102033533.jpg" alt="img"></p>
<blockquote>
<p>点击左侧菜单的Developer settings</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102032614.jpg" alt="img"></p>
<blockquote>
<p>点击左侧菜单的Personal access tokens</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102032734.jpg" alt="img"></p>
<blockquote>
<p>点击Generate new token</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102032837.jpg" alt="img"></p>
<blockquote>
<p>Note随便填入描述，下面的选项全部打勾（token的用途），再点击最下面的绿色按钮（Generate token）即可</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102033001.jpg" alt="img"></p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>idea导出配置和导入配置</title>
    <url>/63.html</url>
    <content><![CDATA[<blockquote>
<p>导出配置</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102150606.jpg" alt="img"></p>
<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102150642.jpg" alt="img"></strong></p>
<blockquote>
<p>导入配置</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102150831.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102153214.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>idea上传项目到GitHub</title>
    <url>/62.html</url>
    <content><![CDATA[<blockquote>
<p>创建本地仓库，如果找不到则按两下shift键搜索create git repository</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102033830.jpg" alt="img"></p>
<blockquote>
<p>选择要上传的项目，点击OK后项目文件会变红</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102034008.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102034503.jpg" alt="img"></p>
<blockquote>
<p>添加GitHub项目链接</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615034549.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615034655.jpg" alt="img"></p>
<blockquote>
<p>提交到本地git</p>
<p>右击项目工程文件-&gt;git-&gt;commit（或者快捷键Ctrl+K），提交到本地git，项目文件从暂存区进入版本库，文件颜色变白，在红圈区域输入文件内容描述，点击Commit，在之后的弹出框再次点击Commit即可</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210102035209.jpg" alt="img"></p>
<blockquote>
<p>开始上传到GitHub（或者快捷键Ctrl+Shift+K）</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210615034804.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基于JavaMail实现用QQ邮箱发送邮件</title>
    <url>/64.html</url>
    <content><![CDATA[<h3 id="引入Maven依赖"><a href="#引入Maven依赖" class="headerlink" title="引入Maven依赖"></a><strong>引入Maven依赖</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- email邮件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="开启POP3-SMTP服务"><a href="#开启POP3-SMTP服务" class="headerlink" title="开启POP3/SMTP服务"></a><strong>开启POP3/SMTP服务</strong></h3><p>位置：QQ邮箱首页-&gt;设置-&gt;账户，然后会得到一个授权码</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210104175451.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210104175645.jpg" alt="img"></p>
<h3 id="application-yml文件配置"><a href="#application-yml文件配置" class="headerlink" title="application.yml文件配置"></a><strong>application.yml文件配置</strong></h3><p>*****处根据自己的实际情况填写</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="comment"># QQ邮箱发送配置</span></span><br><span class="line">  <span class="attr">mail:</span></span><br><span class="line">    <span class="comment"># host不配置会注入失败</span></span><br><span class="line">    <span class="attr">host:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">    <span class="comment">#自己的邮箱</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">****@qq.com</span></span><br><span class="line">    <span class="comment">#授权码</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">****</span></span><br><span class="line">    <span class="attr">default-encoding:</span> <span class="string">utf-8</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">smtp</span></span><br><span class="line">    <span class="attr">properties:</span></span><br><span class="line">      <span class="attr">mail:</span></span><br><span class="line">        <span class="attr">smtp:</span></span><br><span class="line">          <span class="attr">connectiontimeout:</span> <span class="number">5000</span></span><br><span class="line">          <span class="attr">timeout:</span> <span class="number">3000</span></span><br><span class="line">          <span class="attr">writetimeout:</span> <span class="number">5000</span></span><br><span class="line">          <span class="attr">ssl:</span></span><br><span class="line">            <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment">#一定要开启ssl,不然会503 验证失败的（开启加密验证）</span></span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.SimpleMailMessage;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mail.javamail.JavaMailSender;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-07-16 9:08</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> JavaMailSender javaMailSender;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 首页</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;h1 style=&#x27;text-align: center&#x27;&gt;&lt;a href=&#x27;/sendMail&#x27;&gt;点我发送邮件&lt;/a&gt;&lt;/h1&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送邮件测试</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendMail&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendMail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SimpleMailMessage message = <span class="keyword">new</span> SimpleMailMessage();</span><br><span class="line">        <span class="comment">//发件人QQ邮箱</span></span><br><span class="line">        message.setFrom(<span class="string">&quot;******@qq.com&quot;</span>);</span><br><span class="line">        <span class="comment">//收件人QQ邮箱</span></span><br><span class="line">        message.setTo(<span class="string">&quot;******@qq.com&quot;</span>);</span><br><span class="line">        <span class="comment">//主题</span></span><br><span class="line">        message.setSubject(<span class="string">&quot;发送邮件测试&quot;</span>);</span><br><span class="line">        <span class="comment">//内容</span></span><br><span class="line">        message.setText(<span class="string">&quot;111&quot;</span>);</span><br><span class="line">        <span class="comment">//发送邮件</span></span><br><span class="line">        javaMailSender.send(message);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;h2 style=&#x27;color:red;text-align: center&#x27;&gt;发送成功,请到收件人邮箱查收!!&lt;/h2&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试与结果"><a href="#测试与结果" class="headerlink" title="测试与结果"></a>测试与结果</h3><p>运行项目后，点击发送邮件链接，之后目标邮箱就可以收到邮件了</p>
<p><strong><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210716093146.jpg" alt="img"></strong></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript获取验证码倒计时</title>
    <url>/65.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-warm&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 12px&quot;</span> <span class="attr">value</span>=<span class="string">&quot; 获取验证码&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;setTime(this);&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//倒计时</span></span><br><span class="line">    <span class="keyword">var</span> countdown = <span class="number">60</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setTime</span>(<span class="params">val</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (countdown == <span class="number">0</span>) &#123;</span><br><span class="line">            val.removeAttribute(<span class="string">&quot;disabled&quot;</span>);</span><br><span class="line">            val.className = <span class="string">&#x27;obtain generate_code layui-btn layui-btn-warm&#x27;</span>;</span><br><span class="line">            val.value = <span class="string">&quot;获取验证码&quot;</span>;</span><br><span class="line">            countdown = <span class="number">60</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            val.setAttribute(<span class="string">&quot;disabled&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">            val.className = <span class="string">&#x27;obtain generate_code layui-btn layui-btn-warm layui-btn-disabled&#x27;</span>;</span><br><span class="line">            val.value = <span class="string">&quot;重新发送(&quot;</span> + countdown + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">            countdown--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            setTime(val);</span><br><span class="line">        &#125;, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210104213057.jpg" alt="img"></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>GitHub搜索技巧</title>
    <url>/66.html</url>
    <content><![CDATA[<h3 id="根据star，fork数筛选"><a href="#根据star，fork数筛选" class="headerlink" title="根据star，fork数筛选"></a><strong>根据star，fork数筛选</strong></h3><p>语法： 关键字 stars:&gt;= 数量 forks:&gt;=数量</p>
<p>例子： springboot stars:&gt;=5000 //搜索springboot有关star数&gt;=5000的内容</p>
<p>springboot stars:&gt;=5000 forks:&gt;=5000//搜索springboot 的star&gt;=5000，且fork数&gt;=5000的内容</p>
<p>可单独搜索，也可组合搜索，中间用空格隔开，是&amp;（且）的关系。</p>
<h3 id="关键字-in"><a href="#关键字-in" class="headerlink" title="关键字 in"></a><strong>关键字 in</strong></h3><p>搜索关键字在GitHub上发布的位置</p>
<p>name （发布的仓库名称）</p>
<p>description（指的是文章的摘要部分）</p>
<p>Readme (说明文档)</p>
<p>语法 ：关键字 in:</p>
<p>例子 ：netty in:name //查找名称中包含netty的内容</p>
<p>netty in:name,description //逗号分隔，是 || (或)的关系，指的是查询名称，或者描述中包含netty的内容</p>
<h3 id="awesome-关键字"><a href="#awesome-关键字" class="headerlink" title="awesome + 关键字"></a><strong>awesome + 关键字</strong></h3><p>一般是指的学习，书籍，工具类，插件类相关的系列的集合。可以有效节约时间，找到别人收集好的内容。</p>
<p>例如： awesome springboot</p>
<h3 id="关键词-location-地区-language-语言"><a href="#关键词-location-地区-language-语言" class="headerlink" title="关键词 location:地区 language:语言"></a><strong>关键词 location:地区 language:语言</strong></h3><p>搜索某个语言，某个地区的大佬</p>
<p>例如：springboot location:Beijing language:java</p>
<h3 id="user-某位用户"><a href="#user-某位用户" class="headerlink" title="user:某位用户"></a><strong>user:某位用户</strong></h3><p>查询某位用户的相关内容</p>
<p>例如：user:a6678696</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/flydashpig/p/11795238.html">github实用的搜索小技巧 - 夕阳下飞奔的猪 - 博客园</a></p>]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>form标签onsubmit事件</title>
    <url>/67.html</url>
    <content><![CDATA[<p>onsubmit 事件会在表单中的确认按钮被点击时发生,如果结果返回false就不提交</p>
<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/user/save&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span> <span class="attr">onsubmit</span>=<span class="string">&quot;return checkUpdateMessageValue()&quot;</span>&gt;</span></span><br><span class="line"> ....</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkUpdateMessageValue</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> password = $(<span class="string">&quot;#passwordUpdateMessage&quot;</span>).val();</span><br><span class="line">    <span class="keyword">var</span> password2 = $(<span class="string">&quot;#password2UpdateMessage&quot;</span>).val();</span><br><span class="line">    <span class="keyword">if</span> (password.length &lt; <span class="number">6</span>) &#123;</span><br><span class="line">        alert(<span class="string">&quot;密码长度要大于5!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (password != password2) &#123;</span><br><span class="line">        alert(<span class="string">&quot;密码和确认密码不相同,请重新输入!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>点击超链接时确认后再跳转</title>
    <url>/68.html</url>
    <content><![CDATA[<p>例如用户要删除某条数据时，先询问用户是否真的删除，用户确认后就马上删除</p>
<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:deleteArticle(id)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteArticle</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (confirm(<span class="string">&quot;您确定要删除这个资源吗?&quot;</span>)) &#123;</span><br><span class="line">        <span class="built_in">window</span>.location.href = <span class="string">&quot;/article/delete?id=&quot;</span> + id;</span><br><span class="line">        alert(<span class="string">&quot;删除成功!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210109010043.jpg" alt="img"></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL里面的排序语句DESC和ASC</title>
    <url>/69.html</url>
    <content><![CDATA[<p>SQL默认的是ASC排序（升序）</p>
<h3 id="DESC"><a href="#DESC" class="headerlink" title="DESC"></a>DESC</h3><p>用 DESC表示按倒序排序(即：从大到小排序) —降序排列</p>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">DATE</span> <span class="keyword">DESC</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210113040231.jpg" alt="img"></p>
<h3 id="ACS"><a href="#ACS" class="headerlink" title="ACS"></a>ACS</h3><p>用 ACS表示按正序排序(即：从小到大排序)—升序排列</p>
<p>例如：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="type">DATE</span> <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210113035957.jpg" alt="img"></p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Java中的关键字</title>
    <url>/7.html</url>
    <content><![CDATA[<p>关键字的定义和特点：</p>
<p>定义：被Java语言赋予了特殊含义的单词。</p>
<p>特点：关键字中所有字母都为小写。</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010141136.jpg"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010141148.jpg" alt="20210227090442.jpg"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>jackson的配置属性</title>
    <url>/70.html</url>
    <content><![CDATA[<h3 id="spring-jackson-date-format"><a href="#spring-jackson-date-format" class="headerlink" title="spring.jackson.date-format"></a><strong>spring.jackson.date-format</strong></h3><p>指定日期格式，比如yyyy-MM-dd HH:mm:ss，或者具体的格式化类的全限定名</p>
<h3 id="spring-jackson-deserialization"><a href="#spring-jackson-deserialization" class="headerlink" title="spring.jackson.deserialization"></a><strong>spring.jackson.deserialization</strong></h3><p>是否开启Jackson的反序列化</p>
<h3 id="spring-jackson-generator"><a href="#spring-jackson-generator" class="headerlink" title="spring.jackson.generator"></a><strong>spring.jackson.generator</strong></h3><p>是否开启json的generators.</p>
<h3 id="spring-jackson-joda-date-time-format"><a href="#spring-jackson-joda-date-time-format" class="headerlink" title="spring.jackson.joda-date-time-format"></a><strong>spring.jackson.joda-date-time-format</strong></h3><p>指定Joda date/time的格式，比如yyyy-MM-ddHH:mm:ss). 如果没有配置的话，dateformat会作为backup</p>
<h3 id="spring-jackson-locale"><a href="#spring-jackson-locale" class="headerlink" title="spring.jackson.locale"></a><strong>spring.jackson.locale</strong></h3><p>指定json使用的Locale.</p>
<h3 id="spring-jackson-mapper"><a href="#spring-jackson-mapper" class="headerlink" title="spring.jackson.mapper"></a><strong>spring.jackson.mapper</strong></h3><p>是否开启Jackson通用的特性.</p>
<h3 id="spring-jackson-parser"><a href="#spring-jackson-parser" class="headerlink" title="spring.jackson.parser"></a><strong>spring.jackson.parser</strong></h3><p>是否开启jackson的parser特性.</p>
<h3 id="spring-jackson-property-naming-strategy"><a href="#spring-jackson-property-naming-strategy" class="headerlink" title="spring.jackson.property-naming-strategy"></a><strong>spring.jackson.property-naming-strategy</strong></h3><p>指定PropertyNamingStrategy(CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES)或者指定PropertyNamingStrategy子类的全限定类名.</p>
<h3 id="spring-jackson-serialization"><a href="#spring-jackson-serialization" class="headerlink" title="spring.jackson.serialization"></a><strong>spring.jackson.serialization</strong></h3><p>是否开启jackson的序列化.</p>
<h3 id="spring-jackson-serialization-inclusion"><a href="#spring-jackson-serialization-inclusion" class="headerlink" title="spring.jackson.serialization-inclusion"></a><strong>spring.jackson.serialization-inclusion</strong></h3><p>指定序列化时属性的inclusion方式，具体查看JsonInclude.Include枚举.</p>
<h3 id="spring-jackson-time-zone"><a href="#spring-jackson-time-zone" class="headerlink" title="spring.jackson.time-zone"></a><strong>spring.jackson.time-zone</strong></h3><p>指定日期格式化时区，比如America/Los_Angeles或者GMT+10.</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/liaojie970/p/9396334.html">springboot之jackson的两种配置方式</a></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MD5加密</title>
    <url>/71.html</url>
    <content><![CDATA[<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-01-13 5:15</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Md5</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_MD5 = <span class="string">&quot;MD5&quot;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  String  <span class="title">getResult</span><span class="params">(String inputStr)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=======加密前的数据:&quot;</span>+inputStr);</span><br><span class="line">        BigInteger bigInteger=<span class="keyword">null</span>;</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            MessageDigest md = MessageDigest.getInstance(KEY_MD5);</span><br><span class="line">            <span class="keyword">byte</span>[] inputData = inputStr.getBytes();</span><br><span class="line">            md.update(inputData);</span><br><span class="line">            bigInteger = <span class="keyword">new</span> BigInteger(md.digest());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;e.printStackTrace();&#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;MD5加密后:&quot;</span> + bigInteger.toString(<span class="number">16</span>));</span><br><span class="line">        <span class="keyword">return</span> bigInteger.toString(<span class="number">16</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String inputStr = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">            getResult(inputStr);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210113052240.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Iterator的使用</title>
    <url>/72.html</url>
    <content><![CDATA[<h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><strong>方法</strong></h3><p><font color="#dd0000">hasNext()</font>：如果迭代具有更多的元素，则返回true 。<br><font color="#dd0000">next()</font>：返回迭代中的下一个元素。<br><font color="#dd0000">remove()</font>：从底层集合中删除此迭代器返回的最后一个元素。 </p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; stringList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    stringList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    stringList.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    stringList.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    stringList.add(<span class="string">&quot;4&quot;</span>);</span><br><span class="line">    Iterator iterator = stringList.iterator();</span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">        <span class="comment">//获取下一个元素</span></span><br><span class="line">        String s = (String) iterator.next();</span><br><span class="line">        <span class="comment">//如果下一个元素的值是2</span></span><br><span class="line">        <span class="keyword">if</span> (s.equals(<span class="string">&quot;2&quot;</span>)) &#123;</span><br><span class="line">            <span class="comment">//删除下一个元素</span></span><br><span class="line">            iterator.remove();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">&quot;结果:&quot;</span>);</span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="keyword">for</span> (String s : stringList) &#123;</span><br><span class="line">        System.out.print(s+<span class="string">&quot; &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210114163324.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>遍历List集合的三种方法</title>
    <url>/73.html</url>
    <content><![CDATA[<h3 id="创建List集合"><a href="#创建List集合" class="headerlink" title="创建List集合"></a><strong>创建List集合</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; stringList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">stringList.add(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">stringList.add(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">stringList.add(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">stringList.add(<span class="string">&quot;4&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a><strong>for循环</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stringList.size(); i++) &#123;</span><br><span class="line">    System.out.print(stringList.get(i)+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="foreach循环"><a href="#foreach循环" class="headerlink" title="foreach循环"></a><strong>foreach循环</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (String s : stringList) &#123;</span><br><span class="line">    System.out.print(s+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a><strong>迭代器</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Iterator iterator = stringList.iterator();</span><br><span class="line"><span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">	System.out.print(iterator.next() + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>List集合删除某个元素</title>
    <url>/74.html</url>
    <content><![CDATA[<h3 id="创建List集合"><a href="#创建List集合" class="headerlink" title="创建List集合:"></a><strong>创建List集合:</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; stringList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">stringList.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">stringList.add(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">stringList.add(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">stringList.add(<span class="string">&quot;c&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a><strong>for循环</strong></h3><p>①正向删除，每删除一次必须进行一次i–，因为stringList.size()在减少，否则List集合中连着的两个元素都相同的话，删除这个相同的元素时就只能删除一个。因为删除第一个元素时下一个以及之后的元素的索引会在原来的基础上-1，而i的值经过一次循环后就+1了，由于下一个元素的索引变成了被删除元素的索引，所以循环会跳过要删除的第二个元素，那么会出现等于要删除的值的元素删不完的情况</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; stringList.size(); i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (stringList.get(i).equals(<span class="string">&quot;a&quot;</span>)) &#123;</span><br><span class="line">        stringList.remove(i);</span><br><span class="line">        i--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>②反向删除，可以直接删除，不需要进行其他的操作</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = stringList.size() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">    <span class="keyword">if</span> (stringList.get(i).equals(<span class="string">&quot;a&quot;</span>)) &#123;</span><br><span class="line">        stringList.remove(i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<h3 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a><strong>迭代器</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Iterator iterator=stringList.iterator();</span><br><span class="line"><span class="keyword">while</span> (iterator.hasNext()) &#123;</span><br><span class="line">    <span class="keyword">if</span> (iterator.next().equals(<span class="string">&quot;a&quot;</span>)) &#123;</span><br><span class="line">        iterator.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Stream，得到新的List集合就是去掉目标元素的集合"><a href="#Stream，得到新的List集合就是去掉目标元素的集合" class="headerlink" title="Stream，得到新的List集合就是去掉目标元素的集合"></a><strong>Stream，得到新的List集合就是去掉目标元素的集合</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; stringList1=stringList.stream().filter(s -&gt; !s.equals(<span class="string">&quot;a&quot;</span>)).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>不能使用foreach循环，用foreach删除list元素的时候只有删除倒数第二个元素时不会报错</p>
<p>详细原因查看：<a href="https://blog.csdn.net/bimuyulaila/article/details/52088124">foreach遍历list删除元素一定会报错？</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL删除主表时删除从表的数据</title>
    <url>/75.html</url>
    <content><![CDATA[<p>有外键关联的两个表，要想实现删除主表的数据，然后删除从表中与之关联的数据，我们可以将两表的外键删除关系设置为CASCADE</p>
<p>CASCADE删除时：删除主表时自动删除从表。删除从表，主表不变</p>
<h3 id="下面是关联的两个表"><a href="#下面是关联的两个表" class="headerlink" title="下面是关联的两个表"></a><strong>下面是关联的两个表</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210115053856.jpg" alt="img"></p>
<h3 id="设置删除关系"><a href="#设置删除关系" class="headerlink" title="设置删除关系"></a>设置删除关系</h3><p>双击上图中的线，然后设置删除时的关系</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210115054053.jpg" alt="img"></p>
<p>然后我们的需求就可以实现了！！</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>我用的是SQLyog</p>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>资源分享平台</title>
    <url>/76.html</url>
    <content><![CDATA[<h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a><strong>项目地址</strong></h3><p>GitHub地址：<a href="https://github.com/a6678696/InformationSharing">https://github.com/a6678696/InformationSharing</a></p>
<h3 id="使用的技术"><a href="#使用的技术" class="headerlink" title="使用的技术"></a><strong>使用的技术</strong></h3><p>本项目核心技术采用Spring Boot+mybatis；开发工具idea；数据库mysql5.6；模版引擎采用的是thymeleaf；安全框架采用SpringSecurity；在线编辑器ckeditor；Lucene全文检索；quartz定时任务；<a href="/2021/01/04/64/">JavaMail实现QQ邮箱发送邮件</a>；</p>
<h3 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a><strong>功能介绍</strong></h3><h4 id="用户功能"><a href="#用户功能" class="headerlink" title="用户功能"></a>用户功能</h4><p>注册、登录、找回密码（通过邮箱获取验证码）、查看发布的资源、下载资源、Lucene全文搜索资源、发表评论、修改个人信息、管理个人资源、查看自己的资源下的评论、查看自己的下载信息、查看属于自己的消息</p>
<h4 id="管理员功能"><a href="#管理员功能" class="headerlink" title="管理员功能"></a>管理员功能</h4><p>用户管理（添加，修改，删除，查询，封禁或解禁用户，切换用户身份，给用户加积分和减积分）、资源类别管理（添加，修改，删除，查询）、资源管理（查看，删除，审核通过和不通过，设置热门与否，设置有效与否）、友情链接管理（添加，修改，删除，查询）、评论管理（删除，查询，审核通过和不通过）、下载信息管理（删除，查询）、消息管理（删除，查询，给用户发消息）、安全退出</p>
<h3 id="图片展示"><a href="#图片展示" class="headerlink" title="图片展示"></a><strong>图片展示</strong></h3><h4 id="前台"><a href="#前台" class="headerlink" title="前台"></a>前台</h4><h5 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214057.jpg" alt="img"></p>
<h5 id="Lucene全文搜索资源"><a href="#Lucene全文搜索资源" class="headerlink" title="Lucene全文搜索资源"></a>Lucene全文搜索资源</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214225.jpg" alt="img"></p>
<h5 id="查看资源详情"><a href="#查看资源详情" class="headerlink" title="查看资源详情"></a>查看资源详情</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214317.jpg" alt="img"></p>
<h5 id="下载资源"><a href="#下载资源" class="headerlink" title="下载资源"></a>下载资源</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214501.jpg" alt="img"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214539.jpg" alt="img"></p>
<h5 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117220623.jpg" alt="img"></p>
<h5 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117220717.jpg" alt="img"></p>
<h5 id="找回密码"><a href="#找回密码" class="headerlink" title="找回密码"></a>找回密码</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117220756.jpg" alt="img"></p>
<h5 id="用户中心页面"><a href="#用户中心页面" class="headerlink" title="用户中心页面"></a>用户中心页面</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214651.jpg" alt="img"></p>
<h5 id="查看个人信息"><a href="#查看个人信息" class="headerlink" title="查看个人信息"></a>查看个人信息</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214812.jpg" alt="img"></p>
<h5 id="修改个人信息"><a href="#修改个人信息" class="headerlink" title="修改个人信息"></a>修改个人信息</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214732.jpg" alt="img"></p>
<h5 id="发布资源"><a href="#发布资源" class="headerlink" title="发布资源"></a>发布资源</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214858.jpg" alt="img"></p>
<h5 id="资源管理"><a href="#资源管理" class="headerlink" title="资源管理"></a>资源管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117214946.jpg" alt="img"></p>
<h5 id="失效资源管理"><a href="#失效资源管理" class="headerlink" title="失效资源管理"></a>失效资源管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215028.jpg" alt="img"></p>
<h5 id="查看下载信息"><a href="#查看下载信息" class="headerlink" title="查看下载信息"></a>查看下载信息</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210119223132.jpg" alt="img"></p>
<h5 id="评论管理"><a href="#评论管理" class="headerlink" title="评论管理"></a>评论管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215112.jpg" alt="img"></p>
<h5 id="查看系统消息"><a href="#查看系统消息" class="headerlink" title="查看系统消息"></a>查看系统消息</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215155.jpg" alt="img"></p>
<h4 id="后台"><a href="#后台" class="headerlink" title="后台"></a>后台</h4><h5 id="登录-1"><a href="#登录-1" class="headerlink" title="登录"></a>登录</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215341.jpg" alt="img"></p>
<h5 id="首页-1"><a href="#首页-1" class="headerlink" title="首页"></a>首页</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215248.jpg" alt="img"></p>
<h5 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215431.jpg" alt="img"></p>
<h5 id="资源类别管理"><a href="#资源类别管理" class="headerlink" title="资源类别管理"></a>资源类别管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215522.jpg" alt="img"></p>
<h5 id="资源管理-1"><a href="#资源管理-1" class="headerlink" title="资源管理"></a>资源管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215627.jpg" alt="img"></p>
<h5 id="友情链接管理"><a href="#友情链接管理" class="headerlink" title="友情链接管理"></a>友情链接管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215710.jpg" alt="img"></p>
<h5 id="评论管理-1"><a href="#评论管理-1" class="headerlink" title="评论管理"></a>评论管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215756.jpg" alt="img"></p>
<h5 id="下载信息管理"><a href="#下载信息管理" class="headerlink" title="下载信息管理"></a>下载信息管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215843.jpg" alt="img"></p>
<h5 id="消息管理"><a href="#消息管理" class="headerlink" title="消息管理"></a>消息管理</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117215925.jpg" alt="img"></p>
<h5 id="安全退出"><a href="#安全退出" class="headerlink" title="安全退出"></a>安全退出</h5><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210117220004.jpg" alt="img"></p>]]></content>
      <categories>
        <category>个人项目</category>
      </categories>
      <tags>
        <tag>个人项目</tag>
      </tags>
  </entry>
  <entry>
    <title>Java进制转换</title>
    <url>/77.html</url>
    <content><![CDATA[<h3 id="十进制转换成二进制、八进制、十六进制"><a href="#十进制转换成二进制、八进制、十六进制" class="headerlink" title="十进制转换成二进制、八进制、十六进制"></a><strong>十进制转换成二进制、八进制、十六进制</strong></h3><h4 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer.toBinaryString(<span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<h4 id="八进制"><a href="#八进制" class="headerlink" title="八进制"></a>八进制</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer.toOctalString(<span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<h4 id="十六进制"><a href="#十六进制" class="headerlink" title="十六进制"></a>十六进制</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer.toHexString(<span class="number">100</span>)</span><br></pre></td></tr></table></figure>

<h4 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//十进制转换成二进制 1100100</span></span><br><span class="line">    System.out.println(Integer.toBinaryString(<span class="number">100</span>));</span><br><span class="line">    <span class="comment">//十进制转换成八进制 144</span></span><br><span class="line">    System.out.println(Integer.toOctalString(<span class="number">100</span>));</span><br><span class="line">    <span class="comment">//十进制转换成十六进制 64</span></span><br><span class="line">    System.out.println(Integer.toHexString(<span class="number">100</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><font color="#dd0000">1100100</font><br><font color="#dd0000">144</font><br><font color="#dd0000">64</font></p>
<h3 id="各种进制转换成十进制"><a href="#各种进制转换成十进制" class="headerlink" title="各种进制转换成十进制"></a><strong>各种进制转换成十进制</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Integer.parseInt(<span class="string">&quot;1100100&quot;</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure>

<p>第一个参数为要转换成十进制的数（它是几进制数由第二个参数决定），第二个参数是说明第一个参数是几进制数</p>
<h4 id="Java代码-1"><a href="#Java代码-1" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//二进制转换成十进制</span></span><br><span class="line">    System.out.println(Integer.parseInt(<span class="string">&quot;1100100&quot;</span>, <span class="number">2</span>));</span><br><span class="line">    <span class="comment">//八进制转换成十进制</span></span><br><span class="line">    System.out.println(Integer.parseInt(<span class="string">&quot;144&quot;</span>, <span class="number">8</span>));</span><br><span class="line">    <span class="comment">//十六进制转换成十进制</span></span><br><span class="line">    System.out.println(Integer.parseInt(<span class="string">&quot;4096&quot;</span>, <span class="number">16</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><font color="#dd0000">100</font><br><font color="#dd0000">100</font><br><font color="#dd0000">16534</font></p>
<h3 id="十进制数转换成其他任何进制数（自己实现）"><a href="#十进制数转换成其他任何进制数（自己实现）" class="headerlink" title="十进制数转换成其他任何进制数（自己实现）"></a><strong>十进制数转换成其他任何进制数（自己实现）</strong></h3><h4 id="Java代码-2"><a href="#Java代码-2" class="headerlink" title="Java代码"></a>Java代码</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//10进制数转换成15进制数</span></span><br><span class="line">        System.out.println(getResult(getSting(<span class="number">26</span>,<span class="number">15</span>)));</span><br><span class="line">        <span class="comment">//10进制数转换成7进制数</span></span><br><span class="line">        System.out.println(getResult(getSting(<span class="number">26</span>,<span class="number">7</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据除n取余法获得基本的进制数(余数10没有用A表示,11没有用B表示,以此类推...)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   要转换的十进制数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> radix 要转换成多少进制数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSting</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">int</span> radix)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">while</span> (num != <span class="number">0</span>) &#123;</span><br><span class="line">            sb.append(num % radix).append(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">            num = num / radix;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/**获得最终结果(余数10用A表示,11用B表示,以此类推...)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> str</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getResult</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        String[] arr = str.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        String[] arr2 = <span class="keyword">new</span> String[arr.length];</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            arr2[j] = arr[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (String s : arr2) &#123;</span><br><span class="line">            <span class="keyword">if</span> (Integer.parseInt(s) &gt; <span class="number">9</span>) &#123;</span><br><span class="line">                sb.append((<span class="keyword">char</span>)(Integer.parseInt(s) + <span class="number">55</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sb.append(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="结果-1"><a href="#结果-1" class="headerlink" title="结果"></a>结果</h4><p><font color="#dd0000">1B</font><br><font color="#dd0000">35</font></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>除X取余法查看博客：<a href="/2020/10/13/20/">进制</a>（第一张图片便是除2取余法）</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>域宽</title>
    <url>/78.html</url>
    <content><![CDATA[<p>用于存放输出数据的宽度称为“域宽”。</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//数字4代表域宽为4</span></span><br><span class="line">    System.out.printf(<span class="string">&quot;%4d&quot;</span>,<span class="number">1</span>);</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.printf(<span class="string">&quot;%4d&quot;</span>,<span class="number">12</span>);</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.printf(<span class="string">&quot;%4d&quot;</span>,<span class="number">123</span>);</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.printf(<span class="string">&quot;%4d&quot;</span>,<span class="number">1234</span>);</span><br><span class="line">    System.out.println();</span><br><span class="line">    System.out.printf(<span class="string">&quot;%4d&quot;</span>,<span class="number">12345</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210120104008.jpg" alt="img"></p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a><strong>分析</strong></h3><p>确定域宽为4，</p>
<p>输出1时，前面有3个空格；</p>
<p>输出12时，前面有2个空格；</p>
<p>输出123时，前面有1个空格；</p>
<p>输出1234时，前面有0个空格；</p>
<p>输出12345时，此时长度超过域宽则直接输出；</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>最终结果不用科学计数</title>
    <url>/79.html</url>
    <content><![CDATA[<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;科学计数:&quot;</span>);</span><br><span class="line">    System.out.println(<span class="number">20</span>*<span class="number">3.156</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;不是科学计数:&quot;</span>);</span><br><span class="line">    System.out.println(<span class="keyword">new</span> BigDecimal(<span class="number">20</span>*<span class="number">3.156</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>*<span class="number">10</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210121202425.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>标识符</title>
    <url>/8.html</url>
    <content><![CDATA[<h3 id="定义及特点"><a href="#定义及特点" class="headerlink" title="定义及特点"></a><strong>定义及特点</strong></h3><p>定义：在程序中自定义的一些名称，例如：类名。</p>
<p>特点：由26个英文字母大小写，数字：0-9，符号：_、$组成。</p>
<h3 id="定义合法标识符规则"><a href="#定义合法标识符规则" class="headerlink" title="定义合法标识符规则"></a><strong>定义合法标识符规则</strong></h3><p>1、数字不可以开头，例如：2Demo就不可以。</p>
<p>2、不可以使用关键字，例如：public就不可以，因为public是关键字。</p>
<p>3、不可以包含“_、$”以外的特殊符号，例如：“Demo Test”就不可以，其中的空格就是特殊符号。</p>
<p>PS.</p>
<p>1、Java中严格区分大小写。</p>
<p>2、在起名字时，为了提高阅读性，要尽量有意义。</p>
<p>3、公司中经常会通过“_”代表某一类名称，例如：_temp。</p>
<p>4、通过“$”分隔主名称与子名称，例如：TrafficLamp$Red。</p>
<h3 id="Java中的名称规范"><a href="#Java中的名称规范" class="headerlink" title="Java中的名称规范"></a><strong>Java中的名称规范</strong></h3><p> 包名：多单词组成时所有字母都小写。</p>
<p>例如：xxxyyyzzz</p>
<p>类名接口名：多单词组成时，所有单词的首字母大写。</p>
<p>例如：XxxYyyZzz</p>
<p>变量名和函数名：多单词组成时，第一个单词首字母小写，第二个单词开始每个单词首字母大写。</p>
<p>例如：xxxYyyZzz</p>
<p>常量名：所有字母都大写。多单词时每个单词用下划线连接。</p>
<p>例如：XXX_YYY_ZZZ</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java保留两位小数</title>
    <url>/80.html</url>
    <content><![CDATA[<h3 id="String的format方法"><a href="#String的format方法" class="headerlink" title="String的format方法"></a><strong>String的format方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> a=<span class="number">12.3333f</span>;</span><br><span class="line">System.out.println(String.format(<span class="string">&quot;%.2f&quot;</span>,a));</span><br></pre></td></tr></table></figure>

<h3 id="DecimalFormat的format方法"><a href="#DecimalFormat的format方法" class="headerlink" title="DecimalFormat的format方法"></a><strong>DecimalFormat的format方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">float</span> a=<span class="number">12.3333f</span>;</span><br><span class="line">DecimalFormat decimalFormat = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;#.00&quot;</span>);</span><br><span class="line">System.out.println(decimalFormat.format(a));</span><br></pre></td></tr></table></figure>

<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">float</span> a=<span class="number">12.3333f</span>;</span><br><span class="line">    System.out.println(String.format(<span class="string">&quot;%.2f&quot;</span>,a));</span><br><span class="line">    DecimalFormat decimalFormat = <span class="keyword">new</span> DecimalFormat(<span class="string">&quot;#.00&quot;</span>);</span><br><span class="line">    System.out.println(decimalFormat.format(a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><font color="#dd0000">12.33</font><br><font color="#dd0000">12.33</font></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>计算某年某月有多少天</title>
    <url>/81.html</url>
    <content><![CDATA[<p>可快速计算某年二月是否是闰年，因为已经知道了二月有多少天</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a><strong>Java代码</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">while</span> (sc.hasNext()) &#123;</span><br><span class="line">        String str = sc.nextLine();</span><br><span class="line">        <span class="keyword">int</span> year = Integer.parseInt(str.split(<span class="string">&quot; &quot;</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">int</span> mouth = Integer.parseInt(str.split(<span class="string">&quot; &quot;</span>)[<span class="number">1</span>]);</span><br><span class="line">        Calendar calendar=Calendar.getInstance();</span><br><span class="line">        <span class="comment">//设置年份</span></span><br><span class="line">        calendar.set(Calendar.YEAR, year);</span><br><span class="line">        <span class="comment">//设置月份</span></span><br><span class="line">        calendar.set(Calendar.MONTH, mouth-<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//获得该年该月份的最大天数</span></span><br><span class="line">        <span class="keyword">int</span> lastDay=calendar.getActualMaximum(Calendar.DAY_OF_MONTH);</span><br><span class="line">        System.out.println(lastDay);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><font color="#dd0000">2008 2</font><br><font color="#dd0000">29</font></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>解决：Windows10左下角电池图标不见了</title>
    <url>/82.html</url>
    <content><![CDATA[<blockquote>
<p>打开此电脑，选择管理</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210122131456.jpg" alt="img"></p>
<blockquote>
<p>点击左边菜单的设备管理器，然后找到电池</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210122131653.jpg" alt="img"></p>
<blockquote>
<p>分别对电池下的两个选项右键点击，然后禁用设备，再启用设备即可</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210122131845.jpg" alt="img"></p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>idea Debug循环跳到指定次数</title>
    <url>/83.html</url>
    <content><![CDATA[<blockquote>
<p>开始前先关闭程序(或终止循环)，右键红色圆圈●，然后点击蓝色字体链接More或者按下图中指定快捷键</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210124150736.jpg" alt="img"></p>
<blockquote>
<p>勾选Pass count，输入目标循环次数，点击右下角的Done按钮，然后开始该循环即可</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210124151053.jpg" alt="img"></p>
<blockquote>
<p>如图，循环一开始就到了第15次，即i=14</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210124151444.jpg" alt="img"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>二元运算符连接两个值</title>
    <url>/84.html</url>
    <content><![CDATA[<p>当用一个二元运算符连接两个值时（例如a+b，a是整数，b是浮点数），先要将两个操作数转换成同一种类型，然后再进行计算</p>
<p>如果两个数中有一个是double类型，则另一个会转换成double类型（不满足当前条件则向下判断）</p>
<p>否则，如果两个数中有一个是float类型，则另一个会转换成float类型</p>
<p>否则，如果两个数中有一个是long类型，则另一个会转换成long类型</p>
<p>否则，两个数都被转换成int类型</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>使用天气插件</title>
    <url>/85.html</url>
    <content><![CDATA[<h3 id="进入网址"><a href="#进入网址" class="headerlink" title="进入网址"></a><strong>进入网址</strong></h3><p><a href="https://www.tianqi.com/plugin/">天气预报代码_天气预报插件_免费天气预报代码(插件)调用——天气网</a></p>
<h3 id="选择自己需要的天气样式代码"><a href="#选择自己需要的天气样式代码" class="headerlink" title="选择自己需要的天气样式代码"></a><strong>选择自己需要的天气样式代码</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210131013530.jpg" alt="img"></p>
<span id="more"></span>

<h3 id="修改代码"><a href="#修改代码" class="headerlink" title="修改代码"></a><strong>修改代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">hspace</span>=<span class="string">&quot;0&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://i.tianqi.com/?c=code&amp;a=getcode&amp;id=35&amp;py=chongqing&amp;site=34&amp;icon=1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果要获取某一城市的天气，修改py的值即可（py的值为该城市的拼音且全部是小写），如果根据用户地址获取天气则将&amp;py=chongqing删除</p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>:hover实现鼠标悬停效果</title>
    <url>/86.html</url>
    <content><![CDATA[<p>:hover 选择器用于选择鼠标指针浮动在上面的元素。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><h4 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">herf</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="css代码"><a href="#css代码" class="headerlink" title="css代码"></a>css代码</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span><span class="selector-class">.test</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h3><p>鼠标悬停在a标签上时会将字体大小设置为15px</p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript实现点击图片查看原图</title>
    <url>/87.html</url>
    <content><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><h4 id="html代码"><a href="#html代码" class="headerlink" title="html代码:"></a>html代码:</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;outerdiv&quot;</span></span></span><br><span class="line"><span class="tag">     <span class="attr">style</span>=<span class="string">&quot;position:fixed;top:0;left:0;background:rgba(0,0,0,0.7);z-index:2;width:100%;height:100%;display:none;&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;innerdiv&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute;&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&quot;bigimg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border:5px solid #fff;&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: yellow;text-align: center&quot;</span>&gt;</span>************************点击图片外任何区域即可关闭图片************************<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a>JavaScript代码</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使所有图片都生效 </span></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;img&quot;</span>).addClass(<span class="string">&quot;pimg&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//图片放大</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">    $(<span class="string">&quot;.pimg&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _this = $(<span class="built_in">this</span>);<span class="comment">//将当前的pimg元素作为_this传入函数</span></span><br><span class="line">        imgShow(<span class="string">&quot;#outerdiv&quot;</span>, <span class="string">&quot;#innerdiv&quot;</span>, <span class="string">&quot;#bigimg&quot;</span>, _this);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">imgShow</span>(<span class="params">outerdiv, innerdiv, bigimg, _this</span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">var</span> src = _this.attr(<span class="string">&quot;src&quot;</span>);<span class="comment">//获取当前点击的pimg元素中的src属性</span></span><br><span class="line">    $(bigimg).attr(<span class="string">&quot;src&quot;</span>, src);<span class="comment">//设置#bigimg元素的src属性</span></span><br><span class="line">    <span class="comment">/*获取当前点击图片的真实大小，并显示弹出层及大图*/</span></span><br><span class="line">    $(<span class="string">&quot;&lt;img/&gt;&quot;</span>).attr(<span class="string">&quot;src&quot;</span>, src).load(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> windowW = $(<span class="built_in">window</span>).width(); <span class="comment">//获取当前窗口宽度</span></span><br><span class="line">        <span class="keyword">var</span> windowH = $(<span class="built_in">window</span>).height(); <span class="comment">//获取当前窗口高度</span></span><br><span class="line">        <span class="keyword">var</span> realWidth = <span class="built_in">this</span>.width; <span class="comment">//获取图片真实宽度</span></span><br><span class="line">        <span class="keyword">var</span> realHeight = <span class="built_in">this</span>.height; <span class="comment">//获取图片真实高度</span></span><br><span class="line">        <span class="keyword">var</span> imgWidth, imgHeight;</span><br><span class="line">        <span class="keyword">var</span> scale = <span class="number">0.8</span>; <span class="comment">//缩放尺寸，当图片真实宽度和高度大于窗口宽度和高度时进行缩放</span></span><br><span class="line">        <span class="keyword">if</span> (realHeight &gt; windowH * scale) &#123; <span class="comment">//判断图片高度</span></span><br><span class="line">            imgHeight = windowH * scale; <span class="comment">//如大于窗口高度，图片高度进行缩放</span></span><br><span class="line">            imgWidth = imgHeight / realHeight * realWidth; <span class="comment">//等比例缩放宽度</span></span><br><span class="line">            <span class="keyword">if</span> (imgWidth &gt; windowW * scale) &#123; <span class="comment">//如宽度扔大于窗口宽度</span></span><br><span class="line">                imgWidth = windowW * scale; <span class="comment">//再对宽度进行缩放</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (realWidth &gt; windowW * scale) &#123; <span class="comment">//如图片高度合适，判断图片宽度</span></span><br><span class="line">            imgWidth = windowW * scale; <span class="comment">//如大于窗口宽度，图片宽度进行缩放</span></span><br><span class="line">            imgHeight = imgWidth / realWidth * realHeight; <span class="comment">//等比例缩放高度</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//如果图片真实高度和宽度都符合要求，高宽不变</span></span><br><span class="line">            imgWidth = realWidth;</span><br><span class="line">            imgHeight = realHeight;</span><br><span class="line">        &#125;</span><br><span class="line">        $(bigimg).css(<span class="string">&quot;width&quot;</span>, imgWidth); <span class="comment">//以最终的宽度对图片缩放</span></span><br><span class="line">        <span class="keyword">var</span> w = (windowW - imgWidth) / <span class="number">2</span>; <span class="comment">//计算图片与窗口左边距</span></span><br><span class="line">        <span class="keyword">var</span> h = (windowH - imgHeight) / <span class="number">2</span>; <span class="comment">//计算图片与窗口上边距</span></span><br><span class="line">        $(innerdiv).css(&#123;<span class="string">&quot;top&quot;</span>: h, <span class="string">&quot;left&quot;</span>: w&#125;); <span class="comment">//设置#innerdiv的top和left属性</span></span><br><span class="line">        $(outerdiv).fadeIn(<span class="string">&quot;fast&quot;</span>); <span class="comment">//淡入显示#outerdiv及.pimg</span></span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    $(outerdiv).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//再次点击淡出消失弹出层</span></span><br><span class="line">        $(<span class="built_in">this</span>).fadeOut(<span class="string">&quot;fast&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a><strong>结果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210203134727.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://www.cnblogs.com/wentutu/p/11271732.html#autoid-0-0-0">点击小图查看原图 - 素衣居士 - 博客园</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot引入Thymeleaf</title>
    <url>/88.html</url>
    <content><![CDATA[<h3 id="pom-xml代码"><a href="#pom-xml代码" class="headerlink" title="pom.xml代码"></a><strong>pom.xml代码</strong></h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a><strong>application.yml配置</strong></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">thymeleaf:</span></span><br><span class="line">    <span class="attr">cache:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h3 id="HMTL页面修改"><a href="#HMTL页面修改" class="headerlink" title="HMTL页面修改"></a><strong>HMTL页面修改</strong></h3><p>找到html标签头部&lt;html&gt;，一般在.html文件第二行</p>
<h4 id="修改前"><a href="#修改前" class="headerlink" title="修改前"></a>修改前</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>为了让HTML代码页面变得美观，可加入<!--suppress ALL-->抑制所有警告（html标签头部<html>前加入即可）</p>
<p>至此，Spring Boot引入Thymeleaf的操作已完成</p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Spring Boot</tag>
        <tag>Thymeleaf</tag>
      </tags>
  </entry>
  <entry>
    <title>Java从键盘输入的三种方法</title>
    <url>/89.html</url>
    <content><![CDATA[<h3 id="System-in的read方法"><a href="#System-in的read方法" class="headerlink" title="System.in的read方法"></a><strong>System.in的read方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = System.in.read();</span><br><span class="line">    System.out.println(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方式极其简单，但是只能读入一个字符，且必须是字符类型，输出该字符的ASCII码。（如果输入字符串，则指能读入第一个字符，在下面的截图中可以看到：输入ab时输出了97，那么我们可以判断出指能读入第一个字符，因为a的ASCII码是97）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210207102420.jpg" alt="img"></p>
<h3 id="InputStreamReader和BufferedReader方法"><a href="#InputStreamReader和BufferedReader方法" class="headerlink" title="InputStreamReader和BufferedReader方法"></a><strong>InputStreamReader和BufferedReader方法</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    InputStreamReader is = <span class="keyword">new</span> InputStreamReader(System.in);</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(is);</span><br><span class="line">    String name = br.readLine();</span><br><span class="line">    System.out.println(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方式可以读取一个字符串，但是如果需要读取int，float等类型仍需要自己转换。</p>
<h3 id="Scanner类"><a href="#Scanner类" class="headerlink" title="Scanner类"></a><strong>Scanner类</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">int</span> i = sc.nextInt();</span><br><span class="line">    <span class="keyword">float</span> f = sc.nextFloat();</span><br><span class="line">    String s = sc.nextLine();</span><br><span class="line">    System.out.println(i);</span><br><span class="line">    System.out.println(f);</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这种方式使用java5之后添加的Scanner类，Scanner类提供了读取int，float及字符串的方法，使用十分方便。同时，Scanner不仅可以读取键盘输入值，也可以读取文件内容，只需要将构造方法中的数据来源切换成该文件即可。</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/qq_24629159/article/details/83960174">java 读取键盘输入_呼延十-CSDN博客_java读取键盘输入</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Tomcat运行web项目不带项目名字</title>
    <url>/9.html</url>
    <content><![CDATA[<p>默认情况下，项目发布到Tomcat，要运行项目。浏览器地址是这样的： <a href="http://localhost:8080/MyBlog">http://localhost:8080/MyBlog</a> 首先在Tomcat安装目录的config文件夹中找到server.xml,然后找到如下代码并将端口8080改为80,这样我们访问项目时就不需要加端口号了</p>
<p>修改前：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改后：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;80&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span> <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span> <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后在最下面继续找到Host节点,在里面添加如下代码(路径为webapps中项目的路径):</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;F:\java\apache-tomcat-9.0.22-windows-x64\apache-tomcat-9.0.22\webapps\MyBlog&quot;</span> <span class="attr">debug</span>=<span class="string">&quot;0&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20201010181120.jpg" alt="20210227090442.jpg"></p>]]></content>
      <categories>
        <category>Tomcat</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Thymeleaf常用属性总结</title>
    <url>/90.html</url>
    <content><![CDATA[<h3 id="th-text"><a href="#th-text" class="headerlink" title="th:text"></a><strong>th:text</strong></h3><p>用于显示转义后的文本（不尊重我们的HTML标记而对其进行转义）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:text=&quot;$&#123;blog.title&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="th-utext"><a href="#th-utext" class="headerlink" title="th:utext"></a><strong>th:utext</strong></h3><p>用于显示未转义的文本（尊重我们的HTML标记而不对其进行转义）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:utext=&quot;$&#123;blog.content&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="th-if"><a href="#th-if" class="headerlink" title="th:if"></a><strong>th:if</strong></h3><p>条件判断，条件成立则在页面中显示，不成立则不显示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:if=&quot;$&#123;blog!=null&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="th-each"><a href="#th-each" class="headerlink" title="th:each"></a><strong>th:each</strong></h3><p>循环语句，如果要显示一个List集合的所有内容则使用循环遍历，下面代码中blogList代表要循环遍历的集合，blog则代表集合中的每个元素（或实体）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;blog:$&#123;blogList&#125;&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="截取"><a href="#截取" class="headerlink" title="截取"></a><strong>截取</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:text=&quot;$&#123;#strings.abbreviate(blog.title,18)&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="格式化时间"><a href="#格式化时间" class="headerlink" title="格式化时间"></a><strong>格式化时间</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:text=&quot;$&#123;#dates.format(blog.releaseDate,&#x27;yyyy-MM-dd HH:mm:ss&#x27;)&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="th-href"><a href="#th-href" class="headerlink" title="th:href"></a><strong>th:href</strong></h3><p>a标签的href链接、或者是HTML头文件的link引入地址</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:href=&quot;@&#123;&#x27;/?page=1&amp;articleTypeId=&#x27;+$&#123;articleType.id&#125;&#125;&quot;</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/static/vendor/bootstrap/css/bootstrap.min.css&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="th-src"><a href="#th-src" class="headerlink" title="th:src"></a><strong>th:src</strong></h3><p>img标签的图片链接、或者是HTML头文件的script引入地址</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:src=&quot;@&#123;&#x27;/static/images/userImage/&#x27;+$&#123;comment.user.imageName&#125;&#125;&quot;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="th-title"><a href="#th-title" class="headerlink" title="th:title"></a><strong>th:title</strong></h3><p>描述了元素的额外信息 (作为工具条使用)，当页面上无法显示全部文本时，可通过title实现鼠标悬停实现查看全部文本信息</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:title=&quot;$&#123;blog.title&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="th-style"><a href="#th-style" class="headerlink" title="th:style"></a><strong>th:style</strong></h3><p>行内样式，可以结合条件表达式实现动态选择（满足条件表达式则选择第一个结果，不满足则选择第二种结果）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">th:style=&quot;$&#123;articleTypeId == &#x27;&#x27;+articleType.id+&#x27;&#x27;?&#x27;margin-left: 6px;color:red;float: left&#x27;:&#x27;margin-left: 6px;float: left;color:#1e9fff&#x27;&#125;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="只需要List集合中的部分元素（或实体）"><a href="#只需要List集合中的部分元素（或实体）" class="headerlink" title="只需要List集合中的部分元素（或实体）"></a><strong>只需要List集合中的部分元素（或实体）</strong></h3><p>当一个集合中的元素数量超过我们需要显示的元素数量时，可使用……Stat.count和th:if（省略号处根据具体情况填写）</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:each</span>=<span class="string">&quot;recommendBlog:$&#123;recommendBlogList&#125;&quot;</span> <span class="attr">th:if</span>=<span class="string">&quot;$&#123;recommendBlogStat.count&lt;=10&#125;&quot;</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="获取随机数"><a href="#获取随机数" class="headerlink" title="获取随机数"></a><strong>获取随机数</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">$&#123;#numbers.formatDecimal(T(java.lang.Math).floor(T(java.lang.Math).random()*3)+1,1,0)&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>Thymeleaf</tag>
      </tags>
  </entry>
  <entry>
    <title>前端实现返回顶部</title>
    <url>/91.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#gotop&quot;</span> <span class="attr">title</span>=<span class="string">&quot;返回顶部&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/images/top2.png&#125;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;gotop&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: fixed;bottom: 10%;display: none;height: 40px;margin-left: 96%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//返回顶部图标出现或者消失</span></span><br><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="built_in">window</span>).scrollTop() &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                $(<span class="string">&quot;#gotop&quot;</span>).fadeIn(<span class="number">1000</span>);<span class="comment">//一秒渐入动画</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $(<span class="string">&quot;#gotop&quot;</span>).fadeOut(<span class="number">1000</span>);<span class="comment">//一秒渐隐动画</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"> </span><br><span class="line">        $(<span class="string">&quot;#gotop&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">&#x27;body,html&#x27;</span>).animate(&#123;<span class="attr">scrollTop</span>: <span class="number">0</span>&#125;, <span class="number">1000</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>idea版本更新</title>
    <url>/92.html</url>
    <content><![CDATA[<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a><strong>下载</strong></h3><p><a href="https://www.jetbrains.com/zh-cn/">JetBrains: 软件开发人员和团队的必备工具</a></p>
<h3 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h3><p>可以先保存当前idea配置（查看链接：<a href="/63.html">idea导出配置和导入配置的方法</a>）</p>
<p>①找到idea安装目录下的bin文件夹的Uninstall.exe并点击开始卸载</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210213083349.jpg" alt="img"></p>
<p>②勾选下图中的选项，只勾选划红线的第一个选项，不要勾选第二个（不然新版本安装后无法读取原来配置和插件），然后开始卸载等待完成即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210213084401.jpg" alt="img"></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><strong>安装</strong></h3><p>选择安装路径</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210213111642.jpg" alt="img"></p>
<p>配置，然后点击下一步安装即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210213111832.jpg" alt="img"></p>
<h3 id="导入配置"><a href="#导入配置" class="headerlink" title="导入配置"></a><strong>导入配置</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210213114552.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/Jarbein/article/details/104048964">idea版本更新安装教程</a></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>实现鼠标移到图片改变，移出图片恢复原来图片</title>
    <url>/93.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;imgdiv&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#gotop&quot;</span> <span class="attr">title</span>=<span class="string">&quot;返回顶部&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">th:src</span>=<span class="string">&quot;@&#123;/static/images/top2.png&#125;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;gotop&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;imgsrc&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">style</span>=<span class="string">&quot;position: fixed;bottom: 10%;display: none;height: 40px;margin-left: 96%&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;.imgdiv&quot;</span>).mouseover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.imgsrc&quot;</span>).attr(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;/static/images/top4.png&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">&quot;.imgdiv&quot;</span>).mouseout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        $(<span class="string">&quot;.imgsrc&quot;</span>).attr(<span class="string">&quot;src&quot;</span>,<span class="string">&quot;/static/images/top2.png&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/u014599700/article/details/69382414?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">JQuery鼠标移到图片改变，移出图片恢复原来图片_u014599700的专栏-CSDN博客</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>遍历HashMap的四种方法</title>
    <url>/94.html</url>
    <content><![CDATA[<h3 id="创建HashMap集合"><a href="#创建HashMap集合" class="headerlink" title="创建HashMap集合"></a><strong>创建HashMap集合</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HashMap hashMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">hashMap.put(<span class="number">1</span>, <span class="string">&quot;aaa&quot;</span>);</span><br><span class="line">hashMap.put(<span class="number">2</span>, <span class="string">&quot;bbb&quot;</span>);</span><br><span class="line">hashMap.put(<span class="number">3</span>, <span class="string">&quot;ccc&quot;</span>);</span><br><span class="line">hashMap.put(<span class="number">4</span>, <span class="string">&quot;ddd&quot;</span>);</span><br></pre></td></tr></table></figure>

<h3 id="使用keySet-方法，先遍历键，再取出值"><a href="#使用keySet-方法，先遍历键，再取出值" class="headerlink" title="使用keySet()方法，先遍历键，再取出值"></a><strong>使用keySet()方法，先遍历键，再取出值</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (Integer key : hashMap.keySet()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;key=&quot;</span> + key + <span class="string">&quot;,value=&quot;</span> + hashMap.get(key));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用values-方法，直接遍历值"><a href="#使用values-方法，直接遍历值" class="headerlink" title="使用values()方法，直接遍历值"></a><strong>使用values()方法，直接遍历值</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (String value : hashMap.values()) &#123;</span><br><span class="line">    System.out.println(value);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用entrySet-方法，然后通过getKey-和getValue-分别取键和值"><a href="#使用entrySet-方法，然后通过getKey-和getValue-分别取键和值" class="headerlink" title="使用entrySet()方法，然后通过getKey()和getValue()分别取键和值"></a><strong>使用entrySet()方法，然后通过getKey()和getValue()分别取键和值</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (Map.Entry entry : hashMap.entrySet()) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;key=&quot;</span> + entry.getKey() + <span class="string">&quot;,value=&quot;</span> + entry.getValue());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="通过ForEach方法直接遍历"><a href="#通过ForEach方法直接遍历" class="headerlink" title="通过ForEach方法直接遍历"></a><strong>通过ForEach方法直接遍历</strong></h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">hashMap.forEach((key, value) -&gt; &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;key=&quot;</span> + key + <span class="string">&quot;,value=&quot;</span> + value);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://cloud.tencent.com/developer/article/1532402">java集合|遍历HashMap的四种方法 - 云+社区 - 腾讯云</a></p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>实现鼠标移动到div块时自动加阴影效果</title>
    <url>/95.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shadow&quot;</span>&gt;</span></span><br><span class="line">    //已省略无关代码</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.shadow</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">0.5s</span>; <span class="comment">/*停留时间显示*/</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.shadow</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: <span class="number">#337ab7</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    -moz-<span class="attribute">box-shadow</span>: <span class="number">#337ab7</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">#337ab7</span> <span class="number">0px</span> <span class="number">5px</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210311223347.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/tenggeer0789/article/details/89478859">css怎么实现鼠标移动到div块时自动加阴影效果？_tenggeer0789的博客-CSDN博客</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>给网站添加鼠标点击弹出指定汉字特效</title>
    <url>/96.html</url>
    <content><![CDATA[<h3 id="JavaScript代码"><a href="#JavaScript代码" class="headerlink" title="JavaScript代码"></a><strong>JavaScript代码</strong></h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 鼠标特效 */</span></span><br><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span>, <span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> $i = $(<span class="string">&quot;&quot;</span>).text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">            y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            <span class="string">&quot;z-index&quot;</span>: <span class="number">999999999999999999999999999999999999999999999999999999999999999999999</span>,</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span><br><span class="line">            <span class="string">&quot;left&quot;</span>: x,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">            <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#ff6651&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">                <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line">                <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="number">1500</span>,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $i.remove();</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a><strong>效果</strong></h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312043951.jpg" alt="img"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://blog.csdn.net/qq_42853046/article/details/81330578">给网站添加鼠标点击弹出指定汉字特效_无耳貂的博客-CSDN博客</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>给网站添加雪花特效</title>
    <url>/97.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a>HTML代码</h3><p>放在&lt;body&gt;标签前</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;snowMask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*网站雪花特效*/</span></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> snow &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>, <span class="number">0</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">500px</span> <span class="number">500px</span>, <span class="number">1000px</span> <span class="number">500px</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">@keyframes</span> snow &#123;</span><br><span class="line">    <span class="number">0%</span> &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>, <span class="number">0</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="number">100%</span> &#123;</span><br><span class="line">        <span class="attribute">background-position</span>: <span class="number">500px</span> <span class="number">500px</span>, <span class="number">1000px</span> <span class="number">500px</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">05</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-id">#snowMask</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">/static/images/snow1.png</span>), <span class="built_in">url</span>(<span class="string">/static/images/snow2.png</span>);</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: <span class="number">10s</span> snow linear infinite;</span><br><span class="line">    <span class="attribute">animation</span>: <span class="number">10s</span> snow linear infinite;</span><br><span class="line">    <span class="attribute">pointer-events</span>: none;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">9999</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="雪花图片网盘链接"><a href="#雪花图片网盘链接" class="headerlink" title="雪花图片网盘链接"></a><strong>雪花图片网盘链接</strong></h3><p>百度网盘链接：<a href="https://pan.baidu.com/s/1A3LP21J-Xf-D_Ol2DQrhbw">https://pan.baidu.com/s/1A3LP21J-Xf-D_Ol2DQrhbw</a></p>
<p>提取码：9e1g</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="http://www.seocid.com/561.html">纯CSS添加雪花网站动态背景特效兼容性好！-西德SEO</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>实现文字闪烁效果</title>
    <url>/98.html</url>
    <content><![CDATA[<h3 id="HTML代码"><a href="#HTML代码" class="headerlink" title="HTML代码"></a><strong>HTML代码</strong></h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>闪烁效果<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="CSS代码"><a href="#CSS代码" class="headerlink" title="CSS代码"></a><strong>CSS代码</strong></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*文字闪烁*/</span></span><br><span class="line"><span class="selector-class">.box1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">    <span class="attribute">animation</span>: changeshadow <span class="number">6s</span>  ease-in  infinite ;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: changeshadow <span class="number">6s</span> linear infinite;</span><br><span class="line">    -moz-<span class="attribute">animation</span>: changeshadow <span class="number">6s</span> linear infinite;</span><br><span class="line">    -ms-<span class="attribute">animation</span>: changeshadow <span class="number">6s</span> linear infinite;</span><br><span class="line">    -o-<span class="attribute">animation</span>: changeshadow <span class="number">6s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> changeshadow &#123;</span><br><span class="line">    <span class="number">0%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">    <span class="number">50%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">40px</span> red&#125;</span><br><span class="line">    <span class="number">100%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> changeshadow &#123;</span><br><span class="line">    <span class="number">0%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">    <span class="number">50%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">40px</span> red&#125;</span><br><span class="line">    <span class="number">100%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-moz-keyframes</span> changeshadow &#123;</span><br><span class="line">    <span class="number">0%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">    <span class="number">50%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">40px</span> red&#125;</span><br><span class="line">    <span class="number">100%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-ms-keyframes</span> changeshadow &#123;</span><br><span class="line">    <span class="number">0%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">    <span class="number">50%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">40px</span> red&#125;</span><br><span class="line">    <span class="number">100%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@-o-keyframes</span> changeshadow &#123;</span><br><span class="line">    <span class="number">0%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">    <span class="number">50%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">40px</span> red&#125;</span><br><span class="line">    <span class="number">100%</span>&#123; <span class="attribute">text-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">4px</span> red&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a><strong>PS.</strong></h3><p>来源：<a href="https://vircloud.net/operations/html5-effct.html">一些有趣的 html/css 特效</a></p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>解决：关于百度文库等网站无法复制</title>
    <url>/99.html</url>
    <content><![CDATA[<p>以最新版Edge浏览器浏览器为例，安装SuperCopy扩展，微软中国官方扩展商店地址如下：</p>
<p><a href="https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home">https://microsoftedge.microsoft.com/addons/Microsoft-Edge-Extensions-Home</a></p>
<p>搜索并安装该扩展，安装完成后打开百度文库的文档，然后点击浏览器菜单栏的该扩展图标，在出现的框框中点击中间的图片使之编成蓝色，再刷新该网站即可复制文档的内容</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/20210312040314.jpg" alt="img"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>idea快捷键大全</title>
    <url>/1.html</url>
    <content><![CDATA[<h4 id="Alt"><a href="#Alt" class="headerlink" title="Alt"></a><strong>Alt</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Alt + `</td>
<td align="center">显示版本控制常用操作菜单弹出层</td>
</tr>
<tr>
<td align="center">Alt + Q</td>
<td align="center">弹出一个提示，显示当前类的声明 / 上下文信息</td>
</tr>
<tr>
<td align="center">Alt + F1</td>
<td align="center">显示当前文件选择目标弹出层，弹出层中有很多目标可以进行选择</td>
</tr>
<tr>
<td align="center">Alt + F2</td>
<td align="center">对于前面页面，显示各类浏览器打开目标选择弹出层</td>
</tr>
<tr>
<td align="center">Alt + F3</td>
<td align="center">选中文本，逐个往下查找相同文本，并高亮显示</td>
</tr>
<tr>
<td align="center">Alt + F7</td>
<td align="center">查找光标所在的方法 / 变量 / 类被调用的地方</td>
</tr>
<tr>
<td align="center">Alt + F8</td>
<td align="center">在 Debug 的状态下，选中对象，弹出可输入计算表达式调试框，查看该输入内容的调试结果</td>
</tr>
<tr>
<td align="center">Alt + Home</td>
<td align="center">定位 / 显示到当前文件的 <code>Navigation Bar</code></td>
</tr>
<tr>
<td align="center">Alt + Enter</td>
<td align="center">IntelliJ IDEA 根据光标所在问题，提供快速修复选择，光标放在的位置不同提示的结果也不同 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Alt + Insert</td>
<td align="center">代码自动生成，如生成对象的 set / get 方法，构造函数，toString() 等</td>
</tr>
<tr>
<td align="center">Alt + 左方向键</td>
<td align="center">按左方向切换当前已打开的文件视图</td>
</tr>
<tr>
<td align="center">Alt + 右方向键</td>
<td align="center">按右方向切换当前已打开的文件视图</td>
</tr>
<tr>
<td align="center">Alt + 前方向键</td>
<td align="center">当前光标跳转到当前文件的前一个方法名位置</td>
</tr>
<tr>
<td align="center">Alt + 后方向键</td>
<td align="center">当前光标跳转到当前文件的后一个方法名位置</td>
</tr>
<tr>
<td align="center">Alt + 1,2,3…9</td>
<td align="center">显示对应数值的选项卡，其中 1 是 Project 用得最多</td>
</tr>
</tbody></table>
<h4 id="Ctrl"><a href="#Ctrl" class="headerlink" title="Ctrl"></a><strong>Ctrl</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + F</td>
<td align="center">在当前文件进行文本查找 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + R</td>
<td align="center">在当前文件进行文本替换 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Z</td>
<td align="center">撤销 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Y</td>
<td align="center">删除光标所在行 或 删除选中的行 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + X</td>
<td align="center">剪切光标所在行 或 剪切选择内容</td>
</tr>
<tr>
<td align="center">Ctrl + C</td>
<td align="center">复制光标所在行 或 复制选择内容</td>
</tr>
<tr>
<td align="center">Ctrl + D</td>
<td align="center">复制光标所在行 或 复制选择内容，并把复制内容插入光标位置下面 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + W</td>
<td align="center">递进式选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展选中范围 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + E</td>
<td align="center">显示最近打开的文件记录列表</td>
</tr>
<tr>
<td align="center">Ctrl + N</td>
<td align="center">根据输入的 <strong>类名</strong> 查找类文件</td>
</tr>
<tr>
<td align="center">Ctrl + G</td>
<td align="center">在当前文件跳转到指定行处</td>
</tr>
<tr>
<td align="center">Ctrl + J</td>
<td align="center">插入自定义动态代码模板</td>
</tr>
<tr>
<td align="center">Ctrl + P</td>
<td align="center">方法参数提示显示</td>
</tr>
<tr>
<td align="center">Ctrl + Q</td>
<td align="center">光标所在的变量 / 类名 / 方法名等上面（也可以在提示补充的时候按），显示文档内容</td>
</tr>
<tr>
<td align="center">Ctrl + U</td>
<td align="center">前往当前光标所在的方法的父类的方法 / 接口定义</td>
</tr>
<tr>
<td align="center">Ctrl + B</td>
<td align="center">进入光标所在的方法/变量的接口或是定义出，等效于 <code>Ctrl + 左键单击</code></td>
</tr>
<tr>
<td align="center">Ctrl + K</td>
<td align="center">版本控制提交项目，需要此项目有加入到版本控制才可用</td>
</tr>
<tr>
<td align="center">Ctrl + T</td>
<td align="center">版本控制更新项目，需要此项目有加入到版本控制才可用</td>
</tr>
<tr>
<td align="center">Ctrl + H</td>
<td align="center">显示当前类的层次结构</td>
</tr>
<tr>
<td align="center">Ctrl + O</td>
<td align="center">选择可重写的方法</td>
</tr>
<tr>
<td align="center">Ctrl + I</td>
<td align="center">选择可继承的方法</td>
</tr>
<tr>
<td align="center">Ctrl + +</td>
<td align="center">展开代码</td>
</tr>
<tr>
<td align="center">Ctrl + -</td>
<td align="center">折叠代码</td>
</tr>
<tr>
<td align="center">Ctrl + /</td>
<td align="center">注释光标所在行代码，会根据当前不同文件类型使用不同的注释符号 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + [</td>
<td align="center">移动光标到当前所在代码的花括号开始位置</td>
</tr>
<tr>
<td align="center">Ctrl + ]</td>
<td align="center">移动光标到当前所在代码的花括号结束位置</td>
</tr>
<tr>
<td align="center">Ctrl + F1</td>
<td align="center">在光标所在的错误代码出显示错误信息</td>
</tr>
<tr>
<td align="center">Ctrl + F3</td>
<td align="center">调转到所选中的词的下一个引用位置</td>
</tr>
<tr>
<td align="center">Ctrl + F4</td>
<td align="center">关闭当前编辑文件</td>
</tr>
<tr>
<td align="center">Ctrl + F8</td>
<td align="center">在 Debug 模式下，设置光标当前行为断点，如果当前已经是断点则去掉断点</td>
</tr>
<tr>
<td align="center">Ctrl + F9</td>
<td align="center">执行 Make Project 操作</td>
</tr>
<tr>
<td align="center">Ctrl + F11</td>
<td align="center">选中文件 / 文件夹，使用助记符设定 / 取消书签</td>
</tr>
<tr>
<td align="center">Ctrl + F12</td>
<td align="center">弹出当前文件结构层，可以在弹出的层上直接输入，进行筛选</td>
</tr>
<tr>
<td align="center">Ctrl + Tab</td>
<td align="center">编辑窗口切换，如果在切换的过程又加按上delete，则是关闭对应选中的窗口</td>
</tr>
<tr>
<td align="center">Ctrl + Enter</td>
<td align="center">智能分隔行</td>
</tr>
<tr>
<td align="center">Ctrl + End</td>
<td align="center">跳到文件尾</td>
</tr>
<tr>
<td align="center">Ctrl + Home</td>
<td align="center">跳到文件头</td>
</tr>
<tr>
<td align="center">Ctrl + Space</td>
<td align="center">基础代码补全，默认在 Windows 系统上被输入法占用，需要进行修改，建议修改为 <code>Ctrl + 逗号</code> <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Delete</td>
<td align="center">删除光标后面的单词或是中文句</td>
</tr>
<tr>
<td align="center">Ctrl + BackSpace</td>
<td align="center">删除光标前面的单词或是中文句</td>
</tr>
<tr>
<td align="center">Ctrl + 1,2,3…9</td>
<td align="center">定位到对应数值的书签位置</td>
</tr>
<tr>
<td align="center">Ctrl + 左键单击</td>
<td align="center">在打开的文件标题上，弹出该文件路径</td>
</tr>
<tr>
<td align="center">Ctrl + 光标定位</td>
<td align="center">按 Ctrl 不要松开，会显示光标所在的类信息摘要</td>
</tr>
<tr>
<td align="center">Ctrl + 左方向键</td>
<td align="center">光标跳转到当前单词 / 中文句的左侧开头位置</td>
</tr>
<tr>
<td align="center">Ctrl + 右方向键</td>
<td align="center">光标跳转到当前单词 / 中文句的右侧开头位置</td>
</tr>
<tr>
<td align="center">Ctrl + 前方向键</td>
<td align="center">等效于鼠标滚轮向前效果</td>
</tr>
<tr>
<td align="center">Ctrl + 后方向键</td>
<td align="center">等效于鼠标滚轮向后效果</td>
</tr>
</tbody></table>
<h4 id="Shift"><a href="#Shift" class="headerlink" title="Shift"></a><strong>Shift</strong></h4><table>
<thead>
<tr>
<th align="center"><strong>快捷键</strong></th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Shift + F1</td>
<td align="center">如果有外部文档可以连接外部文档</td>
</tr>
<tr>
<td align="center">Shift + F2</td>
<td align="center">跳转到上一个高亮错误 或 警告位置</td>
</tr>
<tr>
<td align="center">Shift + F3</td>
<td align="center">在查找模式下，查找匹配上一个</td>
</tr>
<tr>
<td align="center">Shift + F4</td>
<td align="center">对当前打开的文件，使用新Windows窗口打开，旧窗口保留</td>
</tr>
<tr>
<td align="center">Shift + F6</td>
<td align="center">对文件 / 文件夹 重命名</td>
</tr>
<tr>
<td align="center">Shift + F7</td>
<td align="center">在 Debug 模式下，智能步入。断点所在行上有多个方法调用，会弹出进入哪个方法</td>
</tr>
<tr>
<td align="center">Shift + F8</td>
<td align="center">在 Debug 模式下，跳出，表现出来的效果跟 <code>F9</code> 一样</td>
</tr>
<tr>
<td align="center">Shift + F9</td>
<td align="center">等效于点击工具栏的 <code>Debug</code> 按钮</td>
</tr>
<tr>
<td align="center">Shift + F10</td>
<td align="center">等效于点击工具栏的 <code>Run</code> 按钮</td>
</tr>
<tr>
<td align="center">Shift + F11</td>
<td align="center">弹出书签显示层</td>
</tr>
<tr>
<td align="center">Shift + Tab</td>
<td align="center">取消缩进</td>
</tr>
<tr>
<td align="center">Shift + ESC</td>
<td align="center">隐藏当前 或 最后一个激活的工具窗口</td>
</tr>
<tr>
<td align="center">Shift + End</td>
<td align="center">选中光标到当前行尾位置</td>
</tr>
<tr>
<td align="center">Shift + Home</td>
<td align="center">选中光标到当前行头位置</td>
</tr>
<tr>
<td align="center">Shift + Enter</td>
<td align="center">开始新一行。光标所在行下空出一行，光标定位到新行位置</td>
</tr>
<tr>
<td align="center">Shift + 左键单击</td>
<td align="center">在打开的文件名上按此快捷键，可以关闭当前打开文件</td>
</tr>
<tr>
<td align="center">Shift + 滚轮前后滚动</td>
<td align="center">当前文件的横向滚动轴滚动</td>
</tr>
</tbody></table>
<h4 id="Ctrl-Alt"><a href="#Ctrl-Alt" class="headerlink" title="Ctrl + Alt"></a><strong>Ctrl + Alt</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + Alt + L</td>
<td align="center">格式化代码，可以对当前文件和整个包目录使用 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Alt + O</td>
<td align="center">优化导入的类，可以对当前文件和整个包目录使用 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Alt + I</td>
<td align="center">光标所在行 或 选中部分进行自动代码缩进，有点类似格式化</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + T</td>
<td align="center">对选中的代码弹出环绕选项弹出层</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + J</td>
<td align="center">弹出模板选择窗口，讲选定的代码加入动态模板中</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + H</td>
<td align="center">调用层次</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + B</td>
<td align="center">在某个调用的方法名上使用会跳到具体的实现处，可以跳过接口</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + V</td>
<td align="center">快速引进变量</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + Y</td>
<td align="center">同步、刷新</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + S</td>
<td align="center">打开 IntelliJ IDEA 系统设置</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + F7</td>
<td align="center">显示使用的地方。寻找被该类或是变量被调用的地方，用弹出框的方式找出来</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + F11</td>
<td align="center">切换全屏模式</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + Enter</td>
<td align="center">光标所在行上空出一行，光标定位到新行</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + Home</td>
<td align="center">弹出跟当前文件有关联的文件弹出层</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + Space</td>
<td align="center">类名自动完成</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + 左方向键</td>
<td align="center">退回到上一个操作的地方 <code>（必备）**（注意与其他软件快捷键冲突）**</code></td>
</tr>
<tr>
<td align="center">Ctrl + Alt + 右方向键</td>
<td align="center">前进到上一个操作的地方 <code>（必备）**（注意与其他软件快捷键冲突）**</code></td>
</tr>
<tr>
<td align="center">Ctrl + Alt + 前方向键</td>
<td align="center">在查找模式下，跳到上个查找的文件</td>
</tr>
<tr>
<td align="center">Ctrl + Alt + 后方向键</td>
<td align="center">在查找模式下，跳到下个查找的文件</td>
</tr>
</tbody></table>
<h4 id="Ctrl-Shift"><a href="#Ctrl-Shift" class="headerlink" title="Ctrl + Shift"></a><strong>Ctrl + Shift</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + Shift + F</td>
<td align="center">根据输入内容查找整个项目 或 指定目录内文件 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + R</td>
<td align="center">根据输入内容替换对应内容，范围为整个项目 或 指定目录内文件 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + J</td>
<td align="center">自动将下一行合并到当前行末尾 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Z</td>
<td align="center">取消撤销 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + W</td>
<td align="center">递进式取消选择代码块。可选中光标所在的单词或段落，连续按会在原有选中的基础上再扩展取消选中范围 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + N</td>
<td align="center">通过文件名定位 / 打开文件 / 目录，打开目录需要在输入的内容后面多加一个正斜杠 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + U</td>
<td align="center">对选中的代码进行大 / 小写轮流转换 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + T</td>
<td align="center">对当前类生成单元测试类，如果已经存在的单元测试类则可以进行选择</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + C</td>
<td align="center">复制当前文件磁盘路径到剪贴板</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + V</td>
<td align="center">弹出缓存的最近拷贝的内容管理器弹出层</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + E</td>
<td align="center">显示最近修改的文件列表的弹出层</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + H</td>
<td align="center">显示方法层次结构</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + B</td>
<td align="center">跳转到类型声明处</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + I</td>
<td align="center">快速查看光标所在的方法 或 类的定义</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + A</td>
<td align="center">查找动作 / 设置</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + /</td>
<td align="center">代码块注释 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + [</td>
<td align="center">选中从光标所在位置到它的顶部中括号位置</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + ]</td>
<td align="center">选中从光标所在位置到它的底部中括号位置</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + +</td>
<td align="center">展开所有代码</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + -</td>
<td align="center">折叠所有代码</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + F7</td>
<td align="center">高亮显示所有该选中文本，按Esc高亮消失</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + F8</td>
<td align="center">在 Debug 模式下，指定断点进入条件</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + F9</td>
<td align="center">编译选中的文件 / 包 / Module</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + F12</td>
<td align="center">编辑器最大化</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Space</td>
<td align="center">智能代码提示</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Enter</td>
<td align="center">自动结束代码，行末自动添加分号 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Backspace</td>
<td align="center">退回到上次修改的地方</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 1,2,3…9</td>
<td align="center">快速添加指定数值的书签</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 左方向键</td>
<td align="center">在代码文件上，光标跳转到当前单词 / 中文句的左侧开头位置，同时选中该单词 / 中文句</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 右方向键</td>
<td align="center">在代码文件上，光标跳转到当前单词 / 中文句的右侧开头位置，同时选中该单词 / 中文句</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 左方向键</td>
<td align="center">在光标焦点是在工具选项卡上，缩小选项卡区域</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 右方向键</td>
<td align="center">在光标焦点是在工具选项卡上，扩大选项卡区域</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 前方向键</td>
<td align="center">光标放在方法名上，将方法移动到上一个方法前面，调整方法排序</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + 后方向键</td>
<td align="center">光标放在方法名上，将方法移动到下一个方法前面，调整方法排序</td>
</tr>
</tbody></table>
<h4 id="Alt-Shift"><a href="#Alt-Shift" class="headerlink" title="Alt + Shift"></a><strong>Alt + Shift</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Alt + Shift + N</td>
<td align="center">选择 / 添加 task</td>
</tr>
<tr>
<td align="center">Alt + Shift + F</td>
<td align="center">显示添加到收藏夹弹出层</td>
</tr>
<tr>
<td align="center">Alt + Shift + C</td>
<td align="center">查看最近操作项目的变化情况列表</td>
</tr>
<tr>
<td align="center">Alt + Shift + F</td>
<td align="center">添加到收藏夹</td>
</tr>
<tr>
<td align="center">Alt + Shift + I</td>
<td align="center">查看项目当前文件</td>
</tr>
<tr>
<td align="center">Alt + Shift + F7</td>
<td align="center">在 Debug 模式下，下一步，进入当前方法体内，如果方法体还有方法，则会进入该内嵌的方法中，依此循环进入</td>
</tr>
<tr>
<td align="center">Alt + Shift + F9</td>
<td align="center">弹出 <code>Debug</code> 的可选择菜单</td>
</tr>
<tr>
<td align="center">Alt + Shift + F10</td>
<td align="center">弹出 <code>Run</code> 的可选择菜单</td>
</tr>
<tr>
<td align="center">Alt + Shift + 左键双击</td>
<td align="center">选择被双击的单词 / 中文句，按住不放，可以同时选择其他单词 / 中文句</td>
</tr>
<tr>
<td align="center">Alt + Shift + 前方向键</td>
<td align="center">移动光标所在行向上移动</td>
</tr>
<tr>
<td align="center">Alt + Shift + 后方向键</td>
<td align="center">移动光标所在行向下移动</td>
</tr>
</tbody></table>
<h4 id="Ctrl-Shift-Alt"><a href="#Ctrl-Shift-Alt" class="headerlink" title="Ctrl + Shift + Alt"></a><strong>Ctrl + Shift + Alt</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ctrl + Shift + Alt + V</td>
<td align="center">无格式黏贴</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Alt + N</td>
<td align="center">前往指定的变量 / 方法</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Alt + S</td>
<td align="center">打开当前项目设置</td>
</tr>
<tr>
<td align="center">Ctrl + Shift + Alt + C</td>
<td align="center">复制参考信息</td>
</tr>
</tbody></table>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a><strong>其他</strong></h4><table>
<thead>
<tr>
<th align="center">快捷键</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">F2</td>
<td align="center">跳转到下一个高亮错误 或 警告位置 <code>（必备）</code></td>
</tr>
<tr>
<td align="center">F3</td>
<td align="center">在查找模式下，定位到下一个匹配处</td>
</tr>
<tr>
<td align="center">F4</td>
<td align="center">编辑源</td>
</tr>
<tr>
<td align="center">F7</td>
<td align="center">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则进入当前方法体内，如果该方法体还有方法，则不会进入该内嵌的方法中</td>
</tr>
<tr>
<td align="center">F8</td>
<td align="center">在 Debug 模式下，进入下一步，如果当前行断点是一个方法，则不进入当前方法体内</td>
</tr>
<tr>
<td align="center">F9</td>
<td align="center">在 Debug 模式下，恢复程序运行，但是如果该断点下面代码还有断点则停在下一个断点上</td>
</tr>
<tr>
<td align="center">F11</td>
<td align="center">添加书签</td>
</tr>
<tr>
<td align="center">F12</td>
<td align="center">回到前一个工具窗口</td>
</tr>
<tr>
<td align="center">Tab</td>
<td align="center">缩进</td>
</tr>
<tr>
<td align="center">ESC</td>
<td align="center">从工具窗口进入代码文件窗口</td>
</tr>
<tr>
<td align="center">连按两次Shift</td>
<td align="center">弹出 <code>Search Everywhere</code> 弹出层</td>
</tr>
</tbody></table>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown 代码块编程语言清单</title>
    <url>/273.html</url>
    <content><![CDATA[<h3 id="我的常用"><a href="#我的常用" class="headerlink" title="我的常用"></a>我的常用</h3><table>
<thead>
<tr>
<th>语言名称</th>
<th>Markdown 语言声明</th>
</tr>
</thead>
<tbody><tr>
<td>HTML</td>
<td>html</td>
</tr>
<tr>
<td>CSS</td>
<td>css</td>
</tr>
<tr>
<td>JavaScript</td>
<td>javascript</td>
</tr>
<tr>
<td>Java</td>
<td>java</td>
</tr>
<tr>
<td>Linux和Windows命令、Bash、文件路径</td>
<td>bash</td>
</tr>
<tr>
<td>XML</td>
<td>xml</td>
</tr>
<tr>
<td>.yml</td>
<td>yaml</td>
</tr>
<tr>
<td>SQL</td>
<td>sql</td>
</tr>
</tbody></table>
<h3 id="所有"><a href="#所有" class="headerlink" title="所有"></a>所有</h3><table>
<thead>
<tr>
<th align="left">语言名称</th>
<th align="left">Markdown 语言声明</th>
<th align="left">常见文件名</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1C Enterprise</td>
<td align="left">1c-enterprise</td>
<td align="left">*.bsl</td>
</tr>
<tr>
<td align="left">4D</td>
<td align="left">4d</td>
<td align="left">*.4dm</td>
</tr>
<tr>
<td align="left">ABAP</td>
<td align="left">abap</td>
<td align="left">*.abap</td>
</tr>
<tr>
<td align="left">ABNF</td>
<td align="left">abnf</td>
<td align="left">*.abnf</td>
</tr>
<tr>
<td align="left">AGS Script</td>
<td align="left">ags-script, ags</td>
<td align="left">*.asc</td>
</tr>
<tr>
<td align="left">AMPL</td>
<td align="left">ampl</td>
<td align="left">*.ampl</td>
</tr>
<tr>
<td align="left">ANTLR</td>
<td align="left">antlr</td>
<td align="left">*.g4</td>
</tr>
<tr>
<td align="left">API Blueprint</td>
<td align="left">api-blueprint</td>
<td align="left">*.apib</td>
</tr>
<tr>
<td align="left">APL</td>
<td align="left">apl</td>
<td align="left">*.apl</td>
</tr>
<tr>
<td align="left">ASN.1</td>
<td align="left">asn.1</td>
<td align="left">*.asn</td>
</tr>
<tr>
<td align="left">ASP</td>
<td align="left">asp, aspx, aspx-vb</td>
<td align="left">*.asp</td>
</tr>
<tr>
<td align="left">ATS</td>
<td align="left">ats, ats2</td>
<td align="left">*.dats</td>
</tr>
<tr>
<td align="left">ActionScript</td>
<td align="left">actionscript, actionscript3, as3</td>
<td align="left">*.as</td>
</tr>
<tr>
<td align="left">Ada</td>
<td align="left">ada, ada95, ada2005</td>
<td align="left">*.adb</td>
</tr>
<tr>
<td align="left">Adobe Font Metrics</td>
<td align="left">adobe-font-metrics, acfm, amfm</td>
<td align="left">*.afm</td>
</tr>
<tr>
<td align="left">Agda</td>
<td align="left">agda</td>
<td align="left">*.agda</td>
</tr>
<tr>
<td align="left">Alloy</td>
<td align="left">alloy</td>
<td align="left">*.als</td>
</tr>
<tr>
<td align="left">Alpine Abuild</td>
<td align="left">alpine-abuild, abuild, apkbuild</td>
<td align="left">APKBUILD</td>
</tr>
<tr>
<td align="left">Altium Designer</td>
<td align="left">altium-designer, altium</td>
<td align="left">*.OutJob</td>
</tr>
<tr>
<td align="left">AngelScript</td>
<td align="left">angelscript</td>
<td align="left">*.as</td>
</tr>
<tr>
<td align="left">Ant Build System</td>
<td align="left">ant-build-system</td>
<td align="left">ant.xml</td>
</tr>
<tr>
<td align="left">ApacheConf</td>
<td align="left">apacheconf, aconf, apache</td>
<td align="left">*.apacheconf, .htaccess</td>
</tr>
<tr>
<td align="left">Apex</td>
<td align="left">apex</td>
<td align="left">*.cls</td>
</tr>
<tr>
<td align="left">Apollo Guidance Computer</td>
<td align="left">apollo-guidance-computer</td>
<td align="left">*.agc</td>
</tr>
<tr>
<td align="left">AppleScript</td>
<td align="left">applescript, osascript</td>
<td align="left">*.applescript</td>
</tr>
<tr>
<td align="left">Arc</td>
<td align="left">arc</td>
<td align="left">*.arc</td>
</tr>
<tr>
<td align="left">AsciiDoc</td>
<td align="left">asciidoc</td>
<td align="left">*.asciidoc</td>
</tr>
<tr>
<td align="left">AspectJ</td>
<td align="left">aspectj</td>
<td align="left">*.aj</td>
</tr>
<tr>
<td align="left">Assembly</td>
<td align="left">assembly, asm, nasm</td>
<td align="left">*.asm</td>
</tr>
<tr>
<td align="left">Asymptote</td>
<td align="left">asymptote</td>
<td align="left">*.asy</td>
</tr>
<tr>
<td align="left">Augeas</td>
<td align="left">augeas</td>
<td align="left">*.aug</td>
</tr>
<tr>
<td align="left">AutoHotkey</td>
<td align="left">autohotkey, ahk</td>
<td align="left">*.ahk</td>
</tr>
<tr>
<td align="left">AutoIt</td>
<td align="left">autoit, au3, AutoIt3, AutoItScript</td>
<td align="left">*.au3</td>
</tr>
<tr>
<td align="left">Awk</td>
<td align="left">awk</td>
<td align="left">*.awk</td>
</tr>
<tr>
<td align="left">Ballerina</td>
<td align="left">ballerina</td>
<td align="left">*.bal</td>
</tr>
<tr>
<td align="left">Batchfile</td>
<td align="left">batchfile, bat, batch, dosbatch, winbatch</td>
<td align="left">*.bat</td>
</tr>
<tr>
<td align="left">Befunge</td>
<td align="left">befunge</td>
<td align="left">*.befunge</td>
</tr>
<tr>
<td align="left">BibTeX</td>
<td align="left">bibtex</td>
<td align="left">*.bib</td>
</tr>
<tr>
<td align="left">Bison</td>
<td align="left">bison</td>
<td align="left">*.bison</td>
</tr>
<tr>
<td align="left">BitBake</td>
<td align="left">bitbake</td>
<td align="left">*.bb</td>
</tr>
<tr>
<td align="left">Blade</td>
<td align="left">blade</td>
<td align="left">*.blade</td>
</tr>
<tr>
<td align="left">BlitzBasic</td>
<td align="left">blitzbasic, b3d, blitz3d, blitzplus, bplus</td>
<td align="left">*.bb</td>
</tr>
<tr>
<td align="left">BlitzMax</td>
<td align="left">blitzmax, bmax</td>
<td align="left">*.bmx</td>
</tr>
<tr>
<td align="left">Bluespec</td>
<td align="left">bluespec</td>
<td align="left">*.bsv</td>
</tr>
<tr>
<td align="left">Boo</td>
<td align="left">boo</td>
<td align="left">*.boo</td>
</tr>
<tr>
<td align="left">Brainfuck</td>
<td align="left">brainfuck</td>
<td align="left">*.b</td>
</tr>
<tr>
<td align="left">Brightscript</td>
<td align="left">brightscript</td>
<td align="left">*.brs</td>
</tr>
<tr>
<td align="left">C</td>
<td align="left">c</td>
<td align="left">*.c</td>
</tr>
<tr>
<td align="left">C#</td>
<td align="left">c#, csharp</td>
<td align="left">*.cs</td>
</tr>
<tr>
<td align="left">C++</td>
<td align="left">c++, cpp</td>
<td align="left">*.cpp</td>
</tr>
<tr>
<td align="left">C-ObjDump</td>
<td align="left">c-objdump</td>
<td align="left">*.c-objdump</td>
</tr>
<tr>
<td align="left">C2hs Haskell</td>
<td align="left">c2hs-haskell, c2hs</td>
<td align="left">*.chs</td>
</tr>
<tr>
<td align="left">CLIPS</td>
<td align="left">clips</td>
<td align="left">*.clp</td>
</tr>
<tr>
<td align="left">CMake</td>
<td align="left">cmake</td>
<td align="left">*.cmake, CMakeLists.txt</td>
</tr>
<tr>
<td align="left">COBOL</td>
<td align="left">cobol</td>
<td align="left">*.cob</td>
</tr>
<tr>
<td align="left">COLLADA</td>
<td align="left">collada</td>
<td align="left">*.dae</td>
</tr>
<tr>
<td align="left">CSON</td>
<td align="left">cson</td>
<td align="left">*.cson</td>
</tr>
<tr>
<td align="left">CSS</td>
<td align="left">css</td>
<td align="left">*.css</td>
</tr>
<tr>
<td align="left">CSV</td>
<td align="left">csv</td>
<td align="left">*.csv</td>
</tr>
<tr>
<td align="left">CWeb</td>
<td align="left">cweb</td>
<td align="left">*.w</td>
</tr>
<tr>
<td align="left">Cabal Config</td>
<td align="left">cabal-config, Cabal</td>
<td align="left">*.cabal, cabal.config</td>
</tr>
<tr>
<td align="left">Cap’n Proto</td>
<td align="left">cap’n-proto</td>
<td align="left">*.capnp</td>
</tr>
<tr>
<td align="left">CartoCSS</td>
<td align="left">cartocss, Carto</td>
<td align="left">*.mss</td>
</tr>
<tr>
<td align="left">Ceylon</td>
<td align="left">ceylon</td>
<td align="left">*.ceylon</td>
</tr>
<tr>
<td align="left">Chapel</td>
<td align="left">chapel, chpl</td>
<td align="left">*.chpl</td>
</tr>
<tr>
<td align="left">Charity</td>
<td align="left">charity</td>
<td align="left">*.ch</td>
</tr>
<tr>
<td align="left">ChucK</td>
<td align="left">chuck</td>
<td align="left">*.ck</td>
</tr>
<tr>
<td align="left">Cirru</td>
<td align="left">cirru</td>
<td align="left">*.cirru</td>
</tr>
<tr>
<td align="left">Clarion</td>
<td align="left">clarion</td>
<td align="left">*.clw</td>
</tr>
<tr>
<td align="left">Clean</td>
<td align="left">clean</td>
<td align="left">*.icl</td>
</tr>
<tr>
<td align="left">Click</td>
<td align="left">click</td>
<td align="left">*.click</td>
</tr>
<tr>
<td align="left">Clojure</td>
<td align="left">clojure</td>
<td align="left">*.clj, riemann.config</td>
</tr>
<tr>
<td align="left">Closure Templates</td>
<td align="left">closure-templates, soy</td>
<td align="left">*.soy</td>
</tr>
<tr>
<td align="left">Cloud Firestore Security Rules</td>
<td align="left">cloud-firestore-security-rules</td>
<td align="left">firestore.rules</td>
</tr>
<tr>
<td align="left">CoNLL-U</td>
<td align="left">conll-u, CoNLL, CoNLL-X</td>
<td align="left">*.conllu</td>
</tr>
<tr>
<td align="left">CodeQL</td>
<td align="left">codeql, ql</td>
<td align="left">*.ql</td>
</tr>
<tr>
<td align="left">CoffeeScript</td>
<td align="left">coffeescript, coffee, coffee-script</td>
<td align="left">*.coffee, Cakefile</td>
</tr>
<tr>
<td align="left">ColdFusion</td>
<td align="left">coldfusion, cfm, cfml</td>
<td align="left">*.cfm</td>
</tr>
<tr>
<td align="left">ColdFusion CFC</td>
<td align="left">coldfusion-cfc, cfc</td>
<td align="left">*.cfc</td>
</tr>
<tr>
<td align="left">Common Lisp</td>
<td align="left">common-lisp, lisp</td>
<td align="left">*.lisp</td>
</tr>
<tr>
<td align="left">Common Workflow Language</td>
<td align="left">common-workflow-language, cwl</td>
<td align="left">*.cwl</td>
</tr>
<tr>
<td align="left">Component Pascal</td>
<td align="left">component-pascal, delphi, objectpascal</td>
<td align="left">*.cp</td>
</tr>
<tr>
<td align="left">Cool</td>
<td align="left">cool</td>
<td align="left">*.cl</td>
</tr>
<tr>
<td align="left">Coq</td>
<td align="left">coq</td>
<td align="left">*.coq</td>
</tr>
<tr>
<td align="left">Cpp-ObjDump</td>
<td align="left">cpp-objdump, c++-objdump</td>
<td align="left">*.cppobjdump</td>
</tr>
<tr>
<td align="left">Creole</td>
<td align="left">creole</td>
<td align="left">*.creole</td>
</tr>
<tr>
<td align="left">Crystal</td>
<td align="left">crystal</td>
<td align="left">*.cr</td>
</tr>
<tr>
<td align="left">Csound</td>
<td align="left">csound, csound-orc</td>
<td align="left">*.orc</td>
</tr>
<tr>
<td align="left">Csound Document</td>
<td align="left">csound-document, csound-csd</td>
<td align="left">*.csd</td>
</tr>
<tr>
<td align="left">Csound Score</td>
<td align="left">csound-score, csound-sco</td>
<td align="left">*.sco</td>
</tr>
<tr>
<td align="left">Cuda</td>
<td align="left">cuda</td>
<td align="left">*.cu</td>
</tr>
<tr>
<td align="left">Cycript</td>
<td align="left">cycript</td>
<td align="left">*.cy</td>
</tr>
<tr>
<td align="left">Cython</td>
<td align="left">cython, pyrex</td>
<td align="left">*.pyx</td>
</tr>
<tr>
<td align="left">D</td>
<td align="left">d</td>
<td align="left">*.d</td>
</tr>
<tr>
<td align="left">D-ObjDump</td>
<td align="left">d-objdump</td>
<td align="left">*.d-objdump</td>
</tr>
<tr>
<td align="left">DIGITAL Command Language</td>
<td align="left">digital-command-language, dcl</td>
<td align="left">*.com</td>
</tr>
<tr>
<td align="left">DM</td>
<td align="left">dm, byond</td>
<td align="left">*.dm</td>
</tr>
<tr>
<td align="left">DNS Zone</td>
<td align="left">dns-zone</td>
<td align="left">*.zone</td>
</tr>
<tr>
<td align="left">DTrace</td>
<td align="left">dtrace, dtrace-script</td>
<td align="left">*.d</td>
</tr>
<tr>
<td align="left">Dafny</td>
<td align="left">dafny</td>
<td align="left">*.dfy</td>
</tr>
<tr>
<td align="left">Darcs Patch</td>
<td align="left">darcs-patch, dpatch</td>
<td align="left">*.darcspatch</td>
</tr>
<tr>
<td align="left">Dart</td>
<td align="left">dart</td>
<td align="left">*.dart</td>
</tr>
<tr>
<td align="left">DataWeave</td>
<td align="left">dataweave</td>
<td align="left">*.dwl</td>
</tr>
<tr>
<td align="left">Dhall</td>
<td align="left">dhall</td>
<td align="left">*.dhall</td>
</tr>
<tr>
<td align="left">Diff</td>
<td align="left">diff, udiff</td>
<td align="left">*.diff</td>
</tr>
<tr>
<td align="left">DirectX 3D File</td>
<td align="left">directx-3d-file</td>
<td align="left">*.x</td>
</tr>
<tr>
<td align="left">Dockerfile</td>
<td align="left">dockerfile</td>
<td align="left">*.dockerfile, Dockerfile</td>
</tr>
<tr>
<td align="left">Dogescript</td>
<td align="left">dogescript</td>
<td align="left">*.djs</td>
</tr>
<tr>
<td align="left">Dylan</td>
<td align="left">dylan</td>
<td align="left">*.dylan</td>
</tr>
<tr>
<td align="left">E</td>
<td align="left">e</td>
<td align="left">*.E</td>
</tr>
<tr>
<td align="left">EBNF</td>
<td align="left">ebnf</td>
<td align="left">*.ebnf</td>
</tr>
<tr>
<td align="left">ECL</td>
<td align="left">ecl</td>
<td align="left">*.ecl</td>
</tr>
<tr>
<td align="left">ECLiPSe</td>
<td align="left">eclipse</td>
<td align="left">*.ecl</td>
</tr>
<tr>
<td align="left">EJS</td>
<td align="left">ejs</td>
<td align="left">*.ejs</td>
</tr>
<tr>
<td align="left">EML</td>
<td align="left">eml</td>
<td align="left">*.eml</td>
</tr>
<tr>
<td align="left">EQ</td>
<td align="left">eq</td>
<td align="left">*.eq</td>
</tr>
<tr>
<td align="left">Eagle</td>
<td align="left">eagle</td>
<td align="left">*.sch</td>
</tr>
<tr>
<td align="left">Easybuild</td>
<td align="left">easybuild</td>
<td align="left">*.eb</td>
</tr>
<tr>
<td align="left">Ecere Projects</td>
<td align="left">ecere-projects</td>
<td align="left">*.epj</td>
</tr>
<tr>
<td align="left">EditorConfig</td>
<td align="left">editorconfig, editor-config</td>
<td align="left">.editorconfig</td>
</tr>
<tr>
<td align="left">Edje Data Collection</td>
<td align="left">edje-data-collection</td>
<td align="left">*.edc</td>
</tr>
<tr>
<td align="left">Eiffel</td>
<td align="left">eiffel</td>
<td align="left">*.e</td>
</tr>
<tr>
<td align="left">Elixir</td>
<td align="left">elixir</td>
<td align="left">*.ex, mix.lock</td>
</tr>
<tr>
<td align="left">Elm</td>
<td align="left">elm</td>
<td align="left">*.elm</td>
</tr>
<tr>
<td align="left">Emacs Lisp</td>
<td align="left">emacs-lisp, elisp, emacs</td>
<td align="left">*.el, .abbrev_defs</td>
</tr>
<tr>
<td align="left">EmberScript</td>
<td align="left">emberscript</td>
<td align="left">*.em</td>
</tr>
<tr>
<td align="left">Erlang</td>
<td align="left">erlang</td>
<td align="left">*.erl, Emakefile</td>
</tr>
<tr>
<td align="left">F#</td>
<td align="left">f#, fsharp</td>
<td align="left">*.fs</td>
</tr>
<tr>
<td align="left">F*</td>
<td align="left">f*, fstar</td>
<td align="left">*.fst</td>
</tr>
<tr>
<td align="left">FIGlet Font</td>
<td align="left">figlet-font, FIGfont</td>
<td align="left">*.flf</td>
</tr>
<tr>
<td align="left">FLUX</td>
<td align="left">flux</td>
<td align="left">*.fx</td>
</tr>
<tr>
<td align="left">Factor</td>
<td align="left">factor</td>
<td align="left">*.factor, .factor-boot-rc</td>
</tr>
<tr>
<td align="left">Fancy</td>
<td align="left">fancy</td>
<td align="left">*.fy, Fakefile</td>
</tr>
<tr>
<td align="left">Fantom</td>
<td align="left">fantom</td>
<td align="left">*.fan</td>
</tr>
<tr>
<td align="left">Faust</td>
<td align="left">faust</td>
<td align="left">*.dsp</td>
</tr>
<tr>
<td align="left">Filebench WML</td>
<td align="left">filebench-wml</td>
<td align="left">*.f</td>
</tr>
<tr>
<td align="left">Filterscript</td>
<td align="left">filterscript</td>
<td align="left">*.fs</td>
</tr>
<tr>
<td align="left">Formatted</td>
<td align="left">formatted</td>
<td align="left">*.for</td>
</tr>
<tr>
<td align="left">Forth</td>
<td align="left">forth</td>
<td align="left">*.fth</td>
</tr>
<tr>
<td align="left">Fortran</td>
<td align="left">fortran</td>
<td align="left">*.f</td>
</tr>
<tr>
<td align="left">Fortran Free Form</td>
<td align="left">fortran-free-form</td>
<td align="left">*.f90</td>
</tr>
<tr>
<td align="left">FreeMarker</td>
<td align="left">freemarker, ftl</td>
<td align="left">*.ftl</td>
</tr>
<tr>
<td align="left">Frege</td>
<td align="left">frege</td>
<td align="left">*.fr</td>
</tr>
<tr>
<td align="left">Futhark</td>
<td align="left">futhark</td>
<td align="left">*.fut</td>
</tr>
<tr>
<td align="left">G-code</td>
<td align="left">g-code</td>
<td align="left">*.g</td>
</tr>
<tr>
<td align="left">GAML</td>
<td align="left">gaml</td>
<td align="left">*.gaml</td>
</tr>
<tr>
<td align="left">GAMS</td>
<td align="left">gams</td>
<td align="left">*.gms</td>
</tr>
<tr>
<td align="left">GAP</td>
<td align="left">gap</td>
<td align="left">*.g</td>
</tr>
<tr>
<td align="left">GCC Machine Description</td>
<td align="left">gcc-machine-description</td>
<td align="left">*.md</td>
</tr>
<tr>
<td align="left">GDB</td>
<td align="left">gdb</td>
<td align="left">*.gdb</td>
</tr>
<tr>
<td align="left">GDScript</td>
<td align="left">gdscript</td>
<td align="left">*.gd</td>
</tr>
<tr>
<td align="left">GEDCOM</td>
<td align="left">gedcom</td>
<td align="left">*.ged</td>
</tr>
<tr>
<td align="left">GLSL</td>
<td align="left">glsl</td>
<td align="left">*.glsl</td>
</tr>
<tr>
<td align="left">GN</td>
<td align="left">gn</td>
<td align="left">*.gn, .gn</td>
</tr>
<tr>
<td align="left">Game Maker Language</td>
<td align="left">game-maker-language</td>
<td align="left">*.gml</td>
</tr>
<tr>
<td align="left">Genie</td>
<td align="left">genie</td>
<td align="left">*.gs</td>
</tr>
<tr>
<td align="left">Genshi</td>
<td align="left">genshi, xml+genshi, xml+kid</td>
<td align="left">*.kid</td>
</tr>
<tr>
<td align="left">Gentoo Ebuild</td>
<td align="left">gentoo-ebuild</td>
<td align="left">*.ebuild</td>
</tr>
<tr>
<td align="left">Gentoo Eclass</td>
<td align="left">gentoo-eclass</td>
<td align="left">*.eclass</td>
</tr>
<tr>
<td align="left">Gerber Image</td>
<td align="left">gerber-image, rs-274x</td>
<td align="left">*.gbr</td>
</tr>
<tr>
<td align="left">Gettext Catalog</td>
<td align="left">gettext-catalog, pot</td>
<td align="left">*.po</td>
</tr>
<tr>
<td align="left">Gherkin</td>
<td align="left">gherkin, cucumber</td>
<td align="left">*.feature</td>
</tr>
<tr>
<td align="left">Git Attributes</td>
<td align="left">git-attributes, gitattributes</td>
<td align="left">.gitattributes</td>
</tr>
<tr>
<td align="left">Git Config</td>
<td align="left">git-config, gitconfig, gitmodules</td>
<td align="left">*.gitconfig, .gitconfig</td>
</tr>
<tr>
<td align="left">Glyph</td>
<td align="left">glyph</td>
<td align="left">*.glf</td>
</tr>
<tr>
<td align="left">Glyph Bitmap Distribution Format</td>
<td align="left">glyph-bitmap-distribution-format</td>
<td align="left">*.bdf</td>
</tr>
<tr>
<td align="left">Gnuplot</td>
<td align="left">gnuplot</td>
<td align="left">*.gp</td>
</tr>
<tr>
<td align="left">Go</td>
<td align="left">go, golang</td>
<td align="left">*.go</td>
</tr>
<tr>
<td align="left">Golo</td>
<td align="left">golo</td>
<td align="left">*.golo</td>
</tr>
<tr>
<td align="left">Gosu</td>
<td align="left">gosu</td>
<td align="left">*.gs</td>
</tr>
<tr>
<td align="left">Grace</td>
<td align="left">grace</td>
<td align="left">*.grace</td>
</tr>
<tr>
<td align="left">Gradle</td>
<td align="left">gradle</td>
<td align="left">*.gradle</td>
</tr>
<tr>
<td align="left">Grammatical Framework</td>
<td align="left">grammatical-framework, gf</td>
<td align="left">*.gf</td>
</tr>
<tr>
<td align="left">Graph Modeling Language</td>
<td align="left">graph-modeling-language</td>
<td align="left">*.gml</td>
</tr>
<tr>
<td align="left">GraphQL</td>
<td align="left">graphql</td>
<td align="left">*.graphql</td>
</tr>
<tr>
<td align="left">Graphviz (DOT)</td>
<td align="left">dot</td>
<td align="left">*.dot</td>
</tr>
<tr>
<td align="left">Groovy</td>
<td align="left">groovy</td>
<td align="left">*.groovy, Jenkinsfile</td>
</tr>
<tr>
<td align="left">Groovy Server Pages</td>
<td align="left">groovy-server-pages, gsp</td>
<td align="left">*.gsp</td>
</tr>
<tr>
<td align="left">HAProxy</td>
<td align="left">haproxy</td>
<td align="left">*.cfg, haproxy.cfg</td>
</tr>
<tr>
<td align="left">HCL</td>
<td align="left">hcl, terraform</td>
<td align="left">*.hcl</td>
</tr>
<tr>
<td align="left">HLSL</td>
<td align="left">hlsl</td>
<td align="left">*.hlsl</td>
</tr>
<tr>
<td align="left">HTML</td>
<td align="left">html, xhtml</td>
<td align="left">*.html</td>
</tr>
<tr>
<td align="left">HTML+Django</td>
<td align="left">html+django, django, html+jinja, htmldjango</td>
<td align="left">*.jinja</td>
</tr>
<tr>
<td align="left">HTML+ECR</td>
<td align="left">html+ecr, ecr</td>
<td align="left">*.ecr</td>
</tr>
<tr>
<td align="left">HTML+EEX</td>
<td align="left">html+eex, eex</td>
<td align="left">*.eex</td>
</tr>
<tr>
<td align="left">HTML+ERB</td>
<td align="left">html+erb, erb</td>
<td align="left">*.erb</td>
</tr>
<tr>
<td align="left">HTML+PHP</td>
<td align="left">html+php</td>
<td align="left">*.phtml</td>
</tr>
<tr>
<td align="left">HTML+Razor</td>
<td align="left">html+razor, razor</td>
<td align="left">*.cshtml</td>
</tr>
<tr>
<td align="left">HTTP</td>
<td align="left">http</td>
<td align="left">*.http</td>
</tr>
<tr>
<td align="left">HXML</td>
<td align="left">hxml</td>
<td align="left">*.hxml</td>
</tr>
<tr>
<td align="left">Hack</td>
<td align="left">hack</td>
<td align="left">*.hack</td>
</tr>
<tr>
<td align="left">Haml</td>
<td align="left">haml</td>
<td align="left">*.haml</td>
</tr>
<tr>
<td align="left">Handlebars</td>
<td align="left">handlebars, hbs, htmlbars</td>
<td align="left">*.handlebars</td>
</tr>
<tr>
<td align="left">Harbour</td>
<td align="left">harbour</td>
<td align="left">*.hb</td>
</tr>
<tr>
<td align="left">Haskell</td>
<td align="left">haskell</td>
<td align="left">*.hs</td>
</tr>
<tr>
<td align="left">Haxe</td>
<td align="left">haxe</td>
<td align="left">*.hx</td>
</tr>
<tr>
<td align="left">HiveQL</td>
<td align="left">hiveql</td>
<td align="left">*.q</td>
</tr>
<tr>
<td align="left">HolyC</td>
<td align="left">holyc</td>
<td align="left">*.hc</td>
</tr>
<tr>
<td align="left">Hy</td>
<td align="left">hy, hylang</td>
<td align="left">*.hy</td>
</tr>
<tr>
<td align="left">HyPhy</td>
<td align="left">hyphy</td>
<td align="left">*.bf</td>
</tr>
<tr>
<td align="left">IDL</td>
<td align="left">idl</td>
<td align="left">*.pro</td>
</tr>
<tr>
<td align="left">IGOR Pro</td>
<td align="left">igor-pro, igor, igorpro</td>
<td align="left">*.ipf</td>
</tr>
<tr>
<td align="left">INI</td>
<td align="left">ini, dosini</td>
<td align="left">*.ini, buildozer.spec</td>
</tr>
<tr>
<td align="left">IRC log</td>
<td align="left">irc-log, irc</td>
<td align="left">*.irclog</td>
</tr>
<tr>
<td align="left">Idris</td>
<td align="left">idris</td>
<td align="left">*.idr</td>
</tr>
<tr>
<td align="left">Ignore List</td>
<td align="left">ignore-list, ignore, gitignore, git-ignore</td>
<td align="left">*.gitignore, .atomignore</td>
</tr>
<tr>
<td align="left">Inform 7</td>
<td align="left">inform-7, i7, inform7</td>
<td align="left">*.ni</td>
</tr>
<tr>
<td align="left">Inno Setup</td>
<td align="left">inno-setup</td>
<td align="left">*.iss</td>
</tr>
<tr>
<td align="left">Io</td>
<td align="left">io</td>
<td align="left">*.io</td>
</tr>
<tr>
<td align="left">Ioke</td>
<td align="left">ioke</td>
<td align="left">*.ik</td>
</tr>
<tr>
<td align="left">Isabelle</td>
<td align="left">isabelle</td>
<td align="left">*.thy</td>
</tr>
<tr>
<td align="left">Isabelle ROOT</td>
<td align="left">isabelle-root</td>
<td align="left">ROOT</td>
</tr>
<tr>
<td align="left">J</td>
<td align="left">j</td>
<td align="left">*.ijs</td>
</tr>
<tr>
<td align="left">JFlex</td>
<td align="left">jflex</td>
<td align="left">*.flex</td>
</tr>
<tr>
<td align="left">JSON</td>
<td align="left">json</td>
<td align="left">*.json, .arcconfig</td>
</tr>
<tr>
<td align="left">JSON with Comments</td>
<td align="left">json-with-comments, jsonc</td>
<td align="left">*.jsonc, .babelrc</td>
</tr>
<tr>
<td align="left">JSON5</td>
<td align="left">json5</td>
<td align="left">*.json5</td>
</tr>
<tr>
<td align="left">JSONLD</td>
<td align="left">jsonld</td>
<td align="left">*.jsonld</td>
</tr>
<tr>
<td align="left">JSONiq</td>
<td align="left">jsoniq</td>
<td align="left">*.jq</td>
</tr>
<tr>
<td align="left">JSX</td>
<td align="left">jsx</td>
<td align="left">*.jsx</td>
</tr>
<tr>
<td align="left">Jasmin</td>
<td align="left">jasmin</td>
<td align="left">*.j</td>
</tr>
<tr>
<td align="left">Java</td>
<td align="left">java</td>
<td align="left">*.java</td>
</tr>
<tr>
<td align="left">Java Properties</td>
<td align="left">java-properties</td>
<td align="left">*.properties</td>
</tr>
<tr>
<td align="left">Java Server Pages</td>
<td align="left">java-server-pages, jsp</td>
<td align="left">*.jsp</td>
</tr>
<tr>
<td align="left">JavaScript</td>
<td align="left">javascript, js, node</td>
<td align="left">*.js, Jakefile</td>
</tr>
<tr>
<td align="left">JavaScript+ERB</td>
<td align="left">javascript+erb</td>
<td align="left">*.js.erb</td>
</tr>
<tr>
<td align="left">Jison</td>
<td align="left">jison</td>
<td align="left">*.jison</td>
</tr>
<tr>
<td align="left">Jison Lex</td>
<td align="left">jison-lex</td>
<td align="left">*.jisonlex</td>
</tr>
<tr>
<td align="left">Jolie</td>
<td align="left">jolie</td>
<td align="left">*.ol</td>
</tr>
<tr>
<td align="left">Jsonnet</td>
<td align="left">jsonnet</td>
<td align="left">*.jsonnet</td>
</tr>
<tr>
<td align="left">Julia</td>
<td align="left">julia</td>
<td align="left">*.jl</td>
</tr>
<tr>
<td align="left">Jupyter Notebook</td>
<td align="left">jupyter-notebook</td>
<td align="left">*.ipynb, Notebook</td>
</tr>
<tr>
<td align="left">KRL</td>
<td align="left">krl</td>
<td align="left">*.krl</td>
</tr>
<tr>
<td align="left">KiCad Layout</td>
<td align="left">kicad-layout, pcbnew</td>
<td align="left">*.kicad_pcb, fp-lib-table</td>
</tr>
<tr>
<td align="left">KiCad Legacy Layout</td>
<td align="left">kicad-legacy-layout</td>
<td align="left">*.brd</td>
</tr>
<tr>
<td align="left">KiCad Schematic</td>
<td align="left">kicad-schematic</td>
<td align="left">*.sch</td>
</tr>
<tr>
<td align="left">Kit</td>
<td align="left">kit</td>
<td align="left">*.kit</td>
</tr>
<tr>
<td align="left">Kotlin</td>
<td align="left">kotlin</td>
<td align="left">*.kt</td>
</tr>
<tr>
<td align="left">LFE</td>
<td align="left">lfe</td>
<td align="left">*.lfe</td>
</tr>
<tr>
<td align="left">LLVM</td>
<td align="left">llvm</td>
<td align="left">*.ll</td>
</tr>
<tr>
<td align="left">LOLCODE</td>
<td align="left">lolcode</td>
<td align="left">*.lol</td>
</tr>
<tr>
<td align="left">LSL</td>
<td align="left">lsl</td>
<td align="left">*.lsl</td>
</tr>
<tr>
<td align="left">LTspice Symbol</td>
<td align="left">ltspice-symbol</td>
<td align="left">*.asy</td>
</tr>
<tr>
<td align="left">LabVIEW</td>
<td align="left">labview</td>
<td align="left">*.lvproj</td>
</tr>
<tr>
<td align="left">Lasso</td>
<td align="left">lasso, lassoscript</td>
<td align="left">*.lasso</td>
</tr>
<tr>
<td align="left">Latte</td>
<td align="left">latte</td>
<td align="left">*.latte</td>
</tr>
<tr>
<td align="left">Lean</td>
<td align="left">lean</td>
<td align="left">*.lean</td>
</tr>
<tr>
<td align="left">Less</td>
<td align="left">less</td>
<td align="left">*.less</td>
</tr>
<tr>
<td align="left">Lex</td>
<td align="left">lex, flex</td>
<td align="left">*.l</td>
</tr>
<tr>
<td align="left">LilyPond</td>
<td align="left">lilypond</td>
<td align="left">*.ly</td>
</tr>
<tr>
<td align="left">Limbo</td>
<td align="left">limbo</td>
<td align="left">*.b</td>
</tr>
<tr>
<td align="left">Linker Script</td>
<td align="left">linker-script</td>
<td align="left">*.ld, ld.script</td>
</tr>
<tr>
<td align="left">Linux Kernel Module</td>
<td align="left">linux-kernel-module</td>
<td align="left">*.mod</td>
</tr>
<tr>
<td align="left">Liquid</td>
<td align="left">liquid</td>
<td align="left">*.liquid</td>
</tr>
<tr>
<td align="left">Literate Agda</td>
<td align="left">literate-agda</td>
<td align="left">*.lagda</td>
</tr>
<tr>
<td align="left">Literate CoffeeScript</td>
<td align="left">literate-coffeescript, litcoffee</td>
<td align="left">*.litcoffee</td>
</tr>
<tr>
<td align="left">Literate Haskell</td>
<td align="left">literate-haskell, lhaskell, lhs</td>
<td align="left">*.lhs</td>
</tr>
<tr>
<td align="left">LiveScript</td>
<td align="left">livescript, live-script, ls</td>
<td align="left">*.ls, Slakefile</td>
</tr>
<tr>
<td align="left">Logos</td>
<td align="left">logos</td>
<td align="left">*.xm</td>
</tr>
<tr>
<td align="left">Logtalk</td>
<td align="left">logtalk</td>
<td align="left">*.lgt</td>
</tr>
<tr>
<td align="left">LookML</td>
<td align="left">lookml</td>
<td align="left">*.lookml</td>
</tr>
<tr>
<td align="left">LoomScript</td>
<td align="left">loomscript</td>
<td align="left">*.ls</td>
</tr>
<tr>
<td align="left">Lua</td>
<td align="left">lua</td>
<td align="left">*.lua, .luacheckrc</td>
</tr>
<tr>
<td align="left">M</td>
<td align="left">m, mumps</td>
<td align="left">*.mumps</td>
</tr>
<tr>
<td align="left">M4</td>
<td align="left">m4</td>
<td align="left">*.m4</td>
</tr>
<tr>
<td align="left">M4Sugar</td>
<td align="left">m4sugar, autoconf</td>
<td align="left">*.m4, configure.ac</td>
</tr>
<tr>
<td align="left">MATLAB</td>
<td align="left">matlab, octave</td>
<td align="left">*.matlab</td>
</tr>
<tr>
<td align="left">MAXScript</td>
<td align="left">maxscript</td>
<td align="left">*.ms</td>
</tr>
<tr>
<td align="left">MLIR</td>
<td align="left">mlir</td>
<td align="left">*.mlir</td>
</tr>
<tr>
<td align="left">MQL4</td>
<td align="left">mql4</td>
<td align="left">*.mq4</td>
</tr>
<tr>
<td align="left">MQL5</td>
<td align="left">mql5</td>
<td align="left">*.mq5</td>
</tr>
<tr>
<td align="left">MTML</td>
<td align="left">mtml</td>
<td align="left">*.mtml</td>
</tr>
<tr>
<td align="left">MUF</td>
<td align="left">muf</td>
<td align="left">*.muf</td>
</tr>
<tr>
<td align="left">Macaulay2</td>
<td align="left">macaulay2, m2</td>
<td align="left">*.m2</td>
</tr>
<tr>
<td align="left">Makefile</td>
<td align="left">makefile, bsdmake, make, mf</td>
<td align="left">*.mak, BSDmakefile</td>
</tr>
<tr>
<td align="left">Mako</td>
<td align="left">mako</td>
<td align="left">*.mako</td>
</tr>
<tr>
<td align="left">Markdown</td>
<td align="left">markdown, pandoc</td>
<td align="left">*.md, contents.lr</td>
</tr>
<tr>
<td align="left">Marko</td>
<td align="left">marko, markojs</td>
<td align="left">*.marko</td>
</tr>
<tr>
<td align="left">Mask</td>
<td align="left">mask</td>
<td align="left">*.mask</td>
</tr>
<tr>
<td align="left">Mathematica</td>
<td align="left">mathematica, mma</td>
<td align="left">*.mathematica</td>
</tr>
<tr>
<td align="left">Maven POM</td>
<td align="left">maven-pom</td>
<td align="left">pom.xml</td>
</tr>
<tr>
<td align="left">Max</td>
<td align="left">max, max/msp, maxmsp</td>
<td align="left">*.maxpat</td>
</tr>
<tr>
<td align="left">MediaWiki</td>
<td align="left">mediawiki</td>
<td align="left">*.mediawiki</td>
</tr>
<tr>
<td align="left">Mercury</td>
<td align="left">mercury</td>
<td align="left">*.m</td>
</tr>
<tr>
<td align="left">Meson</td>
<td align="left">meson</td>
<td align="left">meson.build</td>
</tr>
<tr>
<td align="left">Metal</td>
<td align="left">metal</td>
<td align="left">*.metal</td>
</tr>
<tr>
<td align="left">Microsoft Developer Studio Project</td>
<td align="left">microsoft-developer-studio-project</td>
<td align="left">*.dsp</td>
</tr>
<tr>
<td align="left">MiniD</td>
<td align="left">minid</td>
<td align="left">*.minid</td>
</tr>
<tr>
<td align="left">Mirah</td>
<td align="left">mirah</td>
<td align="left">*.druby</td>
</tr>
<tr>
<td align="left">Modelica</td>
<td align="left">modelica</td>
<td align="left">*.mo</td>
</tr>
<tr>
<td align="left">Modula-2</td>
<td align="left">modula-2</td>
<td align="left">*.mod</td>
</tr>
<tr>
<td align="left">Modula-3</td>
<td align="left">modula-3</td>
<td align="left">*.i3</td>
</tr>
<tr>
<td align="left">Module Management System</td>
<td align="left">module-management-system</td>
<td align="left">*.mms, descrip.mmk</td>
</tr>
<tr>
<td align="left">Monkey</td>
<td align="left">monkey</td>
<td align="left">*.monkey</td>
</tr>
<tr>
<td align="left">Moocode</td>
<td align="left">moocode</td>
<td align="left">*.moo</td>
</tr>
<tr>
<td align="left">MoonScript</td>
<td align="left">moonscript</td>
<td align="left">*.moon</td>
</tr>
<tr>
<td align="left">Motorola 68K Assembly</td>
<td align="left">motorola-68k-assembly, m68k</td>
<td align="left">*.asm</td>
</tr>
<tr>
<td align="left">Muse</td>
<td align="left">muse, amusewiki</td>
<td align="left">*.muse</td>
</tr>
<tr>
<td align="left">Myghty</td>
<td align="left">myghty</td>
<td align="left">*.myt</td>
</tr>
<tr>
<td align="left">NASL</td>
<td align="left">nasl</td>
<td align="left">*.nasl</td>
</tr>
<tr>
<td align="left">NCL</td>
<td align="left">ncl</td>
<td align="left">*.ncl</td>
</tr>
<tr>
<td align="left">NEON</td>
<td align="left">neon, ne-on</td>
<td align="left">*.neon</td>
</tr>
<tr>
<td align="left">NL</td>
<td align="left">nl</td>
<td align="left">*.nl</td>
</tr>
<tr>
<td align="left">NPM Config</td>
<td align="left">npm-config, npmrc</td>
<td align="left">.npmrc</td>
</tr>
<tr>
<td align="left">NSIS</td>
<td align="left">nsis</td>
<td align="left">*.nsi</td>
</tr>
<tr>
<td align="left">Nearley</td>
<td align="left">nearley</td>
<td align="left">*.ne</td>
</tr>
<tr>
<td align="left">Nemerle</td>
<td align="left">nemerle</td>
<td align="left">*.n</td>
</tr>
<tr>
<td align="left">NetLinx</td>
<td align="left">netlinx</td>
<td align="left">*.axs</td>
</tr>
<tr>
<td align="left">NetLinx+ERB</td>
<td align="left">netlinx+erb</td>
<td align="left">*.axs.erb</td>
</tr>
<tr>
<td align="left">NetLogo</td>
<td align="left">netlogo</td>
<td align="left">*.nlogo</td>
</tr>
<tr>
<td align="left">NewLisp</td>
<td align="left">newlisp</td>
<td align="left">*.nl</td>
</tr>
<tr>
<td align="left">Nextflow</td>
<td align="left">nextflow</td>
<td align="left">*.nf, nextflow.config</td>
</tr>
<tr>
<td align="left">Nginx</td>
<td align="left">nginx</td>
<td align="left">*.nginxconf, nginx.conf</td>
</tr>
<tr>
<td align="left">Nim</td>
<td align="left">nim</td>
<td align="left">*.nim, nim.cfg</td>
</tr>
<tr>
<td align="left">Ninja</td>
<td align="left">ninja</td>
<td align="left">*.ninja</td>
</tr>
<tr>
<td align="left">Nit</td>
<td align="left">nit</td>
<td align="left">*.nit</td>
</tr>
<tr>
<td align="left">Nix</td>
<td align="left">nix, nixos</td>
<td align="left">*.nix</td>
</tr>
<tr>
<td align="left">Nu</td>
<td align="left">nu, nush</td>
<td align="left">*.nu, Nukefile</td>
</tr>
<tr>
<td align="left">NumPy</td>
<td align="left">numpy</td>
<td align="left">*.numpy</td>
</tr>
<tr>
<td align="left">OCaml</td>
<td align="left">ocaml</td>
<td align="left">*.ml</td>
</tr>
<tr>
<td align="left">ObjDump</td>
<td align="left">objdump</td>
<td align="left">*.objdump</td>
</tr>
<tr>
<td align="left">Object Data Instance Notation</td>
<td align="left">object-data-instance-notation</td>
<td align="left">*.odin</td>
</tr>
<tr>
<td align="left">ObjectScript</td>
<td align="left">objectscript</td>
<td align="left">*.cls</td>
</tr>
<tr>
<td align="left">Objective-C</td>
<td align="left">objective-c, obj-c, objc, objectivec</td>
<td align="left">*.m</td>
</tr>
<tr>
<td align="left">Objective-C++</td>
<td align="left">objective-c++, obj-c++, objc++, objectivec++</td>
<td align="left">*.mm</td>
</tr>
<tr>
<td align="left">Objective-J</td>
<td align="left">objective-j, obj-j, objectivej, objj</td>
<td align="left">*.j</td>
</tr>
<tr>
<td align="left">Odin</td>
<td align="left">odin, odinlang, odin-lang</td>
<td align="left">*.odin</td>
</tr>
<tr>
<td align="left">Omgrofl</td>
<td align="left">omgrofl</td>
<td align="left">*.omgrofl</td>
</tr>
<tr>
<td align="left">Opa</td>
<td align="left">opa</td>
<td align="left">*.opa</td>
</tr>
<tr>
<td align="left">Opal</td>
<td align="left">opal</td>
<td align="left">*.opal</td>
</tr>
<tr>
<td align="left">Open Policy Agent</td>
<td align="left">open-policy-agent</td>
<td align="left">*.rego</td>
</tr>
<tr>
<td align="left">OpenCL</td>
<td align="left">opencl</td>
<td align="left">*.cl</td>
</tr>
<tr>
<td align="left">OpenEdge ABL</td>
<td align="left">openedge-abl, progress, openedge, abl</td>
<td align="left">*.p</td>
</tr>
<tr>
<td align="left">OpenQASM</td>
<td align="left">openqasm</td>
<td align="left">*.qasm</td>
</tr>
<tr>
<td align="left">OpenRC runscript</td>
<td align="left">openrc-runscript, openrc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">OpenSCAD</td>
<td align="left">openscad</td>
<td align="left">*.scad</td>
</tr>
<tr>
<td align="left">OpenStep Property List</td>
<td align="left">openstep-property-list</td>
<td align="left">*.plist</td>
</tr>
<tr>
<td align="left">OpenType Feature File</td>
<td align="left">opentype-feature-file, AFDKO</td>
<td align="left">*.fea</td>
</tr>
<tr>
<td align="left">Org</td>
<td align="left">org</td>
<td align="left">*.org</td>
</tr>
<tr>
<td align="left">Ox</td>
<td align="left">ox</td>
<td align="left">*.ox</td>
</tr>
<tr>
<td align="left">Oxygene</td>
<td align="left">oxygene</td>
<td align="left">*.oxygene</td>
</tr>
<tr>
<td align="left">Oz</td>
<td align="left">oz</td>
<td align="left">*.oz</td>
</tr>
<tr>
<td align="left">P4</td>
<td align="left">p4</td>
<td align="left">*.p4</td>
</tr>
<tr>
<td align="left">PHP</td>
<td align="left">php, inc</td>
<td align="left">*.php, .php</td>
</tr>
<tr>
<td align="left">PLSQL</td>
<td align="left">plsql</td>
<td align="left">*.pls</td>
</tr>
<tr>
<td align="left">PLpgSQL</td>
<td align="left">plpgsql</td>
<td align="left">*.pgsql</td>
</tr>
<tr>
<td align="left">POV-Ray SDL</td>
<td align="left">pov-ray-sdl, pov-ray, povray</td>
<td align="left">*.pov</td>
</tr>
<tr>
<td align="left">Pan</td>
<td align="left">pan</td>
<td align="left">*.pan</td>
</tr>
<tr>
<td align="left">Papyrus</td>
<td align="left">papyrus</td>
<td align="left">*.psc</td>
</tr>
<tr>
<td align="left">Parrot</td>
<td align="left">parrot</td>
<td align="left">*.parrot</td>
</tr>
<tr>
<td align="left">Parrot Assembly</td>
<td align="left">parrot-assembly, pasm</td>
<td align="left">*.pasm</td>
</tr>
<tr>
<td align="left">Parrot Internal Representation</td>
<td align="left">parrot-internal-representation, pir</td>
<td align="left">*.pir</td>
</tr>
<tr>
<td align="left">Pascal</td>
<td align="left">pascal</td>
<td align="left">*.pas</td>
</tr>
<tr>
<td align="left">Pawn</td>
<td align="left">pawn</td>
<td align="left">*.pwn</td>
</tr>
<tr>
<td align="left">Pep8</td>
<td align="left">pep8</td>
<td align="left">*.pep</td>
</tr>
<tr>
<td align="left">Perl</td>
<td align="left">perl, cperl</td>
<td align="left">*.pl, Makefile.PL</td>
</tr>
<tr>
<td align="left">Pic</td>
<td align="left">pic</td>
<td align="left">*.pic</td>
</tr>
<tr>
<td align="left">Pickle</td>
<td align="left">pickle</td>
<td align="left">*.pkl</td>
</tr>
<tr>
<td align="left">PicoLisp</td>
<td align="left">picolisp</td>
<td align="left">*.l</td>
</tr>
<tr>
<td align="left">PigLatin</td>
<td align="left">piglatin</td>
<td align="left">*.pig</td>
</tr>
<tr>
<td align="left">Pike</td>
<td align="left">pike</td>
<td align="left">*.pike</td>
</tr>
<tr>
<td align="left">PlantUML</td>
<td align="left">plantuml</td>
<td align="left">*.puml</td>
</tr>
<tr>
<td align="left">Pod</td>
<td align="left">pod</td>
<td align="left">*.pod</td>
</tr>
<tr>
<td align="left">Pod 6</td>
<td align="left">pod-6</td>
<td align="left">*.pod</td>
</tr>
<tr>
<td align="left">PogoScript</td>
<td align="left">pogoscript</td>
<td align="left">*.pogo</td>
</tr>
<tr>
<td align="left">Pony</td>
<td align="left">pony</td>
<td align="left">*.pony</td>
</tr>
<tr>
<td align="left">PostCSS</td>
<td align="left">postcss</td>
<td align="left">*.pcss</td>
</tr>
<tr>
<td align="left">PostScript</td>
<td align="left">postscript, postscr</td>
<td align="left">*.ps</td>
</tr>
<tr>
<td align="left">PowerBuilder</td>
<td align="left">powerbuilder</td>
<td align="left">*.pbt</td>
</tr>
<tr>
<td align="left">PowerShell</td>
<td align="left">powershell, posh, pwsh</td>
<td align="left">*.ps1</td>
</tr>
<tr>
<td align="left">Prisma</td>
<td align="left">prisma</td>
<td align="left">*.prisma</td>
</tr>
<tr>
<td align="left">Processing</td>
<td align="left">processing</td>
<td align="left">*.pde</td>
</tr>
<tr>
<td align="left">Proguard</td>
<td align="left">proguard</td>
<td align="left">*.pro</td>
</tr>
<tr>
<td align="left">Prolog</td>
<td align="left">prolog</td>
<td align="left">*.pl</td>
</tr>
<tr>
<td align="left">Propeller Spin</td>
<td align="left">propeller-spin</td>
<td align="left">*.spin</td>
</tr>
<tr>
<td align="left">Protocol Buffer</td>
<td align="left">protocol-buffer, protobuf</td>
<td align="left">*.proto</td>
</tr>
<tr>
<td align="left">Public Key</td>
<td align="left">public-key</td>
<td align="left">*.asc</td>
</tr>
<tr>
<td align="left">Pug</td>
<td align="left">pug</td>
<td align="left">*.jade</td>
</tr>
<tr>
<td align="left">Puppet</td>
<td align="left">puppet</td>
<td align="left">*.pp, Modulefile</td>
</tr>
<tr>
<td align="left">Pure Data</td>
<td align="left">pure-data</td>
<td align="left">*.pd</td>
</tr>
<tr>
<td align="left">PureBasic</td>
<td align="left">purebasic</td>
<td align="left">*.pb</td>
</tr>
<tr>
<td align="left">PureScript</td>
<td align="left">purescript</td>
<td align="left">*.purs</td>
</tr>
<tr>
<td align="left">Python</td>
<td align="left">python, python3, rusthon</td>
<td align="left">*.py, .gclient</td>
</tr>
<tr>
<td align="left">Python console</td>
<td align="left">python-console, pycon</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Python traceback</td>
<td align="left">python-traceback</td>
<td align="left">*.pytb</td>
</tr>
<tr>
<td align="left">QML</td>
<td align="left">qml</td>
<td align="left">*.qml</td>
</tr>
<tr>
<td align="left">QMake</td>
<td align="left">qmake</td>
<td align="left">*.pro</td>
</tr>
<tr>
<td align="left">Quake</td>
<td align="left">quake</td>
<td align="left">m3makefile</td>
</tr>
<tr>
<td align="left">R</td>
<td align="left">r, R, Rscript, splus</td>
<td align="left">*.r, .Rprofile</td>
</tr>
<tr>
<td align="left">RAML</td>
<td align="left">raml</td>
<td align="left">*.raml</td>
</tr>
<tr>
<td align="left">RDoc</td>
<td align="left">rdoc</td>
<td align="left">*.rdoc</td>
</tr>
<tr>
<td align="left">REALbasic</td>
<td align="left">realbasic</td>
<td align="left">*.rbbas</td>
</tr>
<tr>
<td align="left">REXX</td>
<td align="left">rexx, arexx</td>
<td align="left">*.rexx</td>
</tr>
<tr>
<td align="left">RHTML</td>
<td align="left">rhtml, html+ruby</td>
<td align="left">*.rhtml</td>
</tr>
<tr>
<td align="left">RMarkdown</td>
<td align="left">rmarkdown</td>
<td align="left">*.rmd</td>
</tr>
<tr>
<td align="left">RPC</td>
<td align="left">rpc, rpcgen, oncrpc, xdr</td>
<td align="left">*.x</td>
</tr>
<tr>
<td align="left">RPM Spec</td>
<td align="left">rpm-spec, specfile</td>
<td align="left">*.spec</td>
</tr>
<tr>
<td align="left">RUNOFF</td>
<td align="left">runoff</td>
<td align="left">*.rnh</td>
</tr>
<tr>
<td align="left">Racket</td>
<td align="left">racket</td>
<td align="left">*.rkt</td>
</tr>
<tr>
<td align="left">Ragel</td>
<td align="left">ragel, ragel-rb, ragel-ruby</td>
<td align="left">*.rl</td>
</tr>
<tr>
<td align="left">Raku</td>
<td align="left">raku, perl6, perl-6</td>
<td align="left">*.6pl</td>
</tr>
<tr>
<td align="left">Rascal</td>
<td align="left">rascal</td>
<td align="left">*.rsc</td>
</tr>
<tr>
<td align="left">Raw token data</td>
<td align="left">raw-token-data, raw</td>
<td align="left">*.raw</td>
</tr>
<tr>
<td align="left">Readline Config</td>
<td align="left">readline-config, inputrc, readline</td>
<td align="left">.inputrc</td>
</tr>
<tr>
<td align="left">Reason</td>
<td align="left">reason</td>
<td align="left">*.re</td>
</tr>
<tr>
<td align="left">Rebol</td>
<td align="left">rebol</td>
<td align="left">*.reb</td>
</tr>
<tr>
<td align="left">Red</td>
<td align="left">red, red/system</td>
<td align="left">*.red</td>
</tr>
<tr>
<td align="left">Redcode</td>
<td align="left">redcode</td>
<td align="left">*.cw</td>
</tr>
<tr>
<td align="left">Regular Expression</td>
<td align="left">regular-expression, regexp, regex</td>
<td align="left">*.regexp</td>
</tr>
<tr>
<td align="left">Ren’Py</td>
<td align="left">ren’py, renpy</td>
<td align="left">*.rpy</td>
</tr>
<tr>
<td align="left">RenderScript</td>
<td align="left">renderscript</td>
<td align="left">*.rs</td>
</tr>
<tr>
<td align="left">Rich Text Format</td>
<td align="left">rich-text-format</td>
<td align="left">*.rtf</td>
</tr>
<tr>
<td align="left">Ring</td>
<td align="left">ring</td>
<td align="left">*.ring</td>
</tr>
<tr>
<td align="left">Riot</td>
<td align="left">riot</td>
<td align="left">*.riot</td>
</tr>
<tr>
<td align="left">RobotFramework</td>
<td align="left">robotframework</td>
<td align="left">*.robot</td>
</tr>
<tr>
<td align="left">Roff</td>
<td align="left">roff, groff, mdoc, nroff, troff</td>
<td align="left">*.roff, eqnrc</td>
</tr>
<tr>
<td align="left">Roff Manpage</td>
<td align="left">roff-manpage</td>
<td align="left">*.1</td>
</tr>
<tr>
<td align="left">Rouge</td>
<td align="left">rouge</td>
<td align="left">*.rg</td>
</tr>
<tr>
<td align="left">Ruby</td>
<td align="left">ruby, jruby, macruby, rake, rb, rbx</td>
<td align="left">*.rb, .irbrc</td>
</tr>
<tr>
<td align="left">Rust</td>
<td align="left">rust</td>
<td align="left">*.rs</td>
</tr>
<tr>
<td align="left">SAS</td>
<td align="left">sas</td>
<td align="left">*.sas</td>
</tr>
<tr>
<td align="left">SCSS</td>
<td align="left">scss</td>
<td align="left">*.scss</td>
</tr>
<tr>
<td align="left">SMT</td>
<td align="left">smt</td>
<td align="left">*.smt2</td>
</tr>
<tr>
<td align="left">SPARQL</td>
<td align="left">sparql</td>
<td align="left">*.sparql</td>
</tr>
<tr>
<td align="left">SQF</td>
<td align="left">sqf</td>
<td align="left">*.sqf</td>
</tr>
<tr>
<td align="left">SQL</td>
<td align="left">sql</td>
<td align="left">*.sql</td>
</tr>
<tr>
<td align="left">SQLPL</td>
<td align="left">sqlpl</td>
<td align="left">*.sql</td>
</tr>
<tr>
<td align="left">SRecode Template</td>
<td align="left">srecode-template</td>
<td align="left">*.srt</td>
</tr>
<tr>
<td align="left">SSH Config</td>
<td align="left">ssh-config</td>
<td align="left">ssh-config</td>
</tr>
<tr>
<td align="left">STON</td>
<td align="left">ston</td>
<td align="left">*.ston</td>
</tr>
<tr>
<td align="left">SVG</td>
<td align="left">svg</td>
<td align="left">*.svg</td>
</tr>
<tr>
<td align="left">SWIG</td>
<td align="left">swig</td>
<td align="left">*.i</td>
</tr>
<tr>
<td align="left">Sage</td>
<td align="left">sage</td>
<td align="left">*.sage</td>
</tr>
<tr>
<td align="left">SaltStack</td>
<td align="left">saltstack, saltstate, salt</td>
<td align="left">*.sls</td>
</tr>
<tr>
<td align="left">Sass</td>
<td align="left">sass</td>
<td align="left">*.sass</td>
</tr>
<tr>
<td align="left">Scala</td>
<td align="left">scala</td>
<td align="left">*.scala</td>
</tr>
<tr>
<td align="left">Scaml</td>
<td align="left">scaml</td>
<td align="left">*.scaml</td>
</tr>
<tr>
<td align="left">Scheme</td>
<td align="left">scheme</td>
<td align="left">*.scm</td>
</tr>
<tr>
<td align="left">Scilab</td>
<td align="left">scilab</td>
<td align="left">*.sci</td>
</tr>
<tr>
<td align="left">Self</td>
<td align="left">self</td>
<td align="left">*.self</td>
</tr>
<tr>
<td align="left">ShaderLab</td>
<td align="left">shaderlab</td>
<td align="left">*.shader</td>
</tr>
<tr>
<td align="left">Shell</td>
<td align="left">shell, sh, shell-script, bash, zsh</td>
<td align="left">*.sh, .bash_aliases</td>
</tr>
<tr>
<td align="left">ShellSession</td>
<td align="left">shellsession, console</td>
<td align="left">*.sh-session</td>
</tr>
<tr>
<td align="left">Shen</td>
<td align="left">shen</td>
<td align="left">*.shen</td>
</tr>
<tr>
<td align="left">Sieve</td>
<td align="left">sieve</td>
<td align="left">*.sieve</td>
</tr>
<tr>
<td align="left">Slash</td>
<td align="left">slash</td>
<td align="left">*.sl</td>
</tr>
<tr>
<td align="left">Slice</td>
<td align="left">slice</td>
<td align="left">*.ice</td>
</tr>
<tr>
<td align="left">Slim</td>
<td align="left">slim</td>
<td align="left">*.slim</td>
</tr>
<tr>
<td align="left">SmPL</td>
<td align="left">smpl, coccinelle</td>
<td align="left">*.cocci</td>
</tr>
<tr>
<td align="left">Smali</td>
<td align="left">smali</td>
<td align="left">*.smali</td>
</tr>
<tr>
<td align="left">Smalltalk</td>
<td align="left">smalltalk, squeak</td>
<td align="left">*.st</td>
</tr>
<tr>
<td align="left">Smarty</td>
<td align="left">smarty</td>
<td align="left">*.tpl</td>
</tr>
<tr>
<td align="left">Solidity</td>
<td align="left">solidity</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SourcePawn</td>
<td align="left">sourcepawn, sourcemod</td>
<td align="left">*.sp</td>
</tr>
<tr>
<td align="left">Spline Font Database</td>
<td align="left">spline-font-database</td>
<td align="left">*.sfd</td>
</tr>
<tr>
<td align="left">Squirrel</td>
<td align="left">squirrel</td>
<td align="left">*.nut</td>
</tr>
<tr>
<td align="left">Stan</td>
<td align="left">stan</td>
<td align="left">*.stan</td>
</tr>
<tr>
<td align="left">Standard ML</td>
<td align="left">standard-ml, sml</td>
<td align="left">*.ML</td>
</tr>
<tr>
<td align="left">Starlark</td>
<td align="left">starlark, bazel, bzl</td>
<td align="left">*.bzl, BUCK</td>
</tr>
<tr>
<td align="left">Stata</td>
<td align="left">stata</td>
<td align="left">*.do</td>
</tr>
<tr>
<td align="left">Stylus</td>
<td align="left">stylus</td>
<td align="left">*.styl</td>
</tr>
<tr>
<td align="left">SubRip Text</td>
<td align="left">subrip-text</td>
<td align="left">*.srt</td>
</tr>
<tr>
<td align="left">SugarSS</td>
<td align="left">sugarss</td>
<td align="left">*.sss</td>
</tr>
<tr>
<td align="left">SuperCollider</td>
<td align="left">supercollider</td>
<td align="left">*.sc</td>
</tr>
<tr>
<td align="left">Svelte</td>
<td align="left">svelte</td>
<td align="left">*.svelte</td>
</tr>
<tr>
<td align="left">Swift</td>
<td align="left">swift</td>
<td align="left">*.swift</td>
</tr>
<tr>
<td align="left">SystemVerilog</td>
<td align="left">systemverilog</td>
<td align="left">*.sv</td>
</tr>
<tr>
<td align="left">TI Program</td>
<td align="left">ti-program</td>
<td align="left">*.8xp</td>
</tr>
<tr>
<td align="left">TLA</td>
<td align="left">tla</td>
<td align="left">*.tla</td>
</tr>
<tr>
<td align="left">TOML</td>
<td align="left">toml</td>
<td align="left">*.toml, Cargo.lock</td>
</tr>
<tr>
<td align="left">TSQL</td>
<td align="left">tsql</td>
<td align="left">*.sql</td>
</tr>
<tr>
<td align="left">TSX</td>
<td align="left">tsx</td>
<td align="left">*.tsx</td>
</tr>
<tr>
<td align="left">TXL</td>
<td align="left">txl</td>
<td align="left">*.txl</td>
</tr>
<tr>
<td align="left">Tcl</td>
<td align="left">tcl</td>
<td align="left">*.tcl, owh</td>
</tr>
<tr>
<td align="left">Tcsh</td>
<td align="left">tcsh</td>
<td align="left">*.tcsh</td>
</tr>
<tr>
<td align="left">TeX</td>
<td align="left">tex, latex</td>
<td align="left">*.tex</td>
</tr>
<tr>
<td align="left">Tea</td>
<td align="left">tea</td>
<td align="left">*.tea</td>
</tr>
<tr>
<td align="left">Terra</td>
<td align="left">terra</td>
<td align="left">*.t</td>
</tr>
<tr>
<td align="left">Texinfo</td>
<td align="left">texinfo</td>
<td align="left">*.texinfo</td>
</tr>
<tr>
<td align="left">Text</td>
<td align="left">text, fundamental</td>
<td align="left">*.txt, COPYING</td>
</tr>
<tr>
<td align="left">Textile</td>
<td align="left">textile</td>
<td align="left">*.textile</td>
</tr>
<tr>
<td align="left">Thrift</td>
<td align="left">thrift</td>
<td align="left">*.thrift</td>
</tr>
<tr>
<td align="left">Turing</td>
<td align="left">turing</td>
<td align="left">*.t</td>
</tr>
<tr>
<td align="left">Turtle</td>
<td align="left">turtle</td>
<td align="left">*.ttl</td>
</tr>
<tr>
<td align="left">Twig</td>
<td align="left">twig</td>
<td align="left">*.twig</td>
</tr>
<tr>
<td align="left">Type Language</td>
<td align="left">type-language, tl</td>
<td align="left">*.tl</td>
</tr>
<tr>
<td align="left">TypeScript</td>
<td align="left">typescript, ts</td>
<td align="left">*.ts</td>
</tr>
<tr>
<td align="left">Unified Parallel C</td>
<td align="left">unified-parallel-c</td>
<td align="left">*.upc</td>
</tr>
<tr>
<td align="left">Unity3D Asset</td>
<td align="left">unity3d-asset</td>
<td align="left">*.anim</td>
</tr>
<tr>
<td align="left">Unix Assembly</td>
<td align="left">unix-assembly</td>
<td align="left">*.s</td>
</tr>
<tr>
<td align="left">Uno</td>
<td align="left">uno</td>
<td align="left">*.uno</td>
</tr>
<tr>
<td align="left">UnrealScript</td>
<td align="left">unrealscript</td>
<td align="left">*.uc</td>
</tr>
<tr>
<td align="left">UrWeb</td>
<td align="left">urweb, Ur/Web, Ur</td>
<td align="left">*.ur</td>
</tr>
<tr>
<td align="left">V</td>
<td align="left">v, vlang</td>
<td align="left">*.v</td>
</tr>
<tr>
<td align="left">VBA</td>
<td align="left">vba, vb6</td>
<td align="left">*.bas</td>
</tr>
<tr>
<td align="left">VBScript</td>
<td align="left">vbscript</td>
<td align="left">*.vbs</td>
</tr>
<tr>
<td align="left">VCL</td>
<td align="left">vcl</td>
<td align="left">*.vcl</td>
</tr>
<tr>
<td align="left">VHDL</td>
<td align="left">vhdl</td>
<td align="left">*.vhdl</td>
</tr>
<tr>
<td align="left">Vala</td>
<td align="left">vala</td>
<td align="left">*.vala</td>
</tr>
<tr>
<td align="left">Verilog</td>
<td align="left">verilog</td>
<td align="left">*.v</td>
</tr>
<tr>
<td align="left">Vim Snippet</td>
<td align="left">vim-snippet, SnipMate, UltiSnip, NeoSnippet</td>
<td align="left">*.snip</td>
</tr>
<tr>
<td align="left">Vim script</td>
<td align="left">vim-script, vim, viml, nvim</td>
<td align="left">*.vim, .gvimrc</td>
</tr>
<tr>
<td align="left">Visual Basic .NET</td>
<td align="left">vbnet, vb.net</td>
<td align="left">*.vb</td>
</tr>
<tr>
<td align="left">Volt</td>
<td align="left">volt</td>
<td align="left">*.volt</td>
</tr>
<tr>
<td align="left">Vue</td>
<td align="left">vue</td>
<td align="left">*.vue</td>
</tr>
<tr>
<td align="left">Wavefront Material</td>
<td align="left">wavefront-material</td>
<td align="left">*.mtl</td>
</tr>
<tr>
<td align="left">Wavefront Object</td>
<td align="left">wavefront-object</td>
<td align="left">*.obj</td>
</tr>
<tr>
<td align="left">Web Ontology Language</td>
<td align="left">web-ontology-language</td>
<td align="left">*.owl</td>
</tr>
<tr>
<td align="left">WebAssembly</td>
<td align="left">webassembly, wast, wasm</td>
<td align="left">*.wast</td>
</tr>
<tr>
<td align="left">WebIDL</td>
<td align="left">webidl</td>
<td align="left">*.webidl</td>
</tr>
<tr>
<td align="left">WebVTT</td>
<td align="left">webvtt</td>
<td align="left">*.vtt</td>
</tr>
<tr>
<td align="left">Wget Config</td>
<td align="left">wget-config, wgetrc</td>
<td align="left">.wgetrc</td>
</tr>
<tr>
<td align="left">Windows Registry Entries</td>
<td align="left">windows-registry-entries</td>
<td align="left">*.reg</td>
</tr>
<tr>
<td align="left">Wollok</td>
<td align="left">wollok</td>
<td align="left">*.wlk</td>
</tr>
<tr>
<td align="left">World of Warcraft Addon Data</td>
<td align="left">world-of-warcraft-addon-data</td>
<td align="left">*.toc</td>
</tr>
<tr>
<td align="left">X BitMap</td>
<td align="left">x-bitmap, xbm</td>
<td align="left">*.xbm</td>
</tr>
<tr>
<td align="left">X Font Directory Index</td>
<td align="left">x-font-directory-index</td>
<td align="left">encodings.dir</td>
</tr>
<tr>
<td align="left">X PixMap</td>
<td align="left">x-pixmap, xpm</td>
<td align="left">*.xpm</td>
</tr>
<tr>
<td align="left">X10</td>
<td align="left">x10, xten</td>
<td align="left">*.x10</td>
</tr>
<tr>
<td align="left">XC</td>
<td align="left">xc</td>
<td align="left">*.xc</td>
</tr>
<tr>
<td align="left">XCompose</td>
<td align="left">xcompose</td>
<td align="left">.XCompose</td>
</tr>
<tr>
<td align="left">XML</td>
<td align="left">xml, rss, xsd, wsdl</td>
<td align="left">*.xml, .classpath</td>
</tr>
<tr>
<td align="left">XML Property List</td>
<td align="left">xml-property-list</td>
<td align="left">*.plist</td>
</tr>
<tr>
<td align="left">XPages</td>
<td align="left">xpages</td>
<td align="left">*.xsp-config</td>
</tr>
<tr>
<td align="left">XProc</td>
<td align="left">xproc</td>
<td align="left">*.xpl</td>
</tr>
<tr>
<td align="left">XQuery</td>
<td align="left">xquery</td>
<td align="left">*.xquery</td>
</tr>
<tr>
<td align="left">XS</td>
<td align="left">xs</td>
<td align="left">*.xs</td>
</tr>
<tr>
<td align="left">XSLT</td>
<td align="left">xslt, xsl</td>
<td align="left">*.xslt</td>
</tr>
<tr>
<td align="left">Xojo</td>
<td align="left">xojo</td>
<td align="left">*.xojo_code</td>
</tr>
<tr>
<td align="left">Xtend</td>
<td align="left">xtend</td>
<td align="left">*.xtend</td>
</tr>
<tr>
<td align="left">YAML</td>
<td align="left">yaml, yml</td>
<td align="left">*.yml, .clang-format</td>
</tr>
<tr>
<td align="left">YANG</td>
<td align="left">yang</td>
<td align="left">*.yang</td>
</tr>
<tr>
<td align="left">YARA</td>
<td align="left">yara</td>
<td align="left">*.yar</td>
</tr>
<tr>
<td align="left">YASnippet</td>
<td align="left">yasnippet, snippet, yas</td>
<td align="left">*.yasnippet</td>
</tr>
<tr>
<td align="left">Yacc</td>
<td align="left">yacc</td>
<td align="left">*.y</td>
</tr>
<tr>
<td align="left">ZAP</td>
<td align="left">zap</td>
<td align="left">*.zap</td>
</tr>
<tr>
<td align="left">ZIL</td>
<td align="left">zil</td>
<td align="left">*.zil</td>
</tr>
<tr>
<td align="left">Zeek</td>
<td align="left">zeek, bro</td>
<td align="left">*.zeek</td>
</tr>
<tr>
<td align="left">ZenScript</td>
<td align="left">zenscript</td>
<td align="left">*.zs</td>
</tr>
<tr>
<td align="left">Zephir</td>
<td align="left">zephir</td>
<td align="left">*.zep</td>
</tr>
<tr>
<td align="left">Zig</td>
<td align="left">zig</td>
<td align="left">*.zig</td>
</tr>
<tr>
<td align="left">Zimpl</td>
<td align="left">zimpl</td>
<td align="left">*.zimpl</td>
</tr>
<tr>
<td align="left">cURL Config</td>
<td align="left">curl-config, curlrc</td>
<td align="left">.curlrc</td>
</tr>
<tr>
<td align="left">desktop</td>
<td align="left">desktop</td>
<td align="left">*.desktop</td>
</tr>
<tr>
<td align="left">dircolors</td>
<td align="left">dircolors</td>
<td align="left">*.dircolors, .dir_colors</td>
</tr>
<tr>
<td align="left">eC</td>
<td align="left">ec</td>
<td align="left">*.ec</td>
</tr>
<tr>
<td align="left">edn</td>
<td align="left">edn</td>
<td align="left">*.edn</td>
</tr>
<tr>
<td align="left">fish</td>
<td align="left">fish</td>
<td align="left">*.fish</td>
</tr>
<tr>
<td align="left">mIRC Script</td>
<td align="left">mirc-script</td>
<td align="left">*.mrc</td>
</tr>
<tr>
<td align="left">mcfunction</td>
<td align="left">mcfunction</td>
<td align="left">*.mcfunction</td>
</tr>
<tr>
<td align="left">mupad</td>
<td align="left">mupad</td>
<td align="left">*.mu</td>
</tr>
<tr>
<td align="left">nanorc</td>
<td align="left">nanorc</td>
<td align="left">*.nanorc, .nanorc</td>
</tr>
<tr>
<td align="left">nesC</td>
<td align="left">nesc</td>
<td align="left">*.nc</td>
</tr>
<tr>
<td align="left">ooc</td>
<td align="left">ooc</td>
<td align="left">*.ooc</td>
</tr>
<tr>
<td align="left">q</td>
<td align="left">q</td>
<td align="left">*.q</td>
</tr>
<tr>
<td align="left">reStructuredText</td>
<td align="left">restructuredtext, rst</td>
<td align="left">*.rst</td>
</tr>
<tr>
<td align="left">sed</td>
<td align="left">sed</td>
<td align="left">*.sed</td>
</tr>
<tr>
<td align="left">wdl</td>
<td align="left">wdl</td>
<td align="left">*.wdl</td>
</tr>
<tr>
<td align="left">wisp</td>
<td align="left">wisp</td>
<td align="left">*.wisp</td>
</tr>
<tr>
<td align="left">xBase</td>
<td align="left">xbase, advpl, clipper, foxpro</td>
<td align="left">*.prg</td>
</tr>
</tbody></table>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>idea创建Spring项目</title>
    <url>/313.html</url>
    <content><![CDATA[<h3 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h3><p>查看博客：<a href="/253.html">idea创建Maven项目</a></p>
<h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-context --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.9.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>命名为：applicationContext.xml，完整代码如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.ledao.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;张三&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="学生实体类"><a href="#学生实体类" class="headerlink" title="学生实体类"></a>学生实体类</h4><p>命名为：Student.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-24 1:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 编号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 姓名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 年龄</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h4><p>命名为：Test.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-08-24 1:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        ApplicationContext context=<span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;applicationContext.xml&quot;</span>);</span><br><span class="line">        Student student = (Student) context.getBean(<span class="string">&quot;student1&quot;</span>);</span><br><span class="line">        System.out.println(student.getId()+<span class="string">&quot;,&quot;</span>+student.getName()+<span class="string">&quot;,&quot;</span>+ student.getAge());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h3><p>运行测试类的main方法，结果如下：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-24%20021110.jpg"></p>]]></content>
      <categories>
        <category>idea使用</category>
      </categories>
      <tags>
        <tag>idea使用</tag>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows10释放被占用端口</title>
    <url>/314.html</url>
    <content><![CDATA[<h3 id="查看PID"><a href="#查看PID" class="headerlink" title="查看PID"></a>查看PID</h3><p>打开CMD，输入命令查看端口4000的PID</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -aon|findstr <span class="string">&quot;4000&quot;</span></span><br></pre></td></tr></table></figure>

<p>看下图的0.0.0.0:4000，LISTENING后的数值：16388就是PID</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-24%20044304.png"></p>
<h3 id="释放端口"><a href="#释放端口" class="headerlink" title="释放端口"></a>释放端口</h3><h4 id="CMD方式释放"><a href="#CMD方式释放" class="headerlink" title="CMD方式释放"></a>CMD方式释放</h4><p>输入以下命令，PID为上图LISTENING后的数值</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskkill /T /F /PID 16388</span><br></pre></td></tr></table></figure>

<h4 id="任务管理器释放"><a href="#任务管理器释放" class="headerlink" title="任务管理器释放"></a>任务管理器释放</h4><p>查看指定 PID 的进程（也可以不看，记住PID即可）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tasklist|findstr <span class="string">&quot;16388&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-24%20044328.png"></p>
<p>打开任务管理，选择详细信息选项，根据进程名称或者PID找到进程</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-24%20044726.jpg"></p>
<p>右键点击并选择结束任务</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-24%20044745.jpg"></p>]]></content>
      <categories>
        <category>Windows10</category>
      </categories>
      <tags>
        <tag>Windows10</tag>
      </tags>
  </entry>
  <entry>
    <title>form表单无法提交input disabled内容</title>
    <url>/315.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>使用了disable属性让文本框无法编辑，但是提交form表单时无法获取该文本框的值，代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/student/update&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;margin-top: 10%&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;student.id&#125;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;编号&quot;</span> <span class="attr">required</span>=<span class="string">&quot;required&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;student.name&#125;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;姓名&quot;</span> <span class="attr">required</span>=<span class="string">&quot;required&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;student.age&#125;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;年龄&quot;</span> <span class="attr">required</span>=<span class="string">&quot;required&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>修改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>disabled=”disabled”修改为readonly=”readonly”即可</p>
<h3 id="readonly和disabled的区别"><a href="#readonly和disabled的区别" class="headerlink" title="readonly和disabled的区别"></a>readonly和disabled的区别</h3><p>readonly：针对input(text / password)和textarea有效，在设置为true的情况下，用户可以获得焦点，但是不能编辑，在提交表单时，输入项会作为form的内容提交</p>
<p>disabled：针对所有表单元素（select，button，input，textarea等），在设置为disabled为true的情况下，表单输入项不能获得焦点，用户的所有操作无意义，在提交表单时，表单输入项不会被提交。</p>]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装Nginx</title>
    <url>/316.html</url>
    <content><![CDATA[<h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull nginx</span><br></pre></td></tr></table></figure>

<h3 id="创建并运行容器"><a href="#创建并运行容器" class="headerlink" title="创建并运行容器"></a>创建并运行容器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=自定义名称 -v /home/data/nginx:/etc/nginx -p 80:80 nginx镜像id</span><br></pre></td></tr></table></figure>

<h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it nginx容器id bash</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>浏览器地址栏输入<font color="#dd0000">虚拟机IP</font>，看到<mark class="hl-label blue">Welcome to nginx!</mark> 说明安装成功</p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx实现反向代理</title>
    <url>/317.html</url>
    <content><![CDATA[<p>本博客主要实现访问Nginx时，代理请求Tomcat服务器</p>
<h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><p>创建并启动Nginx容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=自定义名称 -v /home/data/nginx:/etc/nginx -p 80:80 nginx镜像id</span><br></pre></td></tr></table></figure>

<h3 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h3><p>创建并启动Tomcat容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=自定义名称 -p 8080:8080 tomcat镜像id</span><br></pre></td></tr></table></figure>

<p>查看Docker给Tomcat容器分配的IP</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect Tomcat容器id</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-27%20000102.png"></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>在宿主机 <font color="#dd0000">/home/data/nginx/conf.d</font> 目录下修改 <mark class="hl-label blue">default.conf</mark>  文件（下面的IP为Docker给Tomcat容器分配的IP）</p>
<p>location / { }中添加：<mark class="hl-label blue">proxy_pass  http://172.17.0.3:8080;</mark> </p>
<p>server_name修改为：<mark class="hl-label blue">http://172.17.0.3:8080</mark> （server_name内容随意，主要是用于区分）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-26%20235921.png"></p>
<h3 id="添加本地域名"><a href="#添加本地域名" class="headerlink" title="添加本地域名"></a>添加本地域名</h3><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">虚拟机IP www.<span class="number">123</span>.com</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>浏览器地址栏输入：<a href="http://www.123.com/">www.123.com</a> （也可以输入虚拟机IP）访问Nginx时，通过代理请求了Tomcat服务器</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx实现负载均衡</title>
    <url>/318.html</url>
    <content><![CDATA[<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>Docker中运行多个Tomcat，客户端把请求发送给Nginx后，由Nginx分发给其中一个Tomcat，Tomcat响应后再由Nginx返回结果到客户端</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="复制Tomcat配置"><a href="#复制Tomcat配置" class="headerlink" title="复制Tomcat配置"></a>复制Tomcat配置</h4><p>创建并启动一个Tomcat容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=自定义名称 -p 8080:8080 tomcat镜像id</span><br></pre></td></tr></table></figure>

<p>在 /home/data/tomcat 目录下新建两个目录：tomcat1、tomcat2，并把该容器的 /usr/local/tomcat/conf 和 /usr/local/tomcat/webapps 目录复制到 /home/tomcat1 和 /home/tomcat2 下，复制命令为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#复制到tomcat1</span></span><br><span class="line">docker cp 该容器id:/usr/<span class="built_in">local</span>/tomcat/conf /home/data/tomcat/tomcat1/</span><br><span class="line">docker cp 该容器id:/usr/<span class="built_in">local</span>/tomcat/webapps /home/data/tomcat/tomcat1/</span><br><span class="line"></span><br><span class="line"><span class="comment">#复制到tomcat2</span></span><br><span class="line">docker cp 该容器id:/usr/<span class="built_in">local</span>/tomcat/conf /home/data/tomcat/tomcat2/</span><br><span class="line">docker cp 该容器id:/usr/<span class="built_in">local</span>/tomcat/webapps /home/data/tomcat/tomcat2/</span><br></pre></td></tr></table></figure>

<h4 id="创建Tomcat容器"><a href="#创建Tomcat容器" class="headerlink" title="创建Tomcat容器"></a>创建Tomcat容器</h4><p>把正在运行的Tomcat容器停掉，创建和启动两个Tomcat容器，并挂载目录到新创建的两个目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name tomcat1 -p 8080:8080 -v /home/data/tomcat/tomcat1/conf/:/usr/<span class="built_in">local</span>/tomcat/conf/ -v /home/data/tomcat/tomcat1/webapps/:/usr/<span class="built_in">local</span>/tomcat/webapps/ tomcat镜像id</span><br><span class="line"></span><br><span class="line">docker run -d --name tomcat2 -p 9090:9090 -v /home/data/tomcat/tomcat2/conf/:/usr/<span class="built_in">local</span>/tomcat/conf/ -v /home/data/tomcat/tomcat2/webapps/:/usr/<span class="built_in">local</span>/tomcat/webapps/ tomcat镜像id</span><br></pre></td></tr></table></figure>

<p>修改Tomcat2的配置文件中的端口为9090，该文件的宿主机路径为：/home/data/tomcat/tomcat2/conf/server.xml（因为已经挂载了目录所以可以直接在宿主机修改）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-27%20023013.png"></p>
<p>修改两个Tomcat容器运行成功后的首页，Tomcat1的首页文件宿主机目录为：/home/data/tomcat/tomcat1/webapps/ROOT/index.jsp，Tomcat2的首页文件宿主机目录为：/home/data/tomcat/tomcat2/webapps/ROOT/index.jsp，修改了可以看出运行成功后是哪个Tomcat运行就行了，我的修改如下：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-27%20023833.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-27%20023855.png"></p>
<p>试一下两个Tomcat容器能否正确运行，可以运行成功即可</p>
<h4 id="修改nginx-conf"><a href="#修改nginx-conf" class="headerlink" title="修改nginx.conf"></a>修改nginx.conf</h4><p>在http{}中添加以下代码：（ <a href="http://www.123.com/">www.123.com</a> 为本地域名，IP和端口号为该Tomcat容器在Docker内的IP以及端口）</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">8080</span> weight=<span class="number">5</span>;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.4</span>:<span class="number">9090</span> weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>upstream是配置nginx与后端服务器负载均衡非常重要的一个模块，并且它还能对后端的服务器的健康状态进行检查，若后端服务器中的一台发生故障，则前端的请求不会转发到该故障的机器；weight是权重配置，权重越高，分配到的概率越高</p>
<h4 id="修改default-conf"><a href="#修改default-conf" class="headerlink" title="修改default.conf"></a>修改default.conf</h4><p>该文件在nginx.conf所在目录的conf.d目录下，修改proxy_pass为本机域名</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-27%20025538.png"></p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>浏览器地址栏输入：虚拟机IP或者与它绑定的本机域名，不断刷新页面，有时候请求的是tomcat1，有时候是tomcat2，如果停掉tomcat2那么就只请求tomcat1</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx负载均衡backup和down配置</title>
    <url>/320.html</url>
    <content><![CDATA[<p>这两个配置很多时候用于运维，维护某个机器的时候用</p>
<h3 id="backup"><a href="#backup" class="headerlink" title="backup"></a>backup</h3><p>其他非backup机器挂掉后，才会请求backup机器</p>
<p>实例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span>;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span> backup;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="down"><a href="#down" class="headerlink" title="down"></a>down</h3><p>配置down的服务器不参与负载均衡，</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span>;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span> down;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx负载均衡策略</title>
    <url>/319.html</url>
    <content><![CDATA[<p>Nginx负载均衡策略有：轮询（默认）、weight权重、ip_hash、least_conn最少连接</p>
<h3 id="轮询（默认）"><a href="#轮询（默认）" class="headerlink" title="轮询（默认）"></a>轮询（默认）</h3><p>每个请求轮流分配到不同的后端服务器，如果后端服务器挂掉，则自动被剔除</p>
<p>实例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span>;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="weight权重"><a href="#weight权重" class="headerlink" title="weight权重"></a>weight权重</h3><p>根据weight权重，请求会根据权重比例分发给不同后端服务器，weight权重越高，分配的比例越大；实际分配时，根据服务器硬件配置高低，来具体分配weight权重，硬件配置高的，weight就配置高点</p>
<p>实例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span> weight=<span class="number">5</span>;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span> weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ip-hash"><a href="#ip-hash" class="headerlink" title="ip_hash"></a>ip_hash</h3><p>ip_hash策略是根据用户客户端的IP的hash值来分配具体服务器，这样每个访问客户端都会固定访问某一个服务器，这样可以解决session丢失问题，很多网站都采用这种策略来搞负载均衡，主要考虑到session问题</p>
<p>实例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">	 ip_hash;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span>;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="least-conn"><a href="#least-conn" class="headerlink" title="least_conn"></a>least_conn</h3><p>web请求会被分发到连接数最少的服务器上</p>
<p>实例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">	 least_conn;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span>;</span><br><span class="line">     server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx实现动静分离</title>
    <url>/321.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>动静分离是指在web服务器架构中，将静态页面与动态页面或者静态内容接口和动态内容接口分开不同系统访问的架构设计方法，进而提升整个服务访问性能和可维护性</p>
<p>我们可以把静态html页面，css样式，js文件，以及图片文件这些静态放Nginx服务器中，然后把动态请求显示的文件放类似Tomcat这样的容器服务器</p>
<p>这样方便维护，也可以提高系统性能</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="新建Nginx静态服务器"><a href="#新建Nginx静态服务器" class="headerlink" title="新建Nginx静态服务器"></a>新建Nginx静态服务器</h4><p>新建Nginx容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -it --name=myNginx2 -v /home/data/nginx2:/etc/nginx -v /home/data/nginx2data:/home/nginx -p 1010:1010 nginx镜像id</span><br></pre></td></tr></table></figure>

<p>在/home/data/nginx2data/目录下放静态资源</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-29%20232321.png"></p>
<p>index.html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://192.168.0.140:1010/static/css/my.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://192.168.0.140:1010/static/js/my.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Nginx静态资源服务器测试<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://192.168.0.140:1010/static/img/2.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 666px&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>my.css</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>my.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">alert(<span class="string">&quot;123456&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>修改Nginx容器 default.conf 的端口以及location /</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-29%20233013.png"></p>
<p>浏览器地址栏输入：<a href="http://192.168.0.140:1010/">http://192.168.0.140:1010/</a>，结果如下：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-29%20233353.gif"></p>
<h4 id="配置主Nginx容器"><a href="#配置主Nginx容器" class="headerlink" title="配置主Nginx容器"></a>配置主Nginx容器</h4><p>修改nginx.conf，只要修改或添加upstream，下图的IP地址为对应容器的DockerIP地址</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span> weight=<span class="number">5</span>;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.4</span>:<span class="number">9090</span> weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream static.<span class="number">123</span>.com&#123;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.5</span>:<span class="number">1010</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整代码如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">user  nginx;</span><br><span class="line">worker_processes  auto;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log notice;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    <span class="keyword">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] <span class="string">&quot;$request&quot;</span> &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent <span class="string">&quot;$http_referer&quot;</span> &#x27;</span><br><span class="line">                      &#x27;<span class="string">&quot;$http_user_agent&quot;</span> <span class="string">&quot;$http_x_forwarded_for&quot;</span>&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        <span class="keyword">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">         server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span> weight=<span class="number">5</span>;</span><br><span class="line">         server <span class="number">172.17</span>.<span class="number">0.4</span>:<span class="number">9090</span> weight=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    upstream static.<span class="number">123</span>.com&#123;</span><br><span class="line">         server <span class="number">172.17</span>.<span class="number">0.5</span>:<span class="number">1010</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span> /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改default.conf，添加以下内容：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$ &#123;</span><br><span class="line">	proxy_pass http://static.<span class="number">123</span>.com;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">   proxy_pass http://static.<span class="number">123</span>.com;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ .*\.(html)?$ &#123;</span><br><span class="line">   proxy_pass http://static.<span class="number">123</span>.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="添加本地域名"><a href="#添加本地域名" class="headerlink" title="添加本地域名"></a>添加本地域名</h4><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">虚拟机IP static.<span class="number">123</span>.com</span><br></pre></td></tr></table></figure>

<h4 id="配置Tomcat容器"><a href="#配置Tomcat容器" class="headerlink" title="配置Tomcat容器"></a>配置Tomcat容器</h4><p>修改Tomcat默认项目的主页：在 /webapps/ROOT 目录下，名称为：index.jsp，在这个页面引用上面的静态资源文件</p>
<p>引用路径为：<a href="https://static.123.com/static/">https://static.123.com/static/</a> ，后面接文件目录及名称</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;http://static.123.com/static/css/my.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://static.123.com/static/js/my.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;http://static.123.com/static/img/2.jpg&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 666px&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>运行这个Tomcat容器，如果可以看到资源生效就说明动静分离已经实现</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx实现虚拟主机</title>
    <url>/322.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>虚拟主机概念比较广，可以是虚拟硬件来实现多网站，多应用运行，也可以是通过一些代理服务器来实现单击多网站运行，例如：我们一个服务器上可以配置三个网站，通过三个域名访问</p>
<p>Nginx可以通过反向代理来实现虚拟主机</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="创建Tomcat容器"><a href="#创建Tomcat容器" class="headerlink" title="创建Tomcat容器"></a>创建Tomcat容器</h4><p>创建3个Tomcat容器,并修改对应的默认项目的首页文件（主要是方便查看运行的是哪个Tomcat）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name tomcat1 -p 8080:8080 -v /home/data/tomcat/tomcat1/conf/:/usr/<span class="built_in">local</span>/tomcat/conf/  -v /home/data/tomcat/tomcat1/webapps/:/usr/<span class="built_in">local</span>/tomcat/webapps/ 108db0e7c85e</span><br><span class="line"></span><br><span class="line">docker run -d --name tomcat2 -p 9090:9090 -v /home/data/tomcat/tomcat2/conf/:/usr/<span class="built_in">local</span>/tomcat/conf/  -v /home/data/tomcat/tomcat2/webapps/:/usr/<span class="built_in">local</span>/tomcat/webapps/ 108db0e7c85e</span><br><span class="line"></span><br><span class="line">docker run -d --name tomcat3 -p 7070:7070 -v /home/data/tomcat/tomcat3/conf/:/usr/<span class="built_in">local</span>/tomcat/conf/  -v /home/data/tomcat/tomcat3/webapps/:/usr/<span class="built_in">local</span>/tomcat/webapps/ 108db0e7c85e</span><br></pre></td></tr></table></figure>

<p>运行结果如下：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20002344.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20002400.png"></p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20002420.png"></p>
<h4 id="查看容器的Docker-IP"><a href="#查看容器的Docker-IP" class="headerlink" title="查看容器的Docker IP"></a>查看容器的Docker IP</h4><p>使用命令 <font color="#dd0000">docker inspect 容器id</font> 查看tomcat1、tomcat2、tomcat3的Docker IP</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">tomcat1  <span class="number">172.17</span>.<span class="number">0.2</span>  <span class="number">8080</span></span><br><span class="line"></span><br><span class="line">tomcat2  <span class="number">172.17</span>.<span class="number">0.3</span>  <span class="number">9090</span></span><br><span class="line"></span><br><span class="line">tomcat3  <span class="number">172.17</span>.<span class="number">0.4</span>  <span class="number">7070</span></span><br></pre></td></tr></table></figure>

<h4 id="创建Nginx容器"><a href="#创建Nginx容器" class="headerlink" title="创建Nginx容器"></a>创建Nginx容器</h4><p>创建一个Nginx容器，并且挂载目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name=nginx80 -v /home/data/nginx:/etc/nginx -p 80:80 nginx镜像id</span><br></pre></td></tr></table></figure>

<p>修改 nginx.conf 配置文件，主要添加以下内容：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line"></span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.2</span>:<span class="number">8080</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream blog.<span class="number">123</span>.com&#123;</span><br><span class="line"></span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.3</span>:<span class="number">9090</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream static.<span class="number">123</span>.com&#123;</span><br><span class="line"></span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.4</span>:<span class="number">7070</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改 default.conf 配置文件，主要是三个server，对应三个域名</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name  www.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://www.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name  blog.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://blog.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name  static.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass   http://static.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="配置本地域名"><a href="#配置本地域名" class="headerlink" title="配置本地域名"></a>配置本地域名</h4><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">192.168</span>.<span class="number">0.140</span> www.<span class="number">123</span>.com</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.140</span> static.<span class="number">123</span>.com</span><br><span class="line"><span class="number">192.168</span>.<span class="number">0.140</span> blog.<span class="number">123</span>.com</span><br></pre></td></tr></table></figure>

<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>输入上面三个本地域名可以访问到对应的Tomcat</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装Nginx</title>
    <url>/323.html</url>
    <content><![CDATA[<h3 id="添加Nginx源"><a href="#添加Nginx源" class="headerlink" title="添加Nginx源"></a>添加Nginx源</h3><p>CentOS7默认是没有Nginx源的，Nginx官方提供了添加源的命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure>

<h3 id="安装Nginx"><a href="#安装Nginx" class="headerlink" title="安装Nginx"></a>安装Nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure>

<h3 id="启动Nginx"><a href="#启动Nginx" class="headerlink" title="启动Nginx"></a>启动Nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure>

<h3 id="设置开机自动运行"><a href="#设置开机自动运行" class="headerlink" title="设置开机自动运行"></a>设置开机自动运行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx.service</span><br></pre></td></tr></table></figure>

<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><p>关闭</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure>

<p>查看状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status  firewalld</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>浏览器地址栏输入虚拟机IP，看到 <font color="#dd0000">Welcome to nginx! </font>就说明安装成功</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>CentOS7关闭Nginx命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop nginx.service</span><br></pre></td></tr></table></figure>

<p>CentOS7启动Nginx命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure>

<p>CentOS7重启Nginx命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx.service</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7安装Keepalived</title>
    <url>/324.html</url>
    <content><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install keepalived</span><br></pre></td></tr></table></figure>

<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start keepalived.service</span><br></pre></td></tr></table></figure>

<p>关闭</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop keepalived.service</span><br></pre></td></tr></table></figure>

<p>重启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart keepalived.service</span><br></pre></td></tr></table></figure>

<p>查看日志</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tail -f /var/<span class="built_in">log</span>/messages</span><br></pre></td></tr></table></figure>

<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>配置文件在/etc/keepalived目录下，名称为：keepalived.conf</p>
<p>日志文件在/var/log目录下，名称为：messages</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Nginx</tag>
        <tag>Keepalived</tag>
      </tags>
  </entry>
  <entry>
    <title>VMware克隆虚拟机</title>
    <url>/325.html</url>
    <content><![CDATA[<h3 id="关闭虚拟机"><a href="#关闭虚拟机" class="headerlink" title="关闭虚拟机"></a>关闭虚拟机</h3><p>如果要克隆的虚拟机正在运行，就先把它停掉，正在运行的虚拟机是无法克隆的</p>
<h3 id="开始克隆"><a href="#开始克隆" class="headerlink" title="开始克隆"></a>开始克隆</h3><blockquote>
<p>选中要克隆的虚拟机右键点击，选择 <font color="#dd0000">管理–&gt;&gt;克隆</font></p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20124552.png"></p>
<blockquote>
<p>克隆类型选择完整克隆</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20124640.png"></p>
<blockquote>
<p>填写虚拟机名称以及存储路径</p>
</blockquote>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20124658.png"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>Keepalived+Nginx实现高可用集群配置</title>
    <url>/326.html</url>
    <content><![CDATA[<h3 id="克隆虚拟机"><a href="#克隆虚拟机" class="headerlink" title="克隆虚拟机"></a>克隆虚拟机</h3><p>克隆当前虚拟机，查看克隆步骤：<a href="/325.html">VMware克隆虚拟机</a> ，当前虚拟机为主机，克隆的虚拟机为备用机（主机崩了才会启用备用机）</p>
<h3 id="配置主机"><a href="#配置主机" class="headerlink" title="配置主机"></a>配置主机</h3><h4 id="配置虚拟机hosts"><a href="#配置虚拟机hosts" class="headerlink" title="配置虚拟机hosts"></a>配置虚拟机hosts</h4><p>文件路径为：/etc/hosts，在底部添加：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0</span>.<span class="number">0.1</span> KEEPALIVED_NGINX_MASTER</span><br></pre></td></tr></table></figure>

<h4 id="Keepalived配置介绍"><a href="#Keepalived配置介绍" class="headerlink" title="Keepalived配置介绍"></a>Keepalived配置介绍</h4><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123; <span class="comment"># keepalived服务宕机异常出现的时候，发送通知邮件 可以是多个</span></span><br><span class="line">     acassen@firewall.loc  <span class="comment">#  收件人邮箱1</span></span><br><span class="line">     failover@firewall.loc <span class="comment">#  收件人邮箱2</span></span><br><span class="line">     sysadmin@firewall.loc <span class="comment">#  收件人邮箱3</span></span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc  <span class="comment">#邮件发件人</span></span><br><span class="line">   smtp_server <span class="number">192.168</span>.<span class="number">200.1</span>  <span class="comment"># 邮件服务器地址</span></span><br><span class="line">   smtp_connect_timeout <span class="number">30</span>   <span class="comment"># 超时时间</span></span><br><span class="line">   router_id LVS_DEVEL   <span class="comment"># 路由id 多个keepalived集群的时候 必须一致</span></span><br><span class="line">   vrrp_skip_check_adv_addr <span class="comment"># 默认是不跳过检查。检查收到的VRRP通告中的所有地址可能会比较耗时，设置此命令的意思是，如果通告与接收的上一个通告来自相同的master路由器，则不执行检查(跳过检查)。</span></span><br><span class="line">   vrrp_strict   <span class="comment"># 这个东西要注释掉，否则要出乱子。严格遵守VRRP协议。下列情况将会阻止启动Keepalived：1. 没有VIP地址。2. 单播邻居。3. 在VRRP版本2中有IPv6地址。</span></span><br><span class="line">   vrrp_garp_interval <span class="number">0</span>  <span class="comment"># 小数类型，单位秒，在一个网卡上每组gratuitous arp消息之间的延迟时间，默认为0，一个发送的消息=n组 arp报文</span></span><br><span class="line">   vrrp_gna_interval <span class="number">0</span> <span class="comment"># 小数类型，单位秒， 在一个网卡上每组na消息之间的延迟时间，默认为0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># vrrp实例  我们集群设置 多机配置，除了state和priority不一样，其他都一样</span></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER  <span class="comment"># 服务器状态 MASTER是主服务器  BACKUP是备份服务器 主服务器的priority要比备份服务器大</span></span><br><span class="line">    interface eth0 <span class="comment"># 通信端口 通过ip addr可以看到 根据自己的机器配置</span></span><br><span class="line">    virtual_router_id <span class="number">51</span>  <span class="comment"># vrrp实例id  keepalived集群，实例id必须一致</span></span><br><span class="line">    priority <span class="number">100</span>  <span class="comment"># 权重比  主服务器的priority要比备份服务器大</span></span><br><span class="line">    advert_int <span class="number">1</span>  <span class="comment"># 心跳间隔  单位秒  keepalived多机器集群 通过心跳检测，如果发送心跳没反应 就立刻接管；</span></span><br><span class="line">    authentication &#123; <span class="comment"># 服务器之间通信密码</span></span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123; <span class="comment"># 自定义虚拟IP </span></span><br><span class="line">        <span class="number">192.168</span>.<span class="number">200.16</span></span><br><span class="line">        <span class="number">192.168</span>.<span class="number">200.17</span></span><br><span class="line">        <span class="number">192.168</span>.<span class="number">200.18</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改Keepalived配置文件"><a href="#修改Keepalived配置文件" class="headerlink" title="修改Keepalived配置文件"></a>修改Keepalived配置文件</h4><p>修改 /etc/keepalived 目录下的keepalived.conf配置文件，除了global_defs和vrrp_instance VI_1节点配置外，下面的节点配置都删除</p>
<p>global_defs.router_id修改为：KEEPALIVED_NGINX_MASTER</p>
<p>把global_defs.vrrp_strict注释掉</p>
<p>vrrp_instance VI_1.state修改为：MASTER</p>
<p>vrrp_instance VI_1.interface修改为：ens33</p>
<p>vrrp_instance VI_1.priority修改为：100</p>
<p>vrrp_instance VI_1.virtual_ipaddress修改为：192.168.1.99</p>
<p>完整keepalived.conf配置如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">! Configuration <span class="keyword">File</span> for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server <span class="number">192.168</span>.<span class="number">200.1</span></span><br><span class="line">   smtp_connect_timeout <span class="number">30</span></span><br><span class="line">   router_id KEEPALIVED_NGINX_MASTER</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   <span class="comment"># vrrp_strict</span></span><br><span class="line">   vrrp_garp_interval <span class="number">0</span></span><br><span class="line">   vrrp_gna_interval <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    priority <span class="number">100</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span>.<span class="number">1.99</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="配置备用机"><a href="#配置备用机" class="headerlink" title="配置备用机"></a>配置备用机</h3><h4 id="配置虚拟机hosts-1"><a href="#配置虚拟机hosts-1" class="headerlink" title="配置虚拟机hosts"></a>配置虚拟机hosts</h4><p>文件路径为：/etc/hosts，在底部添加：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">127.0.0.1 KEEPALIVED_NGINX_BACKUP</span><br></pre></td></tr></table></figure>

<h4 id="修改Keepalived配置文件-1"><a href="#修改Keepalived配置文件-1" class="headerlink" title="修改Keepalived配置文件"></a>修改Keepalived配置文件</h4><p>修改 /etc/keepalived 目录下的keepalived.conf配置文件，除了global_defs和vrrp_instance VI_1节点配置外，下面的节点配置都删除</p>
<p>global_defs.router_id修改为：KEEPALIVED_NGINX_BACKUP</p>
<p>把global_defs.vrrp_strict注释掉</p>
<p>vrrp_instance VI_1.state修改为：BACKUP</p>
<p>vrrp_instance VI_1.interface修改为：ens33</p>
<p>vrrp_instance VI_1.priority修改为：50</p>
<p>vrrp_instance VI_1.virtual_ipaddress修改为：192.168.1.99</p>
<p>完整keepalived.conf配置如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">! Configuration <span class="keyword">File</span> for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server <span class="number">192.168</span>.<span class="number">200.1</span></span><br><span class="line">   smtp_connect_timeout <span class="number">30</span></span><br><span class="line">   router_id KEEPALIVED_NGINX_BACKUP</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   <span class="comment"># vrrp_strict</span></span><br><span class="line">   vrrp_garp_interval <span class="number">0</span></span><br><span class="line">   vrrp_gna_interval <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP <span class="comment"># 服务器状态 MASTER是主服务器  BACKUP是备份服务器 主服务器的priority要比备份服务器大</span></span><br><span class="line">    interface ens33 <span class="comment"># 通信端口 通过ip addr可以看到 根据自己的机器配置</span></span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    priority <span class="number">50</span> <span class="comment"># 权重</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span>.<span class="number">1.99</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h4 id="修改Nginx首页"><a href="#修改Nginx首页" class="headerlink" title="修改Nginx首页"></a>修改Nginx首页</h4><p>分别修改主机和备用机的Nginx运行成功的首页，文件路径为：/usr/share/nginx/html/index.html，在首页代码中添加虚拟机IP以方便辨认访问的是哪个虚拟机</p>
<h4 id="启动Keepalived"><a href="#启动Keepalived" class="headerlink" title="启动Keepalived"></a>启动Keepalived</h4><p>启动主机和备用机的Keepalived</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start keepalived.service</span><br></pre></td></tr></table></figure>

<h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p>浏览器地址栏输入：<a href="http://192.168.1.99/">http://192.168.1.99/</a>，此时访问的是主机的Nginx</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20134623.png"></p>
<p>然后停掉主机的Keepalived</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop keepalived.service</span><br></pre></td></tr></table></figure>

<p>刷新一下页面，此时访问的是备用机的Nginx</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-30%20134604.png"></p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Keepalived</tag>
      </tags>
  </entry>
  <entry>
    <title>PotPlayer安装皮肤</title>
    <url>/327.html</url>
    <content><![CDATA[<h3 id="下载皮肤"><a href="#下载皮肤" class="headerlink" title="下载皮肤"></a>下载皮肤</h3><p>下载地址：<a href="http://www.potplayercn.com/skins/">PotPlayer皮肤 - PotPlayer中文网 (potplayercn.com)</a></p>
<h3 id="安装皮肤"><a href="#安装皮肤" class="headerlink" title="安装皮肤"></a>安装皮肤</h3><h4 id="下载后解压"><a href="#下载后解压" class="headerlink" title="下载后解压"></a>下载后解压</h4><p>解压时选择提取到xxxxx文件夹，xxxxx就是下载好的压缩包名称</p>
<h4 id="找到皮肤文件夹"><a href="#找到皮肤文件夹" class="headerlink" title="找到皮肤文件夹"></a>找到皮肤文件夹</h4><p>打开PotPlayer后，在界面上右键点击，选择皮肤–&gt;&gt;皮肤设置</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-31%20132543.png"></p>
<p>打开皮肤文件夹，找到PotPlayer的皮肤安装目录</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-31%20132618.png"></p>
<h4 id="使用皮肤"><a href="#使用皮肤" class="headerlink" title="使用皮肤"></a>使用皮肤</h4><p>然后把上面解压后的文件夹复制到皮肤文件夹中，再重启PotPlayer，在界面上右键点击，选择皮肤再选择对应的皮肤即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-08-31%20133438.jpg"></p>]]></content>
      <categories>
        <category>其它</category>
      </categories>
      <tags>
        <tag>其它</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS7使用Crontab定时任务</title>
    <url>/328.html</url>
    <content><![CDATA[<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p>启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start crond</span><br></pre></td></tr></table></figure>

<p>停止</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop crond</span><br></pre></td></tr></table></figure>

<p>重启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart crond</span><br></pre></td></tr></table></figure>

<p>查看状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status crond</span><br></pre></td></tr></table></figure>

<h3 id="赋予权限"><a href="#赋予权限" class="headerlink" title="赋予权限"></a>赋予权限</h3><p>Crontab定时任务是没有权限执行shell脚本的，要先赋予脚本777权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 777 脚本名称（不在当前目录要加上路径）</span><br></pre></td></tr></table></figure>

<h3 id="执行方式"><a href="#执行方式" class="headerlink" title="执行方式"></a>执行方式</h3><h4 id="脚本放在目录"><a href="#脚本放在目录" class="headerlink" title="脚本放在目录"></a>脚本放在目录</h4><p>把脚本放在/etc/cron.hourly、/etc/cron.daily、/etc/cron.weekly、/etc/cron.monthly目录中，让它每小时/天/星期、月执行一次</p>
<h4 id="编写crontab命令"><a href="#编写crontab命令" class="headerlink" title="编写crontab命令"></a>编写crontab命令</h4><p>进入当前用户的工作表编辑，是常见的vim界面，每行是一条命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure>

<p>crontab的命令构成为 时间+动作，下面的* * * * *是时间，shell脚本路径为动作</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-01%20123513.png"></p>
<p>时间有分、时、日、月、周五种，操作符有：</p>
<p><font color="#dd0000">*****</font> ：取值范围内的所有数字</p>
<p><font color="#dd0000"><strong>/</strong></font> ：每过多少个数字</p>
<p><font color="#dd0000"><strong>-</strong></font> ：从X到Z</p>
<p><font color="#dd0000"><strong>,</strong></font> ：散列数字</p>
<p>一些实例：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">实例<span class="number">1</span>：每<span class="number">1</span>分钟执行一次myCommand</span><br><span class="line">* * * * * myCommand</span><br><span class="line"></span><br><span class="line">实例<span class="number">2</span>：每小时的第<span class="number">3</span>和第<span class="number">15</span>分钟执行</span><br><span class="line"><span class="number">3</span>,<span class="number">15</span> * * * * myCommand</span><br><span class="line"></span><br><span class="line">实例<span class="number">3</span>：在上午<span class="number">8</span>点到<span class="number">11</span>点的第<span class="number">3</span>和第<span class="number">15</span>分钟执行</span><br><span class="line"><span class="number">3</span>,<span class="number">15</span> <span class="number">8</span>-<span class="number">11</span> * * * myCommand</span><br><span class="line"></span><br><span class="line">实例<span class="number">4</span>：每隔两天的上午<span class="number">8</span>点到<span class="number">11</span>点的第<span class="number">3</span>和第<span class="number">15</span>分钟执行</span><br><span class="line"><span class="number">3</span>,<span class="number">15</span> <span class="number">8</span>-<span class="number">11</span> */<span class="number">2</span>  *  * myCommand</span><br><span class="line"></span><br><span class="line">实例<span class="number">5</span>：每周一上午<span class="number">8</span>点到<span class="number">11</span>点的第<span class="number">3</span>和第<span class="number">15</span>分钟执行</span><br><span class="line"><span class="number">3</span>,<span class="number">15</span> <span class="number">8</span>-<span class="number">11</span> * * <span class="number">1</span> myCommand</span><br><span class="line"></span><br><span class="line">实例<span class="number">6</span>：每晚的<span class="number">21</span>:<span class="number">30</span>重启smb</span><br><span class="line"><span class="number">30</span> <span class="number">21</span> * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例<span class="number">7</span>：每月<span class="number">1</span>、<span class="number">10</span>、<span class="number">22</span>日的<span class="number">4</span> : <span class="number">45</span>重启smb</span><br><span class="line"><span class="number">45</span> <span class="number">4</span> <span class="number">1</span>,<span class="number">10</span>,<span class="number">22</span> * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例<span class="number">8</span>：每周六、周日的<span class="number">1</span> : <span class="number">10</span>重启smb</span><br><span class="line"><span class="number">10</span> <span class="number">1</span> * * <span class="number">6</span>,<span class="number">0</span> /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例<span class="number">9</span>：每天<span class="number">18</span> : <span class="number">00</span>至<span class="number">23</span> : <span class="number">00</span>之间每隔<span class="number">30</span>分钟重启smb</span><br><span class="line"><span class="number">0</span>,<span class="number">30</span> <span class="number">18</span>-<span class="number">23</span> * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例<span class="number">10</span>：每星期六的晚上<span class="number">11</span> : <span class="number">00</span> pm重启smb</span><br><span class="line"><span class="number">0</span> <span class="number">23</span> * * <span class="number">6</span> /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例<span class="number">11</span>：每一小时重启smb</span><br><span class="line"><span class="number">0</span> */<span class="number">1</span> * * * /etc/init.d/smb restart</span><br><span class="line"></span><br><span class="line">实例<span class="number">12</span>：晚上<span class="number">11</span>点到早上<span class="number">7</span>点之间，每隔一小时重启smb</span><br><span class="line"><span class="number">0</span> <span class="number">23</span>-<span class="number">7</span>/<span class="number">1</span> * * * /etc/init.d/smb restart</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CentOS7</category>
      </categories>
      <tags>
        <tag>CentOS7</tag>
        <tag>Crontab</tag>
      </tags>
  </entry>
  <entry>
    <title>通过shell脚本优化Keepalived+Nginx高可用集群</title>
    <url>/329.html</url>
    <content><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>Keepalived不容易挂掉，容易挂掉的是Nginx，如果Nginx挂掉了依然可以通过Keepalived访问机器，但是访问不到Nginx服务。所以这里需要借助Keepalived的vrrp_script配置来调用自定义shell脚本，来检测Nginx是否挂掉，如果Nginx挂掉了，就启动它，打开失败就关闭Keepalived启用备用机</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="编写shell脚本"><a href="#编写shell脚本" class="headerlink" title="编写shell脚本"></a>编写shell脚本</h4><p>在 / 目录下新建shell目录存放shell脚本文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir /shell</span><br></pre></td></tr></table></figure>

<p>新建 .sh文件，命名为：nginx_check.sh，内容如下：（该脚本的功能为通过 <font color="#dd0000">ps -ef|grep -w nginx|grep -v grep|wc -l</font>查看当前有多少个Nginx服务在运行，如果返回0说明Nginx服务没有运行，就启动Nginx，过2秒再查看是否启动成功，启动失败就停止Keepalived启用备用机）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">echo &#x27;check Nginx&#x27;</span><br><span class="line"></span><br><span class="line">count_nginx=`ps -ef|grep -w nginx|grep -v grep|wc -l`</span><br><span class="line"></span><br><span class="line">echo $count_nginx</span><br><span class="line"></span><br><span class="line">if [ $count_nginx -eq 0 ];then</span><br><span class="line"></span><br><span class="line">    systemctl start nginx</span><br><span class="line">    echo &#x27;start Nginx&#x27;</span><br><span class="line">    sleep 2</span><br><span class="line"></span><br><span class="line">    if [ `ps -ef|grep -w nginx|grep -v grep|wc -l` -eq 0 ];then</span><br><span class="line">        echo &#x27;stop keepalived&#x27;</span><br><span class="line">        systemctl stop keepalived</span><br><span class="line">    fi  </span><br><span class="line"></span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h4 id="修改Keepalived配置"><a href="#修改Keepalived配置" class="headerlink" title="修改Keepalived配置"></a>修改Keepalived配置</h4><p>配置文件路径为：/etc/keepalived/keepalived.conf</p>
<p>添加节点：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">vrrp_script check_nginx &#123;</span><br><span class="line">	script <span class="string">&quot;/shell/nginx_check.sh&quot;</span></span><br><span class="line">	nterval <span class="number">2</span></span><br><span class="line">	weight -<span class="number">20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在vrrp_instance VI_1节点添加：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">track_script &#123;</span><br><span class="line">	check_nginx</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>完整keepalived.conf如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">! Configuration <span class="keyword">File</span> for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server <span class="number">192.168</span>.<span class="number">200.1</span></span><br><span class="line">   smtp_connect_timeout <span class="number">30</span></span><br><span class="line">   router_id KEEPALIVED_NGINX_MASTER</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   <span class="comment"># vrrp_strict</span></span><br><span class="line">   vrrp_garp_interval <span class="number">0</span></span><br><span class="line">   vrrp_gna_interval <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script check_nginx &#123;</span><br><span class="line">	script <span class="string">&quot;/shell/nginx_check.sh&quot;</span></span><br><span class="line">	nterval <span class="number">2</span></span><br><span class="line">	weight -<span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id <span class="number">51</span></span><br><span class="line">    priority <span class="number">100</span></span><br><span class="line">    advert_int <span class="number">1</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="number">1111</span></span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">	    check_nginx</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="number">192.168</span>.<span class="number">1.99</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="重启Keepalived服务"><a href="#重启Keepalived服务" class="headerlink" title="重启Keepalived服务"></a>重启Keepalived服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart keepalived</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>关闭Nginx服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop nginx</span><br></pre></td></tr></table></figure>

<p>等2秒查看Nginx服务状态：Nginx服务正在运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-01%20132949.png"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>我在测试时keepalived vrrp_script始终不起作用，通过网上的解决方案也没有解决，所以我就不使用vrrp_script了，转而使用Linux的Crontab定时任务定时执行检测脚本，如何使用Crontab查看博客：<a href="https://blog.zoutl.cn/328.html">CentOS7使用Crontab定时任务 </a></p>
<p>如果你解决了keepalived vrrp_script不起作用，请在评论区留言一下，谢谢(～￣▽￣)～</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>Keepalived</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Keepalived+Nginx+Tomcat负载均衡</title>
    <url>/330.html</url>
    <content><![CDATA[<h3 id="启动Tomcat"><a href="#启动Tomcat" class="headerlink" title="启动Tomcat"></a>启动Tomcat</h3><p>主机和备用机分别使用Docker启动一个Tomcat，版本号最好不同，启动成功后有可能通过外部浏览器无法访问，解决方法查看博客：<a href="https://blog.zoutl.cn/294.html">Docker启动Tomcat成功后外部却无法访问</a></p>
<h3 id="修改Nginx配置"><a href="#修改Nginx配置" class="headerlink" title="修改Nginx配置"></a>修改Nginx配置</h3><p>修改主机和备用机的Nginx配置，修改内容一样</p>
<p>修改nginx.conf配置文件（在/etc/nginx目录下），在include /etc/nginx/conf.d/*.conf上方加上：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">	 server <span class="number">192.168</span>.<span class="number">0.106</span>:<span class="number">8080</span> weight=<span class="number">5</span>;</span><br><span class="line">	 server <span class="number">192.168</span>.<span class="number">0.107</span>:<span class="number">8080</span> weight=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改default.conf配置文件（在/etc/nginx/conf.d目录下），在location /节点加上：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">proxy_pass  http://www.<span class="number">123</span>.com;</span><br></pre></td></tr></table></figure>

<p>server_name可以修改成 <a href="http://www.123.com/">www.123.com</a> ，也可以不修改</p>
<h3 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启Nginx</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>浏览器地址输入：<a href="http://192.168.0.106/">http://192.168.0.106/</a>或者<a href="http://192.168.0.107/">http://192.168.0.107/</a></p>
<p>不断刷新页面，访问了主机和备用机的Tomcat，此时Nginx+Tomcat负载均衡完成</p>
<p>如果出现错误：502 Bad Gateway，这是因为Nginx 主机的 SELinux 服务限制了其（即 Nginx）使用 http 访问权限引起的，输入以下命令即可解决此问题，如果不生效再重启Nginx</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setsebool -P httpd_can_network_connect 1    <span class="comment"># “1”为开启，“0”为关闭</span></span><br></pre></td></tr></table></figure>

<p>打开Keepalived服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start keepalived</span><br></pre></td></tr></table></figure>

<p>浏览器地址输入Keepalived配置的virtual_ipaddress，该配置文件在/etc/keepalived目录下，此时已经完成了Keepalived+Nginx+Tomcat负载均衡</p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Nginx</tag>
        <tag>Keepalived</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装Redis</title>
    <url>/331.html</url>
    <content><![CDATA[<h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull redis:5</span><br></pre></td></tr></table></figure>

<h3 id="创建并运行容器"><a href="#创建并运行容器" class="headerlink" title="创建并运行容器"></a>创建并运行容器</h3><p>只运行不进入，要创建并运行就把 -d 改为 -it ，或者使用下面的进入Redis容器命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 6379:6379 Redis镜像id</span><br></pre></td></tr></table></figure>

<h3 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h3><p>进入容器命令行界面后就可以愉快地玩耍了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it Redis容器id redis-cli</span><br></pre></td></tr></table></figure>

<h3 id="Redis可视化工具"><a href="#Redis可视化工具" class="headerlink" title="Redis可视化工具"></a>Redis可视化工具</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>我使用的是AnotherRedisDesktopManager，下载地址：<a href="https://gitee.com/qishibo/AnotherRedisDesktopManager/releases">AnotherRedisDesktopManager 发行版 - Gitee.com</a>，Windows下载第一个，像一般软件那般安装接口</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20090145.jpg"></p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>点击新建连接，地址填Linux服务器IP地址，端口一般都是6379，连接名称根据自己的需求填</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20090427.jpg"></p>
<p>连接成功后，就可以管理Redis了</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20090733.jpg"></p>]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Redis</tag>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot实现Redis存储session</title>
    <url>/332.html</url>
    <content><![CDATA[<h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><h4 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h4><p>创建一个Spring Boot项目，引入Spring Boot DevTools、Spring Web、Thymeleaf依赖，这里是创建项目时引入，下面是创建后引入，可以创建时引入就尽量创建时引入，比较方便</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20102041.jpg"></p>
<h4 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20102341.jpg"></p>
<h3 id="引入依赖-1"><a href="#引入依赖-1" class="headerlink" title="引入依赖"></a>引入依赖</h3><p>在pom文件中添加：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/redis.clients/jedis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.session/spring-session-data-redis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.lettuce/lettuce-core --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>完整pom.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.ledao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>RedisSessionDemo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>RedisSessionDemo<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/redis.clients/jedis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.session/spring-session-data-redis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/io.lettuce/lettuce-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.lettuce<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lettuce-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.1.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8888</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">context-path:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">tomcat:</span></span><br><span class="line">    <span class="attr">uri-encoding:</span> <span class="string">utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">session:</span></span><br><span class="line">    <span class="attr">store-type:</span> <span class="string">redis</span> <span class="comment">#指定redis实现spring session</span></span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">PT1H</span> <span class="comment"># Session 过期时间， PT开头  ‘D’ – 天   ‘H’ – 小时  ‘M’ – 分钟 ‘S’ – 秒</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">flush-mode:</span> <span class="string">on_save</span> <span class="comment"># Sessions 刷新模式  on_save http response为committed才提交 immediate 立即提交</span></span><br><span class="line">      <span class="attr">namespace:</span> <span class="string">ledao</span> <span class="comment"># session 存储命名空间</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.106</span> <span class="comment">#Linux服务器IP地址</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">6379</span> <span class="comment">#Redis端口号,一般默认为6379</span></span><br><span class="line">    <span class="attr">password:</span></span><br><span class="line">    <span class="attr">lettuce:</span></span><br><span class="line">      <span class="attr">pool:</span></span><br><span class="line">        <span class="attr">max-active:</span> <span class="number">8</span> <span class="comment"># 连接池最大连接数（使用负值表示没有限制）</span></span><br><span class="line">        <span class="attr">max-wait:</span> <span class="number">-1</span> <span class="comment"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class="line">        <span class="attr">max-idle:</span> <span class="number">8</span> <span class="comment"># 连接池中的最大空闲连接</span></span><br><span class="line">        <span class="attr">min-idle:</span> <span class="number">0</span> <span class="comment"># 连接池中的最小空闲连接</span></span><br><span class="line">      <span class="attr">shutdown-timeout:</span> <span class="number">100</span>  <span class="comment"># 连接超时时间（毫秒）</span></span><br></pre></td></tr></table></figure>

<h3 id="启动类添加注解"><a href="#启动类添加注解" class="headerlink" title="启动类添加注解"></a>启动类添加注解</h3><p>添加注解@EnableRedisHttpSession</p>
<h3 id="Java代码"><a href="#Java代码" class="headerlink" title="Java代码"></a>Java代码</h3><h4 id="User-java"><a href="#User-java" class="headerlink" title="User.java"></a>User.java</h4><p>要实现Serializable序列化，不然会Redis会报错：org.springframework.data.redis.serializer.SerializationException: Cannot serialize</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户实体类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-02 9:49</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Integer id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUserName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserName</span><span class="params">(String userName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, userName=&#x27;&quot;</span> + userName + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, password=&#x27;&quot;</span> + password + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="IndexController-java"><a href="#IndexController-java" class="headerlink" title="IndexController.java"></a>IndexController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-02 9:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">root</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mav.setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/getInfo&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mav.setViewName(<span class="string">&quot;info&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="UserController-java"><a href="#UserController-java" class="headerlink" title="UserController.java"></a>UserController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-02 9:50</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">login</span><span class="params">(HttpSession session, User user)</span> </span>&#123;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        String password = <span class="string">&quot;123&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (password.equals(user.getPassword())) &#123;</span><br><span class="line">            session.setAttribute(<span class="string">&quot;currentUser&quot;</span>, user);</span><br><span class="line">            mav.setViewName(<span class="string">&quot;main&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mav.addObject(<span class="string">&quot;errorInfo&quot;</span>, <span class="string">&quot;用户名或者密码错误！&quot;</span>);</span><br><span class="line">            mav.setViewName(<span class="string">&quot;login&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="HTML页面"><a href="#HTML页面" class="headerlink" title="HTML页面"></a>HTML页面</h3><h4 id="login-html"><a href="#login-html" class="headerlink" title="login.html"></a>login.html</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/user/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">  用户名:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span>&gt;</span></span><br><span class="line">  密码:</span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="main-html"><a href="#main-html" class="headerlink" title="main.html"></a>main.html</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录成功<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;color: blue&quot;</span>&gt;</span>当前用户:<span class="tag">&lt;<span class="name">sapn</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;session.currentUser.userName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">sapn</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="info-html"><a href="#info-html" class="headerlink" title="info.html"></a>info.html</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span> <span class="attr">xmlns:th</span>=<span class="string">&quot;http://www.thymeleaf.org&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">当前用户信息:</span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">&quot;$&#123;&#x27;用户名:&#x27;+session.currentUser.userName+&#x27;,密码:&#x27;+session.currentUser.password&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>①浏览器地址栏输入：<a href="http://localhost:8888/">http://localhost:8888/</a> ，进入登录页面login.html</p>
<p>②输入用户名和密码，只要密码是123就可以登录成功，然后进入主页面main.html</p>
<p>③浏览器地址栏输入：<a href="http://localhost:8888/getInfo">http://localhost:8888/getInfo</a>，进入显示当前登录用户信息页面info.html</p>
<p>④在Redis可视化工具可以看到有一个用户session</p>
<p>⑤打开另一个浏览器，重复①②③步骤，然后Redis可视化工具可以看到多了一个用户session</p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>GitHub地址：<a href="https://github.com/a6678696/RedisSessionDemo">a6678696/RedisSessionDemo: Redis存储session例子 (github.com)</a></p>]]></content>
      <categories>
        <category>Spring Boot</category>
      </categories>
      <tags>
        <tag>Spring Boot</tag>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx+Redis+Tomcat实现多个项目共享session</title>
    <url>/333.html</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>Nginx、Tomcat和Redis都是Docker创建的容器</p>
<h3 id="下载项目"><a href="#下载项目" class="headerlink" title="下载项目"></a>下载项目</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>将项目拉到idea上</p>
<p>GitHub地址：<a href="https://github.com/a6678696/RedisSessionDemo">a6678696/RedisSessionDemo: Redis存储session例子 (github.com)</a></p>
<h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><p>根据Docker的Tomcat容器端口号修改一下application.yml、info.html、login.html、main.html的端口号，方便测试时辨认出访问的是哪个Tomcat的项目</p>
<p>将application.yml的spring.redis.host修改为Docker给Redis分配的IP地址，查看IP地址命令如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker inspect Redis容器id</span><br></pre></td></tr></table></figure>

<h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><p>将项目打包成war包，具体步骤查看：<a href="https://blog.zoutl.cn/21.html">idea将Spring Boot项目打包成war包</a> ，打包时会报错，跳过Maven打包项目时测试步骤就行了（点击Maven工具栏的取消测试按钮，如下图划红线的按钮）</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20145909.jpg"></p>
<h3 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h3><p>使用Docker创建两个Tomcat容器，并运行打包好的项目，具体步骤查看博客：<a href="https://blog.zoutl.cn/301.html">Docker安装和配置Tomcat容器并部署Java项目</a></p>
<h3 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h3><h4 id="修改nginx-conf"><a href="#修改nginx-conf" class="headerlink" title="修改nginx.conf"></a>修改nginx.conf</h4><p>在 <font color="#dd0000">include /etc/nginx/conf.d/*.conf;</font> 上面添加：（IP地址和端口根据自己的实际情况填写，IP地址是Docker给Tomcat分配的，并不是虚拟机的IP）</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">upstream www.<span class="number">123</span>.com&#123;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.4</span>:<span class="number">8888</span>;</span><br><span class="line">	 server <span class="number">172.17</span>.<span class="number">0.5</span>:<span class="number">9999</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="修改default-conf"><a href="#修改default-conf" class="headerlink" title="修改default.conf"></a>修改default.conf</h4><p>可以用以下内容覆盖掉原来的</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    listen <span class="number">80</span>;</span><br><span class="line">    server_name  www.<span class="number">123</span>.com;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">    </span><br><span class="line">        proxy_pass   http://www.<span class="number">123</span>.com;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="添加本机域名"><a href="#添加本机域名" class="headerlink" title="添加本机域名"></a>添加本机域名</h3><p>找到 C:\Windows\System32\drivers\etc 打开hosts，底部加配置：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">虚拟机IP www.<span class="number">123</span>.com</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>浏览器地址栏输入：<a href="http://www.123.com/">http://www.123.com/</a> ，测试时可以发现：交替访问两个Tomcat运行的项目</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20152135.gif"></p>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Redis</tag>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>SELECT语句的ORDER BY子句</title>
    <url>/334.html</url>
    <content><![CDATA[<h3 id="学生表数据"><a href="#学生表数据" class="headerlink" title="学生表数据"></a>学生表数据</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-02%20234928.png"></p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="升序"><a href="#升序" class="headerlink" title="升序"></a>升序</h4><p>默认就是升序排序，即可以不加ASC关键字</p>
<p>按年龄升序排序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure>

<h4 id="降序"><a href="#降序" class="headerlink" title="降序"></a>降序</h4><p>使用DESC关键字</p>
<p>按年龄降序排序</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure>

<h4 id="多个列排序"><a href="#多个列排序" class="headerlink" title="多个列排序"></a>多个列排序</h4><p>先根据年龄升序排序，如果有年龄相同的学生，再根据班级id升序排序这些年龄相同的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">ORDER</span> <span class="keyword">BY</span> age,classId;</span><br></pre></td></tr></table></figure>

<h4 id="取最大值"><a href="#取最大值" class="headerlink" title="取最大值"></a>取最大值</h4><p>使用ORDER BY和LIMIT的组合，能够找出一个列中最高或最低的值</p>
<p>选出年龄最大的</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">ORDER</span> <span class="keyword">BY</span> age <span class="keyword">DESC</span> LIMIT <span class="number">1</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>SELECT语句的WHERE子句</title>
    <url>/335.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>在SELECT语句中，数据根据WHERE子句中指定的搜索条件进行过滤，WHERE子句在表名（FROM子句）之后给出</p>
<h3 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h3><table>
<thead>
<tr>
<th align="center">操 作 符</th>
<th align="center">说 明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">=</td>
<td align="center">等于</td>
</tr>
<tr>
<td align="center">&lt;&gt;</td>
<td align="center">不等于</td>
</tr>
<tr>
<td align="center">!=</td>
<td align="center">不等于</td>
</tr>
<tr>
<td align="center">&lt;</td>
<td align="center">小于</td>
</tr>
<tr>
<td align="center">&lt;=</td>
<td align="center">小于等于</td>
</tr>
<tr>
<td align="center">&gt;</td>
<td align="center">大于</td>
</tr>
<tr>
<td align="center">&gt;=</td>
<td align="center">大于等于</td>
</tr>
<tr>
<td align="center">BETWEEN</td>
<td align="center">在指定的两个值之间</td>
</tr>
</tbody></table>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id=""><a href="#" class="headerlink" title="="></a>=</h4><p>选出 年龄为10岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">=</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h4 id="lt-gt"><a href="#lt-gt" class="headerlink" title="&lt;&gt;"></a>&lt;&gt;</h4><p>选出 年龄不是10岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">&lt;&gt;</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h4 id="-1"><a href="#-1" class="headerlink" title="!="></a>!=</h4><p>选出 年龄不是10岁 的学生</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT * FROM t_student WHERE age!=10;</span><br></pre></td></tr></table></figure>

<h4 id="lt"><a href="#lt" class="headerlink" title="&lt;"></a>&lt;</h4><p>选出 年龄小于10岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">&lt;</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h4 id="lt-1"><a href="#lt-1" class="headerlink" title="&lt;="></a>&lt;=</h4><p>选出 年龄小于等于10岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">&lt;=</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h4 id="gt"><a href="#gt" class="headerlink" title="&gt;"></a>&gt;</h4><p>选出 年龄大于10岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">&gt;</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h4 id="gt-1"><a href="#gt-1" class="headerlink" title="&gt;="></a>&gt;=</h4><p>选出 年龄大于等于10岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">&gt;=</span><span class="number">10</span>;</span><br></pre></td></tr></table></figure>

<h4 id="BETWEEN"><a href="#BETWEEN" class="headerlink" title="BETWEEN"></a>BETWEEN</h4><p>选出 年龄为10~12岁 的学生，包括10岁和12岁</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">BETWEEN</span> <span class="number">10</span> <span class="keyword">AND</span> <span class="number">12</span>;</span><br></pre></td></tr></table></figure>

<h4 id="空值检查"><a href="#空值检查" class="headerlink" title="空值检查"></a>空值检查</h4><p>选出 年龄为空 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br></pre></td></tr></table></figure>

<h4 id="AND"><a href="#AND" class="headerlink" title="AND"></a>AND</h4><p>选出 年龄为12岁且班级id为1 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">=</span><span class="number">12</span> <span class="keyword">AND</span> classId<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure>

<h4 id="OR"><a href="#OR" class="headerlink" title="OR"></a>OR</h4><p>选出 年龄为11岁或者12岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">=</span><span class="number">11</span> <span class="keyword">OR</span> age<span class="operator">=</span><span class="number">12</span>;</span><br></pre></td></tr></table></figure>

<h4 id="AND和OR搭配"><a href="#AND和OR搭配" class="headerlink" title="AND和OR搭配"></a>AND和OR搭配</h4><p>SQL（像多数语言一样）在处理OR操作符前，优先处理AND操作符，不想优先处理就给OR加括号</p>
<p>年龄为11岁的学生 + 年龄为12岁且班级id为2的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age<span class="operator">=</span><span class="number">11</span> <span class="keyword">OR</span> age<span class="operator">=</span><span class="number">12</span> <span class="keyword">AND</span> classId<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<p>选出年龄为11岁或12岁的学生，再从这些学生中选出班级id为2的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> (age<span class="operator">=</span><span class="number">11</span> <span class="keyword">OR</span> age<span class="operator">=</span><span class="number">12</span>) <span class="keyword">AND</span> classId<span class="operator">=</span><span class="number">2</span>;</span><br></pre></td></tr></table></figure>

<h4 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h4><p>选出 年龄为11岁或者12岁 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> age <span class="keyword">IN</span> (<span class="number">11</span>,<span class="number">12</span>);</span><br></pre></td></tr></table></figure>

<h4 id="NOT"><a href="#NOT" class="headerlink" title="NOT"></a>NOT</h4><p>选出 年龄不是11岁或者12岁 的学生</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT * FROM t_student WHERE age NOT IN (11,12);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL使用通配符过滤数据</title>
    <url>/336.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MySQL通配符有百分号（%）通配符和 下划线（_）通配符，在搜索子句中使用通配符，必须使用LIKE操作符。</p>
<h3 id="百分号通配符"><a href="#百分号通配符" class="headerlink" title="百分号通配符"></a>百分号通配符</h3><p>最常使用的通配符是百分号（%），在搜索串中，%表示任何字符出现任意次数，不出现也可以。</p>
<h4 id="单个"><a href="#单个" class="headerlink" title="单个%"></a>单个%</h4><p>%在开头</p>
<p>选出学生姓名以 “赵六” 结尾的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name <span class="keyword">LIKE</span> &quot;%赵六&quot;;</span><br></pre></td></tr></table></figure>

<p>%在结尾</p>
<p>选出学生姓名以 “赵六” 开头的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name <span class="keyword">LIKE</span> &quot;赵六%&quot;;</span><br></pre></td></tr></table></figure>

<h4 id="两个"><a href="#两个" class="headerlink" title="两个%"></a>两个%</h4><p>一个在开头，一个在结尾，可用于模糊搜索</p>
<p>选出学生姓名中包含 “赵六” 的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name <span class="keyword">LIKE</span> &quot;%赵六%&quot;;</span><br></pre></td></tr></table></figure>

<h3 id="下划线通配符"><a href="#下划线通配符" class="headerlink" title="下划线通配符"></a>下划线通配符</h3><p>下划线的用途与%一样，但下划线只匹配单个字符而不是多个字符，匹配多少个字符就要多少个下划线，下面例子都只匹配了1个字符</p>
<h4 id="单个-1"><a href="#单个-1" class="headerlink" title="单个_"></a>单个_</h4><p>_在开头</p>
<p>选出学生姓名以 “赵六” 结尾且前面有一个字符的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name <span class="keyword">LIKE</span> &quot;_赵六&quot;;</span><br></pre></td></tr></table></figure>

<p>_在结尾</p>
<p>选出学生姓名以 “赵六” 开头且后面有一个字符的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name <span class="keyword">LIKE</span> &quot;赵六_&quot;;</span><br></pre></td></tr></table></figure>

<h4 id="多个"><a href="#多个" class="headerlink" title="多个_"></a>多个_</h4><p>一个在开头，一个在结尾</p>
<p>选出学生姓名包含 “赵六” 开头且前面和后面各有一个字符的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name <span class="keyword">LIKE</span> &quot;_赵六_&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL使用正则表达式</title>
    <url>/337.html</url>
    <content><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>正则表达式的作用是匹配文本，将一个模式（正则表达式）与一个文本串进行比较，在搜索子句中使用正则表达式，必须使用REGEXP操作符</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="基本字符匹配"><a href="#基本字符匹配" class="headerlink" title="基本字符匹配"></a>基本字符匹配</h4><p>选出学生姓名中包含“赵六”的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP &quot;赵六&quot;;</span><br></pre></td></tr></table></figure>

<p>选出学生姓名以一个字符+“赵六”开头的学生，一个.匹配一个字符</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;.赵六&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="区分大小写"><a href="#区分大小写" class="headerlink" title="区分大小写"></a>区分大小写</h4><p>正则表达式默认是不区分大小写的，要区分大小写就使用BINARY关键字</p>
<p>选出学生姓名中包含“a”的学生，如果不使用BINARY关键字就选出学生姓名中包含“a”或“A”的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="type">BINARY</span> <span class="string">&#x27;a&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="OR匹配"><a href="#OR匹配" class="headerlink" title="OR匹配"></a>OR匹配</h4><p>|为正则表达式的OR操作符，它表示匹配其中之一</p>
<p>选出学生姓名中包含“张三”或“赵六”的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;张三|赵六&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="匹配几个字符之一"><a href="#匹配几个字符之一" class="headerlink" title="匹配几个字符之一"></a>匹配几个字符之一</h4><p>只想匹配特定的字符，可通过指定一组用[]括起来的字符来完成</p>
<p>选出学生姓名中包含“1赵六”或“2赵六”的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;[12]赵六&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="匹配范围"><a href="#匹配范围" class="headerlink" title="匹配范围"></a>匹配范围</h4><p>[0123456789]可以用[0-9]替换</p>
<p>[abc…xyz]可以用[a-z]替换，MySQL的正则表达式是不区分大小写的，要区分大小写就使用BINARY关键字</p>
<p>选出学生姓名中包含“1赵六”或者“2赵六”或者…或者“9赵六”的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;[0-9]赵六&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="匹配特殊字符"><a href="#匹配特殊字符" class="headerlink" title="匹配特殊字符"></a>匹配特殊字符</h4><p>正则表达式语言由具有特定含义的特殊字符构成，常见的正则表达式特殊字符有：<font color="#dd0000">.</font>、<font color="#dd0000">[]</font>、<font color="#dd0000">|</font>和<font color="#dd0000">-</font>等，还有一些其它特殊字符，如果需要匹配这些字符，那么就要在这些特殊字符前加<font color="#dd0000">\\</font></p>
<p>选出学生姓名中包含“-”的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;\\-&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p>选出学生姓名中包含“\”的学生，匹配反斜杠\则需要四个反斜杠</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;\\\\&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="匹配字符类"><a href="#匹配字符类" class="headerlink" title="匹配字符类"></a>匹配字符类</h4><table>
<thead>
<tr>
<th align="center">类</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">[:alnum:]</td>
<td align="center">任意字母和数字（同[a-zA-Z0-9]）</td>
</tr>
<tr>
<td align="center">[:alpha:]</td>
<td align="center">任意字符（同[a-zA-Z]）</td>
</tr>
<tr>
<td align="center">[:blank:]</td>
<td align="center">空格和制表（同[\t]）</td>
</tr>
<tr>
<td align="center">[:cntrl:]</td>
<td align="center">ASCII控制字符（ASCII 0到31和127）</td>
</tr>
<tr>
<td align="center">[:digit:]</td>
<td align="center">任意数字（同[0-9]）</td>
</tr>
<tr>
<td align="center">[:graph:]</td>
<td align="center">与[:print:]相同，但不包括空格</td>
</tr>
<tr>
<td align="center">[:lower:]</td>
<td align="center">任意小写字母（同[a-z]）</td>
</tr>
<tr>
<td align="center">[:print:]</td>
<td align="center">任意可打印字符</td>
</tr>
<tr>
<td align="center">[:punct:]</td>
<td align="center">既不在[:alnum:]又不在[:cntrl:]中的任意字符</td>
</tr>
<tr>
<td align="center">[:space:]</td>
<td align="center">包括空格在内的任意空白字符（同[\f\n\r\t\v]）</td>
</tr>
<tr>
<td align="center">[:upper:]</td>
<td align="center">任意大写字母（同[A-Z]）</td>
</tr>
<tr>
<td align="center">[:xdigit:]</td>
<td align="center">任意十六进制数字（同[a-fA-F0-9]）</td>
</tr>
</tbody></table>
<p>选出学生姓名中包含两个连续数字的学生，[[:digit:]]表示任意数字，{2}表示连续两个</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;[[:digit:]]&#123;2&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure>

<h4 id="定位符"><a href="#定位符" class="headerlink" title="定位符"></a>定位符</h4><p><font color="#dd0000">^ </font> ：文本的开始</p>
<p>选出学生姓名中以“32”开头的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;^32&#x27;</span>;</span><br></pre></td></tr></table></figure>

<p><font color="#dd0000">$</font> ：文本的结尾</p>
<p>选出学生姓名中以“12”结尾的学生</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> t_student <span class="keyword">WHERE</span> student_name REGEXP <span class="string">&#x27;12$&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL创建计算字段</title>
    <url>/338.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>如果存储在表中的数据都不是应用程序所需要的，那么我们需要直接从数据库中检索出转换、计算或格式化过的数据，而不是检索出数据，然后再在客户机应用程序或报告程序中重新格式化。</p>
<h3 id="拼接字段"><a href="#拼接字段" class="headerlink" title="拼接字段"></a>拼接字段</h3><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><p>所谓拼接，就是将值联结到一起构成单个值，即把两个列拼接起来</p>
<p>在MySQL的SELECT语句中，可使用Concat()函数来拼接两个列</p>
<h4 id="普通拼接"><a href="#普通拼接" class="headerlink" title="普通拼接"></a>普通拼接</h4><p>拼接姓名和年龄</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;姓名：&#x27;</span>,student_name,<span class="string">&#x27;，年龄：&#x27;</span>,age) <span class="keyword">FROM</span> t_student;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-03%20225538.png"></p>
<h4 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h4><p>拼接姓名和年龄，并且设置别名为student_message，第一行数据的上方就是别名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;姓名：&#x27;</span>,student_name,<span class="string">&#x27;，年龄：&#x27;</span>,age) <span class="keyword">AS</span> student_message <span class="keyword">FROM</span> t_student;</span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-03%20230456.png"></p>
<h4 id="去除空格"><a href="#去除空格" class="headerlink" title="去除空格"></a>去除空格</h4><table>
<thead>
<tr>
<th align="center">函数</th>
<th align="center">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="center">TRIM()</td>
<td align="center">去除两端的空格</td>
</tr>
<tr>
<td align="center">LTRIM()</td>
<td align="center">去除左侧的空格</td>
</tr>
<tr>
<td align="center">RTRIM()</td>
<td align="center">去除右侧的空格</td>
</tr>
</tbody></table>
<p>去除学生姓名两端的空格</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;姓名：&#x27;</span>,<span class="built_in">TRIM</span>(student_name),<span class="string">&#x27;，年龄：&#x27;</span>,age) <span class="keyword">FROM</span> t_student;</span><br></pre></td></tr></table></figure>

<h3 id="算数计算"><a href="#算数计算" class="headerlink" title="算数计算"></a>算数计算</h3><h4 id="介绍-2"><a href="#介绍-2" class="headerlink" title="介绍"></a>介绍</h4><p>对检索出的数据进行算术计算</p>
<h4 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h4><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20003940.png"></p>
<h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><p>计算学生的总分</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student_id,chinese_score<span class="operator">+</span>math_score<span class="operator">+</span>english_score <span class="keyword">AS</span> score_total <span class="keyword">FROM</span> t_score2;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ简介和使用场景</title>
    <url>/339.html</url>
    <content><![CDATA[<blockquote>
<p>转载于：<a href="https://www.cnblogs.com/haixiang/p/10199754.html">RabbitMQ 简介以及使用场景 - 海向 - 博客园 (cnblogs.com)</a></p>
</blockquote>
<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MQ全称为Message Queue, <a href="https://baike.baidu.com/item/%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97/4751675">消息队列</a>（MQ）是一种应用程序对应用程序的通信方法。应用程序通过读写出入队列的消息（针对应用程序的数据）来通信，而无需专用连接来链接它们。消息传递指的是程序之间通过在消息中发送数据进行通信，而不是通过直接调用彼此来通信，直接调用通常是用于诸如远程过程调用的技术。排队指的是应用程序通过 队列来通信。队列的使用除去了接收和发送应用程序同时执行的要求</p>
<p>RabbitMQ是使用Erlang语言开发的开源消息队列系统，基于AMQP协议来实现。AMQP的主要特征是面向消息、队列、路由(包括点对点和发布/订阅)、可靠性、 安全。AMQP协议更多用在企业系统内，对数据一致性、稳定性和可靠性要求很高的场景，对性能和吞吐量的要求还在其次</p>
<h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><p>使用场景有：解耦、异步提升效率、流量削峰</p>
<h4 id="解耦"><a href="#解耦" class="headerlink" title="解耦"></a>解耦</h4><p>为面向服务的架构（SOA）提供基本的最终一致性实现</p>
<p>场景说明：用户下单后，订单系统需要通知库存系统</p>
<p>传统的做法是，订单系统调用库存系统的接口</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093247.png"></p>
<p>传统模式的缺点：①假如库存系统无法访问，则订单减库存将失败，从而导致订单失败②订单系统与库存系统耦合</p>
<p>引入消息队列</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093306.png"></p>
<ul>
<li>订单系统：用户下单后，订单系统完成持久化处理，将消息写入消息队列，返回用户订单下单成功</li>
<li>库存系统：订阅下单的消息，采用拉/推的方式，获取下单信息，库存系统根据下单信息，进行库存操作</li>
<li>假如：在下单时库存系统不能正常使用，也不影响正常下单，因为下单后，订单系统写入消息队列就不再关心其他的后续操作了，实现了订单系统与库存系统的应用解耦</li>
<li>为了保证库存肯定有，可以将队列大小设置成库存数量，或者采用其他方式解决</li>
</ul>
<p>基于消息的模型，关心的是“通知”，而非“处理”</p>
<p>短信、邮件通知、缓存刷新等操作使用消息队列进行通知</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093314.png"></p>
<p>消息队列和RPC的区别与比较：</p>
<p>RPC: 异步调用，及时获得调用结果，具有强一致性结果，关心业务调用处理结果</p>
<p>消息队列：两次异步RPC调用，将调用内容在队列中进行转储，并选择合适的时机进行投递（错峰流控）</p>
<h4 id="异步提升效率"><a href="#异步提升效率" class="headerlink" title="异步提升效率"></a>异步提升效率</h4><p>场景说明：用户注册后，需要发注册邮件和注册短信</p>
<p>传统的做法有两种：1.串行的方式；2.并行方式</p>
<p>（1）串行方式：将注册信息写入数据库成功后，发送注册邮件，再发送注册短信。以上三个任务全部完成后，返回给客户端</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093321.png"></p>
<p>（2）并行方式：将注册信息写入数据库成功后，发送注册邮件的同时，发送注册短信。以上三个任务完成后，返回给客户端。与串行的差别是，并行的方式可以提高处理的时间</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093327.png"></p>
<p>引入消息队列，将不是必须的业务逻辑，异步处理。改造后的架构如下：</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093345.png"></p>
<h4 id="流量削峰"><a href="#流量削峰" class="headerlink" title="流量削峰"></a>流量削峰</h4><p>流量削锋也是消息队列中的常用场景，一般在秒杀或团抢活动中使用广泛</p>
<p>应用场景：系统其他时间A系统每秒请求量就100个，系统可以稳定运行。系统每天晚间八点有秒杀活动，每秒并发请求量增至1万条，但是系统最大的处理能力只能每秒处理1000个请求，于是系统崩溃，服务器宕机</p>
<p>之前架构：大量用户（100万用户）通过浏览器在晚上八点高峰期同时参与秒杀活动。大量的请求涌入我们的系统中，高峰期达到每秒钟5000个请求，大量的请求打到MySQL上，每秒钟预计执行3000条SQL。但是一般的MySQL每秒钟扛住2000个请求就不错了，如果达到3000个请求的话可能MySQL直接就瘫痪了，从而系统无法被使用。但是高峰期过了之后，就成了低峰期，可能也就1万用户访问系统，每秒的请求数量也就50个左右，整个系统几乎没有任何压力</p>
<p>引入MQ：100万用户在高峰期的时候，每秒请求有5000个请求左右，将这5000请求写入MQ里面，系统A每秒最多只能处理2000请求，因为MySQL每秒只能处理2000个请求。系统A从MQ中慢慢拉取请求，每秒就拉取2000个请求，不要超过自己每秒能处理的请求数量即可。MQ，每秒5000个请求进来，结果只有2000个请求出去，所以在秒杀期间（将近一小时）可能会有几十万或者几百万的请求积压在MQ中。这个短暂的高峰期积压是没问题的，因为高峰期过了之后，每秒就只有50个请求进入MQ了，但是系统还是按照每秒2000个请求的速度在处理，所以说，只要高峰期一过，系统就会快速将积压的消息消费掉。我们在此计算一下，每秒在MQ积压3000条消息，1分钟会积压18万，1小时积压1000万条消息，高峰期过后，1个多小时就可以将积压的1000万消息消费掉</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20093403.png"></p>
<h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><p>优点就是以上的那些场景应用，就是在特殊场景下有其对应的好处，<strong>解耦</strong>、<strong>异步</strong>、<strong>削峰</strong></p>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul>
<li>系统的可用性降低<br>系统引入的外部依赖越多，系统越容易挂掉，本来只是A系统调用BCD三个系统接口就好，ABCD四个系统不报错整个系统会正常运行。引入了MQ之后，虽然ABCD系统没出错，但MQ挂了以后，整个系统也会崩溃</li>
<li>系统的复杂性提高<br>引入了MQ之后，需要考虑的问题也变得多了，如何保证消息没有重复消费？如何保证消息不丢失？怎么保证消息传递的顺序？</li>
<li>一致性问题<br>A系统发送完消息直接返回成功，但是BCD系统之中若有系统写库失败，则会产生数据不一致的问题</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>所以总结来说，消息队列是一种十分复杂的架构，引入它有很多好处，但是也得针对它带来的坏处做各种额外的技术方案和架构来规避。引入MQ系统复杂度提升了一个数量级，但是在有些场景下，就是复杂十倍百倍，还是需要使用MQ</p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装RabbitMQ</title>
    <url>/340.html</url>
    <content><![CDATA[<h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull rabbitmq:3-management</span><br></pre></td></tr></table></figure>

<h3 id="创建运行容器"><a href="#创建运行容器" class="headerlink" title="创建运行容器"></a>创建运行容器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name rabbitmq -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin  -p 5672:5672 -p 15672:15672 RabbitMQ镜像id</span><br></pre></td></tr></table></figure>

<p>RABBITMQ_DEFAULT_USER设置登录RabbitMQ管理系统的用户名</p>
<p>RABBITMQ_DEFAULT_PASS设置登录RabbitMQ管理系统的密码</p>
<p>5672是RabbitMQ默认TCP监听端口</p>
<p>15672是RabbitMQ的Web管理界面端口</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在浏览器地址栏输入：http://虚拟机IP:15672/ ，输入用户名和密码，用户名和密码都是admin</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20103847.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ实现生产者发送消息</title>
    <url>/342.html</url>
    <content><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>已经搭建好RabbitMQ基本环境，搭建步骤查看博客：<a href="/341.html">搭建RabbitMQ基本环境</a></p>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20211819.jpg" style="zoom: 67%;" />

<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>添加一个application.yml配置文件，内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.145</span> <span class="comment">#虚拟机IP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span> <span class="comment">#RabbitMQ默认TCP监听端口</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span> <span class="comment">#登录RabbitMQ管理系统的用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span> <span class="comment">#登录RabbitMQ管理系统的密码</span></span><br><span class="line">    <span class="attr">virtual-host:</span> <span class="string">/</span> <span class="comment">#默认就是/,可不加</span></span><br></pre></td></tr></table></figure>

<h4 id="发送消息页面"><a href="#发送消息页面" class="headerlink" title="发送消息页面"></a>发送消息页面</h4><p>命名为：sendInformationPage.html，内容如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>发送消息<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/sendInformation&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    消息:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;information&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="RabbitMQ配置类"><a href="#RabbitMQ配置类" class="headerlink" title="RabbitMQ配置类"></a>RabbitMQ配置类</h4><p>在rabbitmq-common模块下新建，命名为：RabbitMQConfig，内容如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.common.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Binding;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.BindingBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.DirectExchange;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.Queue;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 13:03</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMQConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * direct交换机名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIRECT_EXCHANGE = <span class="string">&quot;directExchange&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * direct队列名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIRECT_QUEUE = <span class="string">&quot;directQueue&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * direct路由key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIRECT_ROUTINGKEY = <span class="string">&quot;directRoutingKey&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个direct交换机</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DirectExchange <span class="title">directExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(DIRECT_EXCHANGE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个direct队列</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Queue <span class="title">directQueue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Queue(DIRECT_QUEUE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 定义一个队列和交换机的绑定</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Binding <span class="title">directBinding</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> BindingBuilder.bind(directQueue()).to(directExchange()).with(DIRECT_ROUTINGKEY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="RabbitMQProducerService-java"><a href="#RabbitMQProducerService-java" class="headerlink" title="RabbitMQProducerService.java"></a>RabbitMQProducerService.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.producer.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQService生产者接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 13:27</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RabbitMQProducerService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> information</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sendInformation</span><span class="params">(String information)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="RabbitMQProducerServiceImpl-java"><a href="#RabbitMQProducerServiceImpl-java" class="headerlink" title="RabbitMQProducerServiceImpl.java"></a>RabbitMQProducerServiceImpl.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.producer.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.common.config.RabbitMQConfig;</span><br><span class="line"><span class="keyword">import</span> com.ledao.producer.service.RabbitMQProducerService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.AmqpTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQService生产者接口实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 13:31</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;rabbitMQProducerService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMQProducerServiceImpl</span> <span class="keyword">implements</span> <span class="title">RabbitMQProducerService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendInformation</span><span class="params">(String information)</span> </span>&#123;</span><br><span class="line">        amqpTemplate.convertAndSend(RabbitMQConfig.DIRECT_EXCHANGE, RabbitMQConfig.DIRECT_ROUTINGKEY, information);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="IndexController-java"><a href="#IndexController-java" class="headerlink" title="IndexController.java"></a>IndexController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.producer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.producer.service.RabbitMQProducerService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 13:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RabbitMQProducerService rabbitMQProducerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送消息页面</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/toSendInformationPage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">sendInformation</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mav.setViewName(<span class="string">&quot;sendInformationPage&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> information</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/sendInformation&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sendInformation</span><span class="params">(String information)</span> </span>&#123;</span><br><span class="line">        rabbitMQProducerService.sendInformation(information);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;发送消息到RabbitMQ成功&lt;a href=&#x27;/toSendInformationPage&#x27;&gt;&lt;button&gt;继续发送&lt;/button&gt;&lt;/a&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>先启动rabbitmq-consumer模块再启动rabbitmq-producer模块，在浏览器地址栏输入：<a href="http://localhost/toSendInformationPage">http://localhost/toSendInformationPage</a>，输入消息后发送即可</p>
<p>查看消息步骤：</p>
<p>①在浏览器地址栏输入：<font color="#dd0000">http://虚拟机IP:15672</font>，输入用户名和密码后进入RabbitMQ管理系统</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20150137.png"></p>
<p>②点击Queues选项查看所有队列，点击directQueue进入队列内部去查看消息</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20145731.jpg"></p>
<p>③打开Get messages选项，在Messages文本框中输入查看消息的条数，点击Get Message(s)按钮即可查看消息</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-04%20145943.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>搭建RabbitMQ基本环境</title>
    <url>/341.html</url>
    <content><![CDATA[<h3 id="创建父项目"><a href="#创建父项目" class="headerlink" title="创建父项目"></a>创建父项目</h3><p>新建一个Maven项目,命名为：rabbitmqtest</p>
<p>完整pom.xml文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmqtest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>rabbitmq-producer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>rabbitmq-consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>rabbitmq-common<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">springboot.version</span>&gt;</span>2.5.4<span class="tag">&lt;/<span class="name">springboot.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;springboot.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="创建子项目"><a href="#创建子项目" class="headerlink" title="创建子项目"></a>创建子项目</h3><p>创建三个子项目，分别命名为：rabbitmq-common、rabbitmq-producer、rabbitmq-consumer</p>
<h4 id="rabbitmq-common"><a href="#rabbitmq-common" class="headerlink" title="rabbitmq-common"></a>rabbitmq-common</h4><p>rabbitmq-common为公共项目，作用：存放一些其他项目公用的东西，比如依赖、实体类，工具类等</p>
<p>完整pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmqtest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmq-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="rabbitmq-producer"><a href="#rabbitmq-producer" class="headerlink" title="rabbitmq-producer"></a>rabbitmq-producer</h4><p>rabbitmq-producer为消息提供者项目，作用：发送消息到RabbitMQ中</p>
<p>完整pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmqtest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmq-producer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmq-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建启动类，命名为：ProducerApplication，完整代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.producer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 提供者启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 12:26</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProducerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ProducerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="rabbitmq-consumer"><a href="#rabbitmq-consumer" class="headerlink" title="rabbitmq-consumer"></a>rabbitmq-consumer</h4><p>rabbitmq-consumer为消息消费者项目，作用：消费RabbitMQ的消息</p>
<p>完整pom.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmqtest<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmq-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rabbitmq-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>新建启动类，命名为：ConsumerApplication，完整代码如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 消费者启动类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 12:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;com.ledao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ实现监听队列接收消息</title>
    <url>/344.html</url>
    <content><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>在博客 <a href="/343.html">RabbitMQ实现消费者接收消息</a> 的基础上修改，接收消息的基本配置查看前面的博客即可</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="修改RabbitMQConsumerService类"><a href="#修改RabbitMQConsumerService类" class="headerlink" title="修改RabbitMQConsumerService类"></a>修改RabbitMQConsumerService类</h4><p>添加接口方法receiveMessage2()</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听队列接收消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receiveMessage2</span><span class="params">(String message)</span></span>;</span><br></pre></td></tr></table></figure>

<h4 id="修改RabbitMQConsumerServiceImpl类"><a href="#修改RabbitMQConsumerServiceImpl类" class="headerlink" title="修改RabbitMQConsumerServiceImpl类"></a>修改RabbitMQConsumerServiceImpl类</h4><p>实现RabbitMQConsumerService类的接口方法receiveMessage2()，添加注解@RabbitListener实现监听，可以监听多个队列，在{}中用 , 隔开多个队列名称即可</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;RabbitMQConfig.DIRECT_QUEUE&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveMessage2</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;接收到的消息:&quot;</span> + message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>去rabbitmq-consumer模块启动的控制台查看结果，每成功发送消息一次控制台就打印一次，如果原来就有多个消息就会逐个打印完</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20002710.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ实现消费者接收消息</title>
    <url>/343.html</url>
    <content><![CDATA[<h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>已经搭建好RabbitMQ基本环境，搭建步骤查看博客：<a href="/341.html">搭建RabbitMQ基本环境</a></p>
<p>配置好RabbitMQ的交换机、队列、队列绑定交换机，具体步骤查看博客：<a href="/342.html">RabbitMQ实现生产者发送消息</a> ,rabbitmq-common模块的RabbitMQConfig.java就是配置类</p>
<h3 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h3><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20022425.jpg" style="zoom:67%;" />

<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="application-yml配置"><a href="#application-yml配置" class="headerlink" title="application.yml配置"></a>application.yml配置</h4><p>添加一个application.yml配置文件，内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">81</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.145</span> <span class="comment">#虚拟机IP</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span> <span class="comment">#RabbitMQ默认TCP监听端口</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">admin</span> <span class="comment">#登录RabbitMQ管理系统的用户名</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">admin</span> <span class="comment">#登录RabbitMQ管理系统的密码</span></span><br><span class="line">    <span class="attr">virtual-host:</span> <span class="string">/</span> <span class="comment">#默认就是/,可不加</span></span><br></pre></td></tr></table></figure>

<h4 id="接收消息页面"><a href="#接收消息页面" class="headerlink" title="接收消息页面"></a>接收消息页面</h4><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>接收消息<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="keyword">function</span> <span class="title">receiveMessage</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">                <span class="attr">url</span>: <span class="string">&quot;/receiveMessage&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">type</span>: <span class="string">&quot;get&quot;</span>,</span></span><br><span class="line"><span class="javascript">                <span class="attr">success</span>: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#messageReceive&quot;</span>).html(result.message);</span></span><br><span class="line"><span class="javascript">                &#125;,</span></span><br><span class="line"><span class="javascript">            &#125;);</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    接收的消息:<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: red&quot;</span> <span class="attr">id</span>=<span class="string">&quot;messageReceive&quot;</span>&gt;</span>看这里<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:receiveMessage()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>接收<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="RabbitMQConsumerService-java"><a href="#RabbitMQConsumerService-java" class="headerlink" title="RabbitMQConsumerService.java"></a>RabbitMQConsumerService.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.consumer.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQService消费者接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 20:59</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RabbitMQConsumerService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">receiveMessage</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="RabbitMQConsumerServiceImpl-java"><a href="#RabbitMQConsumerServiceImpl-java" class="headerlink" title="RabbitMQConsumerServiceImpl.java"></a>RabbitMQConsumerServiceImpl.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.consumer.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.common.config.RabbitMQConfig;</span><br><span class="line"><span class="keyword">import</span> com.ledao.consumer.service.RabbitMQConsumerService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.AmqpTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * RabbitMQService消费者接口实现类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 21:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service(&quot;rabbitMQConsumerService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RabbitMQConsumerServiceImpl</span> <span class="keyword">implements</span> <span class="title">RabbitMQConsumerService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">receiveMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (String) amqpTemplate.receiveAndConvert(RabbitMQConfig.DIRECT_QUEUE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="IndexController-java"><a href="#IndexController-java" class="headerlink" title="IndexController.java"></a>IndexController.java</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ledao.consumer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ledao.consumer.service.RabbitMQConsumerService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LeDao</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@company</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@create</span> 2021-09-04 22:04</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> RabbitMQConsumerService rabbitMQConsumerService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 跳转到接收消息页面</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/toReceiveMessagePage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">toReceiveMessagePage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mav.setViewName(<span class="string">&quot;receiveMessagePage&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 接收消息队列的一条消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/receiveMessage&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">receiveMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; resultMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        String message = rabbitMQConsumerService.receiveMessage();</span><br><span class="line">        resultMap.put(<span class="string">&quot;message&quot;</span>, message != <span class="keyword">null</span> ? message : <span class="string">&quot;消息队列为空!!&quot;</span>+<span class="keyword">new</span> Date());</span><br><span class="line">        <span class="keyword">return</span> resultMap;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>浏览器地址栏输入：<a href="http://localhost:81/toReceiveMessagePage">http://localhost:81/toReceiveMessagePage</a> 打开接收消息页面，然后点击接收按钮即可</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20000709.gif"></p>
<h3 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h3><p>本博客只是实现了手动接收队列消息，监听队列接收消息查看博客：<a href="/344.html">RabbitMQ实现监听队列接收消息</a></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ实现工作模式Work queues</title>
    <url>/345.html</url>
    <content><![CDATA[<h3 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h3><p>已经实现了监听队列接收消息,具体步骤查看：<a href="/344.html">RabbitMQ实现监听队列接收消息</a></p>
<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>工作模式是一个或者多个消费者共同消费一个队列中的消息，队列中的每一个消息只可能被其中一个消费者消费，比如：多个人抢一个蛋糕，只有一个人可以抢到</p>
<p>应用场景：对于消息任务很多的情况，可以使用工作队列提高任务处理的速度</p>
<p>原理：集群处理大量的消息</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20021051.png"></p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="批量发送消息"><a href="#批量发送消息" class="headerlink" title="批量发送消息"></a>批量发送消息</h4><p>为了方便测试，在rabbitmq-producer模块下添加一个批量发送消息功能，可以自定义批量发送的消息数量</p>
<p>首先在sendInformationPage.html中添加一个form标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/sendInformationBatch&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>批量发送<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    数量:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;informationCount&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;批量发送&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在IndexController类添加一个方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量发送消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> informationCount</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sendInformationBatch&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendInformationBatch</span><span class="params">(Integer informationCount)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (Integer i = <span class="number">1</span>; i &lt; informationCount + <span class="number">1</span>; i++) &#123;</span><br><span class="line">        rabbitMQProducerService.sendInformation(<span class="string">&quot;消息&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;批量发送消息到RabbitMQ成功&lt;a href=&#x27;/toSendInformationPage&#x27;&gt;&lt;button&gt;继续发送&lt;/button&gt;&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="消费消息"><a href="#消费消息" class="headerlink" title="消费消息"></a>消费消息</h4><p>在rabbitmq-consumer模块下修改</p>
<p>先在RabbitMQConsumerService类添加一个接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听队列接收消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receiveMessage3</span><span class="params">(String message)</span></span>;</span><br></pre></td></tr></table></figure>

<p>然后在RabbitMQConsumerServiceImpl类中实现上面的接口方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;RabbitMQConfig.DIRECT_QUEUE&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveMessage3</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;消费者2---接收到的消息:&quot;</span> + message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动rabbitmq-producer模块和rabbitmq-consumer模块，然后在浏览器地址栏输入：<a href="http://localhost/toSendInformationPage">http://localhost/toSendInformationPage</a> 进入发送消息页面，根据自己的需要填入批量发送的消息数量，然后点击发送，最后去rabbitmq-consumer模块启动控制台查看结果</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20022248.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker安装Mycat</title>
    <url>/346.html</url>
    <content><![CDATA[<p>安装方式有两种：①pull命令  ②Dockerfile命令</p>
<h3 id="pull命令"><a href="#pull命令" class="headerlink" title="pull命令"></a>pull命令</h3><h4 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull manondidi/mycat</span><br></pre></td></tr></table></figure>

<h4 id="创建配置目录"><a href="#创建配置目录" class="headerlink" title="创建配置目录"></a>创建配置目录</h4><p>创建一个目录，路径为：/home/mycat/conf，这个目录用于存放Mycat相关配置文件以及目录挂载</p>
<h4 id="复制文件"><a href="#复制文件" class="headerlink" title="复制文件"></a>复制文件</h4><p>创建容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 8066:8066 -d --name mycat Mycat镜像id</span><br></pre></td></tr></table></figure>

<p>复制容器的rule.xml  schema.xml  server.xml到 /home/mycat/conf 目录下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp mycat:/usr/<span class="built_in">local</span>/mycat/conf/rule.xml /home/mycat/conf</span><br><span class="line">docker cp mycat:/usr/<span class="built_in">local</span>/mycat/conf/server.xml /home/mycat/conf</span><br><span class="line">docker cp mycat:/usr/<span class="built_in">local</span>/mycat/conf/schema.xml /home/mycat/conf</span><br></pre></td></tr></table></figure>

<h4 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h4><p>把之前用于复制文件的Mycat容器删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止</span></span><br><span class="line">docker stop Mycat容器id</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line">docker rm Mycat容器id</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者直接强制删除</span></span><br><span class="line">docker rm -f Mycat容器id</span><br></pre></td></tr></table></figure>

<h4 id="创建容器"><a href="#创建容器" class="headerlink" title="创建容器"></a>创建容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 8066:8066 -d --name mycat -v /home/mycat/conf/rule.xml:/usr/<span class="built_in">local</span>/mycat/conf/rule.xml -v /home/mycat/conf/schema.xml:/usr/<span class="built_in">local</span>/mycat/conf/schema.xml -v /home/mycat/conf/server.xml:/usr/<span class="built_in">local</span>/mycat/conf/server.xml --privileged=<span class="literal">true</span> Mycat镜像id</span><br></pre></td></tr></table></figure>

<h3 id="Dockerfile命令"><a href="#Dockerfile命令" class="headerlink" title="Dockerfile命令"></a>Dockerfile命令</h3><h4 id="编写Dockerfile"><a href="#编写Dockerfile" class="headerlink" title="编写Dockerfile"></a>编写Dockerfile</h4><p>命令为：mycatdockerfile，内容如下：</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">FROM centos</span><br><span class="line">MAINTAINER LeDao&lt;f1203007469@gmail.com&gt;</span><br><span class="line"> </span><br><span class="line">LABEL name=<span class="string">&quot;LeDao myCat Image&quot;</span> \</span><br><span class="line">    build-date=<span class="string">&quot;2021-09-05 03:55:07&quot;</span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">ADD server-jre-<span class="number">8</span>u151-linux-x64.tar.gz /home/</span><br><span class="line">ADD Mycat-server-<span class="number">1.6</span>.<span class="number">7.4</span>-release-<span class="number">20200105164103</span>-linux.tar.gz /home/</span><br><span class="line"> </span><br><span class="line">ENV WORKPATH /home/mycat/</span><br><span class="line">WORKDIR $WORKPATH</span><br><span class="line"> </span><br><span class="line">ENV JAVA_HOME /home/jdk1.<span class="number">8.0</span>_151</span><br><span class="line">ENV CLASSPATH $JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ENV PATH $PATH:$JAVA_HOME/bin:$CATALINA_HOME/lib:$CATALINA_HOME/bin</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">EXPOSE <span class="number">8066</span></span><br><span class="line">CMD /home/mycat/bin/mycat console</span><br></pre></td></tr></table></figure>

<h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><p>上传文件 mycatdockerfile、Mycat-server-1.6.7.4-release-20200105164103-linux.tar.gz、server-jre-8u151-linux-x64.tar.gz 到 /home/data 目录下</p>
<p>文件百度网盘地址如下：</p>
<p>链接：<a href="https://pan.baidu.com/s/17wuUK5Kqu9fJnqaV_VOXHw">https://pan.baidu.com/s/17wuUK5Kqu9fJnqaV_VOXHw</a><br>提取码：iw7w</p>
<h4 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h4><p>记得要先进入 /home/data 目录下，再执行下面命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker build -f mycatdockerfile -t ledao/mycat:1.0 .</span><br></pre></td></tr></table></figure>

<h4 id="创建配置目录-1"><a href="#创建配置目录-1" class="headerlink" title="创建配置目录"></a>创建配置目录</h4><p>创建一个目录，路径为：/home/mycat/conf，这个目录用于存放Mycat相关配置文件以及目录挂载</p>
<h4 id="复制文件-1"><a href="#复制文件-1" class="headerlink" title="复制文件"></a>复制文件</h4><p>创建容器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 8066:8066 -it 镜像id</span><br></pre></td></tr></table></figure>

<p>复制文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker cp Mycat容器id:/home/mycat/conf/ /home/docker/mycat/</span><br><span class="line">docker cp Mycat容器id:/home/mycat/logs/ /home/docker/mycat/</span><br></pre></td></tr></table></figure>

<h4 id="删除容器-1"><a href="#删除容器-1" class="headerlink" title="删除容器"></a>删除容器</h4><p>把之前用于复制文件的Mycat容器删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#停止</span></span><br><span class="line">docker stop Mycat容器id</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line">docker rm Mycat容器id</span><br><span class="line"></span><br><span class="line"><span class="comment">#或者直接强制删除</span></span><br><span class="line">docker rm -f Mycat容器id</span><br></pre></td></tr></table></figure>

<h4 id="创建容器-1"><a href="#创建容器-1" class="headerlink" title="创建容器"></a>创建容器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -p 8066:8066 -it  -v /home/docker/mycat/conf/:/home/mycat/conf/ -v /home/docker/mycat/logs/:/home/mycat/logs/ Mycat镜像id</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mycat</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>Mycat</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ报错：reply-code=404, reply-text=NOT_FOUND - no</title>
    <url>/347.html</url>
    <content><![CDATA[<h3 id="情况一"><a href="#情况一" class="headerlink" title="情况一"></a>情况一</h3><h4 id="报错信息"><a href="#报错信息" class="headerlink" title="报错信息"></a>报错信息</h4><p>reply-code=404, reply-text=NOT_FOUND - no exchange</p>
<h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>只启动Provider，然后发送消息到队列，如果没有创建交换机（RabbitMQ中原来没有对应交换机），就会报错</p>
<h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>有两种解决办法：</p>
<p>①先启动Consumer，会自动创建RabbitMQ配置类中的交换机和队列，然后启动Provider发送消息到队列即可</p>
<p>②先启动了Provider，但是先不要发送消息，启动Consumer后再发送消息到队列</p>
<h3 id="情况二"><a href="#情况二" class="headerlink" title="情况二"></a>情况二</h3><h4 id="报错信息-1"><a href="#报错信息-1" class="headerlink" title="报错信息"></a>报错信息</h4><p>reply-code=404, reply-text=NOT_FOUND - no queue</p>
<h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><p>RabbitMQ配置类没有生效</p>
<h4 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h4><p>在Consumer启动类添加注解@ComponentScan，我的配置类在 com.ledao.common.config 目录下，扫描的范围如下：（下面两种方式都行）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//扫描到上三级目录，范围更大</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;com&quot;)</span></span><br><span class="line"><span class="comment">//扫描到上两级目录</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;com.ledao&quot;)</span></span><br></pre></td></tr></table></figure>

<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20103232.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ实现订阅模式Publish/Subscribe</title>
    <url>/348.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20105048.png"></p>
<p>生产者生产的消息，所有订阅过的消费者都能够接收到消息</p>
<p>Exchange采用Fanout类型，即广播方式</p>
<p>Fanout类型的交换机会把消息发送到所有绑定到该交换机的队列</p>
<p>适合场景：将同一条消息通过手机短信，APP，邮件等方式推送给用户</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="批量发送订阅消息"><a href="#批量发送订阅消息" class="headerlink" title="批量发送订阅消息"></a>批量发送订阅消息</h4><p>为了方便测试，在rabbitmq-producer模块下添加一个批量发送消息功能，可以自定义批量发送的消息数量</p>
<p>首先在sendInformationPage.html中添加一个form标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/sendFanoutMessageBatch&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>批量发送订阅消息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    数量:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;messageCount&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;批量发送&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在rabbitmq-common模块的RabbitMQConfig类添加以下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">`<span class="comment">/**</span></span><br><span class="line"><span class="comment"> * fanout交换机名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String FANOUT_EXCHANGE = <span class="string">&quot;fanoutExchange&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * fanout订阅队列1名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUB_QUEUE1 = <span class="string">&quot;subQueue1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * fanout订阅队列2名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String SUB_QUEUE2 = <span class="string">&quot;subQueue2&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个fanout交换机,所有订阅了这个交换机的消息队列都会接收到消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> FanoutExchange <span class="title">fanoutExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> FanoutExchange(FANOUT_EXCHANGE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个fanout订阅队列1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Queue <span class="title">subQueue1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Queue(SUB_QUEUE1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个fanout订阅队列2</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Queue <span class="title">subQueue2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Queue(SUB_QUEUE2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个fanout订阅队列1和fanout交换机的绑定</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBinding1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(subQueue1()).to(fanoutExchange());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个fanout订阅队列2和fanout交换机的绑定</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">fanoutBinding2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(subQueue2()).to(fanoutExchange());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在RabbitMQProducerService类添加一个接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送fanout消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendFanoutMessage</span><span class="params">(String message)</span></span>;</span><br></pre></td></tr></table></figure>

<p>在RabbitMQProducerServiceImpl类中实现上面的接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendFanoutMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    amqpTemplate.convertAndSend(RabbitMQConfig.FANOUT_EXCHANGE, <span class="string">&quot;&quot;</span>, message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在IndexController类添加一个方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量发送订阅消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> messageCount</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sendFanoutMessageBatch&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendFanoutMessageBatch</span><span class="params">(<span class="keyword">int</span> messageCount)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; messageCount + <span class="number">1</span>; i++) &#123;</span><br><span class="line">        rabbitMQProducerService.sendFanoutMessage(<span class="string">&quot;订阅消息&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;批量发送消息到fanout交换机成功&lt;a href=&#x27;/toSendInformationPage&#x27;&gt;&lt;button&gt;继续发送&lt;/button&gt;&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="消费消息"><a href="#消费消息" class="headerlink" title="消费消息"></a>消费消息</h4><p>在rabbitmq-consumer模块的RabbitMQConsumerService中添加以下接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听队列接收订阅消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receiveSubMessage1</span><span class="params">(String message)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听队列接收订阅消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receiveSubMessage2</span><span class="params">(String message)</span></span>;</span><br></pre></td></tr></table></figure>

<p>在rabbitmq-consumer模块的RabbitMQConsumerServiceImpl中实现上面的接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;RabbitMQConfig.SUB_QUEUE1&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveSubMessage1</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;订阅者1---接收到的消息:&quot;</span> + message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;RabbitMQConfig.SUB_QUEUE2&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveSubMessage2</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;订阅者2---接收到的消息:&quot;</span> + message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动rabbitmq-consumer模块再启动rabbitmq-producer模块，，然后在浏览器地址栏输入：<a href="http://localhost/toSendInformationPage">http://localhost/toSendInformationPage</a> 进入发送消息页面，根据自己的需要填入批量发送的消息数量，然后点击发送订阅信息，最后去rabbitmq-consumer模块启动控制台查看结果，可以看到两个订阅者都收到了同一条消息</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20120229.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ实现路由模式Routing</title>
    <url>/349.html</url>
    <content><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20124523.png"></p>
<p>跟订阅模式类似，只不过在订阅模式的基础上加上了类型，订阅模式是分发到所有绑定到交换机的队列，路由模式只分发到绑定在交换机上面指定路由键的队列。</p>
<p>使用场景：只将一些错误log存到文件中，把所有的log都打印到控制台里</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><h4 id="发送指定类型消息"><a href="#发送指定类型消息" class="headerlink" title="发送指定类型消息"></a>发送指定类型消息</h4><p>为了方便测试，在rabbitmq-producer模块下添加一个发送指定类型消息功能，消息类型有info、error、warning</p>
<p>首先在sendInformationPage.html中添加一个form标签：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/sendRoutingMessage&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>发送指定类型的消息<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    消息:</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;message&quot;</span> <span class="attr">required</span>=<span class="string">&quot;required&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    类型:</span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;routingKey&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;info&quot;</span>&gt;</span>info<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;error&quot;</span>&gt;</span>error<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;warning&quot;</span>&gt;</span>warning<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;发送&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>在rabbitmq-common模块的RabbitMQConfig类添加以下代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * direct路由模式交换机名称</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIRECT_ROUTING_EXCHANGE = <span class="string">&quot;directRoutingExchange&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * direct路由模式队列1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIRECT_ROUTING_QUEUE1 = <span class="string">&quot;directRoutingQueue1&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * direct路由模式队列2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DIRECT_ROUTING_QUEUE2 = <span class="string">&quot;directRoutingQueue2&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个direct路由模式交换机</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DirectExchange <span class="title">directRoutingExchange</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> DirectExchange(DIRECT_ROUTING_EXCHANGE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个路由模式队列1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Queue <span class="title">routingQueue1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Queue(DIRECT_ROUTING_QUEUE1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定义一个路由模式队列2</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Queue <span class="title">routingQueue2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Queue(DIRECT_ROUTING_QUEUE2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式队列1绑定路由模式交换机,routingKey为error</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">bindingRouting1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(routingQueue1()).to(directRoutingExchange()).with(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式队列2绑定路由模式交换机,routingKey为error</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">bindingRouting2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(routingQueue2()).to(directRoutingExchange()).with(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式队列2绑定路由模式交换机,routingKey为info</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">bindingRouting3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(routingQueue2()).to(directRoutingExchange()).with(<span class="string">&quot;info&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路由模式队列2绑定路由模式交换机,routingKey为warning</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Binding <span class="title">bindingRouting4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> BindingBuilder.bind(routingQueue2()).to(directRoutingExchange()).with(<span class="string">&quot;warning&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在RabbitMQProducerService类添加一个接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送路由模式消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> routingKey</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendRoutingMessage</span><span class="params">(String message, String routingKey)</span></span>;</span><br></pre></td></tr></table></figure>

<p>在RabbitMQProducerServiceImpl类中实现上面的接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendRoutingMessage</span><span class="params">(String message, String routingKey)</span> </span>&#123;</span><br><span class="line">    amqpTemplate.convertAndSend(RabbitMQConfig.DIRECT_ROUTING_EXCHANGE,routingKey,message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在IndexController类添加一个方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送路由模式消息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> routingKey</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/sendRoutingMessage&quot;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">sendRoutingMessage</span><span class="params">(String message, String routingKey)</span> </span>&#123;</span><br><span class="line">    rabbitMQProducerService.sendRoutingMessage(message+<span class="string">&quot;(&quot;</span>+routingKey+<span class="string">&quot;)&quot;</span>, routingKey);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;发送路由模式消息成功&lt;a href=&#x27;/toSendInformationPage&#x27;&gt;&lt;button&gt;继续发送&lt;/button&gt;&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="消费消息"><a href="#消费消息" class="headerlink" title="消费消息"></a>消费消息</h4><p>在rabbitmq-consumer模块的RabbitMQConsumerService中添加以下接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听队列接收路由模式消息1</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receiveRoutingMessage1</span><span class="params">(String message)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听队列接收路由模式消息2</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">receiveRoutingMessage2</span><span class="params">(String message)</span></span>;</span><br></pre></td></tr></table></figure>

<p>在rabbitmq-consumer模块的RabbitMQConsumerServiceImpl中实现上面的接口方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;RabbitMQConfig.DIRECT_ROUTING_QUEUE1&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveRoutingMessage1</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;消费者1---接收到的消息:&quot;</span> + message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &#123;RabbitMQConfig.DIRECT_ROUTING_QUEUE2&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">receiveRoutingMessage2</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;消费者2---接收到的消息:&quot;</span> + message);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>启动rabbitmq-consumer模块再启动rabbitmq-producer模块，，然后在浏览器地址栏输入：<a href="http://localhost/toSendInformationPage">http://localhost/toSendInformationPage</a> 进入发送消息页面，分别发送info、error、warning类型的路由模式消息，然后去rabbitmq-consumer模块启动控制台查看结果，可以看到：①消费者1只消费了error类型的消息②消费者2消费了info、error、warning类型的消息</p>
<p><img src="https://image.zoutl.cn/hexo-blog/blogImage/2021-09-05%20134908.jpg"></p>]]></content>
      <categories>
        <category>RabbitMQ</category>
      </categories>
      <tags>
        <tag>RabbitMQ</tag>
      </tags>
  </entry>
</search>
